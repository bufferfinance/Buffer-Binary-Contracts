{"abi": [{"inputs": [{"internalType": "contract ERC20", "name": "_token", "type": "address"}, {"internalType": "string", "name": "_name", "type": "string"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "previousOwner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "newOwner", "type": "address"}], "name": "OwnershipTransferred", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "user", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "timeStamp", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "amountToken", "type": "uint256"}], "name": "TokenClaimed", "type": "event"}, {"inputs": [{"internalType": "address[]", "name": "_users", "type": "address[]"}, {"internalType": "uint256[]", "name": "_tokenAmounts", "type": "uint256[]"}], "name": "allotTokens", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_index", "type": "uint256"}], "name": "claimVestedTokens", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "emergencyTokenWithdraw", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_user", "type": "address"}], "name": "getNextVestingClaim", "outputs": [{"internalType": "int256", "name": "", "type": "int256"}, {"internalType": "uint256", "name": "", "type": "uint256"}, {"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_index", "type": "uint256"}], "name": "isVestingClaimable", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}, {"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "pool_name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "renounceOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256[]", "name": "_periods", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "_percents", "type": "uint256[]"}], "name": "setupVestingMode", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "startTime", "type": "uint256"}], "name": "startVestingMode", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "token", "outputs": [{"internalType": "contract ERC20", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "tokensAlloted", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "tokensClaimed", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "newOwner", "type": "address"}], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "vestInfo", "outputs": [{"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "bool", "name": "vestingTimerStarted", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "vestInfoLength", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}], "allSourcePaths": {"13": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Address.sol", "14": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol", "2": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/Ownable.sol", "4": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol", "5": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol", "50": "contracts/Vesting.sol", "6": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/extensions/IERC20Metadata.sol", "7": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/utils/SafeERC20.sol"}, "ast": {"absolutePath": "contracts/Vesting.sol", "exportedSymbols": {"Address": [26877], "Context": [27123], "ERC20": [24690], "IERC20": [27201], "IERC20Metadata": [27226], "Ownable": [24144], "SafeERC20": [27101], "Vesting": [24040]}, "id": 24041, "license": "agpl-3.0", "nodeType": "SourceUnit", "nodes": [{"id": 23464, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "608:23:50"}, {"absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol", "id": 23465, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 24041, "sourceUnit": 24691, "src": "633:55:50", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/utils/SafeERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol", "id": 23466, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 24041, "sourceUnit": 27102, "src": "689:65:50", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Address.sol", "file": "@openzeppelin/contracts/utils/Address.sol", "id": 23467, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 24041, "sourceUnit": 26878, "src": "755:51:50", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/Ownable.sol", "file": "@openzeppelin/contracts/access/Ownable.sol", "id": 23468, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 24041, "sourceUnit": 24145, "src": "807:52:50", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 23469, "name": "Ownable", "nodeType": "IdentifierPath", "referencedDeclaration": 24144, "src": "881:7:50"}, "id": 23470, "nodeType": "InheritanceSpecifier", "src": "881:7:50"}], "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 24040, "linearizedBaseContracts": [24040, 24144, 27123], "name": "Vesting", "nameLocation": "870:7:50", "nodeType": "ContractDefinition", "nodes": [{"id": 23473, "libraryName": {"id": 23471, "name": "Address", "nodeType": "IdentifierPath", "referencedDeclaration": 26877, "src": "901:7:50"}, "nodeType": "UsingForDirective", "src": "895:26:50", "typeName": {"id": 23472, "name": "address", "nodeType": "ElementaryTypeName", "src": "913:7:50", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}}, {"id": 23477, "libraryName": {"id": 23474, "name": "SafeERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 27101, "src": "932:9:50"}, "nodeType": "UsingForDirective", "src": "926:26:50", "typeName": {"id": 23476, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 23475, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 24690, "src": "946:5:50"}, "referencedDeclaration": 24690, "src": "946:5:50", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$24690", "typeString": "contract ERC20"}}}, {"constant": false, "functionSelector": "bde59079", "id": 23481, "mutability": "mutable", "name": "tokensAlloted", "nameLocation": "1048:13:50", "nodeType": "VariableDeclaration", "scope": 24040, "src": "1013:48:50", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 23480, "keyType": {"id": 23478, "name": "address", "nodeType": "ElementaryTypeName", "src": "1021:7:50", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1013:27:50", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 23479, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1032:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "624601b6", "id": 23485, "mutability": "mutable", "name": "tokensClaimed", "nameLocation": "1102:13:50", "nodeType": "VariableDeclaration", "scope": 24040, "src": "1067:48:50", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 23484, "keyType": {"id": 23482, "name": "address", "nodeType": "ElementaryTypeName", "src": "1075:7:50", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1067:27:50", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 23483, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1086:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "public"}, {"constant": true, "id": 23488, "mutability": "constant", "name": "PERCENT100", "nameLocation": "1148:10:50", "nodeType": "VariableDeclaration", "scope": 24040, "src": "1122:42:50", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23486, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1122:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "316536", "id": 23487, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1161:3:50", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "value": "1e6"}, "visibility": "internal"}, {"constant": false, "id": 23490, "mutability": "mutable", "name": "_pool_name", "nameLocation": "1186:10:50", "nodeType": "VariableDeclaration", "scope": 24040, "src": "1171:25:50", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 23489, "name": "string", "nodeType": "ElementaryTypeName", "src": "1171:6:50", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "private"}, {"canonicalName": "Vesting.VestingInfo", "id": 23501, "members": [{"constant": false, "id": 23493, "mutability": "mutable", "name": "periods", "nameLocation": "1242:7:50", "nodeType": "VariableDeclaration", "scope": 23501, "src": "1232:17:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 23491, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1232:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 23492, "nodeType": "ArrayTypeName", "src": "1232:9:50", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 23496, "mutability": "mutable", "name": "percents", "nameLocation": "1269:8:50", "nodeType": "VariableDeclaration", "scope": 23501, "src": "1259:18:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 23494, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1259:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 23495, "nodeType": "ArrayTypeName", "src": "1259:9:50", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 23498, "mutability": "mutable", "name": "startTime", "nameLocation": "1295:9:50", "nodeType": "VariableDeclaration", "scope": 23501, "src": "1287:17:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23497, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1287:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 23500, "mutability": "mutable", "name": "vestingTimerStarted", "nameLocation": "1319:19:50", "nodeType": "VariableDeclaration", "scope": 23501, "src": "1314:24:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 23499, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1314:4:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "name": "VestingInfo", "nameLocation": "1210:11:50", "nodeType": "StructDefinition", "scope": 24040, "src": "1203:142:50", "visibility": "public"}, {"constant": false, "functionSelector": "bcb43a1d", "id": 23504, "mutability": "mutable", "name": "vestInfo", "nameLocation": "1369:8:50", "nodeType": "VariableDeclaration", "scope": 24040, "src": "1350:27:50", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_VestingInfo_$23501_storage", "typeString": "struct Vesting.VestingInfo"}, "typeName": {"id": 23503, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 23502, "name": "VestingInfo", "nodeType": "IdentifierPath", "referencedDeclaration": 23501, "src": "1350:11:50"}, "referencedDeclaration": 23501, "src": "1350:11:50", "typeDescriptions": {"typeIdentifier": "t_struct$_VestingInfo_$23501_storage_ptr", "typeString": "struct Vesting.VestingInfo"}}, "visibility": "public"}, {"constant": false, "functionSelector": "029704af", "id": 23506, "mutability": "mutable", "name": "vestInfoLength", "nameLocation": "1398:14:50", "nodeType": "VariableDeclaration", "scope": 24040, "src": "1383:29:50", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23505, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1383:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "id": 23512, "mutability": "mutable", "name": "investorsClaimMap", "nameLocation": "1463:17:50", "nodeType": "VariableDeclaration", "scope": 24040, "src": "1418:62:50", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$", "typeString": "mapping(address => mapping(uint256 => bool))"}, "typeName": {"id": 23511, "keyType": {"id": 23507, "name": "address", "nodeType": "ElementaryTypeName", "src": "1426:7:50", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1418:44:50", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$", "typeString": "mapping(address => mapping(uint256 => bool))"}, "valueType": {"id": 23510, "keyType": {"id": 23508, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1445:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "1437:24:50", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$", "typeString": "mapping(uint256 => bool)"}, "valueType": {"id": 23509, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1456:4:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}}, "visibility": "internal"}, {"constant": false, "functionSelector": "fc0c546a", "id": 23515, "mutability": "immutable", "name": "token", "nameLocation": "1510:5:50", "nodeType": "VariableDeclaration", "scope": 24040, "src": "1487:28:50", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$24690", "typeString": "contract ERC20"}, "typeName": {"id": 23514, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 23513, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 24690, "src": "1487:5:50"}, "referencedDeclaration": 24690, "src": "1487:5:50", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$24690", "typeString": "contract ERC20"}}, "visibility": "public"}, {"anonymous": false, "id": 23523, "name": "TokenClaimed", "nameLocation": "1528:12:50", "nodeType": "EventDefinition", "parameters": {"id": 23522, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 23517, "indexed": true, "mutability": "mutable", "name": "user", "nameLocation": "1566:4:50", "nodeType": "VariableDeclaration", "scope": 23523, "src": "1550:20:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 23516, "name": "address", "nodeType": "ElementaryTypeName", "src": "1550:7:50", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 23519, "indexed": false, "mutability": "mutable", "name": "timeStamp", "nameLocation": "1588:9:50", "nodeType": "VariableDeclaration", "scope": 23523, "src": "1580:17:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23518, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1580:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 23521, "indexed": false, "mutability": "mutable", "name": "amountToken", "nameLocation": "1615:11:50", "nodeType": "VariableDeclaration", "scope": 23523, "src": "1607:19:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23520, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1607:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1540:92:50"}, "src": "1522:111:50"}, {"body": {"id": 23539, "nodeType": "Block", "src": "1686:59:50", "statements": [{"expression": {"id": 23533, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 23531, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23515, "src": "1696:5:50", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$24690", "typeString": "contract ERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 23532, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23526, "src": "1704:6:50", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$24690", "typeString": "contract ERC20"}}, "src": "1696:14:50", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$24690", "typeString": "contract ERC20"}}, "id": 23534, "nodeType": "ExpressionStatement", "src": "1696:14:50"}, {"expression": {"id": 23537, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 23535, "name": "_pool_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23490, "src": "1720:10:50", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 23536, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23528, "src": "1733:5:50", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "1720:18:50", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 23538, "nodeType": "ExpressionStatement", "src": "1720:18:50"}]}, "id": 23540, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 23529, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 23526, "mutability": "mutable", "name": "_token", "nameLocation": "1657:6:50", "nodeType": "VariableDeclaration", "scope": 23540, "src": "1651:12:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$24690", "typeString": "contract ERC20"}, "typeName": {"id": 23525, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 23524, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 24690, "src": "1651:5:50"}, "referencedDeclaration": 24690, "src": "1651:5:50", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$24690", "typeString": "contract ERC20"}}, "visibility": "internal"}, {"constant": false, "id": 23528, "mutability": "mutable", "name": "_name", "nameLocation": "1679:5:50", "nodeType": "VariableDeclaration", "scope": 23540, "src": "1665:19:50", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 23527, "name": "string", "nodeType": "ElementaryTypeName", "src": "1665:6:50", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "1650:35:50"}, "returnParameters": {"id": 23530, "nodeType": "ParameterList", "parameters": [], "src": "1686:0:50"}, "scope": 24040, "src": "1639:106:50", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 23622, "nodeType": "Block", "src": "2117:726:50", "statements": [{"expression": {"arguments": [{"id": 23555, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "2135:29:50", "subExpression": {"expression": {"id": 23553, "name": "vestInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23504, "src": "2136:8:50", "typeDescriptions": {"typeIdentifier": "t_struct$_VestingInfo_$23501_storage", "typeString": "struct Vesting.VestingInfo storage ref"}}, "id": 23554, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vestingTimerStarted", "nodeType": "MemberAccess", "referencedDeclaration": 23500, "src": "2136:28:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "56657374696e6720616c72656164792073746172746564", "id": 23556, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2166:25:50", "typeDescriptions": {"typeIdentifier": "t_stringliteral_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e", "typeString": "literal_string \"Vesting already started\""}, "value": "Vesting already started"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e", "typeString": "literal_string \"Vesting already started\""}], "id": 23552, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2127:7:50", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 23557, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2127:65:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 23558, "nodeType": "ExpressionStatement", "src": "2127:65:50"}, {"assignments": [23560], "declarations": [{"constant": false, "id": 23560, "mutability": "mutable", "name": "len", "nameLocation": "2211:3:50", "nodeType": "VariableDeclaration", "scope": 23622, "src": "2203:11:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23559, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2203:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 23563, "initialValue": {"expression": {"id": 23561, "name": "_periods", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23544, "src": "2217:8:50", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 23562, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "2217:15:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2203:29:50"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 23567, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 23565, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23560, "src": "2250:3:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 23566, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2256:1:50", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "2250:7:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c6964206c656e677468", "id": 23568, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2259:16:50", "typeDescriptions": {"typeIdentifier": "t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7", "typeString": "literal_string \"Invalid length\""}, "value": "Invalid length"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7", "typeString": "literal_string \"Invalid length\""}], "id": 23564, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2242:7:50", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 23569, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2242:34:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 23570, "nodeType": "ExpressionStatement", "src": "2242:34:50"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 23575, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 23572, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23560, "src": "2294:3:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 23573, "name": "_percents", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23547, "src": "2301:9:50", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 23574, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "2301:16:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2294:23:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "57726f6e672072616e676573", "id": 23576, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2319:14:50", "typeDescriptions": {"typeIdentifier": "t_stringliteral_2f73aead3daafb06cc3ee0ca53878ed1facdf50498daa8f3b241de1cb7be7efc", "typeString": "literal_string \"Wrong ranges\""}, "value": "Wrong ranges"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_2f73aead3daafb06cc3ee0ca53878ed1facdf50498daa8f3b241de1cb7be7efc", "typeString": "literal_string \"Wrong ranges\""}], "id": 23571, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2286:7:50", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 23577, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2286:48:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 23578, "nodeType": "ExpressionStatement", "src": "2286:48:50"}, {"assignments": [23580], "declarations": [{"constant": false, "id": 23580, "mutability": "mutable", "name": "totalPcnt", "nameLocation": "2439:9:50", "nodeType": "VariableDeclaration", "scope": 23622, "src": "2431:17:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23579, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2431:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 23581, "nodeType": "VariableDeclarationStatement", "src": "2431:17:50"}, {"body": {"id": 23600, "nodeType": "Block", "src": "2492:61:50", "statements": [{"expression": {"id": 23598, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 23592, "name": "totalPcnt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23580, "src": "2506:9:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 23597, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 23593, "name": "totalPcnt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23580, "src": "2518:9:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"baseExpression": {"id": 23594, "name": "_percents", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23547, "src": "2530:9:50", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 23596, "indexExpression": {"id": 23595, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23583, "src": "2540:1:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2530:12:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2518:24:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2506:36:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 23599, "nodeType": "ExpressionStatement", "src": "2506:36:50"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 23588, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 23586, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23583, "src": "2478:1:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 23587, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23560, "src": "2482:3:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2478:7:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 23601, "initializationExpression": {"assignments": [23583], "declarations": [{"constant": false, "id": 23583, "mutability": "mutable", "name": "n", "nameLocation": "2471:1:50", "nodeType": "VariableDeclaration", "scope": 23601, "src": "2463:9:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23582, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2463:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 23585, "initialValue": {"hexValue": "30", "id": 23584, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2475:1:50", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "2463:13:50"}, "loopExpression": {"expression": {"id": 23590, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "2487:3:50", "subExpression": {"id": 23589, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23583, "src": "2487:1:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 23591, "nodeType": "ExpressionStatement", "src": "2487:3:50"}, "nodeType": "ForStatement", "src": "2458:95:50"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 23605, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 23603, "name": "totalPcnt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23580, "src": "2570:9:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 23604, "name": "PERCENT100", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23488, "src": "2583:10:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2570:23:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "50657263656e7461676573206164642075702073686f756c642062652031303025", "id": 23606, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2595:35:50", "typeDescriptions": {"typeIdentifier": "t_stringliteral_819d62e53befd63df97ea0ac4415c15f51985e52013fb07128c48e15249ce269", "typeString": "literal_string \"Percentages add up should be 100%\""}, "value": "Percentages add up should be 100%"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_819d62e53befd63df97ea0ac4415c15f51985e52013fb07128c48e15249ce269", "typeString": "literal_string \"Percentages add up should be 100%\""}], "id": 23602, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2562:7:50", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 23607, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2562:69:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 23608, "nodeType": "ExpressionStatement", "src": "2562:69:50"}, {"expression": {"id": 23611, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 23609, "name": "vestInfoLength", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23506, "src": "2642:14:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 23610, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23560, "src": "2659:3:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2642:20:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 23612, "nodeType": "ExpressionStatement", "src": "2642:20:50"}, {"expression": {"id": 23620, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 23613, "name": "vestInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23504, "src": "2672:8:50", "typeDescriptions": {"typeIdentifier": "t_struct$_VestingInfo_$23501_storage", "typeString": "struct Vesting.VestingInfo storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 23615, "name": "_periods", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23544, "src": "2718:8:50", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, {"id": 23616, "name": "_percents", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23547, "src": "2750:9:50", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, {"hexValue": "30", "id": 23617, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2784:1:50", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "66616c7365", "id": 23618, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2820:5:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 23614, "name": "VestingInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23501, "src": "2683:11:50", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_VestingInfo_$23501_storage_ptr_$", "typeString": "type(struct Vesting.VestingInfo storage pointer)"}}, "id": 23619, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": ["periods", "percents", "startTime", "vestingTimerStarted"], "nodeType": "FunctionCall", "src": "2683:153:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_VestingInfo_$23501_memory_ptr", "typeString": "struct Vesting.VestingInfo memory"}}, "src": "2672:164:50", "typeDescriptions": {"typeIdentifier": "t_struct$_VestingInfo_$23501_storage", "typeString": "struct Vesting.VestingInfo storage ref"}}, "id": 23621, "nodeType": "ExpressionStatement", "src": "2672:164:50"}]}, "documentation": {"id": 23541, "nodeType": "StructuredDocumentation", "src": "1751:237:50", "text": " @dev Setup and turn on the vesting feature\n @param _periods - Array of period of the vesting.\n @param _percents - Array of percents release of the vesting.\n @notice - Access control: Public onlyOwner."}, "functionSelector": "11e128a9", "id": 23623, "implemented": true, "kind": "function", "modifiers": [{"id": 23550, "kind": "modifierInvocation", "modifierName": {"id": 23549, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 24087, "src": "2107:9:50"}, "nodeType": "ModifierInvocation", "src": "2107:9:50"}], "name": "setupVestingMode", "nameLocation": "2002:16:50", "nodeType": "FunctionDefinition", "parameters": {"id": 23548, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 23544, "mutability": "mutable", "name": "_periods", "nameLocation": "2047:8:50", "nodeType": "VariableDeclaration", "scope": 23623, "src": "2028:27:50", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 23542, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2028:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 23543, "nodeType": "ArrayTypeName", "src": "2028:9:50", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 23547, "mutability": "mutable", "name": "_percents", "nameLocation": "2084:9:50", "nodeType": "VariableDeclaration", "scope": 23623, "src": "2065:28:50", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 23545, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2065:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 23546, "nodeType": "ArrayTypeName", "src": "2065:9:50", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "2018:81:50"}, "returnParameters": {"id": 23551, "nodeType": "ParameterList", "parameters": [], "src": "2117:0:50"}, "scope": 24040, "src": "1993:850:50", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 23709, "nodeType": "Block", "src": "3260:540:50", "statements": [{"expression": {"arguments": [{"id": 23638, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "3278:29:50", "subExpression": {"expression": {"id": 23636, "name": "vestInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23504, "src": "3279:8:50", "typeDescriptions": {"typeIdentifier": "t_struct$_VestingInfo_$23501_storage", "typeString": "struct Vesting.VestingInfo storage ref"}}, "id": 23637, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vestingTimerStarted", "nodeType": "MemberAccess", "referencedDeclaration": 23500, "src": "3279:28:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "56657374696e6720616c72656164792073746172746564", "id": 23639, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3309:25:50", "typeDescriptions": {"typeIdentifier": "t_stringliteral_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e", "typeString": "literal_string \"Vesting already started\""}, "value": "Vesting already started"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e", "typeString": "literal_string \"Vesting already started\""}], "id": 23635, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3270:7:50", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 23640, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3270:65:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 23641, "nodeType": "ExpressionStatement", "src": "3270:65:50"}, {"assignments": [23643], "declarations": [{"constant": false, "id": 23643, "mutability": "mutable", "name": "len", "nameLocation": "3354:3:50", "nodeType": "VariableDeclaration", "scope": 23709, "src": "3346:11:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23642, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3346:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 23646, "initialValue": {"expression": {"id": 23644, "name": "_users", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23627, "src": "3360:6:50", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr", "typeString": "address[] calldata"}}, "id": 23645, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "3360:13:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3346:27:50"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 23650, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 23648, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23643, "src": "3391:3:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 23649, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3397:1:50", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "3391:7:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c6964206c656e677468", "id": 23651, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3400:16:50", "typeDescriptions": {"typeIdentifier": "t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7", "typeString": "literal_string \"Invalid length\""}, "value": "Invalid length"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7", "typeString": "literal_string \"Invalid length\""}], "id": 23647, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3383:7:50", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 23652, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3383:34:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 23653, "nodeType": "ExpressionStatement", "src": "3383:34:50"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 23658, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 23655, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23643, "src": "3435:3:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 23656, "name": "_tokenAmounts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23630, "src": "3442:13:50", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 23657, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "3442:20:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3435:27:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "57726f6e672072616e676573", "id": 23659, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3464:14:50", "typeDescriptions": {"typeIdentifier": "t_stringliteral_2f73aead3daafb06cc3ee0ca53878ed1facdf50498daa8f3b241de1cb7be7efc", "typeString": "literal_string \"Wrong ranges\""}, "value": "Wrong ranges"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_2f73aead3daafb06cc3ee0ca53878ed1facdf50498daa8f3b241de1cb7be7efc", "typeString": "literal_string \"Wrong ranges\""}], "id": 23654, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3427:7:50", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 23660, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3427:52:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 23661, "nodeType": "ExpressionStatement", "src": "3427:52:50"}, {"assignments": [23663], "declarations": [{"constant": false, "id": 23663, "mutability": "mutable", "name": "totalAllotedAmount", "nameLocation": "3498:18:50", "nodeType": "VariableDeclaration", "scope": 23709, "src": "3490:26:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23662, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3490:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 23664, "nodeType": "VariableDeclarationStatement", "src": "3490:26:50"}, {"body": {"id": 23695, "nodeType": "Block", "src": "3561:156:50", "statements": [{"assignments": [23676], "declarations": [{"constant": false, "id": 23676, "mutability": "mutable", "name": "_user", "nameLocation": "3583:5:50", "nodeType": "VariableDeclaration", "scope": 23695, "src": "3575:13:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 23675, "name": "address", "nodeType": "ElementaryTypeName", "src": "3575:7:50", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 23680, "initialValue": {"baseExpression": {"id": 23677, "name": "_users", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23627, "src": "3591:6:50", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr", "typeString": "address[] calldata"}}, "id": 23679, "indexExpression": {"id": 23678, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23666, "src": "3598:1:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3591:9:50", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "3575:25:50"}, {"expression": {"id": 23687, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 23681, "name": "tokensAlloted", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23481, "src": "3614:13:50", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 23683, "indexExpression": {"id": 23682, "name": "_user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23676, "src": "3628:5:50", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3614:20:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"baseExpression": {"id": 23684, "name": "_tokenAmounts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23630, "src": "3638:13:50", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 23686, "indexExpression": {"id": 23685, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23666, "src": "3652:1:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3638:16:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3614:40:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 23688, "nodeType": "ExpressionStatement", "src": "3614:40:50"}, {"expression": {"id": 23693, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 23689, "name": "totalAllotedAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23663, "src": "3668:18:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"baseExpression": {"id": 23690, "name": "_tokenAmounts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23630, "src": "3690:13:50", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, "id": 23692, "indexExpression": {"id": 23691, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23666, "src": "3704:1:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3690:16:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3668:38:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 23694, "nodeType": "ExpressionStatement", "src": "3668:38:50"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 23671, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 23669, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23666, "src": "3547:1:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 23670, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23643, "src": "3551:3:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3547:7:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 23696, "initializationExpression": {"assignments": [23666], "declarations": [{"constant": false, "id": 23666, "mutability": "mutable", "name": "n", "nameLocation": "3540:1:50", "nodeType": "VariableDeclaration", "scope": 23696, "src": "3532:9:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23665, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3532:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 23668, "initialValue": {"hexValue": "30", "id": 23667, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3544:1:50", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "3532:13:50"}, "loopExpression": {"expression": {"id": 23673, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "3556:3:50", "subExpression": {"id": 23672, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23666, "src": "3556:1:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 23674, "nodeType": "ExpressionStatement", "src": "3556:3:50"}, "nodeType": "ForStatement", "src": "3527:190:50"}, {"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 23700, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24073, "src": "3750:5:50", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 23701, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3750:7:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 23704, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "3767:4:50", "typeDescriptions": {"typeIdentifier": "t_contract$_Vesting_$24040", "typeString": "contract Vesting"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_Vesting_$24040", "typeString": "contract Vesting"}], "id": 23703, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3759:7:50", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 23702, "name": "address", "nodeType": "ElementaryTypeName", "src": "3759:7:50", "typeDescriptions": {}}}, "id": 23705, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3759:13:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 23706, "name": "totalAllotedAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23663, "src": "3774:18:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 23697, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23515, "src": "3727:5:50", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$24690", "typeString": "contract ERC20"}}, "id": 23699, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 26934, "src": "3727:22:50", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$27201_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$27201_$", "typeString": "function (contract IERC20,address,address,uint256)"}}, "id": 23707, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3727:66:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 23708, "nodeType": "ExpressionStatement", "src": "3727:66:50"}]}, "documentation": {"id": 23624, "nodeType": "StructuredDocumentation", "src": "2849:285:50", "text": " @dev Allot tokens to users and transfer that many tokens to the contract\n @param _users - Array of user addresses for alloting the tokens.\n @param _tokenAmounts - Array of token amounts alloted to users.\n @notice - Access control: Public onlyOwner."}, "functionSelector": "7d8ab226", "id": 23710, "implemented": true, "kind": "function", "modifiers": [{"id": 23633, "kind": "modifierInvocation", "modifierName": {"id": 23632, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 24087, "src": "3250:9:50"}, "nodeType": "ModifierInvocation", "src": "3250:9:50"}], "name": "allotTokens", "nameLocation": "3148:11:50", "nodeType": "FunctionDefinition", "parameters": {"id": 23631, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 23627, "mutability": "mutable", "name": "_users", "nameLocation": "3188:6:50", "nodeType": "VariableDeclaration", "scope": 23710, "src": "3169:25:50", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 23625, "name": "address", "nodeType": "ElementaryTypeName", "src": "3169:7:50", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 23626, "nodeType": "ArrayTypeName", "src": "3169:9:50", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}, {"constant": false, "id": 23630, "mutability": "mutable", "name": "_tokenAmounts", "nameLocation": "3223:13:50", "nodeType": "VariableDeclaration", "scope": 23710, "src": "3204:32:50", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 23628, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3204:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 23629, "nodeType": "ArrayTypeName", "src": "3204:9:50", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "3159:83:50"}, "returnParameters": {"id": 23634, "nodeType": "ParameterList", "parameters": [], "src": "3260:0:50"}, "scope": 24040, "src": "3139:661:50", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 23737, "nodeType": "Block", "src": "4043:204:50", "statements": [{"expression": {"arguments": [{"id": 23721, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "4097:29:50", "subExpression": {"expression": {"id": 23719, "name": "vestInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23504, "src": "4098:8:50", "typeDescriptions": {"typeIdentifier": "t_struct$_VestingInfo_$23501_storage", "typeString": "struct Vesting.VestingInfo storage ref"}}, "id": 23720, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vestingTimerStarted", "nodeType": "MemberAccess", "referencedDeclaration": 23500, "src": "4098:28:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "56657374696e6720616c72656164792073746172746564", "id": 23722, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4128:25:50", "typeDescriptions": {"typeIdentifier": "t_stringliteral_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e", "typeString": "literal_string \"Vesting already started\""}, "value": "Vesting already started"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e", "typeString": "literal_string \"Vesting already started\""}], "id": 23718, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4089:7:50", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 23723, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4089:65:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 23724, "nodeType": "ExpressionStatement", "src": "4089:65:50"}, {"expression": {"id": 23729, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 23725, "name": "vestInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23504, "src": "4165:8:50", "typeDescriptions": {"typeIdentifier": "t_struct$_VestingInfo_$23501_storage", "typeString": "struct Vesting.VestingInfo storage ref"}}, "id": 23727, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 23498, "src": "4165:18:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 23728, "name": "startTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23713, "src": "4186:9:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4165:30:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 23730, "nodeType": "ExpressionStatement", "src": "4165:30:50"}, {"expression": {"id": 23735, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 23731, "name": "vestInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23504, "src": "4205:8:50", "typeDescriptions": {"typeIdentifier": "t_struct$_VestingInfo_$23501_storage", "typeString": "struct Vesting.VestingInfo storage ref"}}, "id": 23733, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "vestingTimerStarted", "nodeType": "MemberAccess", "referencedDeclaration": 23500, "src": "4205:28:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 23734, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "4236:4:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "4205:35:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 23736, "nodeType": "ExpressionStatement", "src": "4205:35:50"}]}, "documentation": {"id": 23711, "nodeType": "StructuredDocumentation", "src": "3806:168:50", "text": " @dev Start the vesting counter.\n @param startTime - Time at which the vesting will start.\n @notice - Access control: External. onlyOwner."}, "functionSelector": "7cae771b", "id": 23738, "implemented": true, "kind": "function", "modifiers": [{"id": 23716, "kind": "modifierInvocation", "modifierName": {"id": 23715, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 24087, "src": "4033:9:50"}, "nodeType": "ModifierInvocation", "src": "4033:9:50"}], "name": "startVestingMode", "nameLocation": "3988:16:50", "nodeType": "FunctionDefinition", "parameters": {"id": 23714, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 23713, "mutability": "mutable", "name": "startTime", "nameLocation": "4013:9:50", "nodeType": "VariableDeclaration", "scope": 23738, "src": "4005:17:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23712, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4005:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4004:19:50"}, "returnParameters": {"id": 23717, "nodeType": "ParameterList", "parameters": [], "src": "4043:0:50"}, "scope": 24040, "src": "3979:268:50", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 23797, "nodeType": "Block", "src": "4611:421:50", "statements": [{"condition": {"id": 23750, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "4625:29:50", "subExpression": {"expression": {"id": 23748, "name": "vestInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23504, "src": "4626:8:50", "typeDescriptions": {"typeIdentifier": "t_struct$_VestingInfo_$23501_storage", "typeString": "struct Vesting.VestingInfo storage ref"}}, "id": 23749, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vestingTimerStarted", "nodeType": "MemberAccess", "referencedDeclaration": 23500, "src": "4626:28:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 23756, "nodeType": "IfStatement", "src": "4621:77:50", "trueBody": {"id": 23755, "nodeType": "Block", "src": "4656:42:50", "statements": [{"expression": {"components": [{"hexValue": "66616c7365", "id": 23751, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "4678:5:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"hexValue": "30", "id": 23752, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4685:1:50", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "id": 23753, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4677:10:50", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$", "typeString": "tuple(bool,int_const 0)"}}, "functionReturnParameters": 23747, "id": 23754, "nodeType": "Return", "src": "4670:17:50"}]}}, {"assignments": [23758], "declarations": [{"constant": false, "id": 23758, "mutability": "mutable", "name": "period", "nameLocation": "4715:6:50", "nodeType": "VariableDeclaration", "scope": 23797, "src": "4707:14:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23757, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4707:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 23763, "initialValue": {"baseExpression": {"expression": {"id": 23759, "name": "vestInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23504, "src": "4724:8:50", "typeDescriptions": {"typeIdentifier": "t_struct$_VestingInfo_$23501_storage", "typeString": "struct Vesting.VestingInfo storage ref"}}, "id": 23760, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "periods", "nodeType": "MemberAccess", "referencedDeclaration": 23493, "src": "4724:16:50", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 23762, "indexExpression": {"id": 23761, "name": "_index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23741, "src": "4741:6:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4724:24:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4707:41:50"}, {"assignments": [23765], "declarations": [{"constant": false, "id": 23765, "mutability": "mutable", "name": "releaseTime", "nameLocation": "4766:11:50", "nodeType": "VariableDeclaration", "scope": 23797, "src": "4758:19:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23764, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4758:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 23770, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 23769, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 23766, "name": "vestInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23504, "src": "4780:8:50", "typeDescriptions": {"typeIdentifier": "t_struct$_VestingInfo_$23501_storage", "typeString": "struct Vesting.VestingInfo storage ref"}}, "id": 23767, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 23498, "src": "4780:18:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 23768, "name": "period", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23758, "src": "4801:6:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4780:27:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4758:49:50"}, {"assignments": [23772], "declarations": [{"constant": false, "id": 23772, "mutability": "mutable", "name": "claimable", "nameLocation": "4822:9:50", "nodeType": "VariableDeclaration", "scope": 23797, "src": "4817:14:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 23771, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4817:4:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 23778, "initialValue": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 23776, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 23773, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "4835:5:50", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 23774, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "4835:15:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 23775, "name": "releaseTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23765, "src": "4853:11:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4835:29:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 23777, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4834:31:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "VariableDeclarationStatement", "src": "4817:48:50"}, {"assignments": [23780], "declarations": [{"constant": false, "id": 23780, "mutability": "mutable", "name": "remainTime", "nameLocation": "4883:10:50", "nodeType": "VariableDeclaration", "scope": 23797, "src": "4875:18:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23779, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4875:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 23781, "nodeType": "VariableDeclarationStatement", "src": "4875:18:50"}, {"condition": {"id": 23783, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "4907:10:50", "subExpression": {"id": 23782, "name": "claimable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23772, "src": "4908:9:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 23792, "nodeType": "IfStatement", "src": "4903:83:50", "trueBody": {"id": 23791, "nodeType": "Block", "src": "4919:67:50", "statements": [{"expression": {"id": 23789, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 23784, "name": "remainTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23780, "src": "4933:10:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 23788, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 23785, "name": "releaseTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23765, "src": "4946:11:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"expression": {"id": 23786, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "4960:5:50", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 23787, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "4960:15:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4946:29:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4933:42:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 23790, "nodeType": "ExpressionStatement", "src": "4933:42:50"}]}}, {"expression": {"components": [{"id": 23793, "name": "claimable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23772, "src": "5003:9:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 23794, "name": "remainTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23780, "src": "5014:10:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 23795, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "5002:23:50", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$", "typeString": "tuple(bool,uint256)"}}, "functionReturnParameters": 23747, "id": 23796, "nodeType": "Return", "src": "4995:30:50"}]}, "documentation": {"id": 23739, "nodeType": "StructuredDocumentation", "src": "4253:245:50", "text": " @dev Check whether a particular vesting index has elapsed and claimable\n @return - Bool: Claimable, uint256: If started and not claimable, returns the time needed to be claimable.\n @notice - Access control: Public."}, "functionSelector": "fa71067d", "id": 23798, "implemented": true, "kind": "function", "modifiers": [], "name": "isVestingClaimable", "nameLocation": "4512:18:50", "nodeType": "FunctionDefinition", "parameters": {"id": 23742, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 23741, "mutability": "mutable", "name": "_index", "nameLocation": "4539:6:50", "nodeType": "VariableDeclaration", "scope": 23798, "src": "4531:14:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23740, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4531:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4530:16:50"}, "returnParameters": {"id": 23747, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 23744, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 23798, "src": "4592:4:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 23743, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4592:4:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 23746, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 23798, "src": "4598:7:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23745, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4598:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4591:15:50"}, "scope": 24040, "src": "4503:529:50", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 23888, "nodeType": "Block", "src": "5303:708:50", "statements": [{"assignments": [23805, null], "declarations": [{"constant": false, "id": 23805, "mutability": "mutable", "name": "claimable", "nameLocation": "5319:9:50", "nodeType": "VariableDeclaration", "scope": 23888, "src": "5314:14:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 23804, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5314:4:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, null], "id": 23809, "initialValue": {"arguments": [{"id": 23807, "name": "_index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23801, "src": "5353:6:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 23806, "name": "isVestingClaimable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23798, "src": "5334:18:50", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$", "typeString": "function (uint256) view returns (bool,uint256)"}}, "id": 23808, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5334:26:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$", "typeString": "tuple(bool,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "5313:47:50"}, {"expression": {"arguments": [{"id": 23811, "name": "claimable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23805, "src": "5378:9:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f7420636c61696d61626c6520617420746869732074696d65", "id": 23812, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5389:28:50", "typeDescriptions": {"typeIdentifier": "t_stringliteral_172eb5be252e1a49bd83815d752c5f7e35cbb91b1b8923ccc50b8e7c7d60af98", "typeString": "literal_string \"Not claimable at this time\""}, "value": "Not claimable at this time"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_172eb5be252e1a49bd83815d752c5f7e35cbb91b1b8923ccc50b8e7c7d60af98", "typeString": "literal_string \"Not claimable at this time\""}], "id": 23810, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5370:7:50", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 23813, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5370:48:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 23814, "nodeType": "ExpressionStatement", "src": "5370:48:50"}, {"assignments": [23816], "declarations": [{"constant": false, "id": 23816, "mutability": "mutable", "name": "amtTotalToken", "nameLocation": "5437:13:50", "nodeType": "VariableDeclaration", "scope": 23888, "src": "5429:21:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23815, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5429:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 23821, "initialValue": {"baseExpression": {"id": 23817, "name": "tokensAlloted", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23481, "src": "5453:13:50", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 23820, "indexExpression": {"expression": {"id": 23818, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5467:3:50", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 23819, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5467:10:50", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5453:25:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5429:49:50"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 23825, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 23823, "name": "amtTotalToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23816, "src": "5497:13:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 23824, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5513:1:50", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "5497:17:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f20746f6b656e732068617665206265656e20616c6c6f74656420746f20796f75", "id": 23826, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5516:36:50", "typeDescriptions": {"typeIdentifier": "t_stringliteral_3c02dcc80b968de48a27b41972b690234c1acf4bdd208552289590a81deffcb1", "typeString": "literal_string \"No tokens have been alloted to you\""}, "value": "No tokens have been alloted to you"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_3c02dcc80b968de48a27b41972b690234c1acf4bdd208552289590a81deffcb1", "typeString": "literal_string \"No tokens have been alloted to you\""}], "id": 23822, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5489:7:50", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 23827, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5489:64:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 23828, "nodeType": "ExpressionStatement", "src": "5489:64:50"}, {"assignments": [23830], "declarations": [{"constant": false, "id": 23830, "mutability": "mutable", "name": "claimed", "nameLocation": "5569:7:50", "nodeType": "VariableDeclaration", "scope": 23888, "src": "5564:12:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 23829, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5564:4:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 23837, "initialValue": {"baseExpression": {"baseExpression": {"id": 23831, "name": "investorsClaimMap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23512, "src": "5579:17:50", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$", "typeString": "mapping(address => mapping(uint256 => bool))"}}, "id": 23834, "indexExpression": {"expression": {"id": 23832, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5597:3:50", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 23833, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5597:10:50", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5579:29:50", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$", "typeString": "mapping(uint256 => bool)"}}, "id": 23836, "indexExpression": {"id": 23835, "name": "_index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23801, "src": "5609:6:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5579:37:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "VariableDeclarationStatement", "src": "5564:52:50"}, {"expression": {"arguments": [{"id": 23840, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "5634:8:50", "subExpression": {"id": 23839, "name": "claimed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23830, "src": "5635:7:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686973207665737420616d6f756e7420697320616c726561647920636c61696d6564", "id": 23841, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5644:37:50", "typeDescriptions": {"typeIdentifier": "t_stringliteral_979095a961454536daa993f14257f0a68e70f52be6e63c12bcb81af9ca9aa5d5", "typeString": "literal_string \"This vest amount is already claimed\""}, "value": "This vest amount is already claimed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_979095a961454536daa993f14257f0a68e70f52be6e63c12bcb81af9ca9aa5d5", "typeString": "literal_string \"This vest amount is already claimed\""}], "id": 23838, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5626:7:50", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 23842, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5626:56:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 23843, "nodeType": "ExpressionStatement", "src": "5626:56:50"}, {"expression": {"id": 23851, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"baseExpression": {"id": 23844, "name": "investorsClaimMap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23512, "src": "5693:17:50", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$", "typeString": "mapping(address => mapping(uint256 => bool))"}}, "id": 23848, "indexExpression": {"expression": {"id": 23845, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5711:3:50", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 23846, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5711:10:50", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5693:29:50", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$", "typeString": "mapping(uint256 => bool)"}}, "id": 23849, "indexExpression": {"id": 23847, "name": "_index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23801, "src": "5723:6:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5693:37:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 23850, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5733:4:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "5693:44:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 23852, "nodeType": "ExpressionStatement", "src": "5693:44:50"}, {"assignments": [23854], "declarations": [{"constant": false, "id": 23854, "mutability": "mutable", "name": "amtTokens", "nameLocation": "5756:9:50", "nodeType": "VariableDeclaration", "scope": 23888, "src": "5748:17:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23853, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5748:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 23864, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 23863, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 23860, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"expression": {"id": 23855, "name": "vestInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23504, "src": "5769:8:50", "typeDescriptions": {"typeIdentifier": "t_struct$_VestingInfo_$23501_storage", "typeString": "struct Vesting.VestingInfo storage ref"}}, "id": 23856, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "percents", "nodeType": "MemberAccess", "referencedDeclaration": 23496, "src": "5769:17:50", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 23858, "indexExpression": {"id": 23857, "name": "_index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23801, "src": "5787:6:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5769:25:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 23859, "name": "amtTotalToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23816, "src": "5797:13:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5769:41:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 23861, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "5768:43:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 23862, "name": "PERCENT100", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23488, "src": "5826:10:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5768:68:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5748:88:50"}, {"expression": {"id": 23870, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 23865, "name": "tokensClaimed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23485, "src": "5847:13:50", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 23868, "indexExpression": {"expression": {"id": 23866, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5861:3:50", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 23867, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5861:10:50", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5847:25:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 23869, "name": "amtTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23854, "src": "5876:9:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5847:38:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 23871, "nodeType": "ExpressionStatement", "src": "5847:38:50"}, {"expression": {"arguments": [{"expression": {"id": 23875, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5915:3:50", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 23876, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5915:10:50", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 23877, "name": "amtTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23854, "src": "5927:9:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 23872, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23515, "src": "5896:5:50", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$24690", "typeString": "contract ERC20"}}, "id": 23874, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 26908, "src": "5896:18:50", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$27201_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$27201_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 23878, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5896:41:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 23879, "nodeType": "ExpressionStatement", "src": "5896:41:50"}, {"eventCall": {"arguments": [{"expression": {"id": 23881, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5965:3:50", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 23882, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5965:10:50", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 23883, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "5977:5:50", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 23884, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "5977:15:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 23885, "name": "amtTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23854, "src": "5994:9:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 23880, "name": "TokenClaimed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23523, "src": "5952:12:50", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (address,uint256,uint256)"}}, "id": 23886, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5952:52:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 23887, "nodeType": "EmitStatement", "src": "5947:57:50"}]}, "documentation": {"id": 23799, "nodeType": "StructuredDocumentation", "src": "5038:208:50", "text": " @dev Allow users to claim their vested token, according to the index of the vested period.\n @param _index - The index of the vesting period.\n @notice - Access control: External."}, "functionSelector": "7935510b", "id": 23889, "implemented": true, "kind": "function", "modifiers": [], "name": "claimVestedTokens", "nameLocation": "5260:17:50", "nodeType": "FunctionDefinition", "parameters": {"id": 23802, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 23801, "mutability": "mutable", "name": "_index", "nameLocation": "5286:6:50", "nodeType": "VariableDeclaration", "scope": 23889, "src": "5278:14:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23800, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5278:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5277:16:50"}, "returnParameters": {"id": 23803, "nodeType": "ParameterList", "parameters": [], "src": "5303:0:50"}, "scope": 24040, "src": "5251:760:50", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 24006, "nodeType": "Block", "src": "6585:823:50", "statements": [{"condition": {"id": 23903, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "6599:29:50", "subExpression": {"expression": {"id": 23901, "name": "vestInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23504, "src": "6600:8:50", "typeDescriptions": {"typeIdentifier": "t_struct$_VestingInfo_$23501_storage", "typeString": "struct Vesting.VestingInfo storage ref"}}, "id": 23902, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vestingTimerStarted", "nodeType": "MemberAccess", "referencedDeclaration": 23500, "src": "6600:28:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 23911, "nodeType": "IfStatement", "src": "6595:77:50", "trueBody": {"id": 23910, "nodeType": "Block", "src": "6630:42:50", "statements": [{"expression": {"components": [{"id": 23905, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "-", "prefix": true, "src": "6652:2:50", "subExpression": {"hexValue": "31", "id": 23904, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6653:1:50", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "typeDescriptions": {"typeIdentifier": "t_rational_minus_1_by_1", "typeString": "int_const -1"}}, {"hexValue": "30", "id": 23906, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6656:1:50", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 23907, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6659:1:50", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "id": 23908, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "6651:10:50", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_rational_minus_1_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$", "typeString": "tuple(int_const -1,int_const 0,int_const 0)"}}, "functionReturnParameters": 23900, "id": 23909, "nodeType": "Return", "src": "6644:17:50"}]}}, {"assignments": [23913], "declarations": [{"constant": false, "id": 23913, "mutability": "mutable", "name": "amtTotalToken", "nameLocation": "6690:13:50", "nodeType": "VariableDeclaration", "scope": 24006, "src": "6682:21:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23912, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6682:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 23917, "initialValue": {"baseExpression": {"id": 23914, "name": "tokensAlloted", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23481, "src": "6706:13:50", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 23916, "indexExpression": {"id": 23915, "name": "_user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23892, "src": "6720:5:50", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6706:20:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6682:44:50"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 23920, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 23918, "name": "amtTotalToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23913, "src": "6740:13:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 23919, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6757:1:50", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6740:18:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 23928, "nodeType": "IfStatement", "src": "6736:66:50", "trueBody": {"id": 23927, "nodeType": "Block", "src": "6760:42:50", "statements": [{"expression": {"components": [{"id": 23922, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "-", "prefix": true, "src": "6782:2:50", "subExpression": {"hexValue": "31", "id": 23921, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6783:1:50", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "typeDescriptions": {"typeIdentifier": "t_rational_minus_1_by_1", "typeString": "int_const -1"}}, {"hexValue": "30", "id": 23923, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6786:1:50", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 23924, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6789:1:50", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "id": 23925, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "6781:10:50", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_rational_minus_1_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$", "typeString": "tuple(int_const -1,int_const 0,int_const 0)"}}, "functionReturnParameters": 23900, "id": 23926, "nodeType": "Return", "src": "6774:17:50"}]}}, {"assignments": [23930], "declarations": [{"constant": false, "id": 23930, "mutability": "mutable", "name": "len", "nameLocation": "6820:3:50", "nodeType": "VariableDeclaration", "scope": 24006, "src": "6812:11:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23929, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6812:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 23934, "initialValue": {"expression": {"expression": {"id": 23931, "name": "vestInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23504, "src": "6826:8:50", "typeDescriptions": {"typeIdentifier": "t_struct$_VestingInfo_$23501_storage", "typeString": "struct Vesting.VestingInfo storage ref"}}, "id": 23932, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "periods", "nodeType": "MemberAccess", "referencedDeclaration": 23493, "src": "6826:16:50", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 23933, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "6826:23:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6812:37:50"}, {"body": {"id": 23998, "nodeType": "Block", "src": "6893:459:50", "statements": [{"assignments": [23946, 23948], "declarations": [{"constant": false, "id": 23946, "mutability": "mutable", "name": "claimable", "nameLocation": "6913:9:50", "nodeType": "VariableDeclaration", "scope": 23998, "src": "6908:14:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 23945, "name": "bool", "nodeType": "ElementaryTypeName", "src": "6908:4:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 23948, "mutability": "mutable", "name": "time", "nameLocation": "6932:4:50", "nodeType": "VariableDeclaration", "scope": 23998, "src": "6924:12:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23947, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6924:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 23952, "initialValue": {"arguments": [{"id": 23950, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23936, "src": "6959:1:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 23949, "name": "isVestingClaimable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23798, "src": "6940:18:50", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$", "typeString": "function (uint256) view returns (bool,uint256)"}}, "id": 23951, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6940:21:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$", "typeString": "tuple(bool,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "6907:54:50"}, {"assignments": [23954], "declarations": [{"constant": false, "id": 23954, "mutability": "mutable", "name": "amtTokens", "nameLocation": "6983:9:50", "nodeType": "VariableDeclaration", "scope": 23998, "src": "6975:17:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23953, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6975:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 23964, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 23963, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 23960, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"expression": {"id": 23955, "name": "vestInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23504, "src": "6996:8:50", "typeDescriptions": {"typeIdentifier": "t_struct$_VestingInfo_$23501_storage", "typeString": "struct Vesting.VestingInfo storage ref"}}, "id": 23956, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "percents", "nodeType": "MemberAccess", "referencedDeclaration": 23496, "src": "6996:17:50", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 23958, "indexExpression": {"id": 23957, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23936, "src": "7014:1:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6996:20:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 23959, "name": "amtTotalToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23913, "src": "7019:13:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6996:36:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 23961, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "6995:38:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 23962, "name": "PERCENT100", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23488, "src": "7052:10:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6995:67:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6975:87:50"}, {"assignments": [23966], "declarations": [{"constant": false, "id": 23966, "mutability": "mutable", "name": "claimed", "nameLocation": "7081:7:50", "nodeType": "VariableDeclaration", "scope": 23998, "src": "7076:12:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 23965, "name": "bool", "nodeType": "ElementaryTypeName", "src": "7076:4:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 23972, "initialValue": {"baseExpression": {"baseExpression": {"id": 23967, "name": "investorsClaimMap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23512, "src": "7091:17:50", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$", "typeString": "mapping(address => mapping(uint256 => bool))"}}, "id": 23969, "indexExpression": {"id": 23968, "name": "_user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23892, "src": "7109:5:50", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7091:24:50", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$", "typeString": "mapping(uint256 => bool)"}}, "id": 23971, "indexExpression": {"id": 23970, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23936, "src": "7116:1:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7091:27:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "VariableDeclarationStatement", "src": "7076:42:50"}, {"condition": {"id": 23974, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "7137:10:50", "subExpression": {"id": 23973, "name": "claimable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23946, "src": "7138:9:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 23996, "nodeType": "Block", "src": "7223:119:50", "statements": [{"condition": {"id": 23985, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "7245:8:50", "subExpression": {"id": 23984, "name": "claimed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23966, "src": "7246:7:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 23995, "nodeType": "IfStatement", "src": "7241:87:50", "trueBody": {"id": 23994, "nodeType": "Block", "src": "7255:73:50", "statements": [{"expression": {"components": [{"arguments": [{"id": 23988, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23936, "src": "7292:1:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 23987, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7285:6:50", "typeDescriptions": {"typeIdentifier": "t_type$_t_int256_$", "typeString": "type(int256)"}, "typeName": {"id": 23986, "name": "int256", "nodeType": "ElementaryTypeName", "src": "7285:6:50", "typeDescriptions": {}}}, "id": 23989, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7285:9:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 23990, "name": "amtTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23954, "src": "7296:9:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "30", "id": 23991, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7307:1:50", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "id": 23992, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "7284:25:50", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$_t_rational_0_by_1_$", "typeString": "tuple(int256,uint256,int_const 0)"}}, "functionReturnParameters": 23900, "id": 23993, "nodeType": "Return", "src": "7277:32:50"}]}}]}, "id": 23997, "nodeType": "IfStatement", "src": "7133:209:50", "trueBody": {"id": 23983, "nodeType": "Block", "src": "7149:68:50", "statements": [{"expression": {"components": [{"arguments": [{"id": 23977, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23936, "src": "7182:1:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 23976, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7175:6:50", "typeDescriptions": {"typeIdentifier": "t_type$_t_int256_$", "typeString": "type(int256)"}, "typeName": {"id": 23975, "name": "int256", "nodeType": "ElementaryTypeName", "src": "7175:6:50", "typeDescriptions": {}}}, "id": 23978, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7175:9:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 23979, "name": "amtTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23954, "src": "7186:9:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 23980, "name": "time", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23948, "src": "7197:4:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 23981, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "7174:28:50", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(int256,uint256,uint256)"}}, "functionReturnParameters": 23900, "id": 23982, "nodeType": "Return", "src": "7167:35:50"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 23941, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 23939, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23936, "src": "6879:1:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 23940, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23930, "src": "6883:3:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6879:7:50", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 23999, "initializationExpression": {"assignments": [23936], "declarations": [{"constant": false, "id": 23936, "mutability": "mutable", "name": "n", "nameLocation": "6872:1:50", "nodeType": "VariableDeclaration", "scope": 23999, "src": "6864:9:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23935, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6864:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 23938, "initialValue": {"hexValue": "30", "id": 23937, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6876:1:50", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "6864:13:50"}, "loopExpression": {"expression": {"id": 23943, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "6888:3:50", "subExpression": {"id": 23942, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23936, "src": "6888:1:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 23944, "nodeType": "ExpressionStatement", "src": "6888:3:50"}, "nodeType": "ForStatement", "src": "6859:493:50"}, {"expression": {"components": [{"id": 24001, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "-", "prefix": true, "src": "7392:2:50", "subExpression": {"hexValue": "31", "id": 24000, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7393:1:50", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "typeDescriptions": {"typeIdentifier": "t_rational_minus_1_by_1", "typeString": "int_const -1"}}, {"hexValue": "30", "id": 24002, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7396:1:50", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 24003, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7399:1:50", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "id": 24004, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "7391:10:50", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_rational_minus_1_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$", "typeString": "tuple(int_const -1,int_const 0,int_const 0)"}}, "functionReturnParameters": 23900, "id": 24005, "nodeType": "Return", "src": "7384:17:50"}]}, "documentation": {"id": 23890, "nodeType": "StructuredDocumentation", "src": "6017:396:50", "text": " @dev To get the next vesting claim for a user.\n @param _user - The user's address.\n @return - int256 : the next period. -1 to indicate none found.\n @return - uint256 : the amount of token claimable\n @return - uint256 : time left to claim. If 0 (and next claim period is valid), it is currently claimable.\n @notice - Access control: External. View."}, "functionSelector": "22e77e2d", "id": 24007, "implemented": true, "kind": "function", "modifiers": [], "name": "getNextVestingClaim", "nameLocation": "6427:19:50", "nodeType": "FunctionDefinition", "parameters": {"id": 23893, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 23892, "mutability": "mutable", "name": "_user", "nameLocation": "6455:5:50", "nodeType": "VariableDeclaration", "scope": 24007, "src": "6447:13:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 23891, "name": "address", "nodeType": "ElementaryTypeName", "src": "6447:7:50", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "6446:15:50"}, "returnParameters": {"id": 23900, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 23895, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 24007, "src": "6522:6:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 23894, "name": "int256", "nodeType": "ElementaryTypeName", "src": "6522:6:50", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 23897, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 24007, "src": "6542:7:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23896, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6542:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 23899, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 24007, "src": "6563:7:50", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23898, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6563:7:50", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6508:72:50"}, "scope": 24040, "src": "6418:990:50", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 24015, "nodeType": "Block", "src": "7537:34:50", "statements": [{"expression": {"id": 24013, "name": "_pool_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23490, "src": "7554:10:50", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 24012, "id": 24014, "nodeType": "Return", "src": "7547:17:50"}]}, "documentation": {"id": 24008, "nodeType": "StructuredDocumentation", "src": "7414:61:50", "text": " @dev Returns the name of the Vesting Pool."}, "functionSelector": "2d59680d", "id": 24016, "implemented": true, "kind": "function", "modifiers": [], "name": "pool_name", "nameLocation": "7489:9:50", "nodeType": "FunctionDefinition", "parameters": {"id": 24009, "nodeType": "ParameterList", "parameters": [], "src": "7498:2:50"}, "returnParameters": {"id": 24012, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 24011, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 24016, "src": "7522:13:50", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 24010, "name": "string", "nodeType": "ElementaryTypeName", "src": "7522:6:50", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "7521:15:50"}, "scope": 24040, "src": "7480:91:50", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 24038, "nodeType": "Block", "src": "7670:88:50", "statements": [{"expression": {"arguments": [{"arguments": [{"expression": {"id": 24026, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7707:3:50", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 24027, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7707:10:50", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 24025, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7699:7:50", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 24024, "name": "address", "nodeType": "ElementaryTypeName", "src": "7699:7:50", "typeDescriptions": {}}}, "id": 24028, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7699:19:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"arguments": [{"id": 24033, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "7744:4:50", "typeDescriptions": {"typeIdentifier": "t_contract$_Vesting_$24040", "typeString": "contract Vesting"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_Vesting_$24040", "typeString": "contract Vesting"}], "id": 24032, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7736:7:50", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 24031, "name": "address", "nodeType": "ElementaryTypeName", "src": "7736:7:50", "typeDescriptions": {}}}, "id": 24034, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7736:13:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 24029, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23515, "src": "7720:5:50", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$24690", "typeString": "contract ERC20"}}, "id": 24030, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 24243, "src": "7720:15:50", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 24035, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7720:30:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 24021, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23515, "src": "7680:5:50", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$24690", "typeString": "contract ERC20"}}, "id": 24023, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 26908, "src": "7680:18:50", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$27201_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$27201_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 24036, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7680:71:50", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 24037, "nodeType": "ExpressionStatement", "src": "7680:71:50"}]}, "functionSelector": "93aefa76", "id": 24039, "implemented": true, "kind": "function", "modifiers": [{"id": 24019, "kind": "modifierInvocation", "modifierName": {"id": 24018, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 24087, "src": "7660:9:50"}, "nodeType": "ModifierInvocation", "src": "7660:9:50"}], "name": "emergencyTokenWithdraw", "nameLocation": "7626:22:50", "nodeType": "FunctionDefinition", "parameters": {"id": 24017, "nodeType": "ParameterList", "parameters": [], "src": "7648:2:50"}, "returnParameters": {"id": 24020, "nodeType": "ParameterList", "parameters": [], "src": "7670:0:50"}, "scope": 24040, "src": "7617:141:50", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 24041, "src": "861:6899:50", "usedErrors": []}], "src": "608:7153:50"}, "bytecode": "", "bytecodeSha1": "16811aceb22e5063dc8b66e506a2917f80d550e9", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 1}, "version": "0.8.4+commit.c7e474f2"}, "contractName": "Vesting", "coverageMap": {"branches": {"13": {"Address.functionCallWithValue": {"68": [4745, 4775, true]}, "Address.verifyCallResult": {"69": [7335, 7342, false], "70": [7476, 7497, false]}}, "14": {}, "2": {"Context._msgSender": {"71": [1185, 1208, true]}, "Ownable.transferOwnership": {"72": [1934, 1956, true]}}, "4": {}, "5": {}, "50": {"Vesting.allotTokens": {"64": [3278, 3307, true], "65": [3391, 3398, true], "66": [3435, 3462, true]}, "Vesting.claimVestedTokens": {"60": [5378, 5387, true], "61": [5497, 5514, true], "62": [5634, 5642, true]}, "Vesting.getNextVestingClaim": {"56": [6600, 6628, false], "57": [6740, 6758, false], "58": [7138, 7147, false], "59": [7246, 7253, false]}, "Vesting.isVestingClaimable": {"67": [4626, 4654, false]}, "Vesting.setupVestingMode": {"52": [2135, 2164, true], "53": [2250, 2257, true], "54": [2294, 2317, true], "55": [2570, 2593, true]}, "Vesting.startVestingMode": {"63": [4097, 4126, true]}}, "6": {}, "7": {"SafeERC20._callOptionalReturn": {"73": [3668, 3689, false], "74": [3752, 3782, true]}}}, "statements": {"13": {"Address.functionCall": {"46": [3618, 3677]}, "Address.functionCallWithValue": {"47": [4737, 4818], "48": [4828, 4888], "49": [4982, 5040]}, "Address.verifyCallResult": {"50": [7358, 7375], "51": [7802, 7822]}}, "14": {"Context._msgSender": {"0": [659, 676]}}, "2": {"Ownable._setOwner": {"41": [2131, 2148], "42": [2158, 2203]}, "Ownable.owner": {"34": [1038, 1051]}, "Ownable.renounceOwnership": {"16": [1669, 1690]}, "Ownable.transferOwnership": {"36": [1926, 1999], "37": [2009, 2028]}}, "4": {}, "5": {}, "50": {"Vesting.allotTokens": {"27": [3270, 3335], "28": [3383, 3417], "29": [3427, 3479], "30": [3614, 3654], "31": [3668, 3706], "32": [3556, 3559], "33": [3727, 3793]}, "Vesting.claimVestedTokens": {"17": [5370, 5418], "18": [5489, 5553], "19": [5626, 5682], "20": [5693, 5737], "21": [5847, 5885], "22": [5896, 5937], "23": [5947, 6004]}, "Vesting.emergencyTokenWithdraw": {"35": [7680, 7751]}, "Vesting.getNextVestingClaim": {"9": [6644, 6661], "10": [6774, 6791], "11": [7167, 7202], "12": [7277, 7309], "13": [6888, 6891], "14": [7384, 7401]}, "Vesting.isVestingClaimable": {"38": [4670, 4687], "39": [4933, 4975], "40": [4995, 5025]}, "Vesting.pool_name": {"15": [7547, 7564]}, "Vesting.setupVestingMode": {"1": [2127, 2192], "2": [2242, 2276], "3": [2286, 2334], "4": [2506, 2542], "5": [2487, 2490], "6": [2562, 2631], "7": [2642, 2662], "8": [2672, 2836]}, "Vesting.startVestingMode": {"24": [4089, 4154], "25": [4165, 4195], "26": [4205, 4240]}}, "6": {}, "7": {"SafeERC20._callOptionalReturn": {"45": [3744, 3829]}, "SafeERC20.safeTransfer": {"43": [746, 832]}, "SafeERC20.safeTransferFrom": {"44": [983, 1079]}}}}, "dependencies": ["OpenZeppelin/openzeppelin-contracts@4.3.2/Address", "OpenZeppelin/openzeppelin-contracts@4.3.2/Context", "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC20", "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20", "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20Metadata", "OpenZeppelin/openzeppelin-contracts@4.3.2/Ownable", "OpenZeppelin/openzeppelin-contracts@4.3.2/SafeERC20"], "deployedBytecode": "", "deployedSourceMap": "861:6899:50:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1383:29;;;;;;;;;10069:25:51;;;10057:2;10042:18;1383:29:50;;;;;;;;1993:850;;;;;;:::i;:::-;;:::i;:::-;;6418:990;;;;;;:::i;:::-;;:::i;:::-;;;;4869:25:51;;;4925:2;4910:18;;4903:34;;;;4953:18;;;4946:34;4857:2;4842:18;6418:990:50;4824:162:51;7480:91:50;;;:::i;:::-;;;;;;;:::i;1067:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1605:92:2;;;:::i;5251:760:50:-;;;;;;:::i;:::-;;:::i;3979:268::-;;;;;;:::i;:::-;;:::i;3139:661::-;;;;;;:::i;:::-;;:::i;973:85:2:-;;;:::i;:::-;;;;;;;:::i;7617:141:50:-;;;:::i;1350:27::-;;;;;;;;;;;;;;;;10273:25:51;;;10341:14;;10334:22;10329:2;10314:18;;10307:50;10246:18;1350:27:50;10228:135:51;1013:48:50;;;;;;:::i;:::-;;;;;;;;;;;;;;1846:189:2;;;;;;:::i;:::-;;:::i;4503:529:50:-;;;;;;:::i;:::-;;:::i;:::-;;;;4376:14:51;;4369:22;4351:41;;4423:2;4408:18;;4401:34;;;;4324:18;4503:529:50;4306:135:51;1487:28:50;;;;;1993:850;666:10:14;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;;;;;;;;;2136:28:50;;::::1;;2135:29;2127:65;;;;-1:-1:-1::0;;;2127:65:50::1;;;;;;;:::i;:::-;2217:8:::0;2250:7;2242:34:::1;;;;-1:-1:-1::0;;;2242:34:50::1;;;;;;;:::i;:::-;2294:23:::0;;::::1;2286:48;;;;-1:-1:-1::0;;;2286:48:50::1;;;;;;;:::i;:::-;2431:17;::::0;2458:95:::1;2482:3;2478:1;:7;2458:95;;;2530:9;;2540:1;2530:12;;;;;-1:-1:-1::0;;;2530:12:50::1;;;;;;;;;;;;;;;2518:9;:24;;;;:::i;:::-;2506:36:::0;-1:-1:-1;2487:3:50;::::1;::::0;::::1;:::i;:::-;;;;2458:95;;;;1161:3;2570:9;:23;2562:69;;;::::0;-1:-1:-1;;;2562:69:50;;8189:2:51;2562:69:50::1;::::0;::::1;8171:21:51::0;8228:2;8208:18;;;8201:30;8267:34;8247:18;;;8240:62;-1:-1:-1;;;8318:18:51;;;8311:31;8359:19;;2562:69:50::1;8161:223:51::0;2562:69:50::1;2642:14;:20:::0;;;2683:153:::1;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;;;;;;;;2718:8;;;;;;2683:153;;;;2718:8;;2683:153;2718:8;2683:153;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;;;2683:153:50;;;-1:-1:-1;2683:153:50::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;::::1;::::0;;;2750:9;;;;;;2683:153;::::1;::::0;2750:9;;2683:153;2750:9;2683:153;::::1;;::::0;::::1;::::0;;;-1:-1:-1;2683:153:50;;;-1:-1:-1;;;2683:153:50::1;::::0;;::::1;::::0;;;;;;;;2672:164;;;;:8:::1;::::0;:164:::1;::::0;:8;;:164;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2672:164:50::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2672:164:50::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;2672:164:50::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;;;;;;1993:850:50:o;6418:990::-;6600:28;;6522:6;;;;;;6600:28;;6595:77;;-1:-1:-1;;;6652:2:50;-1:-1:-1;6656:1:50;;-1:-1:-1;6656:1:50;6644:17;;6595:77;-1:-1:-1;;;;;6706:20:50;;6682:21;6706:20;;;:13;:20;;;;;;6740:18;6736:66;;-1:-1:-1;;6786:1:50;6789;6774:17;;;;;;;;;6736:66;6826:8;:23;6812:11;6859:493;6883:3;6879:1;:7;6859:493;;;6908:14;6924:12;6940:21;6959:1;6940:18;:21::i;:::-;6907:54;;;;6975:17;1161:3;7019:13;6996:8;:17;;7014:1;6996:20;;;;;;-1:-1:-1;;;6996:20:50;;;;;;;;;;;;;;;;;:36;;;;:::i;:::-;6995:67;;;;:::i;:::-;-1:-1:-1;;;;;7091:24:50;;7076:12;7091:24;;;:17;:24;;;;;;;;:27;;;;;;;;;6975:87;;-1:-1:-1;7091:27:50;;7138:9;7133:209;;-1:-1:-1;7182:1:50;;-1:-1:-1;7186:9:50;;-1:-1:-1;7197:4:50;;-1:-1:-1;7167:35:50;;-1:-1:-1;;;7167:35:50;7133:209;7246:7;7241:87;;-1:-1:-1;7292:1:50;;-1:-1:-1;7296:9:50;;-1:-1:-1;7307:1:50;;-1:-1:-1;7277:32:50;;-1:-1:-1;;;;7277:32:50;7241:87;6859:493;;;;6888:3;;;;;:::i;:::-;;;;6859:493;;;;-1:-1:-1;;7396:1:50;7399;7384:17;;;;;;;;6418:990;;;;;;:::o;7480:91::-;7522:13;7554:10;7547:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7480:91;:::o;1605:92:2:-;666:10:14;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;5251:760:50:-;5314:14;5334:26;5353:6;5334:18;:26::i;:::-;5313:47;;;5378:9;5370:48;;;;-1:-1:-1;;;5370:48:50;;5924:2:51;5370:48:50;;;5906:21:51;5963:2;5943:18;;;5936:30;-1:-1:-1;;;5982:18:51;;;5975:56;6048:18;;5370:48:50;5896:176:51;5370:48:50;5467:10;5429:21;5453:25;;;:13;:25;;;;;;5497:17;5489:64;;;;-1:-1:-1;;;5489:64:50;;7027:2:51;5489:64:50;;;7009:21:51;7066:2;7046:18;;;7039:30;7105:34;7085:18;;;7078:62;-1:-1:-1;;;7156:18:51;;;7149:32;7198:19;;5489:64:50;6999:224:51;5489:64:50;5597:10;5564:12;5579:29;;;:17;:29;;;;;;;;:37;;;;;;;;;;;5634:8;;5626:56;;;;-1:-1:-1;;;5626:56:50;;8591:2:51;5626:56:50;;;8573:21:51;8630:2;8610:18;;;8603:30;8669:34;8649:18;;;8642:62;-1:-1:-1;;;8720:18:51;;;8713:33;8763:19;;5626:56:50;8563:225:51;5626:56:50;5711:10;5693:29;;;;:17;:29;;;;;;;;:37;;;;;;;;:44;;-1:-1:-1;;5693:44:50;5733:4;5693:44;;;5769:17;:25;;1161:3;;5797:13;;5723:6;;5769:25;;;;-1:-1:-1;;;5769:25:50;;;;;;;;;;;;;;;;;:41;;;;:::i;:::-;5768:68;;;;:::i;:::-;5861:10;5847:25;;;;:13;:25;;;;;:38;;5748:88;;-1:-1:-1;5748:88:50;;5847:25;;;:38;;5748:88;;5847:38;:::i;:::-;;;;-1:-1:-1;5896:41:50;;-1:-1:-1;;;;;;5896:5:50;:18;5915:10;5927:9;5896:18;:41::i;:::-;5952:52;;;5977:15;10542:25:51;;10598:2;10583:18;;10576:34;;;5965:10:50;;5952:52;;10515:18:51;5952:52:50;;;;;;;5251:760;;;;;:::o;3979:268::-;666:10:14;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;4098:28:50;;::::1;;4097:29;4089:65;;;;-1:-1:-1::0;;;4089:65:50::1;;;;;;;:::i;:::-;4165:18:::0;:30;4205:28;:35;;-1:-1:-1;;4205:35:50::1;4236:4;4205:35;::::0;;3979:268::o;3139:661::-;666:10:14;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;3279:28:50;;::::1;;3278:29;3270:65;;;;-1:-1:-1::0;;;3270:65:50::1;;;;;;;:::i;:::-;3360:6:::0;3391:7;3383:34:::1;;;;-1:-1:-1::0;;;3383:34:50::1;;;;;;;:::i;:::-;3435:27:::0;;::::1;3427:52;;;;-1:-1:-1::0;;;3427:52:50::1;;;;;;;:::i;:::-;3490:26;::::0;3527:190:::1;3551:3;3547:1;:7;3527:190;;;3575:13;3591:6;;3598:1;3591:9;;;;;-1:-1:-1::0;;;3591:9:50::1;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3575:25;;3638:13;;3652:1;3638:16;;;;;-1:-1:-1::0;;;3638:16:50::1;;;;;;;;;;;;;;;3614:13;:20;3628:5;-1:-1:-1::0;;;;;3614:20:50::1;-1:-1:-1::0;;;;;3614:20:50::1;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;3690:13:50;;-1:-1:-1;3690:13:50;3704:1;3690:16;;::::1;;;-1:-1:-1::0;;;3690:16:50::1;;;;;;;;;;;;;;;3668:38;;;;;:::i;:::-;;;3527:190;3556:3;;;;;:::i;:::-;;;;3527:190;;;;3727:66;3750:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;3727:5:50::1;:22;::::0;3767:4:::1;3774:18:::0;3727:22:::1;:66::i;:::-;1255:1:2;;3139:661:50::0;;;;:::o;973:85:2:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:2;;973:85::o;7617:141:50:-;666:10:14;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;7680:71:50::1;7707:10;7720:5;-1:-1:-1::0;;;;;7720:15:50::1;;7744:4;7720:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;7680:5:50::1;:18;::::0;:71;:18:::1;:71::i;1846:189:2:-:0;666:10:14;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:2;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:2;;6279:2:51;1926:73:2::1;::::0;::::1;6261:21:51::0;6318:2;6298:18;;;6291:30;6357:34;6337:18;;;6330:62;-1:-1:-1;;;6408:18:51;;;6401:36;6454:19;;1926:73:2::1;6251:228:51::0;1926:73:2::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;4503:529:50:-;4626:28;;4592:4;;;;4626:28;;4621:77;;-1:-1:-1;4678:5:50;;;;-1:-1:-1;4503:529:50;-1:-1:-1;4503:529:50:o;4621:77::-;4707:14;4724:8;:16;;4741:6;4724:24;;;;;;-1:-1:-1;;;4724:24:50;;;;;;;;;;;;;;;;;;4780:18;;4724:24;;-1:-1:-1;4780:27:50;;4724:24;;4780:27;:::i;:::-;4758:49;-1:-1:-1;4835:15:50;:29;-1:-1:-1;4817:14:50;4835:29;4903:83;;4946:29;4960:15;4946:11;:29;:::i;:::-;4933:42;;4903:83;5003:9;;5014:10;;-1:-1:-1;4503:529:50;-1:-1:-1;;;;4503:529:50:o;2041:169:2:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;634:205:7:-;773:58;;-1:-1:-1;;;;;4096:32:51;;773:58:7;;;4078:51:51;4145:18;;;4138:34;;;746:86:7;;766:5;;-1:-1:-1;;;796:23:7;4051:18:51;;773:58:7;;;;-1:-1:-1;;773:58:7;;;;;;;;;;;;;;-1:-1:-1;;;;;773:58:7;-1:-1:-1;;;;;;773:58:7;;;;;;;;;;746:19;:86::i;:::-;634:205;;;:::o;845:241::-;1010:68;;-1:-1:-1;;;;;3782:15:51;;;1010:68:7;;;3764:34:51;3834:15;;3814:18;;;3807:43;3866:18;;;3859:34;;;983:96:7;;1003:5;;-1:-1:-1;;;1033:27:7;3699:18:51;;1010:68:7;3681:218:51;983:96:7;845:241;;;;:::o;3140:706::-;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:7;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:7;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:7;;9714:2:51;3744:85:7;;;9696:21:51;9753:2;9733:18;;;9726:30;9792:34;9772:18;;;9765:62;-1:-1:-1;;;9843:18:51;;;9836:40;9893:19;;3744:85:7;9686:232:51;3461:223:13;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;;3461:223;;;;;;:::o;4548:499::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:13;;7430:2:51;4737:81:13;;;7412:21:51;7469:2;7449:18;;;7442:30;7508:34;7488:18;;;7481:62;-1:-1:-1;;;7559:18:51;;;7552:36;7605:19;;4737:81:13;7402:228:51;4737:81:13;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:13;;9356:2:51;4828:60:13;;;9338:21:51;9395:2;9375:18;;;9368:30;9434:31;9414:18;;;9407:59;9483:18;;4828:60:13;9328:179:51;4828:60:13;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:13;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:51;5006:7;5015:10;5027:12;4989:16;:51::i;:::-;4982:58;4548:499;-1:-1:-1;;;;;;;4548:499:13:o;7161:692::-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:13;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7619:145;7809:12;7802:20;;-1:-1:-1;;;7802:20:13;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:395:51;77:8;87:6;141:3;134:4;126:6;122:17;118:27;108:2;;166:8;156;149:26;108:2;-1:-1:-1;196:20:51;;-1:-1:-1;;;;;228:30:51;;225:2;;;278:8;268;261:26;225:2;322:4;314:6;310:17;298:29;;382:3;375:4;365:6;362:1;358:14;350:6;346:27;342:38;339:47;336:2;;;399:1;396;389:12;336:2;98:311;;;;;:::o;414:306::-;473:6;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;578:23;;-1:-1:-1;;;;;630:31:51;;620:42;;610:2;;681:6;673;666:22;725:803;847:6;855;863;871;924:2;912:9;903:7;899:23;895:32;892:2;;;945:6;937;930:22;892:2;977:23;;-1:-1:-1;;;;;1049:14:51;;;1046:2;;;1081:6;1073;1066:22;1046:2;1125:70;1187:7;1178:6;1167:9;1163:22;1125:70;:::i;:::-;1214:8;;-1:-1:-1;1099:96:51;-1:-1:-1;1302:2:51;1287:18;;1274:32;;-1:-1:-1;1318:16:51;;;1315:2;;;1352:6;1344;1337:22;1315:2;;1396:72;1460:7;1449:8;1438:9;1434:24;1396:72;:::i;:::-;882:646;;;;-1:-1:-1;1487:8:51;-1:-1:-1;;;;882:646:51:o;1533:803::-;1655:6;1663;1671;1679;1732:2;1720:9;1711:7;1707:23;1703:32;1700:2;;;1753:6;1745;1738:22;1700:2;1785:23;;-1:-1:-1;;;;;1857:14:51;;;1854:2;;;1889:6;1881;1874:22;2341:297;2408:6;2461:2;2449:9;2440:7;2436:23;2432:32;2429:2;;;2482:6;2474;2467:22;2429:2;2519:9;2513:16;2572:5;2565:13;2558:21;2551:5;2548:32;2538:2;;2599:6;2591;2584:22;2643:190;2702:6;2755:2;2743:9;2734:7;2730:23;2726:32;2723:2;;;2776:6;2768;2761:22;2723:2;-1:-1:-1;2804:23:51;;2713:120;-1:-1:-1;2713:120:51:o;2838:194::-;2908:6;2961:2;2949:9;2940:7;2936:23;2932:32;2929:2;;;2982:6;2974;2967:22;2929:2;-1:-1:-1;3010:16:51;;2919:113;-1:-1:-1;2919:113:51:o;3037:274::-;3166:3;3204:6;3198:13;3220:53;3266:6;3261:3;3254:4;3246:6;3242:17;3220:53;:::i;:::-;3289:16;;;;;3174:137;-1:-1:-1;;3174:137:51:o;3316:203::-;-1:-1:-1;;;;;3480:32:51;;;;3462:51;;3450:2;3435:18;;3417:102::o;4991:383::-;5140:2;5129:9;5122:21;5103:4;5172:6;5166:13;5215:6;5210:2;5199:9;5195:18;5188:34;5231:66;5290:6;5285:2;5274:9;5270:18;5265:2;5257:6;5253:15;5231:66;:::i;:::-;5358:2;5337:15;-1:-1:-1;;5333:29:51;5318:45;;;;5365:2;5314:54;;5112:262;-1:-1:-1;;5112:262:51:o;5379:338::-;5581:2;5563:21;;;5620:2;5600:18;;;5593:30;-1:-1:-1;;;5654:2:51;5639:18;;5632:44;5708:2;5693:18;;5553:164::o;6484:336::-;6686:2;6668:21;;;6725:2;6705:18;;;6698:30;-1:-1:-1;;;6759:2:51;6744:18;;6737:42;6811:2;6796:18;;6658:162::o;7635:347::-;7837:2;7819:21;;;7876:2;7856:18;;;7849:30;-1:-1:-1;;;7910:2:51;7895:18;;7888:53;7973:2;7958:18;;7809:173::o;8793:356::-;8995:2;8977:21;;;9014:18;;;9007:30;9073:34;9068:2;9053:18;;9046:62;9140:2;9125:18;;8967:182::o;10621:128::-;10661:3;10692:1;10688:6;10685:1;10682:13;10679:2;;;10698:18;;:::i;:::-;-1:-1:-1;10734:9:51;;10669:80::o;10754:217::-;10794:1;10820;10810:2;;-1:-1:-1;;;10845:31:51;;10899:4;10896:1;10889:15;10927:4;10852:1;10917:15;10810:2;-1:-1:-1;10956:9:51;;10800:171::o;10976:168::-;11016:7;11082:1;11078;11074:6;11070:14;11067:1;11064:21;11059:1;11052:9;11045:17;11041:45;11038:2;;;11089:18;;:::i;:::-;-1:-1:-1;11129:9:51;;11028:116::o;11149:125::-;11189:4;11217:1;11214;11211:8;11208:2;;;11222:18;;:::i;:::-;-1:-1:-1;11259:9:51;;11198:76::o;11279:258::-;11351:1;11361:113;11375:6;11372:1;11369:13;11361:113;;;11451:11;;;11445:18;11432:11;;;11425:39;11397:2;11390:10;11361:113;;;11492:6;11489:1;11486:13;11483:2;;;-1:-1:-1;;11527:1:51;11509:16;;11502:27;11332:205::o;11542:380::-;11621:1;11617:12;;;;11664;;;11685:2;;11739:4;11731:6;11727:17;11717:27;;11685:2;11792;11784:6;11781:14;11761:18;11758:38;11755:2;;;11838:10;11833:3;11829:20;11826:1;11819:31;11873:4;11870:1;11863:15;11901:4;11898:1;11891:15;11755:2;;11597:325;;;:::o;11927:135::-;11966:3;-1:-1:-1;;11987:17:51;;11984:2;;;12007:18;;:::i;:::-;-1:-1:-1;12054:1:51;12043:13;;11974:88::o;12067:127::-;12128:10;12123:3;12119:20;12116:1;12109:31;12159:4;12156:1;12149:15;12183:4;12180:1;12173:15", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"allotTokens(address[],uint256[])": {"details": "Allot tokens to users and transfer that many tokens to the contract", "notice": "- Access control: Public onlyOwner.", "params": {"_tokenAmounts": "- Array of token amounts alloted to users.", "_users": "- Array of user addresses for alloting the tokens."}}, "claimVestedTokens(uint256)": {"details": "Allow users to claim their vested token, according to the index of the vested period.", "notice": "- Access control: External.", "params": {"_index": "- The index of the vesting period."}}, "getNextVestingClaim(address)": {"details": "To get the next vesting claim for a user.", "notice": "- Access control: External. View.", "params": {"_user": "- The user's address."}, "returns": {"_0": "- int256 : the next period. -1 to indicate none found.", "_1": "- uint256 : the amount of token claimable", "_2": "- uint256 : time left to claim. If 0 (and next claim period is valid), it is currently claimable."}}, "isVestingClaimable(uint256)": {"details": "Check whether a particular vesting index has elapsed and claimable", "notice": "- Access control: Public.", "returns": {"_0": "- Bool: Claimable, uint256: If started and not claimable, returns the time needed to be claimable."}}, "owner()": {"details": "Returns the address of the current owner."}, "pool_name()": {"details": "Returns the name of the Vesting Pool."}, "renounceOwnership()": {"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."}, "setupVestingMode(uint256[],uint256[])": {"details": "Setup and turn on the vesting feature", "notice": "- Access control: Public onlyOwner.", "params": {"_percents": "- Array of percents release of the vesting.", "_periods": "- Array of period of the vesting."}}, "startVestingMode(uint256)": {"details": "Start the vesting counter.", "notice": "- Access control: External. onlyOwner.", "params": {"startTime": "- Time at which the vesting will start."}}, "transferOwnership(address)": {"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}, "version": 1}, "offset": [861, 7760], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29704AF EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x11E128A9 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x22E77E2D EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x2D59680D EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x624601B6 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x7935510B EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x7CAE771B EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x7D8AB226 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x93AEFA76 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xBCB43A1D EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xBDE59079 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xFA71067D EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x24A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x11C0 JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x119 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x1131 JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH2 0x13C PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH2 0xDE PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x104 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x120B JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x104 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x120B JUMP JUMPDEST PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1158 JUMP JUMPDEST PUSH2 0x953 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x1257 JUMP JUMPDEST PUSH2 0x104 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0xE8 JUMP JUMPDEST PUSH2 0xDE PUSH2 0x1FB CALLDATASIZE PUSH1 0x4 PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x1131 JUMP JUMPDEST PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x120B JUMP JUMPDEST PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xE8 JUMP JUMPDEST PUSH2 0x1B2 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH2 0x27A PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x12EC JUMP JUMPDEST DUP3 DUP1 PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x129E JUMP JUMPDEST DUP1 DUP3 EQ PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x35B JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x335 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x1352 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x353 DUP2 PUSH2 0x1427 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x30D JUMP JUMPDEST POP PUSH3 0xF4240 DUP2 EQ PUSH2 0x3B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50657263656E7461676573206164642075702073686F756C6420626520313030 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x8 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 PUSH1 0x20 DUP9 MUL DUP1 DUP4 ADD DUP3 ADD SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP3 ADD DUP9 DUP2 MSTORE SWAP2 SWAP3 DUP4 SWAP3 SWAP2 DUP11 SWAP2 DUP11 SWAP2 DUP3 SWAP2 SWAP1 DUP7 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP8 DUP2 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP8 DUP3 MSTORE SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 DUP9 SWAP2 DUP9 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP POP PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP3 ADD MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x4 SWAP3 PUSH2 0x454 SWAP3 DUP5 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1088 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0x46D SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x1088 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND PUSH2 0x4BB JUMPI POP PUSH1 0x0 NOT SWAP2 POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x4EB JUMPI PUSH1 0x0 NOT PUSH1 0x0 DUP1 SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5C6 JUMPI PUSH1 0x0 DUP1 PUSH2 0x505 DUP4 PUSH2 0xCC5 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH3 0xF4240 DUP7 PUSH1 0x4 PUSH1 0x1 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x534 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x138A JUMP JUMPDEST PUSH2 0x553 SWAP2 SWAP1 PUSH2 0x136A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND DUP4 PUSH2 0x595 JUMPI POP SWAP3 SWAP8 POP SWAP2 SWAP6 POP SWAP1 SWAP4 POP PUSH2 0x5D6 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x5AF JUMPI POP SWAP3 SWAP8 POP SWAP2 SWAP6 POP PUSH1 0x0 SWAP5 POP PUSH2 0x5D6 SWAP4 POP POP POP POP JUMP JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x5BE SWAP1 PUSH2 0x1427 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4F1 JUMP JUMPDEST POP PUSH1 0x0 NOT PUSH1 0x0 DUP1 SWAP5 POP SWAP5 POP SWAP5 POP POP POP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5EC SWAP1 PUSH2 0x13EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x618 SWAP1 PUSH2 0x13EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x665 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x63A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x665 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x648 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH2 0x678 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x69E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH2 0x6A8 PUSH1 0x0 PUSH2 0xD46 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B5 DUP3 PUSH2 0xCC5 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x702 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x4E6F7420636C61696D61626C6520617420746869732074696D65 PUSH1 0x30 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2A0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x76A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20746F6B656E732068617665206265656E20616C6C6F74656420746F2079 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6F75 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2A0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973207665737420616D6F756E7420697320616C726561647920636C6169 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1B5959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2A0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH3 0xF4240 SWAP2 DUP6 SWAP2 DUP9 SWAP1 DUP2 LT PUSH2 0x830 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x138A JUMP JUMPDEST PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x136A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x873 SWAP1 DUP5 SWAP1 PUSH2 0x1352 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x8AD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP4 PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xCB1E26772E882480176A3E649A5F7937DC0EC3F50126283FAF56F927B070BE80 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x8F8 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x91E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x941 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x12EC JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH2 0x95C PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x12EC JUMP JUMPDEST DUP3 DUP1 PUSH2 0x9C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x129E JUMP JUMPDEST DUP1 DUP3 EQ PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAD0 JUMPI PUSH1 0x0 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0xA10 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA25 SWAP2 SWAP1 PUSH2 0x1131 JUMP JUMPDEST SWAP1 POP DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0xA47 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA82 SWAP2 SWAP1 PUSH2 0x1352 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP7 SWAP1 POP DUP6 DUP4 DUP2 DUP2 LT PUSH2 0xAA8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP4 PUSH2 0xABA SWAP2 SWAP1 PUSH2 0x1352 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0xAC8 SWAP1 PUSH2 0x1427 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9E6 JUMP JUMPDEST POP PUSH2 0xB0E PUSH2 0xADC PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 ADDRESS DUP5 PUSH2 0xDFE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH2 0xB2E PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH2 0x6A8 CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA4 SWAP2 SWAP1 PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF4 SWAP2 SWAP1 PUSH2 0x1223 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 SWAP1 PUSH2 0xD96 JUMP JUMPDEST CALLER PUSH2 0xC2E PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2A0 JUMP JUMPDEST PUSH2 0xCC2 DUP2 PUSH2 0xD46 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND PUSH2 0xCDF JUMPI POP PUSH1 0x0 SWAP3 DUP4 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xD05 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x6 SLOAD SWAP1 SWAP3 POP PUSH2 0xD21 SWAP1 DUP4 SWAP1 PUSH2 0x1352 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP2 LT PUSH1 0x0 DUP2 PUSH2 0xD3A JUMPI PUSH2 0xD37 TIMESTAMP DUP5 PUSH2 0x13A9 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xDF9 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0xE3C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xE36 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0xDC2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE91 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF0E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xDF9 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xEAF SWAP2 SWAP1 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0xDF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF1D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xF27 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xF88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2A0 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0xFD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xFF2 SWAP2 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x102F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1044 DUP3 DUP3 DUP7 PUSH2 0x104F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x105E JUMPI POP DUP2 PUSH2 0xF20 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x106E JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x10C3 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x10C3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x10A8 JUMP JUMPDEST POP PUSH2 0x10CF SWAP3 SWAP2 POP PUSH2 0x10D3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x10CF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x10F9 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x110F JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1142 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF20 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x116D JUMPI DUP3 DUP4 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1183 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x118F DUP9 DUP4 DUP10 ADD PUSH2 0x10E8 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x11A7 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x11B4 DUP8 DUP3 DUP9 ADD PUSH2 0x10E8 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x11D5 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1183 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF20 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121C JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1234 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x124D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x13C0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x128A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x92DCECC2D8D2C840D8CADCCEE8D PUSH1 0x93 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x57726F6E672072616E676573 PUSH1 0xA0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH23 0x15995CDD1A5B99C8185B1C9958591E481CDD185C9D1959 PUSH1 0x4A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1365 JUMPI PUSH2 0x1365 PUSH2 0x1442 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1385 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x13A4 JUMPI PUSH2 0x13A4 PUSH2 0x1442 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x13BB JUMPI PUSH2 0x13BB PUSH2 0x1442 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13DB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13C3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xE36 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1400 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1421 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x143B JUMPI PUSH2 0x143B PUSH2 0x1442 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D PUSH12 0x7D99AEAEF1DEDB22E0AFC6EB SWAP8 0xC3 SHR PUSH23 0xA13134A72B98AA2D0AFED91118A64736F6C6343000804 STOP CALLER ", "sha1": "5aadc9df9b72000c8ca1ffc86fed65d6f657d0fe", "source": "// SPDX-License-Identifier: agpl-3.0\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Vesting is Ownable {\n    using Address for address;\n    using SafeERC20 for ERC20;\n\n    // Map user address to amount of tokens alloted //\n    mapping(address => uint256) public tokensAlloted;\n    mapping(address => uint256) public tokensClaimed;\n\n    uint256 internal constant PERCENT100 = 1e6;\n\n    string private _pool_name;\n\n    struct VestingInfo {\n        uint256[] periods;\n        uint256[] percents;\n        uint256 startTime;\n        bool vestingTimerStarted;\n    }\n    VestingInfo public vestInfo;\n    uint256 public vestInfoLength;\n    mapping(address => mapping(uint256 => bool)) investorsClaimMap;\n\n    ERC20 public immutable token;\n\n    event TokenClaimed(\n        address indexed user,\n        uint256 timeStamp,\n        uint256 amountToken\n    );\n\n    constructor(ERC20 _token, string memory _name) {\n        token = _token;\n        _pool_name = _name;\n    }\n\n    /**\n     * @dev Setup and turn on the vesting feature\n     * @param _periods - Array of period of the vesting.\n     * @param _percents - Array of percents release of the vesting.\n     * @notice - Access control: Public onlyOwner.\n     */\n    function setupVestingMode(\n        uint256[] calldata _periods,\n        uint256[] calldata _percents\n    ) public onlyOwner {\n        require(!vestInfo.vestingTimerStarted, \"Vesting already started\");\n\n        uint256 len = _periods.length;\n        require(len > 0, \"Invalid length\");\n        require(len == _percents.length, \"Wrong ranges\");\n\n        // check that all percentages should add up to 100% //\n        // 100% is 1e6\n        uint256 totalPcnt;\n        for (uint256 n = 0; n < len; n++) {\n            totalPcnt = totalPcnt + _percents[n];\n        }\n        require(totalPcnt == PERCENT100, \"Percentages add up should be 100%\");\n\n        vestInfoLength = len;\n        vestInfo = VestingInfo({\n            periods: _periods,\n            percents: _percents,\n            startTime: 0,\n            vestingTimerStarted: false\n        });\n    }\n\n    /**\n     * @dev Allot tokens to users and transfer that many tokens to the contract\n     * @param _users - Array of user addresses for alloting the tokens.\n     * @param _tokenAmounts - Array of token amounts alloted to users.\n     * @notice - Access control: Public onlyOwner.\n     */\n    function allotTokens(\n        address[] calldata _users,\n        uint256[] calldata _tokenAmounts\n    ) public onlyOwner {\n        require(!vestInfo.vestingTimerStarted, \"Vesting already started\");\n\n        uint256 len = _users.length;\n        require(len > 0, \"Invalid length\");\n        require(len == _tokenAmounts.length, \"Wrong ranges\");\n\n        uint256 totalAllotedAmount;\n\n        for (uint256 n = 0; n < len; n++) {\n            address _user = _users[n];\n            tokensAlloted[_user] += _tokenAmounts[n];\n            totalAllotedAmount += _tokenAmounts[n];\n        }\n\n        token.safeTransferFrom(owner(), address(this), totalAllotedAmount);\n    }\n\n    /**\n     * @dev Start the vesting counter.\n     * @param startTime - Time at which the vesting will start.\n     * @notice - Access control: External. onlyOwner.\n     */\n    function startVestingMode(uint256 startTime) external onlyOwner {\n        // Can be started only once\n        require(!vestInfo.vestingTimerStarted, \"Vesting already started\");\n\n        vestInfo.startTime = startTime;\n        vestInfo.vestingTimerStarted = true;\n    }\n\n    /**\n     * @dev Check whether a particular vesting index has elapsed and claimable\n     * @return - Bool: Claimable, uint256: If started and not claimable, returns the time needed to be claimable.\n     * @notice - Access control: Public.\n     */\n    function isVestingClaimable(uint256 _index)\n        public\n        view\n        returns (bool, uint256)\n    {\n        if (!vestInfo.vestingTimerStarted) {\n            return (false, 0);\n        }\n        uint256 period = vestInfo.periods[_index];\n        uint256 releaseTime = vestInfo.startTime + period;\n        bool claimable = (block.timestamp > releaseTime);\n        uint256 remainTime;\n        if (!claimable) {\n            remainTime = releaseTime - block.timestamp;\n        }\n        return (claimable, remainTime);\n    }\n\n    /**\n     * @dev Allow users to claim their vested token, according to the index of the vested period.\n     * @param _index - The index of the vesting period.\n     * @notice - Access control: External.\n     */\n    function claimVestedTokens(uint256 _index) external {\n        (bool claimable, ) = isVestingClaimable(_index);\n        require(claimable, \"Not claimable at this time\");\n\n        uint256 amtTotalToken = tokensAlloted[msg.sender];\n\n        require(amtTotalToken > 0, \"No tokens have been alloted to you\");\n\n        bool claimed = investorsClaimMap[msg.sender][_index];\n        require(!claimed, \"This vest amount is already claimed\");\n\n        investorsClaimMap[msg.sender][_index] = true;\n\n        uint256 amtTokens = (vestInfo.percents[_index] * amtTotalToken) /\n            PERCENT100;\n\n        tokensClaimed[msg.sender] += amtTokens;\n\n        token.safeTransfer(msg.sender, amtTokens);\n        emit TokenClaimed(msg.sender, block.timestamp, amtTokens);\n    }\n\n    /**\n     * @dev To get the next vesting claim for a user.\n     * @param _user - The user's address.\n     * @return - int256 : the next period. -1 to indicate none found.\n     * @return - uint256 : the amount of token claimable\n     * @return - uint256 : time left to claim. If 0 (and next claim period is valid), it is currently claimable.\n     * @notice - Access control: External. View.\n     */\n    function getNextVestingClaim(address _user)\n        external\n        view\n        returns (\n            int256,\n            uint256,\n            uint256\n        )\n    {\n        if (!vestInfo.vestingTimerStarted) {\n            return (-1, 0, 0);\n        }\n\n        uint256 amtTotalToken = tokensAlloted[_user];\n        if (amtTotalToken == 0) {\n            return (-1, 0, 0);\n        }\n\n        uint256 len = vestInfo.periods.length;\n        for (uint256 n = 0; n < len; n++) {\n            (bool claimable, uint256 time) = isVestingClaimable(n);\n            uint256 amtTokens = (vestInfo.percents[n] * amtTotalToken) /\n                PERCENT100;\n            bool claimed = investorsClaimMap[_user][n];\n\n            if (!claimable) {\n                return (int256(n), amtTokens, time);\n            } else {\n                if (!claimed) {\n                    return (int256(n), amtTokens, 0);\n                }\n            }\n        }\n        // All claimed\n        return (-1, 0, 0);\n    }\n\n    /**\n     * @dev Returns the name of the Vesting Pool.\n     */\n    function pool_name() public view returns (string memory) {\n        return _pool_name;\n    }\n\n    // Withdraw tokens. EMERGENCY ONLY.\n    function emergencyTokenWithdraw() external onlyOwner {\n        token.safeTransfer(address(msg.sender), token.balanceOf(address(this)));\n    }\n}\n", "sourceMap": "861:6899:50:-:0;;;1639:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:2;666:10:14;867:9:2;:23::i;:::-;-1:-1:-1;;;;;;1696:14:50;;;;;;;1720:18;;;;:10;;:18;;;;;:::i;:::-;;1639:106;;861:6899;;2041:169:2;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;861:6899:50:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;861:6899:50;;;-1:-1:-1;861:6899:50;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1329:51;118:6;126;179:2;167:9;158:7;154:23;150:32;147:2;;;200:6;192;185:22;147:2;231:16;;-1:-1:-1;;;;;276:31:51;;266:42;;256:2;;327:6;319;312:22;256:2;379;410:18;;;404:25;355:5;;-1:-1:-1;379:2:51;-1:-1:-1;;;;;478:14:51;;;475:2;;;510:6;502;495:22;475:2;553:6;542:9;538:22;528:32;;598:7;591:4;587:2;583:13;579:27;569:2;;625:6;617;610:22;569:2;659;653:9;681:2;677;674:10;671:2;;;687:18;;:::i;:::-;762:2;756:9;730:2;816:13;;-1:-1:-1;;812:22:51;;;836:2;808:31;804:40;792:53;;;860:18;;;880:22;;;857:46;854:2;;;906:18;;:::i;:::-;946:10;942:2;935:22;981:2;973:6;966:18;1021:7;1016:2;1011;1007;1003:11;999:20;996:33;993:2;;;1047:6;1039;1032:22;993:2;1074:6;1065:15;;1089:129;1103:2;1100:1;1097:9;1089:129;;;1191:10;;;1187:19;;1181:26;1160:14;;;1156:23;;1149:59;1114:10;;;;1089:129;;;1236:2;1233:1;1230:9;1227:2;;;1295:6;1290:2;1285;1277:6;1273:15;1269:24;1262:40;1227:2;1331:6;1321:16;;;;;;;;137:1206;;;;;:::o;1348:380::-;1427:1;1423:12;;;;1470;;;1491:2;;1545:4;1537:6;1533:17;1523:27;;1491:2;1598;1590:6;1587:14;1567:18;1564:38;1561:2;;;1644:10;1639:3;1635:20;1632:1;1625:31;1679:4;1676:1;1669:15;1707:4;1704:1;1697:15;1561:2;;1403:325;;;:::o;1733:127::-;1794:10;1789:3;1785:20;1782:1;1775:31;1825:4;1822:1;1815:15;1849:4;1846:1;1839:15;1765:95;861:6899:50;;;;;;;;;;;;", "sourcePath": "contracts/Vesting.sol", "type": "contract", "deployment": {"address": "0x26522B9cd96912a4B42239648d6c3D03085D5ee0", "chainid": "97", "blockHeight": 21168939}}