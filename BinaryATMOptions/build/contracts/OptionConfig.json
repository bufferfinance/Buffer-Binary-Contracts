{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staking",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialImpliedVolRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialStrike",
          "type": "uint256"
        },
        {
          "internalType": "contract BufferIBFRPoolV2",
          "name": "_pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "approval",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        }
      ],
      "name": "ApprovalUnits",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "AutoExerciseStatusChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "settlementFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadata",
          "type": "string"
        }
      ],
      "name": "Create",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        }
      ],
      "name": "Exercise",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "premium",
          "type": "uint256"
        }
      ],
      "name": "Expire",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "targetTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mergeUnits",
          "type": "uint256"
        }
      ],
      "name": "Merge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PayAdminFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PayReferralFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "splitUnits",
          "type": "uint256"
        }
      ],
      "name": "Split",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "targetTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "transferUnits",
          "type": "uint256"
        }
      ],
      "name": "TransferUnits",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateImpliedVolatility",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateMaxPeriod",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateNFTSaleRoyaltyPercentage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateOptionCollaterizationRatio",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startHour",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startMinute",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endHour",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endMinute",
          "type": "uint256"
        }
      ],
      "name": "UpdateOptionCreationWindow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateOptionSizePerBlockLimitPercent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateReferralRewardPercentage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateSettlementFeePercentage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "UpdateSettlementFeeRecipient",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateStakingFeePercentage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateStrike",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IOptionsConfig.PermittedTradingType",
          "name": "permissionType",
          "type": "uint8"
        }
      ],
      "name": "UpdateTradingPermission",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateUnits",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "enum IBufferOptions.OptionType",
          "name": "optionType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "strikeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "msgValue",
          "type": "uint256"
        }
      ],
      "name": "checkParams",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fixedStrike",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "impliedVolRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftSaleRoyaltyPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "optionCollateralizationRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "optionSizePerBlockLimitPercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permittedTradingType",
      "outputs": [
        {
          "internalType": "enum IOptionsConfig.PermittedTradingType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract BufferIBFRPoolV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "referralRewardPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setImpliedVolRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setMaxPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setNFTSaleRoyaltyPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setOptionCollaterizationRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setOptionSizePerBlockLimitPercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setReferralRewardPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setSettlementFeePercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "setSettlementFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setStakingFeePercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setStrike",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IOptionsConfig.PermittedTradingType",
          "name": "permissionType",
          "type": "uint8"
        }
      ],
      "name": "setTradingPermission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setUtilizationRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settlementFeePercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settlementFeeRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingFeePercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "utilizationRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "15": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
    "2": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/Ownable.sol",
    "26": "contracts/Interfaces/Interfaces.sol",
    "37": "contracts/Options/OptionConfig.sol",
    "4": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol",
    "41": "contracts/Pool/BufferIBFRPoolV2.sol",
    "5": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
    "6": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/extensions/IERC20Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/Options/OptionConfig.sol",
    "exportedSymbols": {
      "AccessControl": [
        19540
      ],
      "AggregatorV3Interface": [
        4525
      ],
      "BufferIBFRPoolV2": [
        17217
      ],
      "Context": [
        27611
      ],
      "ERC165": [
        28014
      ],
      "ERC20": [
        18824
      ],
      "IAccessControl": [
        27787
      ],
      "IBufferOptions": [
        4383
      ],
      "IERC165": [
        32292
      ],
      "IERC20": [
        27689
      ],
      "IERC20Metadata": [
        27714
      ],
      "ILiquidityPool": [
        4227
      ],
      "INFTCore": [
        4625
      ],
      "INFTReceiver": [
        4399
      ],
      "IOptionWindowCreator": [
        4474
      ],
      "IOptionsConfig": [
        4454
      ],
      "IPancakePair": [
        4111
      ],
      "IPriceProvider": [
        4564
      ],
      "ISlidingWindowOracle": [
        4644
      ],
      "OptionConfig": [
        14736
      ],
      "Ownable": [
        18238
      ],
      "Strings": [
        27990
      ]
    },
    "id": 14737,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14312,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:37"
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 14313,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14737,
        "sourceUnit": 18239,
        "src": "63:52:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Pool/BufferIBFRPoolV2.sol",
        "file": "../Pool/BufferIBFRPoolV2.sol",
        "id": 14314,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14737,
        "sourceUnit": 17218,
        "src": "116:38:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14316,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18238,
              "src": "308:7:37"
            },
            "id": 14317,
            "nodeType": "InheritanceSpecifier",
            "src": "308:7:37"
          },
          {
            "baseName": {
              "id": 14318,
              "name": "IBufferOptions",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4383,
              "src": "317:14:37"
            },
            "id": 14319,
            "nodeType": "InheritanceSpecifier",
            "src": "317:14:37"
          },
          {
            "baseName": {
              "id": 14320,
              "name": "IOptionsConfig",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4454,
              "src": "333:14:37"
            },
            "id": 14321,
            "nodeType": "InheritanceSpecifier",
            "src": "333:14:37"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 14315,
          "nodeType": "StructuredDocumentation",
          "src": "156:126:37",
          "text": " @author Heisenberg\n @title Buffer BNB Bidirectional (Call and Put) Options\n @notice Buffer BNB Options Contract"
        },
        "fullyImplemented": true,
        "id": 14736,
        "linearizedBaseContracts": [
          14736,
          4454,
          4383,
          18238,
          27611
        ],
        "name": "OptionConfig",
        "nameLocation": "292:12:37",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "18f88e5b",
            "id": 14323,
            "mutability": "mutable",
            "name": "impliedVolRate",
            "nameLocation": "369:14:37",
            "nodeType": "VariableDeclaration",
            "scope": 14736,
            "src": "354:29:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14322,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "354:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "302ce651",
            "id": 14326,
            "mutability": "mutable",
            "name": "optionCollateralizationRatio",
            "nameLocation": "404:28:37",
            "nodeType": "VariableDeclaration",
            "scope": 14736,
            "src": "389:49:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14324,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "389:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030",
              "id": 14325,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "435:3:37",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f3fa3495",
            "id": 14329,
            "mutability": "mutable",
            "name": "settlementFeePercentage",
            "nameLocation": "459:23:37",
            "nodeType": "VariableDeclaration",
            "scope": 14736,
            "src": "444:44:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14327,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "444:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "353030",
              "id": 14328,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "485:3:37",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500_by_1",
                "typeString": "int_const 500"
              },
              "value": "500"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ca535c3b",
            "id": 14332,
            "mutability": "mutable",
            "name": "stakingFeePercentage",
            "nameLocation": "566:20:37",
            "nodeType": "VariableDeclaration",
            "scope": 14736,
            "src": "551:40:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14330,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "551:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530",
              "id": 14331,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "589:2:37",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "920a253e",
            "id": 14335,
            "mutability": "mutable",
            "name": "referralRewardPercentage",
            "nameLocation": "612:24:37",
            "nodeType": "VariableDeclaration",
            "scope": 14736,
            "src": "597:43:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14333,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "597:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 14334,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "639:1:37",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ed0974c7",
            "id": 14338,
            "mutability": "mutable",
            "name": "nftSaleRoyaltyPercentage",
            "nameLocation": "661:24:37",
            "nodeType": "VariableDeclaration",
            "scope": 14736,
            "src": "646:43:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14336,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "646:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 14337,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "688:1:37",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 14341,
            "mutability": "constant",
            "name": "PRICE_DECIMALS",
            "nameLocation": "721:14:37",
            "nodeType": "VariableDeclaration",
            "scope": 14736,
            "src": "695:46:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14339,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "695:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "316538",
              "id": 14340,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "738:3:37",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000_by_1",
                "typeString": "int_const 100000000"
              },
              "value": "1e8"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "181731dc",
            "id": 14343,
            "mutability": "mutable",
            "name": "settlementFeeRecipient",
            "nameLocation": "762:22:37",
            "nodeType": "VariableDeclaration",
            "scope": 14736,
            "src": "747:37:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14342,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "747:7:37",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6c321c8a",
            "id": 14346,
            "mutability": "mutable",
            "name": "utilizationRate",
            "nameLocation": "805:15:37",
            "nodeType": "VariableDeclaration",
            "scope": 14736,
            "src": "790:37:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14344,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "790:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "36306538",
              "id": 14345,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "823:4:37",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_6000000000_by_1",
                "typeString": "int_const 6000000000"
              },
              "value": "60e8"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5ee97101",
            "id": 14348,
            "mutability": "mutable",
            "name": "fixedStrike",
            "nameLocation": "848:11:37",
            "nodeType": "VariableDeclaration",
            "scope": 14736,
            "src": "833:26:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14347,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "833:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "49b9a67f",
            "id": 14351,
            "mutability": "mutable",
            "name": "maxPeriod",
            "nameLocation": "880:9:37",
            "nodeType": "VariableDeclaration",
            "scope": 14736,
            "src": "865:35:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14349,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "865:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3234",
              "id": 14350,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "892:8:37",
              "subdenomination": "hours",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "24"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "71bf7e25",
            "id": 14354,
            "mutability": "mutable",
            "name": "optionSizePerBlockLimitPercent",
            "nameLocation": "921:30:37",
            "nodeType": "VariableDeclaration",
            "scope": 14736,
            "src": "906:49:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14352,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "906:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 14353,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "954:1:37",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 14357,
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "985:4:37",
            "nodeType": "VariableDeclaration",
            "scope": 14736,
            "src": "961:28:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BufferIBFRPoolV2_$17217",
              "typeString": "contract BufferIBFRPoolV2"
            },
            "typeName": {
              "id": 14356,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14355,
                "name": "BufferIBFRPoolV2",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 17217,
                "src": "961:16:37"
              },
              "referencedDeclaration": 17217,
              "src": "961:16:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BufferIBFRPoolV2_$17217",
                "typeString": "contract BufferIBFRPoolV2"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f12a0466",
            "id": 14360,
            "mutability": "mutable",
            "name": "permittedTradingType",
            "nameLocation": "1023:20:37",
            "nodeType": "VariableDeclaration",
            "scope": 14736,
            "src": "995:48:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_PermittedTradingType_$4404",
              "typeString": "enum IOptionsConfig.PermittedTradingType"
            },
            "typeName": {
              "id": 14359,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14358,
                "name": "PermittedTradingType",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4404,
                "src": "995:20:37"
              },
              "referencedDeclaration": 4404,
              "src": "995:20:37",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_PermittedTradingType_$4404",
                "typeString": "enum IOptionsConfig.PermittedTradingType"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 14388,
              "nodeType": "Block",
              "src": "1195:156:37",
              "statements": [
                {
                  "expression": {
                    "id": 14374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14372,
                      "name": "settlementFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14343,
                      "src": "1205:22:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14373,
                      "name": "staking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14362,
                      "src": "1230:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1205:32:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14375,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:32:37"
                },
                {
                  "expression": {
                    "id": 14378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14376,
                      "name": "fixedStrike",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14348,
                      "src": "1247:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14377,
                      "name": "initialStrike",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14366,
                      "src": "1261:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1247:27:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14379,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:27:37"
                },
                {
                  "expression": {
                    "id": 14382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14380,
                      "name": "impliedVolRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14323,
                      "src": "1284:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14381,
                      "name": "initialImpliedVolRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14364,
                      "src": "1301:21:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1284:38:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14383,
                  "nodeType": "ExpressionStatement",
                  "src": "1284:38:37"
                },
                {
                  "expression": {
                    "id": 14386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14384,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14357,
                      "src": "1332:4:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BufferIBFRPoolV2_$17217",
                        "typeString": "contract BufferIBFRPoolV2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14385,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14369,
                      "src": "1339:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BufferIBFRPoolV2_$17217",
                        "typeString": "contract BufferIBFRPoolV2"
                      }
                    },
                    "src": "1332:12:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BufferIBFRPoolV2_$17217",
                      "typeString": "contract BufferIBFRPoolV2"
                    }
                  },
                  "id": 14387,
                  "nodeType": "ExpressionStatement",
                  "src": "1332:12:37"
                }
              ]
            },
            "id": 14389,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14362,
                  "mutability": "mutable",
                  "name": "staking",
                  "nameLocation": "1079:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14389,
                  "src": "1071:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1071:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14364,
                  "mutability": "mutable",
                  "name": "initialImpliedVolRate",
                  "nameLocation": "1104:21:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14389,
                  "src": "1096:29:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1096:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14366,
                  "mutability": "mutable",
                  "name": "initialStrike",
                  "nameLocation": "1143:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14389,
                  "src": "1135:21:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1135:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14369,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "1183:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14389,
                  "src": "1166:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BufferIBFRPoolV2_$17217",
                    "typeString": "contract BufferIBFRPoolV2"
                  },
                  "typeName": {
                    "id": 14368,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14367,
                      "name": "BufferIBFRPoolV2",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17217,
                      "src": "1166:16:37"
                    },
                    "referencedDeclaration": 17217,
                    "src": "1166:16:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BufferIBFRPoolV2_$17217",
                      "typeString": "contract BufferIBFRPoolV2"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1061:133:37"
            },
            "returnParameters": {
              "id": 14371,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1195:0:37"
            },
            "scope": 14736,
            "src": "1050:301:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14449,
              "nodeType": "Block",
              "src": "1965:428:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_OptionType_$4278",
                            "typeString": "enum IBufferOptions.OptionType"
                          },
                          "id": 14411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 14407,
                            "name": "optionType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14393,
                            "src": "1996:10:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OptionType_$4278",
                              "typeString": "enum IBufferOptions.OptionType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 14408,
                                "name": "IBufferOptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4383,
                                "src": "2010:14:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBufferOptions_$4383_$",
                                  "typeString": "type(contract IBufferOptions)"
                                }
                              },
                              "id": 14409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "OptionType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4278,
                              "src": "2010:25:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_OptionType_$4278_$",
                                "typeString": "type(enum IBufferOptions.OptionType)"
                              }
                            },
                            "id": 14410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Call",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4277,
                            "src": "2010:30:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OptionType_$4278",
                              "typeString": "enum IBufferOptions.OptionType"
                            }
                          },
                          "src": "1996:44:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_OptionType_$4278",
                            "typeString": "enum IBufferOptions.OptionType"
                          },
                          "id": 14416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 14412,
                            "name": "optionType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14393,
                            "src": "2060:10:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OptionType_$4278",
                              "typeString": "enum IBufferOptions.OptionType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 14413,
                                "name": "IBufferOptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4383,
                                "src": "2074:14:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBufferOptions_$4383_$",
                                  "typeString": "type(contract IBufferOptions)"
                                }
                              },
                              "id": 14414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "OptionType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4278,
                              "src": "2074:25:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_OptionType_$4278_$",
                                "typeString": "type(enum IBufferOptions.OptionType)"
                              }
                            },
                            "id": 14415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Put",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4276,
                            "src": "2074:29:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OptionType_$4278",
                              "typeString": "enum IBufferOptions.OptionType"
                            }
                          },
                          "src": "2060:43:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1996:107:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e67206f7074696f6e2074797065",
                        "id": 14418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2117:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54c6d7b3567b4aa572694196d0aa6f3545a359ec90d2faa0c8d71a6ae3c59f25",
                          "typeString": "literal_string \"Wrong option type\""
                        },
                        "value": "Wrong option type"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_54c6d7b3567b4aa572694196d0aa6f3545a359ec90d2faa0c8d71a6ae3c59f25",
                          "typeString": "literal_string \"Wrong option type\""
                        }
                      ],
                      "id": 14406,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1975:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1975:171:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14420,
                  "nodeType": "ExpressionStatement",
                  "src": "1975:171:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14422,
                          "name": "period",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14395,
                          "src": "2164:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 14423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2174:6:37",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_86400_by_1",
                            "typeString": "int_const 86400"
                          },
                          "value": "1"
                        },
                        "src": "2164:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506572696f6420697320746f6f2073686f7274",
                        "id": 14425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2182:21:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef12607801969f67fe110ca83b8902a26a045a1f9bef1d9222f346a7abc94b7c",
                          "typeString": "literal_string \"Period is too short\""
                        },
                        "value": "Period is too short"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef12607801969f67fe110ca83b8902a26a045a1f9bef1d9222f346a7abc94b7c",
                          "typeString": "literal_string \"Period is too short\""
                        }
                      ],
                      "id": 14421,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2156:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2156:48:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14427,
                  "nodeType": "ExpressionStatement",
                  "src": "2156:48:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14429,
                          "name": "period",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14395,
                          "src": "2222:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3930",
                          "id": 14430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2232:7:37",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_7776000_by_1",
                            "typeString": "int_const 7776000"
                          },
                          "value": "90"
                        },
                        "src": "2222:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506572696f6420697320746f6f206c6f6e67",
                        "id": 14432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2241:20:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0d0d796e04e21a6508ff63f144e63f12f3cdee3716a307900aa89bff18d1c95",
                          "typeString": "literal_string \"Period is too long\""
                        },
                        "value": "Period is too long"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0d0d796e04e21a6508ff63f144e63f12f3cdee3716a307900aa89bff18d1c95",
                          "typeString": "literal_string \"Period is too long\""
                        }
                      ],
                      "id": 14428,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2214:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2214:48:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14434,
                  "nodeType": "ExpressionStatement",
                  "src": "2214:48:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14436,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14397,
                          "src": "2280:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 14437,
                          "name": "strikeFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14399,
                          "src": "2289:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2280:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "507269636520646966666572656e636520697320746f6f206c61726765",
                        "id": 14439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2300:31:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc771e12755e2f49f15fa1abfd870776036de6c5df236568dccc6993fa26244f",
                          "typeString": "literal_string \"Price difference is too large\""
                        },
                        "value": "Price difference is too large"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc771e12755e2f49f15fa1abfd870776036de6c5df236568dccc6993fa26244f",
                          "typeString": "literal_string \"Price difference is too large\""
                        }
                      ],
                      "id": 14435,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2272:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2272:60:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14441,
                  "nodeType": "ExpressionStatement",
                  "src": "2272:60:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14443,
                          "name": "msgValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14403,
                          "src": "2350:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 14444,
                          "name": "totalFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14401,
                          "src": "2362:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2350:20:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e672076616c7565",
                        "id": 14446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2372:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d94e4fbd8d2c1b23ec50c4a02f6f2af5dd0b11b96fc805d23c3a42bbf84f62d",
                          "typeString": "literal_string \"Wrong value\""
                        },
                        "value": "Wrong value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d94e4fbd8d2c1b23ec50c4a02f6f2af5dd0b11b96fc805d23c3a42bbf84f62d",
                          "typeString": "literal_string \"Wrong value\""
                        }
                      ],
                      "id": 14442,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2342:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2342:44:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14448,
                  "nodeType": "ExpressionStatement",
                  "src": "2342:44:37"
                }
              ]
            },
            "documentation": {
              "id": 14390,
              "nodeType": "StructuredDocumentation",
              "src": "1357:389:37",
              "text": " @notice Check the validity of the input params\n @param optionType Call or Put option type\n @param period Option period in seconds (1 days <= period <= 90 days)\n @param amount Option amount\n @param strikeFee strike fee for the option\n @param totalFee total fee for the option\n @param msgValue the msg.value given to the Create function"
            },
            "functionSelector": "64ac2655",
            "id": 14450,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkParams",
            "nameLocation": "1760:11:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14393,
                  "mutability": "mutable",
                  "name": "optionType",
                  "nameLocation": "1807:10:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14450,
                  "src": "1781:36:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OptionType_$4278",
                    "typeString": "enum IBufferOptions.OptionType"
                  },
                  "typeName": {
                    "id": 14392,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14391,
                      "name": "IBufferOptions.OptionType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4278,
                      "src": "1781:25:37"
                    },
                    "referencedDeclaration": 4278,
                    "src": "1781:25:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OptionType_$4278",
                      "typeString": "enum IBufferOptions.OptionType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14395,
                  "mutability": "mutable",
                  "name": "period",
                  "nameLocation": "1835:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14450,
                  "src": "1827:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14394,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1827:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14397,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1859:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14450,
                  "src": "1851:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1851:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14399,
                  "mutability": "mutable",
                  "name": "strikeFee",
                  "nameLocation": "1883:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14450,
                  "src": "1875:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1875:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14401,
                  "mutability": "mutable",
                  "name": "totalFee",
                  "nameLocation": "1910:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14450,
                  "src": "1902:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1902:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14403,
                  "mutability": "mutable",
                  "name": "msgValue",
                  "nameLocation": "1936:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14450,
                  "src": "1928:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1928:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1771:179:37"
            },
            "returnParameters": {
              "id": 14405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1965:0:37"
            },
            "scope": 14736,
            "src": "1751:642:37",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14473,
              "nodeType": "Block",
              "src": "2553:190:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14459,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14453,
                          "src": "2584:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 14460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2593:9:37",
                          "subdenomination": "minutes",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_300_by_1",
                            "typeString": "int_const 300"
                          },
                          "value": "5"
                        },
                        "src": "2584:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178506572696f64206e6565647320746f2062652067726561746572207468616e2035206d696e75746573",
                        "id": 14462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2616:46:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f27ee8eb57e19a7140ed11c234d489e275e21256425de73098381b81d1120547",
                          "typeString": "literal_string \"MaxPeriod needs to be greater than 5 minutes\""
                        },
                        "value": "MaxPeriod needs to be greater than 5 minutes"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f27ee8eb57e19a7140ed11c234d489e275e21256425de73098381b81d1120547",
                          "typeString": "literal_string \"MaxPeriod needs to be greater than 5 minutes\""
                        }
                      ],
                      "id": 14458,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2563:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2563:109:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14464,
                  "nodeType": "ExpressionStatement",
                  "src": "2563:109:37"
                },
                {
                  "expression": {
                    "id": 14467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14465,
                      "name": "maxPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14351,
                      "src": "2682:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14466,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14453,
                      "src": "2694:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2682:17:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14468,
                  "nodeType": "ExpressionStatement",
                  "src": "2682:17:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14470,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14453,
                        "src": "2730:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14469,
                      "name": "UpdateMaxPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4449,
                      "src": "2714:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 14471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2714:22:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14472,
                  "nodeType": "EmitStatement",
                  "src": "2709:27:37"
                }
              ]
            },
            "documentation": {
              "id": 14451,
              "nodeType": "StructuredDocumentation",
              "src": "2399:93:37",
              "text": " @notice Used for adjusting the maxPeriod\n @param value New maxPeriod"
            },
            "functionSelector": "ae1c9fc1",
            "id": 14474,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14456,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14455,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "2543:9:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "2543:9:37"
              }
            ],
            "name": "setMaxPeriod",
            "nameLocation": "2506:12:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14453,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2527:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14474,
                  "src": "2519:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14452,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2519:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2518:15:37"
            },
            "returnParameters": {
              "id": 14457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2553:0:37"
            },
            "scope": 14736,
            "src": "2497:246:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14497,
              "nodeType": "Block",
              "src": "3002:237:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14483,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14477,
                          "src": "3033:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 14484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3041:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "3033:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696f6e53697a65506572426c6f636b4c696d697450657263656e74206e6565647320746f206265206c657373207468616e20313030",
                        "id": 14486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3058:58:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe6ce251bc14d66db6f43c934048772722e53f6f178a188d214d672078a02684",
                          "typeString": "literal_string \"OptionSizePerBlockLimitPercent needs to be less than 100\""
                        },
                        "value": "OptionSizePerBlockLimitPercent needs to be less than 100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe6ce251bc14d66db6f43c934048772722e53f6f178a188d214d672078a02684",
                          "typeString": "literal_string \"OptionSizePerBlockLimitPercent needs to be less than 100\""
                        }
                      ],
                      "id": 14482,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3012:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3012:114:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14488,
                  "nodeType": "ExpressionStatement",
                  "src": "3012:114:37"
                },
                {
                  "expression": {
                    "id": 14491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14489,
                      "name": "optionSizePerBlockLimitPercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14354,
                      "src": "3136:30:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14490,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14477,
                      "src": "3169:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3136:38:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14492,
                  "nodeType": "ExpressionStatement",
                  "src": "3136:38:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14494,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14477,
                        "src": "3226:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14493,
                      "name": "UpdateOptionSizePerBlockLimitPercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4453,
                      "src": "3189:36:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 14495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3189:43:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14496,
                  "nodeType": "EmitStatement",
                  "src": "3184:48:37"
                }
              ]
            },
            "documentation": {
              "id": 14475,
              "nodeType": "StructuredDocumentation",
              "src": "2749:151:37",
              "text": " @notice Used for adjusting the option size per block limit percent\n @param value New option size per block limit percent value"
            },
            "functionSelector": "e97b86e7",
            "id": 14498,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14480,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14479,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "2988:9:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "2988:9:37"
              }
            ],
            "name": "setOptionSizePerBlockLimitPercent",
            "nameLocation": "2914:33:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14477,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2956:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14498,
                  "src": "2948:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14476,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2948:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2947:15:37"
            },
            "returnParameters": {
              "id": 14481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3002:0:37"
            },
            "scope": 14736,
            "src": "2905:334:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14521,
              "nodeType": "Block",
              "src": "3460:152:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14507,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14501,
                          "src": "3478:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 14508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3487:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "3478:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496d706c696564566f6c52617465206c696d697420697320746f6f20736d616c6c",
                        "id": 14510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3492:35:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e57454b21ce65a63b8011f369bea0d36d60a55f04baa91c83795124af1ef1101",
                          "typeString": "literal_string \"ImpliedVolRate limit is too small\""
                        },
                        "value": "ImpliedVolRate limit is too small"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e57454b21ce65a63b8011f369bea0d36d60a55f04baa91c83795124af1ef1101",
                          "typeString": "literal_string \"ImpliedVolRate limit is too small\""
                        }
                      ],
                      "id": 14506,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3470:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3470:58:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14512,
                  "nodeType": "ExpressionStatement",
                  "src": "3470:58:37"
                },
                {
                  "expression": {
                    "id": 14515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14513,
                      "name": "impliedVolRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14323,
                      "src": "3538:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14514,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14501,
                      "src": "3555:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3538:22:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14516,
                  "nodeType": "ExpressionStatement",
                  "src": "3538:22:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14518,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14501,
                        "src": "3599:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14517,
                      "name": "UpdateImpliedVolatility",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4408,
                      "src": "3575:23:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 14519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3575:30:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14520,
                  "nodeType": "EmitStatement",
                  "src": "3570:35:37"
                }
              ]
            },
            "documentation": {
              "id": 14499,
              "nodeType": "StructuredDocumentation",
              "src": "3245:149:37",
              "text": " @notice Used for adjusting the options prices while balancing asset's implied volatility rate\n @param value New IVRate value"
            },
            "functionSelector": "ceaeeba9",
            "id": 14522,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14504,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14503,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "3450:9:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "3450:9:37"
              }
            ],
            "name": "setImpliedVolRate",
            "nameLocation": "3408:17:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14501,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "3434:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14522,
                  "src": "3426:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3426:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3425:15:37"
            },
            "returnParameters": {
              "id": 14505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3460:0:37"
            },
            "scope": 14736,
            "src": "3399:213:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14538,
              "nodeType": "Block",
              "src": "3724:108:37",
              "statements": [
                {
                  "expression": {
                    "id": 14532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14530,
                      "name": "permittedTradingType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14360,
                      "src": "3734:20:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PermittedTradingType_$4404",
                        "typeString": "enum IOptionsConfig.PermittedTradingType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14531,
                      "name": "permissionType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14525,
                      "src": "3757:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PermittedTradingType_$4404",
                        "typeString": "enum IOptionsConfig.PermittedTradingType"
                      }
                    },
                    "src": "3734:37:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermittedTradingType_$4404",
                      "typeString": "enum IOptionsConfig.PermittedTradingType"
                    }
                  },
                  "id": 14533,
                  "nodeType": "ExpressionStatement",
                  "src": "3734:37:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14535,
                        "name": "permissionType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14525,
                        "src": "3810:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermittedTradingType_$4404",
                          "typeString": "enum IOptionsConfig.PermittedTradingType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_PermittedTradingType_$4404",
                          "typeString": "enum IOptionsConfig.PermittedTradingType"
                        }
                      ],
                      "id": 14534,
                      "name": "UpdateTradingPermission",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4437,
                      "src": "3786:23:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_PermittedTradingType_$4404_$returns$__$",
                        "typeString": "function (enum IOptionsConfig.PermittedTradingType)"
                      }
                    },
                    "id": 14536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3786:39:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14537,
                  "nodeType": "EmitStatement",
                  "src": "3781:44:37"
                }
              ]
            },
            "functionSelector": "ff0b025d",
            "id": 14539,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14528,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14527,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "3710:9:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "3710:9:37"
              }
            ],
            "name": "setTradingPermission",
            "nameLocation": "3627:20:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14525,
                  "mutability": "mutable",
                  "name": "permissionType",
                  "nameLocation": "3669:14:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14539,
                  "src": "3648:35:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PermittedTradingType_$4404",
                    "typeString": "enum IOptionsConfig.PermittedTradingType"
                  },
                  "typeName": {
                    "id": 14524,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14523,
                      "name": "PermittedTradingType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4404,
                      "src": "3648:20:37"
                    },
                    "referencedDeclaration": 4404,
                    "src": "3648:20:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermittedTradingType_$4404",
                      "typeString": "enum IOptionsConfig.PermittedTradingType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3647:37:37"
            },
            "returnParameters": {
              "id": 14529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3724:0:37"
            },
            "scope": 14736,
            "src": "3618:214:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14565,
              "nodeType": "Block",
              "src": "3989:205:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14548,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4020:5:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 14549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4020:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 14550,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14357,
                              "src": "4038:4:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BufferIBFRPoolV2_$17217",
                                "typeString": "contract BufferIBFRPoolV2"
                              }
                            },
                            "id": 14551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fixedExpiry",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16024,
                            "src": "4038:16:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 14552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4038:18:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4020:36:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e2774206368616e676520737472696b65206265666f7265207468652065787069727920656e6473",
                        "id": 14554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4070:44:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_14e5f72eaf30cd0c6c683ddf26df7f3ca8189e28e13e73c2ef6258a10e4b2005",
                          "typeString": "literal_string \"Can't change strike before the expiry ends\""
                        },
                        "value": "Can't change strike before the expiry ends"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_14e5f72eaf30cd0c6c683ddf26df7f3ca8189e28e13e73c2ef6258a10e4b2005",
                          "typeString": "literal_string \"Can't change strike before the expiry ends\""
                        }
                      ],
                      "id": 14547,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3999:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3999:125:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14556,
                  "nodeType": "ExpressionStatement",
                  "src": "3999:125:37"
                },
                {
                  "expression": {
                    "id": 14559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14557,
                      "name": "fixedStrike",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14348,
                      "src": "4134:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14558,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14542,
                      "src": "4148:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4134:19:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14560,
                  "nodeType": "ExpressionStatement",
                  "src": "4134:19:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14562,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14542,
                        "src": "4181:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14561,
                      "name": "UpdateStrike",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4441,
                      "src": "4168:12:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 14563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4168:19:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14564,
                  "nodeType": "EmitStatement",
                  "src": "4163:24:37"
                }
              ]
            },
            "documentation": {
              "id": 14540,
              "nodeType": "StructuredDocumentation",
              "src": "3838:93:37",
              "text": " @notice Used for changing strike\n @param value New fixedStrike value"
            },
            "functionSelector": "a08d874c",
            "id": 14566,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14545,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14544,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "3979:9:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "3979:9:37"
              }
            ],
            "name": "setStrike",
            "nameLocation": "3945:9:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14542,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "3963:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14566,
                  "src": "3955:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3955:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3954:15:37"
            },
            "returnParameters": {
              "id": 14546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3989:0:37"
            },
            "scope": 14736,
            "src": "3936:258:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14589,
              "nodeType": "Block",
              "src": "4400:167:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14575,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14569,
                          "src": "4418:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 14576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4426:2:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "4418:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536574746c656d656e7446656550657263656e7461676520697320746f6f2068696768",
                        "id": 14578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4430:37:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68db5f560e1121556839568ce23c996485a908c1b279b9f62286871b1d48ff48",
                          "typeString": "literal_string \"SettlementFeePercentage is too high\""
                        },
                        "value": "SettlementFeePercentage is too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68db5f560e1121556839568ce23c996485a908c1b279b9f62286871b1d48ff48",
                          "typeString": "literal_string \"SettlementFeePercentage is too high\""
                        }
                      ],
                      "id": 14574,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4410:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4410:58:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14580,
                  "nodeType": "ExpressionStatement",
                  "src": "4410:58:37"
                },
                {
                  "expression": {
                    "id": 14583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14581,
                      "name": "settlementFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14329,
                      "src": "4478:23:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14582,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14569,
                      "src": "4504:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4478:31:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14584,
                  "nodeType": "ExpressionStatement",
                  "src": "4478:31:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14586,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14569,
                        "src": "4554:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14585,
                      "name": "UpdateSettlementFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4412,
                      "src": "4524:29:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 14587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4524:36:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14588,
                  "nodeType": "EmitStatement",
                  "src": "4519:41:37"
                }
              ]
            },
            "documentation": {
              "id": 14567,
              "nodeType": "StructuredDocumentation",
              "src": "4200:125:37",
              "text": " @notice Used for adjusting the settlement fee percentage\n @param value New Settlement Fee Percentage"
            },
            "functionSelector": "1ec3ad1d",
            "id": 14590,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14572,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14571,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "4390:9:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "4390:9:37"
              }
            ],
            "name": "setSettlementFeePercentage",
            "nameLocation": "4339:26:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14569,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "4374:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14590,
                  "src": "4366:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14568,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4366:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4365:15:37"
            },
            "returnParameters": {
              "id": 14573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4400:0:37"
            },
            "scope": 14736,
            "src": "4330:237:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14621,
              "nodeType": "Block",
              "src": "4778:165:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 14601,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14593,
                              "src": "4804:9:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4796:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14599,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4796:7:37",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4796:18:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4826:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4818:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14603,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4818:7:37",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4818:10:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4796:32:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14598,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4788:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4788:41:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14609,
                  "nodeType": "ExpressionStatement",
                  "src": "4788:41:37"
                },
                {
                  "expression": {
                    "id": 14612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14610,
                      "name": "settlementFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14343,
                      "src": "4839:22:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14611,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14593,
                      "src": "4864:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4839:34:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14613,
                  "nodeType": "ExpressionStatement",
                  "src": "4839:34:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 14617,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14593,
                            "src": "4925:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 14616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4917:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 14615,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4917:7:37",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 14618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4917:18:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14614,
                      "name": "UpdateSettlementFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4416,
                      "src": "4888:28:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 14619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4888:48:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14620,
                  "nodeType": "EmitStatement",
                  "src": "4883:53:37"
                }
              ]
            },
            "documentation": {
              "id": 14591,
              "nodeType": "StructuredDocumentation",
              "src": "4573:127:37",
              "text": " @notice Used for changing settlementFeeRecipient\n @param recipient New settlementFee recipient address"
            },
            "functionSelector": "96350a85",
            "id": 14622,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14596,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14595,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "4768:9:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "4768:9:37"
              }
            ],
            "name": "setSettlementFeeRecipient",
            "nameLocation": "4714:25:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14593,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4748:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14622,
                  "src": "4740:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14592,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4740:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4739:19:37"
            },
            "returnParameters": {
              "id": 14597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4778:0:37"
            },
            "scope": 14736,
            "src": "4705:238:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14645,
              "nodeType": "Block",
              "src": "5140:160:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14631,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14625,
                          "src": "5158:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 14632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5167:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "5158:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e6746656550657263656e7461676520697320746f6f2068696768",
                        "id": 14634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5172:34:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4b1c7901206557d81400f1c220be507688798c0917d45d32e4c87834d6ce2686",
                          "typeString": "literal_string \"StakingFeePercentage is too high\""
                        },
                        "value": "StakingFeePercentage is too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4b1c7901206557d81400f1c220be507688798c0917d45d32e4c87834d6ce2686",
                          "typeString": "literal_string \"StakingFeePercentage is too high\""
                        }
                      ],
                      "id": 14630,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5150:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5150:57:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14636,
                  "nodeType": "ExpressionStatement",
                  "src": "5150:57:37"
                },
                {
                  "expression": {
                    "id": 14639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14637,
                      "name": "stakingFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14332,
                      "src": "5217:20:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14638,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14625,
                      "src": "5240:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5217:28:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14640,
                  "nodeType": "ExpressionStatement",
                  "src": "5217:28:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14642,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14625,
                        "src": "5287:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14641,
                      "name": "UpdateStakingFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4420,
                      "src": "5260:26:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 14643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5260:33:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14644,
                  "nodeType": "EmitStatement",
                  "src": "5255:38:37"
                }
              ]
            },
            "documentation": {
              "id": 14623,
              "nodeType": "StructuredDocumentation",
              "src": "4949:119:37",
              "text": " @notice Used for adjusting the staking fee percentage\n @param value New Staking Fee Percentage"
            },
            "functionSelector": "180acf6e",
            "id": 14646,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14628,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14627,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "5130:9:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "5130:9:37"
              }
            ],
            "name": "setStakingFeePercentage",
            "nameLocation": "5082:23:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14625,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "5114:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14646,
                  "src": "5106:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14624,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5106:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5105:15:37"
            },
            "returnParameters": {
              "id": 14629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5140:0:37"
            },
            "scope": 14736,
            "src": "5073:227:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14669,
              "nodeType": "Block",
              "src": "5509:172:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14655,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14649,
                          "src": "5527:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 14656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5536:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "5527:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566657272616c52657761726450657263656e7461676520697320746f6f2068696768",
                        "id": 14658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5541:38:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1da31f3e92683ccf307f76a6e644c62e20ad864159c618e57b4cedda250113b",
                          "typeString": "literal_string \"ReferralRewardPercentage is too high\""
                        },
                        "value": "ReferralRewardPercentage is too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1da31f3e92683ccf307f76a6e644c62e20ad864159c618e57b4cedda250113b",
                          "typeString": "literal_string \"ReferralRewardPercentage is too high\""
                        }
                      ],
                      "id": 14654,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5519:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5519:61:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14660,
                  "nodeType": "ExpressionStatement",
                  "src": "5519:61:37"
                },
                {
                  "expression": {
                    "id": 14663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14661,
                      "name": "referralRewardPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14335,
                      "src": "5590:24:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14662,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14649,
                      "src": "5617:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5590:32:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14664,
                  "nodeType": "ExpressionStatement",
                  "src": "5590:32:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14666,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14649,
                        "src": "5668:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14665,
                      "name": "UpdateReferralRewardPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4424,
                      "src": "5637:30:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 14667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5637:37:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14668,
                  "nodeType": "EmitStatement",
                  "src": "5632:42:37"
                }
              ]
            },
            "documentation": {
              "id": 14647,
              "nodeType": "StructuredDocumentation",
              "src": "5306:127:37",
              "text": " @notice Used for adjusting the referral reward percentage\n @param value New Referral Reward Percentage"
            },
            "functionSelector": "cedcc6da",
            "id": 14670,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14652,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14651,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "5499:9:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "5499:9:37"
              }
            ],
            "name": "setReferralRewardPercentage",
            "nameLocation": "5447:27:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14649,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "5483:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14670,
                  "src": "5475:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14648,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5475:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5474:15:37"
            },
            "returnParameters": {
              "id": 14653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5509:0:37"
            },
            "scope": 14736,
            "src": "5438:243:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14697,
              "nodeType": "Block",
              "src": "5899:168:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3530",
                            "id": 14679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5917:2:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            },
                            "value": "50"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 14680,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14673,
                            "src": "5923:5:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5917:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 14682,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14673,
                            "src": "5932:5:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 14683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5941:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "5932:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5917:27:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77726f6e672076616c7565",
                        "id": 14686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5946:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7de3d80ebd6048d4e9c1f046c51b626b3a2eba87a2525845afff65fe89a8b494",
                          "typeString": "literal_string \"wrong value\""
                        },
                        "value": "wrong value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7de3d80ebd6048d4e9c1f046c51b626b3a2eba87a2525845afff65fe89a8b494",
                          "typeString": "literal_string \"wrong value\""
                        }
                      ],
                      "id": 14678,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5909:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5909:51:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14688,
                  "nodeType": "ExpressionStatement",
                  "src": "5909:51:37"
                },
                {
                  "expression": {
                    "id": 14691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14689,
                      "name": "optionCollateralizationRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14326,
                      "src": "5970:28:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14690,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14673,
                      "src": "6001:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5970:36:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14692,
                  "nodeType": "ExpressionStatement",
                  "src": "5970:36:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14694,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14673,
                        "src": "6054:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14693,
                      "name": "UpdateOptionCollaterizationRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4428,
                      "src": "6021:32:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 14695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6021:39:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14696,
                  "nodeType": "EmitStatement",
                  "src": "6016:44:37"
                }
              ]
            },
            "documentation": {
              "id": 14671,
              "nodeType": "StructuredDocumentation",
              "src": "5687:134:37",
              "text": " @notice Used for changing option collateralization ratio\n @param value New optionCollateralizationRatio value"
            },
            "functionSelector": "e2bef754",
            "id": 14698,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14676,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14675,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "5889:9:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "5889:9:37"
              }
            ],
            "name": "setOptionCollaterizationRatio",
            "nameLocation": "5835:29:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14673,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "5873:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14698,
                  "src": "5865:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5865:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5864:15:37"
            },
            "returnParameters": {
              "id": 14677,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5899:0:37"
            },
            "scope": 14736,
            "src": "5826:241:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14721,
              "nodeType": "Block",
              "src": "6273:146:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14707,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14701,
                          "src": "6291:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 14708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6300:2:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "6291:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77726f6e672076616c7565",
                        "id": 14710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6304:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7de3d80ebd6048d4e9c1f046c51b626b3a2eba87a2525845afff65fe89a8b494",
                          "typeString": "literal_string \"wrong value\""
                        },
                        "value": "wrong value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7de3d80ebd6048d4e9c1f046c51b626b3a2eba87a2525845afff65fe89a8b494",
                          "typeString": "literal_string \"wrong value\""
                        }
                      ],
                      "id": 14706,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6283:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6283:35:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14712,
                  "nodeType": "ExpressionStatement",
                  "src": "6283:35:37"
                },
                {
                  "expression": {
                    "id": 14715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14713,
                      "name": "nftSaleRoyaltyPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14338,
                      "src": "6328:24:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14714,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14701,
                      "src": "6355:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6328:32:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14716,
                  "nodeType": "ExpressionStatement",
                  "src": "6328:32:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14718,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14701,
                        "src": "6406:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14717,
                      "name": "UpdateNFTSaleRoyaltyPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4432,
                      "src": "6375:30:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 14719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6375:37:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14720,
                  "nodeType": "EmitStatement",
                  "src": "6370:42:37"
                }
              ]
            },
            "documentation": {
              "id": 14699,
              "nodeType": "StructuredDocumentation",
              "src": "6073:124:37",
              "text": " @notice Used for changing nftSaleRoyaltyPercentage\n @param value New nftSaleRoyaltyPercentage value"
            },
            "functionSelector": "5cb6bc81",
            "id": 14722,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14704,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14703,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "6263:9:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "6263:9:37"
              }
            ],
            "name": "setNFTSaleRoyaltyPercentage",
            "nameLocation": "6211:27:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14701,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "6247:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14722,
                  "src": "6239:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14700,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6239:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6238:15:37"
            },
            "returnParameters": {
              "id": 14705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6273:0:37"
            },
            "scope": 14736,
            "src": "6202:217:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14734,
              "nodeType": "Block",
              "src": "6605:40:37",
              "statements": [
                {
                  "expression": {
                    "id": 14732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14730,
                      "name": "utilizationRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14346,
                      "src": "6615:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14731,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14725,
                      "src": "6633:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6615:23:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14733,
                  "nodeType": "ExpressionStatement",
                  "src": "6615:23:37"
                }
              ]
            },
            "documentation": {
              "id": 14723,
              "nodeType": "StructuredDocumentation",
              "src": "6425:113:37",
              "text": " @notice Used for updating utilizationRate value\n @param value New utilizationRate value*"
            },
            "functionSelector": "40774ff6",
            "id": 14735,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14728,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14727,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "6595:9:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "6595:9:37"
              }
            ],
            "name": "setUtilizationRate",
            "nameLocation": "6552:18:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14725,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "6579:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14735,
                  "src": "6571:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6571:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6570:15:37"
            },
            "returnParameters": {
              "id": 14729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6605:0:37"
            },
            "scope": 14736,
            "src": "6543:102:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 14737,
        "src": "283:6364:37",
        "usedErrors": []
      }
    ],
    "src": "0:6648:37"
  },
  "bytecode": "",
  "bytecodeSha1": "c5caffd6b8bbdbdd61e7c5b40264ecbb63b42b69",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 1
    },
    "version": "0.8.4+commit.c7e474f2"
  },
  "contractName": "OptionConfig",
  "coverageMap": {
    "branches": {
      "15": {},
      "2": {
        "Context._msgSender": {
          "63": [
            1185,
            1208,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "62": [
            1934,
            1956,
            true
          ]
        }
      },
      "26": {},
      "37": {
        "OptionConfig.checkParams": {
          "48": [
            1996,
            2040,
            true
          ],
          "49": [
            2060,
            2103,
            true
          ],
          "50": [
            2164,
            2180,
            true
          ],
          "51": [
            2222,
            2239,
            true
          ],
          "52": [
            2280,
            2298,
            true
          ],
          "53": [
            2350,
            2370,
            true
          ]
        },
        "OptionConfig.setImpliedVolRate": {
          "57": [
            3478,
            3490,
            true
          ]
        },
        "OptionConfig.setMaxPeriod": {
          "56": [
            2584,
            2602,
            true
          ]
        },
        "OptionConfig.setNFTSaleRoyaltyPercentage": {
          "47": [
            6291,
            6302,
            true
          ]
        },
        "OptionConfig.setOptionCollaterizationRatio": {
          "59": [
            5917,
            5928,
            false
          ],
          "60": [
            5932,
            5944,
            true
          ]
        },
        "OptionConfig.setOptionSizePerBlockLimitPercent": {
          "61": [
            3033,
            3044,
            true
          ]
        },
        "OptionConfig.setReferralRewardPercentage": {
          "58": [
            5527,
            5539,
            true
          ]
        },
        "OptionConfig.setSettlementFeePercentage": {
          "46": [
            4418,
            4428,
            true
          ]
        },
        "OptionConfig.setSettlementFeeRecipient": {
          "54": [
            4796,
            4828,
            true
          ]
        },
        "OptionConfig.setStakingFeePercentage": {
          "45": [
            5158,
            5170,
            true
          ]
        },
        "OptionConfig.setStrike": {
          "55": [
            4020,
            4056,
            true
          ]
        }
      },
      "4": {},
      "41": {},
      "5": {},
      "6": {}
    },
    "statements": {
      "15": {
        "Context._msgSender": {
          "0": [
            659,
            676
          ]
        }
      },
      "2": {
        "Ownable._setOwner": {
          "43": [
            2131,
            2148
          ],
          "44": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "17": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "16": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "39": [
            1926,
            1999
          ],
          "40": [
            2009,
            2028
          ]
        }
      },
      "26": {},
      "37": {
        "OptionConfig.checkParams": {
          "11": [
            1975,
            2146
          ],
          "12": [
            2156,
            2204
          ],
          "13": [
            2214,
            2262
          ],
          "14": [
            2272,
            2332
          ],
          "15": [
            2342,
            2386
          ]
        },
        "OptionConfig.setImpliedVolRate": {
          "27": [
            3470,
            3528
          ],
          "28": [
            3538,
            3560
          ],
          "29": [
            3570,
            3605
          ]
        },
        "OptionConfig.setMaxPeriod": {
          "24": [
            2563,
            2672
          ],
          "25": [
            2682,
            2699
          ],
          "26": [
            2709,
            2736
          ]
        },
        "OptionConfig.setNFTSaleRoyaltyPercentage": {
          "8": [
            6283,
            6318
          ],
          "9": [
            6328,
            6360
          ],
          "10": [
            6370,
            6412
          ]
        },
        "OptionConfig.setOptionCollaterizationRatio": {
          "33": [
            5909,
            5960
          ],
          "34": [
            5970,
            6006
          ],
          "35": [
            6016,
            6060
          ]
        },
        "OptionConfig.setOptionSizePerBlockLimitPercent": {
          "36": [
            3012,
            3126
          ],
          "37": [
            3136,
            3174
          ],
          "38": [
            3184,
            3232
          ]
        },
        "OptionConfig.setReferralRewardPercentage": {
          "30": [
            5519,
            5580
          ],
          "31": [
            5590,
            5622
          ],
          "32": [
            5632,
            5674
          ]
        },
        "OptionConfig.setSettlementFeePercentage": {
          "4": [
            4410,
            4468
          ],
          "5": [
            4478,
            4509
          ],
          "6": [
            4519,
            4560
          ]
        },
        "OptionConfig.setSettlementFeeRecipient": {
          "18": [
            4788,
            4829
          ],
          "19": [
            4839,
            4873
          ],
          "20": [
            4883,
            4936
          ]
        },
        "OptionConfig.setStakingFeePercentage": {
          "1": [
            5150,
            5207
          ],
          "2": [
            5217,
            5245
          ],
          "3": [
            5255,
            5293
          ]
        },
        "OptionConfig.setStrike": {
          "21": [
            3999,
            4124
          ],
          "22": [
            4134,
            4153
          ],
          "23": [
            4163,
            4187
          ]
        },
        "OptionConfig.setTradingPermission": {
          "41": [
            3734,
            3771
          ],
          "42": [
            3781,
            3825
          ]
        },
        "OptionConfig.setUtilizationRate": {
          "7": [
            6615,
            6638
          ]
        }
      },
      "4": {},
      "41": {},
      "5": {},
      "6": {}
    }
  },
  "dependencies": [
    "BufferIBFRPoolV2",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC20",
    "IBufferOptions",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20Metadata",
    "IOptionsConfig",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Ownable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "283:6364:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;961:28;;;;;-1:-1:-1;;;;;961:28:37;;;;;;;;;;:::i;:::-;;;;;;;;5073:227;;;;;;:::i;:::-;;:::i;:::-;;747:37;;;;;-1:-1:-1;;;;;747:37:37;;;354:29;;;;;;;;;8278:25:48;;;8266:2;8251:18;354:29:37;8233:76:48;4330:237:37;;;;;;:::i;:::-;;:::i;389:49::-;;;;;;6543:102;;;;;;:::i;:::-;;:::i;865:35::-;;;;;;6202:217;;;;;;:::i;:::-;;:::i;833:26::-;;;;;;1751:642;;;;;;:::i;:::-;;:::i;790:37::-;;;;;;1605:92:2;;;:::i;906:49:37:-;;;;;;973:85:2;;;:::i;597:43:37:-;;;;;;4705:238;;;;;;:::i;:::-;;:::i;3936:258::-;;;;;;:::i;:::-;;:::i;2497:246::-;;;;;;:::i;:::-;;:::i;551:40::-;;;;;;3399:213;;;;;;:::i;:::-;;:::i;5438:243::-;;;;;;:::i;:::-;;:::i;5826:241::-;;;;;;:::i;:::-;;:::i;2905:334::-;;;;;;:::i;:::-;;:::i;646:43::-;;;;;;995:48;;;;;-1:-1:-1;;;995:48:37;;;;;;;;;;;;;:::i;1846:189:2:-;;;;;;:::i;:::-;;:::i;444:44:37:-;;;;;;3618:214;;;;;;:::i;:::-;;:::i;5073:227::-;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;;;;;;;;;5167:3:37::1;5158:5;:12;;5150:57;;;::::0;-1:-1:-1;;;5150:57:37;;3484:2:48;5150:57:37::1;::::0;::::1;3466:21:48::0;;;3503:18;;;3496:30;3562:34;3542:18;;;3535:62;3614:18;;5150:57:37::1;3456:182:48::0;5150:57:37::1;5217:20;:28:::0;;;5260:33:::1;::::0;8278:25:48;;;5260:33:37::1;::::0;8266:2:48;8251:18;5260:33:37::1;;;;;;;;5073:227:::0;:::o;4330:237::-;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;4426:2:37::1;4418:5;:10;4410:58;;;::::0;-1:-1:-1;;;4410:58:37;;4531:2:48;4410:58:37::1;::::0;::::1;4513:21:48::0;4570:2;4550:18;;;4543:30;4609:34;4589:18;;;4582:62;-1:-1:-1;;;4660:18:48;;;4653:33;4703:19;;4410:58:37::1;4503:225:48::0;4410:58:37::1;4478:23;:31:::0;;;4524:36:::1;::::0;8278:25:48;;;4524:36:37::1;::::0;8266:2:48;8251:18;4524:36:37::1;8233:76:48::0;6543:102:37;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;6615:15:37::1;:23:::0;6543:102::o;6202:217::-;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;6300:2:37::1;6291:5;:11;;6283:35;;;;-1:-1:-1::0;;;6283:35:37::1;;;;;;;:::i;:::-;6328:24;:32:::0;;;6375:37:::1;::::0;8278:25:48;;;6375:37:37::1;::::0;8266:2:48;8251:18;6375:37:37::1;8233:76:48::0;1751:642:37;2010:30;1996:10;:44;;;;;;-1:-1:-1;;;1996:44:37;;;;;;;;;;:107;;;-1:-1:-1;2074:29:37;2060:10;:43;;;;;;-1:-1:-1;;;2060:43:37;;;;;;;;;;1996:107;1975:171;;;;-1:-1:-1;;;1975:171:37;;4185:2:48;1975:171:37;;;4167:21:48;4224:2;4204:18;;;4197:30;-1:-1:-1;;;4243:18:48;;;4236:47;4300:18;;1975:171:37;4157:167:48;1975:171:37;2174:6;2164;:16;;2156:48;;;;-1:-1:-1;;;2156:48:37;;6801:2:48;2156:48:37;;;6783:21:48;6840:2;6820:18;;;6813:30;-1:-1:-1;;;6859:18:48;;;6852:49;6918:18;;2156:48:37;6773:169:48;2156:48:37;2232:7;2222:6;:17;;2214:48;;;;-1:-1:-1;;;2214:48:37;;7149:2:48;2214:48:37;;;7131:21:48;7188:2;7168:18;;;7161:30;-1:-1:-1;;;7207:18:48;;;7200:48;7265:18;;2214:48:37;7121:168:48;2214:48:37;2289:9;2280:6;:18;2272:60;;;;-1:-1:-1;;;2272:60:37;;5636:2:48;2272:60:37;;;5618:21:48;5675:2;5655:18;;;5648:30;5714:31;5694:18;;;5687:59;5763:18;;2272:60:37;5608:179:48;2272:60:37;2362:8;2350;:20;;2342:44;;;;-1:-1:-1;;;2342:44:37;;3845:2:48;2342:44:37;;;3827:21:48;3884:2;3864:18;;;3857:30;-1:-1:-1;;;3903:18:48;;;3896:41;3954:18;;2342:44:37;3817:161:48;2342:44:37;1751:642;;;;;;:::o;1605:92:2:-;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;973:85::-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:2;;973:85::o;4705:238:37:-;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;4796:32:37;::::1;4788:41;;;::::0;::::1;;4839:22;:34:::0;;-1:-1:-1;;;;;;4839:34:37::1;-1:-1:-1::0;;;;;4839:34:37;::::1;;::::0;;4888:48:::1;::::0;::::1;::::0;::::1;::::0;4839:34;;4888:48:::1;:::i;3936:258::-:0;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;4038:4:37::1;;;;;;;;;-1:-1:-1::0;;;;;4038:4:37::1;-1:-1:-1::0;;;;;4038:16:37::1;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4020:15;:36;3999:125;;;::::0;-1:-1:-1;;;3999:125:37;;2666:2:48;3999:125:37::1;::::0;::::1;2648:21:48::0;2705:2;2685:18;;;2678:30;2744:34;2724:18;;;2717:62;-1:-1:-1;;;2795:18:48;;;2788:40;2845:19;;3999:125:37::1;2638:232:48::0;3999:125:37::1;4134:11;:19:::0;;;4168::::1;::::0;8278:25:48;;;4168:19:37::1;::::0;8266:2:48;8251:18;4168:19:37::1;8233:76:48::0;2497:246:37;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;2593:9:37::1;2584:5;:18;;2563:109;;;::::0;-1:-1:-1;;;2563:109:37;;7496:2:48;2563:109:37::1;::::0;::::1;7478:21:48::0;7535:2;7515:18;;;7508:30;7574:34;7554:18;;;7547:62;-1:-1:-1;;;7625:18:48;;;7618:42;7677:19;;2563:109:37::1;7468:234:48::0;2563:109:37::1;2682:9;:17:::0;;;2714:22:::1;::::0;8278:25:48;;;2714:22:37::1;::::0;8266:2:48;8251:18;2714:22:37::1;8233:76:48::0;3399:213:37;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;3487:3:37::1;3478:5;:12;;3470:58;;;::::0;-1:-1:-1;;;3470:58:37;;6399:2:48;3470:58:37::1;::::0;::::1;6381:21:48::0;6438:2;6418:18;;;6411:30;6477:34;6457:18;;;6450:62;-1:-1:-1;;;6528:18:48;;;6521:31;6569:19;;3470:58:37::1;6371:223:48::0;3470:58:37::1;3538:14;:22:::0;;;3575:30:::1;::::0;8278:25:48;;;3575:30:37::1;::::0;8266:2:48;8251:18;3575:30:37::1;8233:76:48::0;5438:243:37;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;5536:3:37::1;5527:5;:12;;5519:61;;;::::0;-1:-1:-1;;;5519:61:37;;5994:2:48;5519:61:37::1;::::0;::::1;5976:21:48::0;6033:2;6013:18;;;6006:30;6072:34;6052:18;;;6045:62;-1:-1:-1;;;6123:18:48;;;6116:34;6167:19;;5519:61:37::1;5966:226:48::0;5519:61:37::1;5590:24;:32:::0;;;5637:37:::1;::::0;8278:25:48;;;5637:37:37::1;::::0;8266:2:48;8251:18;5637:37:37::1;8233:76:48::0;5826:241:37;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;5923:5:37::1;5917:2;:11;;:27;;;;;5941:3;5932:5;:12;;5917:27;5909:51;;;;-1:-1:-1::0;;;5909:51:37::1;;;;;;;:::i;:::-;5970:28;:36:::0;;;6021:39:::1;::::0;8278:25:48;;;6021:39:37::1;::::0;8266:2:48;8251:18;6021:39:37::1;8233:76:48::0;2905:334:37;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;3041:3:37::1;3033:5;:11;3012:114;;;::::0;-1:-1:-1;;;3012:114:37;;7909:2:48;3012:114:37::1;::::0;::::1;7891:21:48::0;7948:2;7928:18;;;7921:30;7987:34;7967:18;;;7960:62;-1:-1:-1;;;8038:18:48;;;8031:54;8102:19;;3012:114:37::1;7881:246:48::0;3012:114:37::1;3136:30;:38:::0;;;3189:43:::1;::::0;8278:25:48;;;3189:43:37::1;::::0;8266:2:48;8251:18;3189:43:37::1;8233:76:48::0;1846:189:2;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:2;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:2;;3077:2:48;1926:73:2::1;::::0;::::1;3059:21:48::0;3116:2;3096:18;;;3089:30;3155:34;3135:18;;;3128:62;-1:-1:-1;;;3206:18:48;;;3199:36;3252:19;;1926:73:2::1;3049:228:48::0;1926:73:2::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;3618:214:37:-;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;3734:20:37::1;:37:::0;;3757:14;;3734:20;-1:-1:-1;;;;3734:37:37::1;-1:-1:-1::0;;;3757:14:37;3734:37:::1;::::0;::::1;;;;-1:-1:-1::0;;;3734:37:37::1;;;;;;;;;;;;;;3786:39;3810:14;3786:39;;;;;;:::i;2041:169:2:-:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;14:306:48:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:48;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:48:o;325:634::-;444:6;452;460;468;476;484;537:3;525:9;516:7;512:23;508:33;505:2;;;559:6;551;544:22;505:2;603:9;590:23;642:1;635:5;632:12;622:2;;663:6;655;648:22;622:2;691:5;743:2;728:18;;715:32;;-1:-1:-1;794:2:48;779:18;;766:32;;845:2;830:18;;817:32;;-1:-1:-1;896:3:48;881:19;;868:33;;-1:-1:-1;948:3:48;933:19;920:33;;-1:-1:-1;495:464:48;-1:-1:-1;;;495:464:48:o;964:301::-;1048:6;1101:2;1089:9;1080:7;1076:23;1072:32;1069:2;;;1122:6;1114;1107:22;1069:2;1166:9;1153:23;1205:1;1198:5;1195:12;1185:2;;1226:6;1218;1211:22;1270:190;1329:6;1382:2;1370:9;1361:7;1357:23;1353:32;1350:2;;;1403:6;1395;1388:22;1350:2;-1:-1:-1;1431:23:48;;1340:120;-1:-1:-1;1340:120:48:o;1465:194::-;1535:6;1588:2;1576:9;1567:7;1563:23;1559:32;1556:2;;;1609:6;1601;1594:22;1556:2;-1:-1:-1;1637:16:48;;1546:113;-1:-1:-1;1546:113:48:o;1664:203::-;-1:-1:-1;;;;;1828:32:48;;;;1810:51;;1798:2;1783:18;;1765:102::o;2106:353::-;2263:2;2248:18;;2296:1;2285:13;;2275:2;;2341:10;2336:3;2332:20;2329:1;2322:31;2376:4;2373:1;2366:15;2404:4;2401:1;2394:15;2275:2;2428:25;;;2230:229;:::o;4733:335::-;4935:2;4917:21;;;4974:2;4954:18;;;4947:30;-1:-1:-1;;;5008:2:48;4993:18;;4986:41;5059:2;5044:18;;4907:161::o;5073:356::-;5275:2;5257:21;;;5294:18;;;5287:30;5353:34;5348:2;5333:18;;5326:62;5420:2;5405:18;;5247:182::o",
  "language": "Solidity",
  "natspec": {
    "author": "Heisenberg",
    "kind": "dev",
    "methods": {
      "checkParams(uint8,uint256,uint256,uint256,uint256,uint256)": {
        "notice": "Check the validity of the input params",
        "params": {
          "amount": "Option amount",
          "msgValue": "the msg.value given to the Create function",
          "optionType": "Call or Put option type",
          "period": "Option period in seconds (1 days <= period <= 90 days)",
          "strikeFee": "strike fee for the option",
          "totalFee": "total fee for the option"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setImpliedVolRate(uint256)": {
        "notice": "Used for adjusting the options prices while balancing asset's implied volatility rate",
        "params": {
          "value": "New IVRate value"
        }
      },
      "setMaxPeriod(uint256)": {
        "notice": "Used for adjusting the maxPeriod",
        "params": {
          "value": "New maxPeriod"
        }
      },
      "setNFTSaleRoyaltyPercentage(uint256)": {
        "notice": "Used for changing nftSaleRoyaltyPercentage",
        "params": {
          "value": "New nftSaleRoyaltyPercentage value"
        }
      },
      "setOptionCollaterizationRatio(uint256)": {
        "notice": "Used for changing option collateralization ratio",
        "params": {
          "value": "New optionCollateralizationRatio value"
        }
      },
      "setOptionSizePerBlockLimitPercent(uint256)": {
        "notice": "Used for adjusting the option size per block limit percent",
        "params": {
          "value": "New option size per block limit percent value"
        }
      },
      "setReferralRewardPercentage(uint256)": {
        "notice": "Used for adjusting the referral reward percentage",
        "params": {
          "value": "New Referral Reward Percentage"
        }
      },
      "setSettlementFeePercentage(uint256)": {
        "notice": "Used for adjusting the settlement fee percentage",
        "params": {
          "value": "New Settlement Fee Percentage"
        }
      },
      "setSettlementFeeRecipient(address)": {
        "notice": "Used for changing settlementFeeRecipient",
        "params": {
          "recipient": "New settlementFee recipient address"
        }
      },
      "setStakingFeePercentage(uint256)": {
        "notice": "Used for adjusting the staking fee percentage",
        "params": {
          "value": "New Staking Fee Percentage"
        }
      },
      "setStrike(uint256)": {
        "notice": "Used for changing strike",
        "params": {
          "value": "New fixedStrike value"
        }
      },
      "setUtilizationRate(uint256)": {
        "notice": "Used for updating utilizationRate value",
        "params": {
          "value": "New utilizationRate value*"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "notice": "Buffer BNB Options Contract",
    "title": "Buffer BNB Bidirectional (Call and Put) Options",
    "version": 1
  },
  "offset": [
    283,
    6647
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x15F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16F0115B EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x180ACF6E EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x181731DC EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x18F88E5B EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x1EC3AD1D EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x302CE651 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x40774FF6 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x49B9A67F EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x5CB6BC81 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x5EE97101 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x64AC2655 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x6C321C8A EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x71BF7E25 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x920A253E EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x96350A85 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xA08D874C EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xAE1C9FC1 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xCA535C3B EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xCEAEEBA9 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xCEDCC6DA EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xE2BEF754 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xE97B86E7 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xED0974C7 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xF12A0466 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xF3FA3495 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xFF0B025D EQ PUSH2 0x332 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH2 0x177 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xF2B JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x177 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1BE PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x184 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0xF2B JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH2 0x1BE PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x1F6 CALLDATASIZE PUSH1 0x4 PUSH2 0xF2B JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x1BE PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0xF2B JUMP JUMPDEST PUSH2 0x4FE JUMP JUMPDEST PUSH2 0x1BE PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xEBE JUMP JUMPDEST PUSH2 0x583 JUMP JUMPDEST PUSH2 0x1BE PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x736 JUMP JUMPDEST PUSH2 0x1BE PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x1BE PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x780 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0xF2B JUMP JUMPDEST PUSH2 0x80D JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0xF2B JUMP JUMPDEST PUSH2 0x958 JUMP JUMPDEST PUSH2 0x1BE PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0xF2B JUMP JUMPDEST PUSH2 0xA23 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x2C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xF2B JUMP JUMPDEST PUSH2 0xAE2 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xF2B JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF2B JUMP JUMPDEST PUSH2 0xC35 JUMP JUMPDEST PUSH2 0x1BE PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x309 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0xF6F JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x324 CALLDATASIZE PUSH1 0x4 PUSH2 0xE90 JUMP JUMPDEST PUSH2 0xD0A JUMP JUMPDEST PUSH2 0x1BE PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x340 CALLDATASIZE PUSH1 0x4 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0xDAA JUMP JUMPDEST CALLER PUSH2 0x34E PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x37D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x3CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E6746656550657263656E7461676520697320746F6F2068696768 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x374 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x7AB3467FB06D3D8716698BECE5F22A665374115BD3D0A43D6E11B76FCEC1DFBB SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH2 0x413 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x439 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x14 DUP2 LT PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536574746C656D656E7446656550657263656E7461676520697320746F6F2068 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0xD2CED PUSH1 0xEB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x374 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x803E7BBAEBADBDA418EC6DD788E57C29C1CF3FAEB7E139D21247E624C9E6D119 SWAP1 PUSH1 0x20 ADD PUSH2 0x3FF JUMP JUMPDEST CALLER PUSH2 0x4D3 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST CALLER PUSH2 0x507 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x52D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x54E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x8FB679AA627958FC7143B0829745D581E0F5E98599847E7097749CE89D8C88E0 SWAP1 PUSH1 0x20 ADD PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x2 DUP7 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5A5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ DUP1 PUSH2 0x5D0 JUMPI POP PUSH1 0x1 DUP7 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5CE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ JUMPDEST PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x57726F6E67206F7074696F6E2074797065 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x374 JUMP JUMPDEST PUSH3 0x15180 DUP6 LT ISZERO PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x14195C9A5BD9081A5CC81D1BDBC81CDA1BDC9D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x374 JUMP JUMPDEST PUSH3 0x76A700 DUP6 GT ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x506572696F6420697320746F6F206C6F6E67 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x374 JUMP JUMPDEST DUP3 DUP5 GT PUSH2 0x6F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x507269636520646966666572656E636520697320746F6F206C61726765000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x374 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x57726F6E672076616C7565 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x374 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x73F PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x765 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0x76F PUSH1 0x0 PUSH2 0xE40 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH2 0x789 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x92F6C1E8DF34C666F737A2407B4E63D3A77F133B69FDF70F01B5E3B8072551F6 SWAP1 PUSH2 0x3FF SWAP1 DUP4 SWAP1 PUSH2 0xF5B JUMP JUMPDEST CALLER PUSH2 0x816 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x83C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA834069B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x88A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x89E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C2 SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x923 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E2774206368616E676520737472696B65206265666F7265207468652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x787069727920656E6473 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x374 JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xD7120AE25FFB24B73B21C585F172272CCE904BDD03D819732ECC914F4CE49CF0 SWAP1 PUSH1 0x20 ADD PUSH2 0x3FF JUMP JUMPDEST CALLER PUSH2 0x961 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x987 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0x12C DUP2 LT ISZERO PUSH2 0x9EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178506572696F64206E6565647320746F2062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x616E2035206D696E75746573 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x374 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x967EEAC7CCAA5705556859408DDB017BAC37AFA817DD8FF3D27CF4EA1171A66 SWAP1 PUSH1 0x20 ADD PUSH2 0x3FF JUMP JUMPDEST CALLER PUSH2 0xA2C PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0xAAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496D706C696564566F6C52617465206C696D697420697320746F6F20736D616C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x374 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x3E0C59249D1A9C5F08383BDBDFBC45517A71B76E72223AE649C576E4D1258696 SWAP1 PUSH1 0x20 ADD PUSH2 0x3FF JUMP JUMPDEST CALLER PUSH2 0xAEB PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0xB6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x526566657272616C52657761726450657263656E7461676520697320746F6F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0xD0D2CED PUSH1 0xE3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x374 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xC089466003B94FFB5787D1D1AFFE1C743F8CA63F949D2296CFA4D7986601ADE SWAP1 PUSH1 0x20 ADD PUSH2 0x3FF JUMP JUMPDEST CALLER PUSH2 0xBAC PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0xFBC JUMP JUMPDEST DUP1 PUSH1 0x32 GT ISZERO DUP1 ISZERO PUSH2 0xBE4 JUMPI POP PUSH1 0x64 DUP2 GT ISZERO JUMPDEST PUSH2 0xC00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x66B26A0DFAA5FC9F5C7432381208AA4BD7F13F4489299B52F09F1AF7669BB93B SWAP1 PUSH1 0x20 ADD PUSH2 0x3FF JUMP JUMPDEST CALLER PUSH2 0xC3E PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x64 DUP2 LT PUSH2 0xCD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7074696F6E53697A65506572426C6F636B4C696D697450657263656E74206E PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x6565647320746F206265206C657373207468616E2031303 PUSH1 0x44 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x374 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x5CA84F51F1B091675330ABC6E5665566A97744B04121DABC6BDA4B3D3503945F SWAP1 PUSH1 0x20 ADD PUSH2 0x3FF JUMP JUMPDEST CALLER PUSH2 0xD13 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x374 JUMP JUMPDEST PUSH2 0xDA7 DUP2 PUSH2 0xE40 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 0xDB3 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xE0C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x75E98309D621801FC34E8CE7FA6EAA10B82599A58639171FE865E39BB4728D48 DUP2 PUSH1 0x40 MLOAD PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEB7 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xED6 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0xEE4 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP9 PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP9 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP8 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP8 POP PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH1 0xA0 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0xEB7 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF3C JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF54 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x4 DUP4 LT PUSH2 0xF91 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x77726F6E672076616C7565 PUSH1 0xA8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xBD SSTORE ORIGIN CODECOPY XOR STOP DUP7 LOG1 SWAP2 DUP16 0x4F 0x27 PUSH31 0xA8A7776EC49E962921AF82B736ED034D086964736F6C634300080400330000 ",
  "pcMap": {
    "0": {
      "offset": [
        283,
        6647
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "CALLVALUE",
      "path": "37"
    },
    "6": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "7": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "8": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "12": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "REVERT",
      "path": "37"
    },
    "16": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "17": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "POP",
      "path": "37"
    },
    "18": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "21": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "LT",
      "path": "37"
    },
    "22": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x15F"
    },
    "25": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "26": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "29": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "SHR",
      "path": "37"
    },
    "32": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "33": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x16F0115B"
    },
    "38": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "39": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x164"
    },
    "42": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "43": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "44": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x180ACF6E"
    },
    "49": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "50": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x18D"
    },
    "53": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "54": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "55": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x181731DC"
    },
    "60": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "61": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1A2"
    },
    "64": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "65": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "66": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x18F88E5B"
    },
    "71": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "72": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1B5"
    },
    "75": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "76": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "77": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x1EC3AD1D"
    },
    "82": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "83": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1CC"
    },
    "86": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "87": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "88": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x302CE651"
    },
    "93": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "94": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1DF"
    },
    "97": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "98": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "99": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x40774FF6"
    },
    "104": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "105": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1E8"
    },
    "108": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "109": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "110": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x49B9A67F"
    },
    "115": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "116": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1FB"
    },
    "119": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "120": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "121": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x5CB6BC81"
    },
    "126": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "127": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x204"
    },
    "130": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "131": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "132": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x5EE97101"
    },
    "137": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "138": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x217"
    },
    "141": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "142": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "143": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x64AC2655"
    },
    "148": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "149": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x220"
    },
    "152": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "153": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "154": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x6C321C8A"
    },
    "159": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "160": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x233"
    },
    "163": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "164": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "165": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x715018A6"
    },
    "170": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "171": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x23C"
    },
    "174": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "175": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "176": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x71BF7E25"
    },
    "181": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "182": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x244"
    },
    "185": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "186": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "187": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x8DA5CB5B"
    },
    "192": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "193": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x24D"
    },
    "196": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "197": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "198": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x920A253E"
    },
    "203": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "204": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x255"
    },
    "207": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "208": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "209": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x96350A85"
    },
    "214": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "215": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x25E"
    },
    "218": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "219": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "220": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xA08D874C"
    },
    "225": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "226": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x271"
    },
    "229": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "230": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "231": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xAE1C9FC1"
    },
    "236": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "237": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x284"
    },
    "240": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "241": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "242": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xCA535C3B"
    },
    "247": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "248": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x297"
    },
    "251": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "252": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "253": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xCEAEEBA9"
    },
    "258": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "259": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2A0"
    },
    "262": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "263": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "264": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xCEDCC6DA"
    },
    "269": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "270": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2B3"
    },
    "273": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "274": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "275": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xE2BEF754"
    },
    "280": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "281": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2C6"
    },
    "284": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "285": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "286": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xE97B86E7"
    },
    "291": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "292": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2D9"
    },
    "295": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "296": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "297": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xED0974C7"
    },
    "302": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "303": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2EC"
    },
    "306": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "307": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "308": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xF12A0466"
    },
    "313": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "314": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2F5"
    },
    "317": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "318": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "319": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xF2FDE38B"
    },
    "324": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "325": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x316"
    },
    "328": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "329": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "330": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xF3FA3495"
    },
    "335": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "336": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x329"
    },
    "339": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "340": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "341": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFF0B025D"
    },
    "346": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "EQ",
      "path": "37"
    },
    "347": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x332"
    },
    "350": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "351": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "352": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "354": {
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "DUP1",
      "path": "37"
    },
    "355": {
      "first_revert": true,
      "fn": null,
      "offset": [
        283,
        6647
      ],
      "op": "REVERT",
      "path": "37"
    },
    "356": {
      "offset": [
        961,
        989
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "357": {
      "fn": null,
      "offset": [
        961,
        989
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xC"
    },
    "359": {
      "fn": null,
      "offset": [
        961,
        989
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "360": {
      "fn": null,
      "offset": [
        961,
        989
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x177"
    },
    "363": {
      "fn": null,
      "offset": [
        961,
        989
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "370": {
      "op": "SHL"
    },
    "371": {
      "op": "SUB"
    },
    "372": {
      "offset": [
        961,
        989
      ],
      "op": "AND",
      "path": "37"
    },
    "373": {
      "fn": null,
      "offset": [
        961,
        989
      ],
      "op": "DUP2",
      "path": "37"
    },
    "374": {
      "fn": null,
      "offset": [
        961,
        989
      ],
      "op": "JUMP",
      "path": "37"
    },
    "375": {
      "fn": null,
      "offset": [
        961,
        989
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "376": {
      "fn": null,
      "offset": [
        961,
        989
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "378": {
      "fn": null,
      "offset": [
        961,
        989
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "379": {
      "fn": null,
      "offset": [
        961,
        989
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x184"
    },
    "382": {
      "fn": null,
      "offset": [
        961,
        989
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "383": {
      "fn": null,
      "offset": [
        961,
        989
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "384": {
      "fn": null,
      "offset": [
        961,
        989
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF5B"
    },
    "387": {
      "fn": null,
      "jump": "i",
      "offset": [
        961,
        989
      ],
      "op": "JUMP",
      "path": "37"
    },
    "388": {
      "fn": null,
      "offset": [
        961,
        989
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "389": {
      "fn": null,
      "offset": [
        961,
        989
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "391": {
      "fn": null,
      "offset": [
        961,
        989
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "392": {
      "fn": null,
      "offset": [
        961,
        989
      ],
      "op": "DUP1",
      "path": "37"
    },
    "393": {
      "fn": null,
      "offset": [
        961,
        989
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "394": {
      "fn": null,
      "offset": [
        961,
        989
      ],
      "op": "SUB",
      "path": "37"
    },
    "395": {
      "fn": null,
      "offset": [
        961,
        989
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "396": {
      "fn": null,
      "offset": [
        961,
        989
      ],
      "op": "RETURN",
      "path": "37"
    },
    "397": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5073,
        5300
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "398": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5073,
        5300
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1A0"
    },
    "401": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5073,
        5300
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x19B"
    },
    "404": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5073,
        5300
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "405": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5073,
        5300
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "407": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5073,
        5300
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF2B"
    },
    "410": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "jump": "i",
      "offset": [
        5073,
        5300
      ],
      "op": "JUMP",
      "path": "37"
    },
    "411": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5073,
        5300
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "412": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5073,
        5300
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x345"
    },
    "415": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "jump": "i",
      "offset": [
        5073,
        5300
      ],
      "op": "JUMP",
      "path": "37"
    },
    "416": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5073,
        5300
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "417": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5073,
        5300
      ],
      "op": "STOP",
      "path": "37"
    },
    "418": {
      "offset": [
        747,
        784
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "419": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        747,
        784
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x7"
    },
    "421": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        747,
        784
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "422": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        747,
        784
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x177"
    },
    "425": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        747,
        784
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "432": {
      "op": "SHL"
    },
    "433": {
      "op": "SUB"
    },
    "434": {
      "offset": [
        747,
        784
      ],
      "op": "AND",
      "path": "37"
    },
    "435": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        747,
        784
      ],
      "op": "DUP2",
      "path": "37"
    },
    "436": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        747,
        784
      ],
      "op": "JUMP",
      "path": "37"
    },
    "437": {
      "offset": [
        354,
        383
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "438": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        354,
        383
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1BE"
    },
    "441": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        354,
        383
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "443": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        354,
        383
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "444": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        354,
        383
      ],
      "op": "DUP2",
      "path": "37"
    },
    "445": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        354,
        383
      ],
      "op": "JUMP",
      "path": "37"
    },
    "446": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        354,
        383
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "447": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        354,
        383
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "449": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        354,
        383
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "450": {
      "op": "SWAP1"
    },
    "451": {
      "op": "DUP2"
    },
    "452": {
      "op": "MSTORE"
    },
    "453": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "455": {
      "op": "ADD"
    },
    "456": {
      "offset": [
        354,
        383
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x184"
    },
    "459": {
      "op": "JUMP"
    },
    "460": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4330,
        4567
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "461": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4330,
        4567
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1A0"
    },
    "464": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4330,
        4567
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1DA"
    },
    "467": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4330,
        4567
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "468": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4330,
        4567
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "470": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4330,
        4567
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF2B"
    },
    "473": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "jump": "i",
      "offset": [
        4330,
        4567
      ],
      "op": "JUMP",
      "path": "37"
    },
    "474": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4330,
        4567
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "475": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4330,
        4567
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x40A"
    },
    "478": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "jump": "i",
      "offset": [
        4330,
        4567
      ],
      "op": "JUMP",
      "path": "37"
    },
    "479": {
      "offset": [
        389,
        438
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "480": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        389,
        438
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1BE"
    },
    "483": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        389,
        438
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "485": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        389,
        438
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "486": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        389,
        438
      ],
      "op": "DUP2",
      "path": "37"
    },
    "487": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        389,
        438
      ],
      "op": "JUMP",
      "path": "37"
    },
    "488": {
      "fn": "OptionConfig.setUtilizationRate",
      "offset": [
        6543,
        6645
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "489": {
      "fn": "OptionConfig.setUtilizationRate",
      "offset": [
        6543,
        6645
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1A0"
    },
    "492": {
      "fn": "OptionConfig.setUtilizationRate",
      "offset": [
        6543,
        6645
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1F6"
    },
    "495": {
      "fn": "OptionConfig.setUtilizationRate",
      "offset": [
        6543,
        6645
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "496": {
      "fn": "OptionConfig.setUtilizationRate",
      "offset": [
        6543,
        6645
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "498": {
      "fn": "OptionConfig.setUtilizationRate",
      "offset": [
        6543,
        6645
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF2B"
    },
    "501": {
      "fn": "OptionConfig.setUtilizationRate",
      "jump": "i",
      "offset": [
        6543,
        6645
      ],
      "op": "JUMP",
      "path": "37"
    },
    "502": {
      "fn": "OptionConfig.setUtilizationRate",
      "offset": [
        6543,
        6645
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "503": {
      "fn": "OptionConfig.setUtilizationRate",
      "offset": [
        6543,
        6645
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4CA"
    },
    "506": {
      "fn": "OptionConfig.setUtilizationRate",
      "jump": "i",
      "offset": [
        6543,
        6645
      ],
      "op": "JUMP",
      "path": "37"
    },
    "507": {
      "offset": [
        865,
        900
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "508": {
      "fn": "OptionConfig.setUtilizationRate",
      "offset": [
        865,
        900
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1BE"
    },
    "511": {
      "fn": "OptionConfig.setUtilizationRate",
      "offset": [
        865,
        900
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "513": {
      "fn": "OptionConfig.setUtilizationRate",
      "offset": [
        865,
        900
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "514": {
      "fn": "OptionConfig.setUtilizationRate",
      "offset": [
        865,
        900
      ],
      "op": "DUP2",
      "path": "37"
    },
    "515": {
      "fn": "OptionConfig.setUtilizationRate",
      "offset": [
        865,
        900
      ],
      "op": "JUMP",
      "path": "37"
    },
    "516": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6202,
        6419
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "517": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6202,
        6419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1A0"
    },
    "520": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6202,
        6419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x212"
    },
    "523": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6202,
        6419
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "524": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6202,
        6419
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "526": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6202,
        6419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF2B"
    },
    "529": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "jump": "i",
      "offset": [
        6202,
        6419
      ],
      "op": "JUMP",
      "path": "37"
    },
    "530": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6202,
        6419
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "531": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6202,
        6419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4FE"
    },
    "534": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "jump": "i",
      "offset": [
        6202,
        6419
      ],
      "op": "JUMP",
      "path": "37"
    },
    "535": {
      "offset": [
        833,
        859
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "536": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        833,
        859
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1BE"
    },
    "539": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        833,
        859
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x9"
    },
    "541": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        833,
        859
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "542": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        833,
        859
      ],
      "op": "DUP2",
      "path": "37"
    },
    "543": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        833,
        859
      ],
      "op": "JUMP",
      "path": "37"
    },
    "544": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1751,
        2393
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "545": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1751,
        2393
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1A0"
    },
    "548": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1751,
        2393
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x22E"
    },
    "551": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1751,
        2393
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "552": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1751,
        2393
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "554": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1751,
        2393
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xEBE"
    },
    "557": {
      "fn": "OptionConfig.checkParams",
      "jump": "i",
      "offset": [
        1751,
        2393
      ],
      "op": "JUMP",
      "path": "37"
    },
    "558": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1751,
        2393
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "559": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1751,
        2393
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x583"
    },
    "562": {
      "fn": "OptionConfig.checkParams",
      "jump": "i",
      "offset": [
        1751,
        2393
      ],
      "op": "JUMP",
      "path": "37"
    },
    "563": {
      "offset": [
        790,
        827
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "564": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        790,
        827
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1BE"
    },
    "567": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        790,
        827
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x8"
    },
    "569": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        790,
        827
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "570": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        790,
        827
      ],
      "op": "DUP2",
      "path": "37"
    },
    "571": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        790,
        827
      ],
      "op": "JUMP",
      "path": "37"
    },
    "572": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "573": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A0"
    },
    "576": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x736"
    },
    "579": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "2"
    },
    "580": {
      "offset": [
        906,
        955
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "581": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        906,
        955
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1BE"
    },
    "584": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        906,
        955
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xB"
    },
    "586": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        906,
        955
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "587": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        906,
        955
      ],
      "op": "DUP2",
      "path": "37"
    },
    "588": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        906,
        955
      ],
      "op": "JUMP",
      "path": "37"
    },
    "589": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "590": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x177"
    },
    "593": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x771"
    },
    "596": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "2"
    },
    "597": {
      "offset": [
        597,
        640
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "598": {
      "fn": "Ownable.owner",
      "offset": [
        597,
        640
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1BE"
    },
    "601": {
      "fn": "Ownable.owner",
      "offset": [
        597,
        640
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x5"
    },
    "603": {
      "fn": "Ownable.owner",
      "offset": [
        597,
        640
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "604": {
      "fn": "Ownable.owner",
      "offset": [
        597,
        640
      ],
      "op": "DUP2",
      "path": "37"
    },
    "605": {
      "fn": "Ownable.owner",
      "offset": [
        597,
        640
      ],
      "op": "JUMP",
      "path": "37"
    },
    "606": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4705,
        4943
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "607": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4705,
        4943
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1A0"
    },
    "610": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4705,
        4943
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x26C"
    },
    "613": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4705,
        4943
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "614": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4705,
        4943
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "616": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4705,
        4943
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xE90"
    },
    "619": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "jump": "i",
      "offset": [
        4705,
        4943
      ],
      "op": "JUMP",
      "path": "37"
    },
    "620": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4705,
        4943
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "621": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4705,
        4943
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x780"
    },
    "624": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "jump": "i",
      "offset": [
        4705,
        4943
      ],
      "op": "JUMP",
      "path": "37"
    },
    "625": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        3936,
        4194
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "626": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        3936,
        4194
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1A0"
    },
    "629": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        3936,
        4194
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x27F"
    },
    "632": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        3936,
        4194
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "633": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        3936,
        4194
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "635": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        3936,
        4194
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF2B"
    },
    "638": {
      "fn": "OptionConfig.setStrike",
      "jump": "i",
      "offset": [
        3936,
        4194
      ],
      "op": "JUMP",
      "path": "37"
    },
    "639": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        3936,
        4194
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "640": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        3936,
        4194
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x80D"
    },
    "643": {
      "fn": "OptionConfig.setStrike",
      "jump": "i",
      "offset": [
        3936,
        4194
      ],
      "op": "JUMP",
      "path": "37"
    },
    "644": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2497,
        2743
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "645": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2497,
        2743
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1A0"
    },
    "648": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2497,
        2743
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x292"
    },
    "651": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2497,
        2743
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "652": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2497,
        2743
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "654": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2497,
        2743
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF2B"
    },
    "657": {
      "fn": "OptionConfig.setMaxPeriod",
      "jump": "i",
      "offset": [
        2497,
        2743
      ],
      "op": "JUMP",
      "path": "37"
    },
    "658": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2497,
        2743
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "659": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2497,
        2743
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x958"
    },
    "662": {
      "fn": "OptionConfig.setMaxPeriod",
      "jump": "i",
      "offset": [
        2497,
        2743
      ],
      "op": "JUMP",
      "path": "37"
    },
    "663": {
      "offset": [
        551,
        591
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "664": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        551,
        591
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1BE"
    },
    "667": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        551,
        591
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "669": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        551,
        591
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "670": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        551,
        591
      ],
      "op": "DUP2",
      "path": "37"
    },
    "671": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        551,
        591
      ],
      "op": "JUMP",
      "path": "37"
    },
    "672": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3399,
        3612
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "673": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3399,
        3612
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1A0"
    },
    "676": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3399,
        3612
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2AE"
    },
    "679": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3399,
        3612
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "680": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3399,
        3612
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "682": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3399,
        3612
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF2B"
    },
    "685": {
      "fn": "OptionConfig.setImpliedVolRate",
      "jump": "i",
      "offset": [
        3399,
        3612
      ],
      "op": "JUMP",
      "path": "37"
    },
    "686": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3399,
        3612
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "687": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3399,
        3612
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xA23"
    },
    "690": {
      "fn": "OptionConfig.setImpliedVolRate",
      "jump": "i",
      "offset": [
        3399,
        3612
      ],
      "op": "JUMP",
      "path": "37"
    },
    "691": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5438,
        5681
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "692": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5438,
        5681
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1A0"
    },
    "695": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5438,
        5681
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2C1"
    },
    "698": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5438,
        5681
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "699": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5438,
        5681
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "701": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5438,
        5681
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF2B"
    },
    "704": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "jump": "i",
      "offset": [
        5438,
        5681
      ],
      "op": "JUMP",
      "path": "37"
    },
    "705": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5438,
        5681
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "706": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5438,
        5681
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xAE2"
    },
    "709": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "jump": "i",
      "offset": [
        5438,
        5681
      ],
      "op": "JUMP",
      "path": "37"
    },
    "710": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5826,
        6067
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "711": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5826,
        6067
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1A0"
    },
    "714": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5826,
        6067
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2D4"
    },
    "717": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5826,
        6067
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "718": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5826,
        6067
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "720": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5826,
        6067
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF2B"
    },
    "723": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "jump": "i",
      "offset": [
        5826,
        6067
      ],
      "op": "JUMP",
      "path": "37"
    },
    "724": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5826,
        6067
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "725": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5826,
        6067
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xBA3"
    },
    "728": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "jump": "i",
      "offset": [
        5826,
        6067
      ],
      "op": "JUMP",
      "path": "37"
    },
    "729": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        2905,
        3239
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "730": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        2905,
        3239
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1A0"
    },
    "733": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        2905,
        3239
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2E7"
    },
    "736": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        2905,
        3239
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "737": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        2905,
        3239
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "739": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        2905,
        3239
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF2B"
    },
    "742": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "jump": "i",
      "offset": [
        2905,
        3239
      ],
      "op": "JUMP",
      "path": "37"
    },
    "743": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        2905,
        3239
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "744": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        2905,
        3239
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xC35"
    },
    "747": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "jump": "i",
      "offset": [
        2905,
        3239
      ],
      "op": "JUMP",
      "path": "37"
    },
    "748": {
      "offset": [
        646,
        689
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "749": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        646,
        689
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1BE"
    },
    "752": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        646,
        689
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x6"
    },
    "754": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        646,
        689
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "755": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        646,
        689
      ],
      "op": "DUP2",
      "path": "37"
    },
    "756": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        646,
        689
      ],
      "op": "JUMP",
      "path": "37"
    },
    "757": {
      "offset": [
        995,
        1043
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "758": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        995,
        1043
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xC"
    },
    "760": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        995,
        1043
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "761": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        995,
        1043
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x309"
    },
    "764": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        995,
        1043
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "769": {
      "op": "SHL"
    },
    "770": {
      "offset": [
        995,
        1043
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "771": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        995,
        1043
      ],
      "op": "DIV",
      "path": "37"
    },
    "772": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        995,
        1043
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "774": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        995,
        1043
      ],
      "op": "AND",
      "path": "37"
    },
    "775": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        995,
        1043
      ],
      "op": "DUP2",
      "path": "37"
    },
    "776": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        995,
        1043
      ],
      "op": "JUMP",
      "path": "37"
    },
    "777": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        995,
        1043
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "778": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        995,
        1043
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "780": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        995,
        1043
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "781": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        995,
        1043
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x184"
    },
    "784": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        995,
        1043
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "785": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        995,
        1043
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "786": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        995,
        1043
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF6F"
    },
    "789": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "jump": "i",
      "offset": [
        995,
        1043
      ],
      "op": "JUMP",
      "path": "37"
    },
    "790": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "791": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A0"
    },
    "794": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x324"
    },
    "797": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "798": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "800": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE90"
    },
    "803": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "804": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "805": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD0A"
    },
    "808": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "809": {
      "offset": [
        444,
        488
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "810": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        444,
        488
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1BE"
    },
    "813": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        444,
        488
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "815": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        444,
        488
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "816": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        444,
        488
      ],
      "op": "DUP2",
      "path": "37"
    },
    "817": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        444,
        488
      ],
      "op": "JUMP",
      "path": "37"
    },
    "818": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3618,
        3832
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "819": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3618,
        3832
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1A0"
    },
    "822": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3618,
        3832
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x340"
    },
    "825": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3618,
        3832
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "826": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3618,
        3832
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "828": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3618,
        3832
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF0C"
    },
    "831": {
      "fn": "OptionConfig.setTradingPermission",
      "jump": "i",
      "offset": [
        3618,
        3832
      ],
      "op": "JUMP",
      "path": "37"
    },
    "832": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3618,
        3832
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "833": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3618,
        3832
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xDAA"
    },
    "836": {
      "fn": "OptionConfig.setTradingPermission",
      "jump": "i",
      "offset": [
        3618,
        3832
      ],
      "op": "JUMP",
      "path": "37"
    },
    "837": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5073,
        5300
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "838": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15",
      "statement": 0
    },
    "839": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34E"
    },
    "842": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x771"
    },
    "845": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "846": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "851": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "853": {
      "op": "SHL"
    },
    "854": {
      "op": "SUB"
    },
    "855": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "856": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "857": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D"
    },
    "860": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "861": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "863": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "864": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "868": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "870": {
      "op": "SHL"
    },
    "871": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "872": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "873": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "875": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "876": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "879": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "880": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFBC"
    },
    "883": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "884": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "885": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "887": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "888": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "889": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "890": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "2"
    },
    "891": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "892": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "893": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "894": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5167,
        5170
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 1,
      "value": "0x64"
    },
    "896": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5158,
        5163
      ],
      "op": "DUP2",
      "path": "37"
    },
    "897": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5158,
        5170
      ],
      "op": "GT",
      "path": "37"
    },
    "898": {
      "branch": 45,
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5158,
        5170
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "899": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5150,
        5207
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3CE"
    },
    "902": {
      "branch": 45,
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5150,
        5207
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "903": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5150,
        5207
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "905": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5150,
        5207
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "906": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "910": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "912": {
      "op": "SHL"
    },
    "913": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5150,
        5207
      ],
      "op": "DUP2",
      "path": "37"
    },
    "914": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5150,
        5207
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "917": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5150,
        5207
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "919": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5150,
        5207
      ],
      "op": "DUP3",
      "path": "37"
    },
    "920": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5150,
        5207
      ],
      "op": "ADD",
      "path": "37"
    },
    "921": {
      "op": "DUP2"
    },
    "922": {
      "op": "SWAP1"
    },
    "923": {
      "op": "MSTORE"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "926": {
      "op": "DUP3"
    },
    "927": {
      "op": "ADD"
    },
    "928": {
      "op": "MSTORE"
    },
    "929": {
      "op": "PUSH32",
      "value": "0x5374616B696E6746656550657263656E7461676520697320746F6F2068696768"
    },
    "962": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "964": {
      "op": "DUP3"
    },
    "965": {
      "op": "ADD"
    },
    "966": {
      "op": "MSTORE"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "969": {
      "op": "ADD"
    },
    "970": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5150,
        5207
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x374"
    },
    "973": {
      "op": "JUMP"
    },
    "974": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5150,
        5207
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "975": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5217,
        5237
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 2,
      "value": "0x4"
    },
    "977": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5217,
        5245
      ],
      "op": "DUP2",
      "path": "37"
    },
    "978": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5217,
        5245
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "979": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5217,
        5245
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "980": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5260,
        5293
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 3,
      "value": "0x40"
    },
    "982": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5260,
        5293
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "983": {
      "op": "DUP2"
    },
    "984": {
      "op": "DUP2"
    },
    "985": {
      "op": "MSTORE"
    },
    "986": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5260,
        5293
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0x7AB3467FB06D3D8716698BECE5F22A665374115BD3D0A43D6E11B76FCEC1DFBB"
    },
    "1019": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5260,
        5293
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1022": {
      "op": "ADD"
    },
    "1023": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5260,
        5293
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1024": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5260,
        5293
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1026": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5260,
        5293
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1027": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5260,
        5293
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1028": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5260,
        5293
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "1029": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5260,
        5293
      ],
      "op": "SUB",
      "path": "37"
    },
    "1030": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5260,
        5293
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1031": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5260,
        5293
      ],
      "op": "LOG1",
      "path": "37"
    },
    "1032": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "offset": [
        5073,
        5300
      ],
      "op": "POP",
      "path": "37"
    },
    "1033": {
      "fn": "OptionConfig.setStakingFeePercentage",
      "jump": "o",
      "offset": [
        5073,
        5300
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1034": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4330,
        4567
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1035": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1036": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x413"
    },
    "1039": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x771"
    },
    "1042": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1043": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1050": {
      "op": "SHL"
    },
    "1051": {
      "op": "SUB"
    },
    "1052": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "1053": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1054": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x439"
    },
    "1057": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1058": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1060": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1061": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1067": {
      "op": "SHL"
    },
    "1068": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1069": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1070": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1072": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1073": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "1076": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1077": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFBC"
    },
    "1080": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1081": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1082": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4426,
        4428
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 4,
      "value": "0x14"
    },
    "1084": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4418,
        4423
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1085": {
      "branch": 46,
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4418,
        4428
      ],
      "op": "LT",
      "path": "37"
    },
    "1086": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4410,
        4468
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x495"
    },
    "1089": {
      "branch": 46,
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4410,
        4468
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1090": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4410,
        4468
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1092": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4410,
        4468
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1093": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1099": {
      "op": "SHL"
    },
    "1100": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4410,
        4468
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1101": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4410,
        4468
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1104": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4410,
        4468
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1106": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4410,
        4468
      ],
      "op": "DUP3",
      "path": "37"
    },
    "1107": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4410,
        4468
      ],
      "op": "ADD",
      "path": "37"
    },
    "1108": {
      "op": "MSTORE"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1113": {
      "op": "DUP3"
    },
    "1114": {
      "op": "ADD"
    },
    "1115": {
      "op": "MSTORE"
    },
    "1116": {
      "op": "PUSH32",
      "value": "0x536574746C656D656E7446656550657263656E7461676520697320746F6F2068"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1151": {
      "op": "DUP3"
    },
    "1152": {
      "op": "ADD"
    },
    "1153": {
      "op": "MSTORE"
    },
    "1154": {
      "op": "PUSH3",
      "value": "0xD2CED"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0xEB"
    },
    "1160": {
      "op": "SHL"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1163": {
      "op": "DUP3"
    },
    "1164": {
      "op": "ADD"
    },
    "1165": {
      "op": "MSTORE"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1168": {
      "op": "ADD"
    },
    "1169": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4410,
        4468
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x374"
    },
    "1172": {
      "op": "JUMP"
    },
    "1173": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4410,
        4468
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1174": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4478,
        4501
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 5,
      "value": "0x3"
    },
    "1176": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4478,
        4509
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1177": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4478,
        4509
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1178": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4478,
        4509
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "1179": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4524,
        4560
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 6,
      "value": "0x40"
    },
    "1181": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4524,
        4560
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1182": {
      "op": "DUP2"
    },
    "1183": {
      "op": "DUP2"
    },
    "1184": {
      "op": "MSTORE"
    },
    "1185": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4524,
        4560
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0x803E7BBAEBADBDA418EC6DD788E57C29C1CF3FAEB7E139D21247E624C9E6D119"
    },
    "1218": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4524,
        4560
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1221": {
      "op": "ADD"
    },
    "1222": {
      "fn": "OptionConfig.setSettlementFeePercentage",
      "offset": [
        4524,
        4560
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3FF"
    },
    "1225": {
      "op": "JUMP"
    },
    "1226": {
      "fn": "OptionConfig.setUtilizationRate",
      "offset": [
        6543,
        6645
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1227": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1228": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D3"
    },
    "1231": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x771"
    },
    "1234": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1235": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1242": {
      "op": "SHL"
    },
    "1243": {
      "op": "SUB"
    },
    "1244": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "1245": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1246": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F9"
    },
    "1249": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1250": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1252": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1253": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1257": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1259": {
      "op": "SHL"
    },
    "1260": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1261": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1262": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1264": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1265": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "1268": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1269": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFBC"
    },
    "1272": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1273": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1274": {
      "fn": "OptionConfig.setUtilizationRate",
      "offset": [
        6615,
        6630
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 7,
      "value": "0x8"
    },
    "1276": {
      "fn": "OptionConfig.setUtilizationRate",
      "offset": [
        6615,
        6638
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "1277": {
      "fn": "OptionConfig.setUtilizationRate",
      "jump": "o",
      "offset": [
        6543,
        6645
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1278": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6202,
        6419
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1279": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1280": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x507"
    },
    "1283": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x771"
    },
    "1286": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1287": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1294": {
      "op": "SHL"
    },
    "1295": {
      "op": "SUB"
    },
    "1296": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "1297": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1298": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x52D"
    },
    "1301": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1302": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1304": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1305": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1311": {
      "op": "SHL"
    },
    "1312": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1313": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1314": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1316": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1317": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "1320": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1321": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFBC"
    },
    "1324": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1325": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1326": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6300,
        6302
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 8,
      "value": "0xA"
    },
    "1328": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6291,
        6296
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1329": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6291,
        6302
      ],
      "op": "GT",
      "path": "37"
    },
    "1330": {
      "branch": 47,
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6291,
        6302
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "1331": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6283,
        6318
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54E"
    },
    "1334": {
      "branch": 47,
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6283,
        6318
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1335": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6283,
        6318
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1337": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6283,
        6318
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1338": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1344": {
      "op": "SHL"
    },
    "1345": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6283,
        6318
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1346": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6283,
        6318
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1347": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6283,
        6318
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1349": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6283,
        6318
      ],
      "op": "ADD",
      "path": "37"
    },
    "1350": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6283,
        6318
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x374"
    },
    "1353": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6283,
        6318
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1354": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6283,
        6318
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF97"
    },
    "1357": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "jump": "i",
      "offset": [
        6283,
        6318
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1358": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6283,
        6318
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1359": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6328,
        6352
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 9,
      "value": "0x6"
    },
    "1361": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6328,
        6360
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1362": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6328,
        6360
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1363": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6328,
        6360
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "1364": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6375,
        6412
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 10,
      "value": "0x40"
    },
    "1366": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6375,
        6412
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1367": {
      "op": "DUP2"
    },
    "1368": {
      "op": "DUP2"
    },
    "1369": {
      "op": "MSTORE"
    },
    "1370": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6375,
        6412
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0x8FB679AA627958FC7143B0829745D581E0F5E98599847E7097749CE89D8C88E0"
    },
    "1403": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6375,
        6412
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1406": {
      "op": "ADD"
    },
    "1407": {
      "fn": "OptionConfig.setNFTSaleRoyaltyPercentage",
      "offset": [
        6375,
        6412
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3FF"
    },
    "1410": {
      "op": "JUMP"
    },
    "1411": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1751,
        2393
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1412": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2010,
        2040
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 11,
      "value": "0x2"
    },
    "1414": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1996,
        2006
      ],
      "op": "DUP7",
      "path": "37"
    },
    "1415": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1996,
        2040
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "1417": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1996,
        2040
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1418": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1996,
        2040
      ],
      "op": "GT",
      "path": "37"
    },
    "1419": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1996,
        2040
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "1420": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1996,
        2040
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5A5"
    },
    "1423": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1996,
        2040
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1424": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1431": {
      "op": "SHL"
    },
    "1432": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1996,
        2040
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1434": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1996,
        2040
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1435": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1996,
        2040
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x21"
    },
    "1437": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1996,
        2040
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1439": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1996,
        2040
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1440": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1996,
        2040
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x24"
    },
    "1442": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1996,
        2040
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1444": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1996,
        2040
      ],
      "op": "REVERT",
      "path": "37"
    },
    "1445": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1996,
        2040
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1446": {
      "branch": 48,
      "fn": "OptionConfig.checkParams",
      "offset": [
        1996,
        2040
      ],
      "op": "EQ",
      "path": "37"
    },
    "1447": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1996,
        2103
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1448": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1996,
        2103
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5D0"
    },
    "1451": {
      "branch": 48,
      "fn": "OptionConfig.checkParams",
      "offset": [
        1996,
        2103
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1452": {
      "op": "POP"
    },
    "1453": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2074,
        2103
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "1455": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2060,
        2070
      ],
      "op": "DUP7",
      "path": "37"
    },
    "1456": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2060,
        2103
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "1458": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2060,
        2103
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1459": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2060,
        2103
      ],
      "op": "GT",
      "path": "37"
    },
    "1460": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2060,
        2103
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "1461": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2060,
        2103
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5CE"
    },
    "1464": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2060,
        2103
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1465": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1472": {
      "op": "SHL"
    },
    "1473": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2060,
        2103
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1475": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2060,
        2103
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1476": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2060,
        2103
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x21"
    },
    "1478": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2060,
        2103
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1480": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2060,
        2103
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1481": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2060,
        2103
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x24"
    },
    "1483": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2060,
        2103
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1485": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2060,
        2103
      ],
      "op": "REVERT",
      "path": "37"
    },
    "1486": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2060,
        2103
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1487": {
      "branch": 49,
      "fn": "OptionConfig.checkParams",
      "offset": [
        2060,
        2103
      ],
      "op": "EQ",
      "path": "37"
    },
    "1488": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1996,
        2103
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1489": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1975,
        2146
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x610"
    },
    "1492": {
      "branch": 49,
      "fn": "OptionConfig.checkParams",
      "offset": [
        1975,
        2146
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1493": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1975,
        2146
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1495": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1975,
        2146
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1496": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1502": {
      "op": "SHL"
    },
    "1503": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1975,
        2146
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1504": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1975,
        2146
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1507": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1975,
        2146
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1509": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1975,
        2146
      ],
      "op": "DUP3",
      "path": "37"
    },
    "1510": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1975,
        2146
      ],
      "op": "ADD",
      "path": "37"
    },
    "1511": {
      "op": "MSTORE"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1516": {
      "op": "DUP3"
    },
    "1517": {
      "op": "ADD"
    },
    "1518": {
      "op": "MSTORE"
    },
    "1519": {
      "op": "PUSH17",
      "value": "0x57726F6E67206F7074696F6E2074797065"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "1539": {
      "op": "SHL"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1542": {
      "op": "DUP3"
    },
    "1543": {
      "op": "ADD"
    },
    "1544": {
      "op": "MSTORE"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1547": {
      "op": "ADD"
    },
    "1548": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1975,
        2146
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x374"
    },
    "1551": {
      "op": "JUMP"
    },
    "1552": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1975,
        2146
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1553": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2174,
        2180
      ],
      "op": "PUSH3",
      "path": "37",
      "statement": 12,
      "value": "0x15180"
    },
    "1557": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2164,
        2170
      ],
      "op": "DUP6",
      "path": "37"
    },
    "1558": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2164,
        2180
      ],
      "op": "LT",
      "path": "37"
    },
    "1559": {
      "branch": 50,
      "fn": "OptionConfig.checkParams",
      "offset": [
        2164,
        2180
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "1560": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2156,
        2204
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x659"
    },
    "1563": {
      "branch": 50,
      "fn": "OptionConfig.checkParams",
      "offset": [
        2156,
        2204
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1564": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2156,
        2204
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1566": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2156,
        2204
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1567": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1573": {
      "op": "SHL"
    },
    "1574": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2156,
        2204
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1575": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2156,
        2204
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1578": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2156,
        2204
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1580": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2156,
        2204
      ],
      "op": "DUP3",
      "path": "37"
    },
    "1581": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2156,
        2204
      ],
      "op": "ADD",
      "path": "37"
    },
    "1582": {
      "op": "MSTORE"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1587": {
      "op": "DUP3"
    },
    "1588": {
      "op": "ADD"
    },
    "1589": {
      "op": "MSTORE"
    },
    "1590": {
      "op": "PUSH19",
      "value": "0x14195C9A5BD9081A5CC81D1BDBC81CDA1BDC9D"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "1612": {
      "op": "SHL"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1615": {
      "op": "DUP3"
    },
    "1616": {
      "op": "ADD"
    },
    "1617": {
      "op": "MSTORE"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1620": {
      "op": "ADD"
    },
    "1621": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2156,
        2204
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x374"
    },
    "1624": {
      "op": "JUMP"
    },
    "1625": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2156,
        2204
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1626": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2232,
        2239
      ],
      "op": "PUSH3",
      "path": "37",
      "statement": 13,
      "value": "0x76A700"
    },
    "1630": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2222,
        2228
      ],
      "op": "DUP6",
      "path": "37"
    },
    "1631": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2222,
        2239
      ],
      "op": "GT",
      "path": "37"
    },
    "1632": {
      "branch": 51,
      "fn": "OptionConfig.checkParams",
      "offset": [
        2222,
        2239
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "1633": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2214,
        2262
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6A1"
    },
    "1636": {
      "branch": 51,
      "fn": "OptionConfig.checkParams",
      "offset": [
        2214,
        2262
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1637": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2214,
        2262
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1639": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2214,
        2262
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1640": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1646": {
      "op": "SHL"
    },
    "1647": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2214,
        2262
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1648": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2214,
        2262
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1651": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2214,
        2262
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1653": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2214,
        2262
      ],
      "op": "DUP3",
      "path": "37"
    },
    "1654": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2214,
        2262
      ],
      "op": "ADD",
      "path": "37"
    },
    "1655": {
      "op": "MSTORE"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1660": {
      "op": "DUP3"
    },
    "1661": {
      "op": "ADD"
    },
    "1662": {
      "op": "MSTORE"
    },
    "1663": {
      "op": "PUSH18",
      "value": "0x506572696F6420697320746F6F206C6F6E67"
    },
    "1682": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1684": {
      "op": "SHL"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1687": {
      "op": "DUP3"
    },
    "1688": {
      "op": "ADD"
    },
    "1689": {
      "op": "MSTORE"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1692": {
      "op": "ADD"
    },
    "1693": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2214,
        2262
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x374"
    },
    "1696": {
      "op": "JUMP"
    },
    "1697": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2214,
        2262
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1698": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2289,
        2298
      ],
      "op": "DUP3",
      "path": "37",
      "statement": 14
    },
    "1699": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2280,
        2286
      ],
      "op": "DUP5",
      "path": "37"
    },
    "1700": {
      "branch": 52,
      "fn": "OptionConfig.checkParams",
      "offset": [
        2280,
        2298
      ],
      "op": "GT",
      "path": "37"
    },
    "1701": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2272,
        2332
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6F0"
    },
    "1704": {
      "branch": 52,
      "fn": "OptionConfig.checkParams",
      "offset": [
        2272,
        2332
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1705": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2272,
        2332
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1707": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2272,
        2332
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1708": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1714": {
      "op": "SHL"
    },
    "1715": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2272,
        2332
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1716": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2272,
        2332
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1719": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2272,
        2332
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1721": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2272,
        2332
      ],
      "op": "DUP3",
      "path": "37"
    },
    "1722": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2272,
        2332
      ],
      "op": "ADD",
      "path": "37"
    },
    "1723": {
      "op": "MSTORE"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1728": {
      "op": "DUP3"
    },
    "1729": {
      "op": "ADD"
    },
    "1730": {
      "op": "MSTORE"
    },
    "1731": {
      "op": "PUSH32",
      "value": "0x507269636520646966666572656E636520697320746F6F206C61726765000000"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1766": {
      "op": "DUP3"
    },
    "1767": {
      "op": "ADD"
    },
    "1768": {
      "op": "MSTORE"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1771": {
      "op": "ADD"
    },
    "1772": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2272,
        2332
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x374"
    },
    "1775": {
      "op": "JUMP"
    },
    "1776": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2272,
        2332
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1777": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2362,
        2370
      ],
      "op": "DUP2",
      "path": "37",
      "statement": 15
    },
    "1778": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2350,
        2358
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1779": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2350,
        2370
      ],
      "op": "LT",
      "path": "37"
    },
    "1780": {
      "branch": 53,
      "fn": "OptionConfig.checkParams",
      "offset": [
        2350,
        2370
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "1781": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2342,
        2386
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x72E"
    },
    "1784": {
      "branch": 53,
      "fn": "OptionConfig.checkParams",
      "offset": [
        2342,
        2386
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1785": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2342,
        2386
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1787": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2342,
        2386
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1788": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1794": {
      "op": "SHL"
    },
    "1795": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2342,
        2386
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1796": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2342,
        2386
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1799": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2342,
        2386
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1801": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2342,
        2386
      ],
      "op": "DUP3",
      "path": "37"
    },
    "1802": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2342,
        2386
      ],
      "op": "ADD",
      "path": "37"
    },
    "1803": {
      "op": "MSTORE"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1808": {
      "op": "DUP3"
    },
    "1809": {
      "op": "ADD"
    },
    "1810": {
      "op": "MSTORE"
    },
    "1811": {
      "op": "PUSH11",
      "value": "0x57726F6E672076616C7565"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1825": {
      "op": "SHL"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1828": {
      "op": "DUP3"
    },
    "1829": {
      "op": "ADD"
    },
    "1830": {
      "op": "MSTORE"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1833": {
      "op": "ADD"
    },
    "1834": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2342,
        2386
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x374"
    },
    "1837": {
      "op": "JUMP"
    },
    "1838": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        2342,
        2386
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1839": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1751,
        2393
      ],
      "op": "POP",
      "path": "37"
    },
    "1840": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1751,
        2393
      ],
      "op": "POP",
      "path": "37"
    },
    "1841": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1751,
        2393
      ],
      "op": "POP",
      "path": "37"
    },
    "1842": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1751,
        2393
      ],
      "op": "POP",
      "path": "37"
    },
    "1843": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1751,
        2393
      ],
      "op": "POP",
      "path": "37"
    },
    "1844": {
      "fn": "OptionConfig.checkParams",
      "offset": [
        1751,
        2393
      ],
      "op": "POP",
      "path": "37"
    },
    "1845": {
      "fn": "OptionConfig.checkParams",
      "jump": "o",
      "offset": [
        1751,
        2393
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1846": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1847": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1848": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x73F"
    },
    "1851": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x771"
    },
    "1854": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1855": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1862": {
      "op": "SHL"
    },
    "1863": {
      "op": "SUB"
    },
    "1864": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "1865": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1866": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x765"
    },
    "1869": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1870": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1872": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1873": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1879": {
      "op": "SHL"
    },
    "1880": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1881": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1882": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1884": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1885": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "1888": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1889": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFBC"
    },
    "1892": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1893": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1894": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 16,
      "value": "0x76F"
    },
    "1897": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1899": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE40"
    },
    "1902": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1903": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1904": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1905": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1906": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1908": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "2",
      "statement": 17
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1915": {
      "op": "SHL"
    },
    "1916": {
      "op": "SUB"
    },
    "1917": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "2"
    },
    "1918": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1919": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1920": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4705,
        4943
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1921": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1922": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x789"
    },
    "1925": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x771"
    },
    "1928": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1929": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1936": {
      "op": "SHL"
    },
    "1937": {
      "op": "SUB"
    },
    "1938": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "1939": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1940": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "1943": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1944": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1946": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1947": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1953": {
      "op": "SHL"
    },
    "1954": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1955": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1956": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1958": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1959": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "1962": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1963": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFBC"
    },
    "1966": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1967": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1974": {
      "op": "SHL"
    },
    "1975": {
      "op": "SUB"
    },
    "1976": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4796,
        4828
      ],
      "op": "DUP2",
      "path": "37",
      "statement": 18
    },
    "1977": {
      "branch": 54,
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4796,
        4828
      ],
      "op": "AND",
      "path": "37"
    },
    "1978": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4788,
        4829
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x7C2"
    },
    "1981": {
      "branch": 54,
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4788,
        4829
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1982": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4788,
        4829
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1984": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4788,
        4829
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1985": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4788,
        4829
      ],
      "op": "REVERT",
      "path": "37"
    },
    "1986": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4788,
        4829
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1987": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4839,
        4861
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 19,
      "value": "0x7"
    },
    "1989": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4839,
        4873
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1990": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4839,
        4873
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1997": {
      "op": "SHL"
    },
    "1998": {
      "op": "SUB"
    },
    "1999": {
      "op": "NOT"
    },
    "2000": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4839,
        4873
      ],
      "op": "AND",
      "path": "37"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2007": {
      "op": "SHL"
    },
    "2008": {
      "op": "SUB"
    },
    "2009": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4839,
        4873
      ],
      "op": "DUP4",
      "path": "37"
    },
    "2010": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4839,
        4873
      ],
      "op": "AND",
      "path": "37"
    },
    "2011": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4839,
        4873
      ],
      "op": "OR",
      "path": "37"
    },
    "2012": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4839,
        4873
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2013": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4839,
        4873
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "2014": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4888,
        4936
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 20,
      "value": "0x40"
    },
    "2016": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4888,
        4936
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2017": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4888,
        4936
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0x92F6C1E8DF34C666F737A2407B4E63D3A77F133B69FDF70F01B5E3B8072551F6"
    },
    "2050": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4888,
        4936
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2051": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4888,
        4936
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3FF"
    },
    "2054": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4888,
        4936
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2055": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4839,
        4873
      ],
      "op": "DUP4",
      "path": "37"
    },
    "2056": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4839,
        4873
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2057": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "offset": [
        4888,
        4936
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF5B"
    },
    "2060": {
      "fn": "OptionConfig.setSettlementFeeRecipient",
      "jump": "i",
      "offset": [
        4888,
        4936
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2061": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        3936,
        4194
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2062": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2063": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x816"
    },
    "2066": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x771"
    },
    "2069": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2070": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2077": {
      "op": "SHL"
    },
    "2078": {
      "op": "SUB"
    },
    "2079": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "2080": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "2081": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x83C"
    },
    "2084": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2085": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2087": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2088": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2094": {
      "op": "SHL"
    },
    "2095": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2096": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2097": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2099": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "2100": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "2103": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2104": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFBC"
    },
    "2107": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2108": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2109": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4042
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 21,
      "value": "0xC"
    },
    "2111": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4042
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "2113": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4042
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2114": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4042
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "2115": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4042
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2116": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4042
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "2119": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4042
      ],
      "op": "EXP",
      "path": "37"
    },
    "2120": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4042
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2121": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4042
      ],
      "op": "DIV",
      "path": "37"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2128": {
      "op": "SHL"
    },
    "2129": {
      "op": "SUB"
    },
    "2130": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4042
      ],
      "op": "AND",
      "path": "37"
    },
    "2131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2137": {
      "op": "SHL"
    },
    "2138": {
      "op": "SUB"
    },
    "2139": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4054
      ],
      "op": "AND",
      "path": "37"
    },
    "2140": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4054
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xA834069B"
    },
    "2145": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2147": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2148": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2149": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "2154": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "AND",
      "path": "37"
    },
    "2155": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xE0"
    },
    "2157": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "SHL",
      "path": "37"
    },
    "2158": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2159": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2160": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "2162": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "ADD",
      "path": "37"
    },
    "2163": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "2165": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2167": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2168": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2169": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "DUP4",
      "path": "37"
    },
    "2170": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "SUB",
      "path": "37"
    },
    "2171": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2172": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "DUP7",
      "path": "37"
    },
    "2173": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2174": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "EXTCODESIZE",
      "path": "37"
    },
    "2175": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "2176": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2177": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "2178": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x88A"
    },
    "2181": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "2182": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "2184": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2185": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "REVERT",
      "path": "37"
    },
    "2186": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2187": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "POP",
      "path": "37"
    },
    "2188": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "GAS",
      "path": "37"
    },
    "2189": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "STATICCALL",
      "path": "37"
    },
    "2190": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "2191": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2192": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "2193": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x89E"
    },
    "2196": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "2197": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "2198": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "2200": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2201": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "RETURNDATACOPY",
      "path": "37"
    },
    "2202": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "2203": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "2205": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "REVERT",
      "path": "37"
    },
    "2206": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2207": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "POP",
      "path": "37"
    },
    "2208": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "POP",
      "path": "37"
    },
    "2209": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "POP",
      "path": "37"
    },
    "2210": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "POP",
      "path": "37"
    },
    "2211": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2213": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2214": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "2215": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "2217": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "NOT",
      "path": "37"
    },
    "2218": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "2220": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2221": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "ADD",
      "path": "37"
    },
    "2222": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "AND",
      "path": "37"
    },
    "2223": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2224": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "ADD",
      "path": "37"
    },
    "2225": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2226": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2228": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2229": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "POP",
      "path": "37"
    },
    "2230": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2231": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "ADD",
      "path": "37"
    },
    "2232": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2233": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x8C2"
    },
    "2236": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "2237": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2238": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF43"
    },
    "2241": {
      "fn": "OptionConfig.setStrike",
      "jump": "i",
      "offset": [
        4038,
        4056
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2242": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4038,
        4056
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2243": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4020,
        4035
      ],
      "op": "TIMESTAMP",
      "path": "37"
    },
    "2244": {
      "branch": 55,
      "fn": "OptionConfig.setStrike",
      "offset": [
        4020,
        4056
      ],
      "op": "GT",
      "path": "37"
    },
    "2245": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        3999,
        4124
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x923"
    },
    "2248": {
      "branch": 55,
      "fn": "OptionConfig.setStrike",
      "offset": [
        3999,
        4124
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "2249": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        3999,
        4124
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2251": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        3999,
        4124
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2252": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2258": {
      "op": "SHL"
    },
    "2259": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        3999,
        4124
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2260": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        3999,
        4124
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2263": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        3999,
        4124
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "2265": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        3999,
        4124
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2266": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        3999,
        4124
      ],
      "op": "ADD",
      "path": "37"
    },
    "2267": {
      "op": "MSTORE"
    },
    "2268": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2272": {
      "op": "DUP3"
    },
    "2273": {
      "op": "ADD"
    },
    "2274": {
      "op": "MSTORE"
    },
    "2275": {
      "op": "PUSH32",
      "value": "0x43616E2774206368616E676520737472696B65206265666F7265207468652065"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2310": {
      "op": "DUP3"
    },
    "2311": {
      "op": "ADD"
    },
    "2312": {
      "op": "MSTORE"
    },
    "2313": {
      "op": "PUSH10",
      "value": "0x787069727920656E6473"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "2326": {
      "op": "SHL"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2329": {
      "op": "DUP3"
    },
    "2330": {
      "op": "ADD"
    },
    "2331": {
      "op": "MSTORE"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2334": {
      "op": "ADD"
    },
    "2335": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        3999,
        4124
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x374"
    },
    "2338": {
      "op": "JUMP"
    },
    "2339": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        3999,
        4124
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2340": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4134,
        4145
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 22,
      "value": "0x9"
    },
    "2342": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4134,
        4153
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2343": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4134,
        4153
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2344": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4134,
        4153
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "2345": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4168,
        4187
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 23,
      "value": "0x40"
    },
    "2347": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4168,
        4187
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2348": {
      "op": "DUP2"
    },
    "2349": {
      "op": "DUP2"
    },
    "2350": {
      "op": "MSTORE"
    },
    "2351": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4168,
        4187
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0xD7120AE25FFB24B73B21C585F172272CCE904BDD03D819732ECC914F4CE49CF0"
    },
    "2384": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4168,
        4187
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2387": {
      "op": "ADD"
    },
    "2388": {
      "fn": "OptionConfig.setStrike",
      "offset": [
        4168,
        4187
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3FF"
    },
    "2391": {
      "op": "JUMP"
    },
    "2392": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2497,
        2743
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2393": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2394": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x961"
    },
    "2397": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x771"
    },
    "2400": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2401": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2408": {
      "op": "SHL"
    },
    "2409": {
      "op": "SUB"
    },
    "2410": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "2411": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "2412": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x987"
    },
    "2415": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2416": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2418": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2419": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2425": {
      "op": "SHL"
    },
    "2426": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2427": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2428": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2430": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "2431": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "2434": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2435": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFBC"
    },
    "2438": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2439": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2440": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2593,
        2602
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 24,
      "value": "0x12C"
    },
    "2443": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2584,
        2589
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2444": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2584,
        2602
      ],
      "op": "LT",
      "path": "37"
    },
    "2445": {
      "branch": 56,
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2584,
        2602
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "2446": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2563,
        2672
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x9EE"
    },
    "2449": {
      "branch": 56,
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2563,
        2672
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "2450": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2563,
        2672
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2452": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2563,
        2672
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2453": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2459": {
      "op": "SHL"
    },
    "2460": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2563,
        2672
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2461": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2563,
        2672
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2464": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2563,
        2672
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "2466": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2563,
        2672
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2467": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2563,
        2672
      ],
      "op": "ADD",
      "path": "37"
    },
    "2468": {
      "op": "MSTORE"
    },
    "2469": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2473": {
      "op": "DUP3"
    },
    "2474": {
      "op": "ADD"
    },
    "2475": {
      "op": "MSTORE"
    },
    "2476": {
      "op": "PUSH32",
      "value": "0x4D6178506572696F64206E6565647320746F2062652067726561746572207468"
    },
    "2509": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2511": {
      "op": "DUP3"
    },
    "2512": {
      "op": "ADD"
    },
    "2513": {
      "op": "MSTORE"
    },
    "2514": {
      "op": "PUSH12",
      "value": "0x616E2035206D696E75746573"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2529": {
      "op": "SHL"
    },
    "2530": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2532": {
      "op": "DUP3"
    },
    "2533": {
      "op": "ADD"
    },
    "2534": {
      "op": "MSTORE"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2537": {
      "op": "ADD"
    },
    "2538": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2563,
        2672
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x374"
    },
    "2541": {
      "op": "JUMP"
    },
    "2542": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2563,
        2672
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2543": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2682,
        2691
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 25,
      "value": "0xA"
    },
    "2545": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2682,
        2699
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2546": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2682,
        2699
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2547": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2682,
        2699
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "2548": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2714,
        2736
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 26,
      "value": "0x40"
    },
    "2550": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2714,
        2736
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2551": {
      "op": "DUP2"
    },
    "2552": {
      "op": "DUP2"
    },
    "2553": {
      "op": "MSTORE"
    },
    "2554": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2714,
        2736
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0x967EEAC7CCAA5705556859408DDB017BAC37AFA817DD8FF3D27CF4EA1171A66"
    },
    "2587": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2714,
        2736
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2590": {
      "op": "ADD"
    },
    "2591": {
      "fn": "OptionConfig.setMaxPeriod",
      "offset": [
        2714,
        2736
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3FF"
    },
    "2594": {
      "op": "JUMP"
    },
    "2595": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3399,
        3612
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2596": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2597": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA2C"
    },
    "2600": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x771"
    },
    "2603": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2604": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2611": {
      "op": "SHL"
    },
    "2612": {
      "op": "SUB"
    },
    "2613": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "2614": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "2615": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA52"
    },
    "2618": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2619": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2621": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2622": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2626": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2628": {
      "op": "SHL"
    },
    "2629": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2630": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2631": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2633": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "2634": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "2637": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2638": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFBC"
    },
    "2641": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2642": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2643": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3487,
        3490
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 27,
      "value": "0x64"
    },
    "2645": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3478,
        3483
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2646": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3478,
        3490
      ],
      "op": "LT",
      "path": "37"
    },
    "2647": {
      "branch": 57,
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3478,
        3490
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "2648": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3470,
        3528
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xAAD"
    },
    "2651": {
      "branch": 57,
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3470,
        3528
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "2652": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3470,
        3528
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2654": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3470,
        3528
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2655": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2661": {
      "op": "SHL"
    },
    "2662": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3470,
        3528
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2663": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3470,
        3528
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2666": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3470,
        3528
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "2668": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3470,
        3528
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2669": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3470,
        3528
      ],
      "op": "ADD",
      "path": "37"
    },
    "2670": {
      "op": "MSTORE"
    },
    "2671": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2675": {
      "op": "DUP3"
    },
    "2676": {
      "op": "ADD"
    },
    "2677": {
      "op": "MSTORE"
    },
    "2678": {
      "op": "PUSH32",
      "value": "0x496D706C696564566F6C52617465206C696D697420697320746F6F20736D616C"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2713": {
      "op": "DUP3"
    },
    "2714": {
      "op": "ADD"
    },
    "2715": {
      "op": "MSTORE"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "2720": {
      "op": "SHL"
    },
    "2721": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2723": {
      "op": "DUP3"
    },
    "2724": {
      "op": "ADD"
    },
    "2725": {
      "op": "MSTORE"
    },
    "2726": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2728": {
      "op": "ADD"
    },
    "2729": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3470,
        3528
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x374"
    },
    "2732": {
      "op": "JUMP"
    },
    "2733": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3470,
        3528
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2734": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3538,
        3552
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 28,
      "value": "0x1"
    },
    "2736": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3538,
        3560
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2737": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3538,
        3560
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2738": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3538,
        3560
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "2739": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3575,
        3605
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 29,
      "value": "0x40"
    },
    "2741": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3575,
        3605
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2742": {
      "op": "DUP2"
    },
    "2743": {
      "op": "DUP2"
    },
    "2744": {
      "op": "MSTORE"
    },
    "2745": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3575,
        3605
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0x3E0C59249D1A9C5F08383BDBDFBC45517A71B76E72223AE649C576E4D1258696"
    },
    "2778": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3575,
        3605
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2779": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2781": {
      "op": "ADD"
    },
    "2782": {
      "fn": "OptionConfig.setImpliedVolRate",
      "offset": [
        3575,
        3605
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3FF"
    },
    "2785": {
      "op": "JUMP"
    },
    "2786": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5438,
        5681
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2787": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2788": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAEB"
    },
    "2791": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x771"
    },
    "2794": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2795": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2802": {
      "op": "SHL"
    },
    "2803": {
      "op": "SUB"
    },
    "2804": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "2805": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "2806": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB11"
    },
    "2809": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2810": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2812": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2813": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2819": {
      "op": "SHL"
    },
    "2820": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2821": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2822": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2824": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "2825": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "2828": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2829": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFBC"
    },
    "2832": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2833": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2834": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5536,
        5539
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 30,
      "value": "0x64"
    },
    "2836": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5527,
        5532
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2837": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5527,
        5539
      ],
      "op": "GT",
      "path": "37"
    },
    "2838": {
      "branch": 58,
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5527,
        5539
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "2839": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5519,
        5580
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xB6E"
    },
    "2842": {
      "branch": 58,
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5519,
        5580
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "2843": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5519,
        5580
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2845": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5519,
        5580
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2846": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2852": {
      "op": "SHL"
    },
    "2853": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5519,
        5580
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2854": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5519,
        5580
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2857": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5519,
        5580
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "2859": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5519,
        5580
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2860": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5519,
        5580
      ],
      "op": "ADD",
      "path": "37"
    },
    "2861": {
      "op": "MSTORE"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2864": {
      "op": "DUP1"
    },
    "2865": {
      "op": "DUP3"
    },
    "2866": {
      "op": "ADD"
    },
    "2867": {
      "op": "MSTORE"
    },
    "2868": {
      "op": "PUSH32",
      "value": "0x526566657272616C52657761726450657263656E7461676520697320746F6F20"
    },
    "2901": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2903": {
      "op": "DUP3"
    },
    "2904": {
      "op": "ADD"
    },
    "2905": {
      "op": "MSTORE"
    },
    "2906": {
      "op": "PUSH4",
      "value": "0xD0D2CED"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2913": {
      "op": "SHL"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2916": {
      "op": "DUP3"
    },
    "2917": {
      "op": "ADD"
    },
    "2918": {
      "op": "MSTORE"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2921": {
      "op": "ADD"
    },
    "2922": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5519,
        5580
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x374"
    },
    "2925": {
      "op": "JUMP"
    },
    "2926": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5519,
        5580
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2927": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5590,
        5614
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 31,
      "value": "0x5"
    },
    "2929": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5590,
        5622
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2930": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5590,
        5622
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2931": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5590,
        5622
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "2932": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5637,
        5674
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 32,
      "value": "0x40"
    },
    "2934": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5637,
        5674
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2935": {
      "op": "DUP2"
    },
    "2936": {
      "op": "DUP2"
    },
    "2937": {
      "op": "MSTORE"
    },
    "2938": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5637,
        5674
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0xC089466003B94FFB5787D1D1AFFE1C743F8CA63F949D2296CFA4D7986601ADE"
    },
    "2971": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5637,
        5674
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2974": {
      "op": "ADD"
    },
    "2975": {
      "fn": "OptionConfig.setReferralRewardPercentage",
      "offset": [
        5637,
        5674
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3FF"
    },
    "2978": {
      "op": "JUMP"
    },
    "2979": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5826,
        6067
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2980": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2981": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBAC"
    },
    "2984": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x771"
    },
    "2987": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2988": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2995": {
      "op": "SHL"
    },
    "2996": {
      "op": "SUB"
    },
    "2997": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "2998": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "2999": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBD2"
    },
    "3002": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3003": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3005": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3006": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3010": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3012": {
      "op": "SHL"
    },
    "3013": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3014": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3015": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3017": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "3018": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "3021": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3022": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFBC"
    },
    "3025": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3026": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3027": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5923,
        5928
      ],
      "op": "DUP1",
      "path": "37",
      "statement": 33
    },
    "3028": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5917,
        5919
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x32"
    },
    "3030": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5917,
        5928
      ],
      "op": "GT",
      "path": "37"
    },
    "3031": {
      "branch": 59,
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5917,
        5928
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "3032": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5917,
        5944
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3033": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5917,
        5944
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "3034": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5917,
        5944
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xBE4"
    },
    "3037": {
      "branch": 59,
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5917,
        5944
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3038": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5917,
        5944
      ],
      "op": "POP",
      "path": "37"
    },
    "3039": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5941,
        5944
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x64"
    },
    "3041": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5932,
        5937
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3042": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5932,
        5944
      ],
      "op": "GT",
      "path": "37"
    },
    "3043": {
      "branch": 60,
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5932,
        5944
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "3044": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5917,
        5944
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3045": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5909,
        5960
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xC00"
    },
    "3048": {
      "branch": 60,
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5909,
        5960
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3049": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5909,
        5960
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3051": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5909,
        5960
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3052": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3058": {
      "op": "SHL"
    },
    "3059": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5909,
        5960
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3060": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5909,
        5960
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3061": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5909,
        5960
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "3063": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5909,
        5960
      ],
      "op": "ADD",
      "path": "37"
    },
    "3064": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5909,
        5960
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x374"
    },
    "3067": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5909,
        5960
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3068": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5909,
        5960
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF97"
    },
    "3071": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "jump": "i",
      "offset": [
        5909,
        5960
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3072": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5909,
        5960
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3073": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5970,
        5998
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 34,
      "value": "0x2"
    },
    "3075": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5970,
        6006
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3076": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5970,
        6006
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3077": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        5970,
        6006
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "3078": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        6021,
        6060
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 35,
      "value": "0x40"
    },
    "3080": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        6021,
        6060
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3081": {
      "op": "DUP2"
    },
    "3082": {
      "op": "DUP2"
    },
    "3083": {
      "op": "MSTORE"
    },
    "3084": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        6021,
        6060
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0x66B26A0DFAA5FC9F5C7432381208AA4BD7F13F4489299B52F09F1AF7669BB93B"
    },
    "3117": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        6021,
        6060
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3118": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3120": {
      "op": "ADD"
    },
    "3121": {
      "fn": "OptionConfig.setOptionCollaterizationRatio",
      "offset": [
        6021,
        6060
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3FF"
    },
    "3124": {
      "op": "JUMP"
    },
    "3125": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        2905,
        3239
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3126": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3127": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3E"
    },
    "3130": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x771"
    },
    "3133": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3134": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3141": {
      "op": "SHL"
    },
    "3142": {
      "op": "SUB"
    },
    "3143": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "3144": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "3145": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC64"
    },
    "3148": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3149": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3151": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3152": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3158": {
      "op": "SHL"
    },
    "3159": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3160": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3161": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3163": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "3164": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "3167": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3168": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFBC"
    },
    "3171": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3172": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3173": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3041,
        3044
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 36,
      "value": "0x64"
    },
    "3175": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3033,
        3038
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3176": {
      "branch": 61,
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3033,
        3044
      ],
      "op": "LT",
      "path": "37"
    },
    "3177": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3012,
        3126
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xCD5"
    },
    "3180": {
      "branch": 61,
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3012,
        3126
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3181": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3012,
        3126
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3183": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3012,
        3126
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3184": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3190": {
      "op": "SHL"
    },
    "3191": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3012,
        3126
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3192": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3012,
        3126
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3193": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3195": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3012,
        3126
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "3197": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3012,
        3126
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3198": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3012,
        3126
      ],
      "op": "ADD",
      "path": "37"
    },
    "3199": {
      "op": "MSTORE"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3202": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3204": {
      "op": "DUP3"
    },
    "3205": {
      "op": "ADD"
    },
    "3206": {
      "op": "MSTORE"
    },
    "3207": {
      "op": "PUSH32",
      "value": "0x4F7074696F6E53697A65506572426C6F636B4C696D697450657263656E74206E"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3242": {
      "op": "DUP3"
    },
    "3243": {
      "op": "ADD"
    },
    "3244": {
      "op": "MSTORE"
    },
    "3245": {
      "op": "PUSH24",
      "value": "0x6565647320746F206265206C657373207468616E2031303"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3272": {
      "op": "SHL"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3275": {
      "op": "DUP3"
    },
    "3276": {
      "op": "ADD"
    },
    "3277": {
      "op": "MSTORE"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3280": {
      "op": "ADD"
    },
    "3281": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3012,
        3126
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x374"
    },
    "3284": {
      "op": "JUMP"
    },
    "3285": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3012,
        3126
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3286": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3136,
        3166
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 37,
      "value": "0xB"
    },
    "3288": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3136,
        3174
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3289": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3136,
        3174
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3290": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3136,
        3174
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "3291": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3189,
        3232
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 38,
      "value": "0x40"
    },
    "3293": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3189,
        3232
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3294": {
      "op": "DUP2"
    },
    "3295": {
      "op": "DUP2"
    },
    "3296": {
      "op": "MSTORE"
    },
    "3297": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3189,
        3232
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0x5CA84F51F1B091675330ABC6E5665566A97744B04121DABC6BDA4B3D3503945F"
    },
    "3330": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3189,
        3232
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3333": {
      "op": "ADD"
    },
    "3334": {
      "fn": "OptionConfig.setOptionSizePerBlockLimitPercent",
      "offset": [
        3189,
        3232
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3FF"
    },
    "3337": {
      "op": "JUMP"
    },
    "3338": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3339": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3340": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD13"
    },
    "3343": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x771"
    },
    "3346": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3347": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3354": {
      "op": "SHL"
    },
    "3355": {
      "op": "SUB"
    },
    "3356": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "3357": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "3358": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD39"
    },
    "3361": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3362": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3364": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3365": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3371": {
      "op": "SHL"
    },
    "3372": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3373": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3374": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3376": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "3377": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "3380": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3381": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFBC"
    },
    "3384": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3385": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3392": {
      "op": "SHL"
    },
    "3393": {
      "op": "SUB"
    },
    "3394": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 39
    },
    "3395": {
      "branch": 62,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "2"
    },
    "3396": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD9E"
    },
    "3399": {
      "branch": 62,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3400": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3402": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3403": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3409": {
      "op": "SHL"
    },
    "3410": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3411": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3414": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3416": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3417": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "2"
    },
    "3418": {
      "op": "MSTORE"
    },
    "3419": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3423": {
      "op": "DUP3"
    },
    "3424": {
      "op": "ADD"
    },
    "3425": {
      "op": "MSTORE"
    },
    "3426": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "3459": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3461": {
      "op": "DUP3"
    },
    "3462": {
      "op": "ADD"
    },
    "3463": {
      "op": "MSTORE"
    },
    "3464": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3473": {
      "op": "SHL"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3476": {
      "op": "DUP3"
    },
    "3477": {
      "op": "ADD"
    },
    "3478": {
      "op": "MSTORE"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3481": {
      "op": "ADD"
    },
    "3482": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "3485": {
      "op": "JUMP"
    },
    "3486": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3487": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 40,
      "value": "0xDA7"
    },
    "3490": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3491": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE40"
    },
    "3494": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3495": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3496": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "2"
    },
    "3497": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3498": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3618,
        3832
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3499": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3500": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDB3"
    },
    "3503": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x771"
    },
    "3506": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3507": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3514": {
      "op": "SHL"
    },
    "3515": {
      "op": "SUB"
    },
    "3516": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "3517": {
      "branch": 63,
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "3518": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDD9"
    },
    "3521": {
      "branch": 63,
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3522": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3524": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3525": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3531": {
      "op": "SHL"
    },
    "3532": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3533": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3534": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3536": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "3537": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "3540": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3541": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFBC"
    },
    "3544": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3545": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3546": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3754
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 41,
      "value": "0xC"
    },
    "3548": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3549": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3550": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3757,
        3771
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3551": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3757,
        3771
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3552": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3754
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3557": {
      "op": "SHL"
    },
    "3558": {
      "op": "NOT"
    },
    "3559": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "AND",
      "path": "37"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3562": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3564": {
      "op": "SHL"
    },
    "3565": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3757,
        3771
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3566": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "3568": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3569": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "GT",
      "path": "37"
    },
    "3570": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "3571": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xE0C"
    },
    "3574": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3575": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3580": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3582": {
      "op": "SHL"
    },
    "3583": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3585": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3586": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x21"
    },
    "3588": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "3590": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3591": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x24"
    },
    "3593": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3595": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "REVERT",
      "path": "37"
    },
    "3596": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3597": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "MUL",
      "path": "37"
    },
    "3598": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "OR",
      "path": "37"
    },
    "3599": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3600": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "3601": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3734,
        3771
      ],
      "op": "POP",
      "path": "37"
    },
    "3602": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3786,
        3825
      ],
      "op": "PUSH32",
      "path": "37",
      "statement": 42,
      "value": "0x75E98309D621801FC34E8CE7FA6EAA10B82599A58639171FE865E39BB4728D48"
    },
    "3635": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3810,
        3824
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3636": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3786,
        3825
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3638": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3786,
        3825
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3639": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3786,
        3825
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3FF"
    },
    "3642": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3786,
        3825
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3643": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3786,
        3825
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3644": {
      "fn": "OptionConfig.setTradingPermission",
      "offset": [
        3786,
        3825
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF6F"
    },
    "3647": {
      "fn": "OptionConfig.setTradingPermission",
      "jump": "i",
      "offset": [
        3786,
        3825
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3648": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3649": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3651": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3652": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3659": {
      "op": "SHL"
    },
    "3660": {
      "op": "SUB"
    },
    "3661": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 43
    },
    "3662": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3663": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "2"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3670": {
      "op": "SHL"
    },
    "3671": {
      "op": "SUB"
    },
    "3672": {
      "op": "NOT"
    },
    "3673": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3674": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "2"
    },
    "3675": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3676": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "2"
    },
    "3677": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3678": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3679": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 44,
      "value": "0x40"
    },
    "3681": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3682": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3683": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3684": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3685": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "2"
    },
    "3686": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3687": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3688": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3689": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3722": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3723": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3724": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "2"
    },
    "3725": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "2"
    },
    "3726": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "2"
    },
    "3727": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3728": {
      "op": "JUMPDEST"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3731": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3733": {
      "op": "DUP3"
    },
    "3734": {
      "op": "DUP5"
    },
    "3735": {
      "op": "SUB"
    },
    "3736": {
      "op": "SLT"
    },
    "3737": {
      "op": "ISZERO"
    },
    "3738": {
      "op": "PUSH2",
      "value": "0xEA1"
    },
    "3741": {
      "op": "JUMPI"
    },
    "3742": {
      "op": "DUP1"
    },
    "3743": {
      "op": "DUP2"
    },
    "3744": {
      "op": "REVERT"
    },
    "3745": {
      "op": "JUMPDEST"
    },
    "3746": {
      "op": "DUP2"
    },
    "3747": {
      "op": "CALLDATALOAD"
    },
    "3748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3754": {
      "op": "SHL"
    },
    "3755": {
      "op": "SUB"
    },
    "3756": {
      "op": "DUP2"
    },
    "3757": {
      "op": "AND"
    },
    "3758": {
      "op": "DUP2"
    },
    "3759": {
      "op": "EQ"
    },
    "3760": {
      "op": "PUSH2",
      "value": "0xEB7"
    },
    "3763": {
      "op": "JUMPI"
    },
    "3764": {
      "op": "DUP2"
    },
    "3765": {
      "op": "DUP3"
    },
    "3766": {
      "op": "REVERT"
    },
    "3767": {
      "op": "JUMPDEST"
    },
    "3768": {
      "op": "SWAP4"
    },
    "3769": {
      "op": "SWAP3"
    },
    "3770": {
      "op": "POP"
    },
    "3771": {
      "op": "POP"
    },
    "3772": {
      "op": "POP"
    },
    "3773": {
      "jump": "o",
      "op": "JUMP"
    },
    "3774": {
      "op": "JUMPDEST"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3777": {
      "op": "DUP1"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3780": {
      "op": "DUP1"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3783": {
      "op": "DUP1"
    },
    "3784": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3786": {
      "op": "DUP8"
    },
    "3787": {
      "op": "DUP10"
    },
    "3788": {
      "op": "SUB"
    },
    "3789": {
      "op": "SLT"
    },
    "3790": {
      "op": "ISZERO"
    },
    "3791": {
      "op": "PUSH2",
      "value": "0xED6"
    },
    "3794": {
      "op": "JUMPI"
    },
    "3795": {
      "op": "DUP2"
    },
    "3796": {
      "op": "DUP3"
    },
    "3797": {
      "op": "REVERT"
    },
    "3798": {
      "op": "JUMPDEST"
    },
    "3799": {
      "op": "DUP7"
    },
    "3800": {
      "op": "CALLDATALOAD"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3803": {
      "op": "DUP2"
    },
    "3804": {
      "op": "LT"
    },
    "3805": {
      "op": "PUSH2",
      "value": "0xEE4"
    },
    "3808": {
      "op": "JUMPI"
    },
    "3809": {
      "op": "DUP3"
    },
    "3810": {
      "op": "DUP4"
    },
    "3811": {
      "op": "REVERT"
    },
    "3812": {
      "op": "JUMPDEST"
    },
    "3813": {
      "op": "SWAP9"
    },
    "3814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3816": {
      "op": "DUP9"
    },
    "3817": {
      "op": "ADD"
    },
    "3818": {
      "op": "CALLDATALOAD"
    },
    "3819": {
      "op": "SWAP9"
    },
    "3820": {
      "op": "POP"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3823": {
      "op": "DUP9"
    },
    "3824": {
      "op": "ADD"
    },
    "3825": {
      "op": "CALLDATALOAD"
    },
    "3826": {
      "op": "SWAP8"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3829": {
      "op": "DUP2"
    },
    "3830": {
      "op": "ADD"
    },
    "3831": {
      "op": "CALLDATALOAD"
    },
    "3832": {
      "op": "SWAP8"
    },
    "3833": {
      "op": "POP"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3836": {
      "op": "DUP2"
    },
    "3837": {
      "op": "ADD"
    },
    "3838": {
      "op": "CALLDATALOAD"
    },
    "3839": {
      "op": "SWAP7"
    },
    "3840": {
      "op": "POP"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3843": {
      "op": "ADD"
    },
    "3844": {
      "op": "CALLDATALOAD"
    },
    "3845": {
      "op": "SWAP5"
    },
    "3846": {
      "op": "POP"
    },
    "3847": {
      "op": "SWAP3"
    },
    "3848": {
      "op": "POP"
    },
    "3849": {
      "op": "POP"
    },
    "3850": {
      "op": "POP"
    },
    "3851": {
      "jump": "o",
      "op": "JUMP"
    },
    "3852": {
      "op": "JUMPDEST"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3855": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3857": {
      "op": "DUP3"
    },
    "3858": {
      "op": "DUP5"
    },
    "3859": {
      "op": "SUB"
    },
    "3860": {
      "op": "SLT"
    },
    "3861": {
      "op": "ISZERO"
    },
    "3862": {
      "op": "PUSH2",
      "value": "0xF1D"
    },
    "3865": {
      "op": "JUMPI"
    },
    "3866": {
      "op": "DUP1"
    },
    "3867": {
      "op": "DUP2"
    },
    "3868": {
      "op": "REVERT"
    },
    "3869": {
      "op": "JUMPDEST"
    },
    "3870": {
      "op": "DUP2"
    },
    "3871": {
      "op": "CALLDATALOAD"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3874": {
      "op": "DUP2"
    },
    "3875": {
      "op": "LT"
    },
    "3876": {
      "op": "PUSH2",
      "value": "0xEB7"
    },
    "3879": {
      "op": "JUMPI"
    },
    "3880": {
      "op": "DUP2"
    },
    "3881": {
      "op": "DUP3"
    },
    "3882": {
      "op": "REVERT"
    },
    "3883": {
      "op": "JUMPDEST"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3886": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3888": {
      "op": "DUP3"
    },
    "3889": {
      "op": "DUP5"
    },
    "3890": {
      "op": "SUB"
    },
    "3891": {
      "op": "SLT"
    },
    "3892": {
      "op": "ISZERO"
    },
    "3893": {
      "op": "PUSH2",
      "value": "0xF3C"
    },
    "3896": {
      "op": "JUMPI"
    },
    "3897": {
      "op": "DUP1"
    },
    "3898": {
      "op": "DUP2"
    },
    "3899": {
      "op": "REVERT"
    },
    "3900": {
      "op": "JUMPDEST"
    },
    "3901": {
      "op": "POP"
    },
    "3902": {
      "op": "CALLDATALOAD"
    },
    "3903": {
      "op": "SWAP2"
    },
    "3904": {
      "op": "SWAP1"
    },
    "3905": {
      "op": "POP"
    },
    "3906": {
      "jump": "o",
      "op": "JUMP"
    },
    "3907": {
      "op": "JUMPDEST"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3912": {
      "op": "DUP3"
    },
    "3913": {
      "op": "DUP5"
    },
    "3914": {
      "op": "SUB"
    },
    "3915": {
      "op": "SLT"
    },
    "3916": {
      "op": "ISZERO"
    },
    "3917": {
      "op": "PUSH2",
      "value": "0xF54"
    },
    "3920": {
      "op": "JUMPI"
    },
    "3921": {
      "op": "DUP1"
    },
    "3922": {
      "op": "DUP2"
    },
    "3923": {
      "op": "REVERT"
    },
    "3924": {
      "op": "JUMPDEST"
    },
    "3925": {
      "op": "POP"
    },
    "3926": {
      "op": "MLOAD"
    },
    "3927": {
      "op": "SWAP2"
    },
    "3928": {
      "op": "SWAP1"
    },
    "3929": {
      "op": "POP"
    },
    "3930": {
      "jump": "o",
      "op": "JUMP"
    },
    "3931": {
      "op": "JUMPDEST"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3938": {
      "op": "SHL"
    },
    "3939": {
      "op": "SUB"
    },
    "3940": {
      "op": "SWAP2"
    },
    "3941": {
      "op": "SWAP1"
    },
    "3942": {
      "op": "SWAP2"
    },
    "3943": {
      "op": "AND"
    },
    "3944": {
      "op": "DUP2"
    },
    "3945": {
      "op": "MSTORE"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3948": {
      "op": "ADD"
    },
    "3949": {
      "op": "SWAP1"
    },
    "3950": {
      "jump": "o",
      "op": "JUMP"
    },
    "3951": {
      "op": "JUMPDEST"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3954": {
      "op": "DUP2"
    },
    "3955": {
      "op": "ADD"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3958": {
      "op": "DUP4"
    },
    "3959": {
      "op": "LT"
    },
    "3960": {
      "op": "PUSH2",
      "value": "0xF91"
    },
    "3963": {
      "op": "JUMPI"
    },
    "3964": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3969": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3971": {
      "op": "SHL"
    },
    "3972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3974": {
      "op": "MSTORE"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3977": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3979": {
      "op": "MSTORE"
    },
    "3980": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3984": {
      "op": "REVERT"
    },
    "3985": {
      "op": "JUMPDEST"
    },
    "3986": {
      "op": "SWAP2"
    },
    "3987": {
      "op": "SWAP1"
    },
    "3988": {
      "op": "MSTORE"
    },
    "3989": {
      "op": "SWAP1"
    },
    "3990": {
      "jump": "o",
      "op": "JUMP"
    },
    "3991": {
      "op": "JUMPDEST"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3994": {
      "op": "DUP1"
    },
    "3995": {
      "op": "DUP3"
    },
    "3996": {
      "op": "MSTORE"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "3999": {
      "op": "SWAP1"
    },
    "4000": {
      "op": "DUP3"
    },
    "4001": {
      "op": "ADD"
    },
    "4002": {
      "op": "MSTORE"
    },
    "4003": {
      "op": "PUSH11",
      "value": "0x77726F6E672076616C7565"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4017": {
      "op": "SHL"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4020": {
      "op": "DUP3"
    },
    "4021": {
      "op": "ADD"
    },
    "4022": {
      "op": "MSTORE"
    },
    "4023": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4025": {
      "op": "ADD"
    },
    "4026": {
      "op": "SWAP1"
    },
    "4027": {
      "jump": "o",
      "op": "JUMP"
    },
    "4028": {
      "op": "JUMPDEST"
    },
    "4029": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4031": {
      "op": "DUP1"
    },
    "4032": {
      "op": "DUP3"
    },
    "4033": {
      "op": "MSTORE"
    },
    "4034": {
      "op": "DUP2"
    },
    "4035": {
      "op": "DUP2"
    },
    "4036": {
      "op": "ADD"
    },
    "4037": {
      "op": "MSTORE"
    },
    "4038": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "4071": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4073": {
      "op": "DUP3"
    },
    "4074": {
      "op": "ADD"
    },
    "4075": {
      "op": "MSTORE"
    },
    "4076": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4078": {
      "op": "ADD"
    },
    "4079": {
      "op": "SWAP1"
    },
    "4080": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "3310f891ae2e68a177b08ff1c4f4ecca03634433",
  "source": "pragma solidity ^0.8.0;\n\n// SPDX-License-Identifier: BUSL-1.1\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../Pool/BufferIBFRPoolV2.sol\";\n\n/**\n * @author Heisenberg\n * @title Buffer BNB Bidirectional (Call and Put) Options\n * @notice Buffer BNB Options Contract\n */\ncontract OptionConfig is Ownable, IBufferOptions, IOptionsConfig {\n    uint256 public impliedVolRate;\n    uint256 public optionCollateralizationRatio = 100;\n    uint256 public settlementFeePercentage = 500; // Adding 2 more decimal places for precision, eg. 1.55%\n    uint256 public stakingFeePercentage = 50;\n    uint256 public referralRewardPercentage = 0;\n    uint256 public nftSaleRoyaltyPercentage = 5;\n    uint256 internal constant PRICE_DECIMALS = 1e8;\n    address public settlementFeeRecipient;\n    uint256 public utilizationRate = 60e8;\n    uint256 public fixedStrike;\n    uint256 public maxPeriod = 24 hours;\n    uint256 public optionSizePerBlockLimitPercent = 5;\n    BufferIBFRPoolV2 public pool;\n    PermittedTradingType public permittedTradingType;\n\n    constructor(\n        address staking,\n        uint256 initialImpliedVolRate,\n        uint256 initialStrike,\n        BufferIBFRPoolV2 _pool\n    ) {\n        settlementFeeRecipient = staking;\n        fixedStrike = initialStrike;\n        impliedVolRate = initialImpliedVolRate;\n        pool = _pool;\n    }\n\n    /**\n     * @notice Check the validity of the input params\n     * @param optionType Call or Put option type\n     * @param period Option period in seconds (1 days <= period <= 90 days)\n     * @param amount Option amount\n     * @param strikeFee strike fee for the option\n     * @param totalFee total fee for the option\n     * @param msgValue the msg.value given to the Create function\n     */\n    function checkParams(\n        IBufferOptions.OptionType optionType,\n        uint256 period,\n        uint256 amount,\n        uint256 strikeFee,\n        uint256 totalFee,\n        uint256 msgValue\n    ) external pure {\n        require(\n            optionType == IBufferOptions.OptionType.Call ||\n                optionType == IBufferOptions.OptionType.Put,\n            \"Wrong option type\"\n        );\n        require(period >= 1 days, \"Period is too short\");\n        require(period <= 90 days, \"Period is too long\");\n        require(amount > strikeFee, \"Price difference is too large\");\n        require(msgValue >= totalFee, \"Wrong value\");\n    }\n\n    /**\n     * @notice Used for adjusting the maxPeriod\n     * @param value New maxPeriod\n     */\n    function setMaxPeriod(uint256 value) external onlyOwner {\n        require(\n            value >= 5 minutes,\n            \"MaxPeriod needs to be greater than 5 minutes\"\n        );\n        maxPeriod = value;\n        emit UpdateMaxPeriod(value);\n    }\n\n    /**\n     * @notice Used for adjusting the option size per block limit percent\n     * @param value New option size per block limit percent value\n     */\n    function setOptionSizePerBlockLimitPercent(uint256 value)\n        external\n        onlyOwner\n    {\n        require(\n            value < 100,\n            \"OptionSizePerBlockLimitPercent needs to be less than 100\"\n        );\n        optionSizePerBlockLimitPercent = value;\n        emit UpdateOptionSizePerBlockLimitPercent(value);\n    }\n\n    /**\n     * @notice Used for adjusting the options prices while balancing asset's implied volatility rate\n     * @param value New IVRate value\n     */\n    function setImpliedVolRate(uint256 value) external onlyOwner {\n        require(value >= 100, \"ImpliedVolRate limit is too small\");\n        impliedVolRate = value;\n        emit UpdateImpliedVolatility(value);\n    }\n\n    function setTradingPermission(PermittedTradingType permissionType)\n        external\n        onlyOwner\n    {\n        permittedTradingType = permissionType;\n        emit UpdateTradingPermission(permissionType);\n    }\n\n    /**\n     * @notice Used for changing strike\n     * @param value New fixedStrike value\n     */\n    function setStrike(uint256 value) external onlyOwner {\n        require(\n            block.timestamp > pool.fixedExpiry(),\n            \"Can't change strike before the expiry ends\"\n        );\n        fixedStrike = value;\n        emit UpdateStrike(value);\n    }\n\n    /**\n     * @notice Used for adjusting the settlement fee percentage\n     * @param value New Settlement Fee Percentage\n     */\n    function setSettlementFeePercentage(uint256 value) external onlyOwner {\n        require(value < 20, \"SettlementFeePercentage is too high\");\n        settlementFeePercentage = value;\n        emit UpdateSettlementFeePercentage(value);\n    }\n\n    /**\n     * @notice Used for changing settlementFeeRecipient\n     * @param recipient New settlementFee recipient address\n     */\n    function setSettlementFeeRecipient(address recipient) external onlyOwner {\n        require(address(recipient) != address(0));\n        settlementFeeRecipient = recipient;\n        emit UpdateSettlementFeeRecipient(address(recipient));\n    }\n\n    /**\n     * @notice Used for adjusting the staking fee percentage\n     * @param value New Staking Fee Percentage\n     */\n    function setStakingFeePercentage(uint256 value) external onlyOwner {\n        require(value <= 100, \"StakingFeePercentage is too high\");\n        stakingFeePercentage = value;\n        emit UpdateStakingFeePercentage(value);\n    }\n\n    /**\n     * @notice Used for adjusting the referral reward percentage\n     * @param value New Referral Reward Percentage\n     */\n    function setReferralRewardPercentage(uint256 value) external onlyOwner {\n        require(value <= 100, \"ReferralRewardPercentage is too high\");\n        referralRewardPercentage = value;\n        emit UpdateReferralRewardPercentage(value);\n    }\n\n    /**\n     * @notice Used for changing option collateralization ratio\n     * @param value New optionCollateralizationRatio value\n     */\n    function setOptionCollaterizationRatio(uint256 value) external onlyOwner {\n        require(50 <= value && value <= 100, \"wrong value\");\n        optionCollateralizationRatio = value;\n        emit UpdateOptionCollaterizationRatio(value);\n    }\n\n    /**\n     * @notice Used for changing nftSaleRoyaltyPercentage\n     * @param value New nftSaleRoyaltyPercentage value\n     */\n    function setNFTSaleRoyaltyPercentage(uint256 value) external onlyOwner {\n        require(value <= 10, \"wrong value\");\n        nftSaleRoyaltyPercentage = value;\n        emit UpdateNFTSaleRoyaltyPercentage(value);\n    }\n\n    /**\n     * @notice Used for updating utilizationRate value\n     * @param value New utilizationRate value\n     **/\n    function setUtilizationRate(uint256 value) external onlyOwner {\n        utilizationRate = value;\n    }\n}\n",
  "sourceMap": "283:6364:37:-:0;;;435:3;389:49;;485:3;444:44;;589:2;551:40;;639:1;597:43;;688:1;646:43;;823:4;790:37;;892:8;865:35;;954:1;906:49;;1050:301;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:2;666:10:15;867:9:2;:23::i;:::-;1205:22:37;:32;;-1:-1:-1;;;;;1205:32:37;;;-1:-1:-1;;;;;;1205:32:37;;;;;;;1247:11;:27;;;;1205:32;1284:38;;;;1332:4;:12;;;;;;;;;;;283:6364;;2041:169:2;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;14:544:48:-;137:6;145;153;161;214:3;202:9;193:7;189:23;185:33;182:2;;;236:6;228;221:22;182:2;273:9;267:16;292:31;317:5;292:31;:::i;:::-;342:5;332:15;;;387:2;376:9;372:18;366:25;356:35;;431:2;420:9;416:18;410:25;400:35;;480:2;469:9;465:18;459:25;493:33;518:7;493:33;:::i;:::-;172:386;;;;-1:-1:-1;172:386:48;;-1:-1:-1;;172:386:48:o;563:131::-;-1:-1:-1;;;;;638:31:48;;628:42;;618:2;;684:1;681;674:12;618:2;608:86;:::o;:::-;283:6364:37;;;;;;",
  "sourcePath": "contracts/Options/OptionConfig.sol",
  "type": "contract"
}