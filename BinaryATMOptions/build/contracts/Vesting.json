{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeStamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        }
      ],
      "name": "TokenClaimed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_users",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "allotTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "claimVestedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyTokenWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getNextVestingClaim",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "isVestingClaimable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool_name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_periods",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_percents",
          "type": "uint256[]"
        }
      ],
      "name": "setupVestingMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        }
      ],
      "name": "startVestingMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokensAlloted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokensClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "vestingTimerStarted",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestInfoLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "13": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Address.sol",
    "14": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
    "2": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/Ownable.sol",
    "4": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol",
    "5": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
    "50": "contracts/Vesting.sol",
    "6": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "7": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/utils/SafeERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/Vesting.sol",
    "exportedSymbols": {
      "Address": [
        26877
      ],
      "Context": [
        27123
      ],
      "ERC20": [
        24690
      ],
      "IERC20": [
        27201
      ],
      "IERC20Metadata": [
        27226
      ],
      "Ownable": [
        24144
      ],
      "SafeERC20": [
        27101
      ],
      "Vesting": [
        24040
      ]
    },
    "id": 24041,
    "license": "agpl-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23464,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "608:23:50"
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 23465,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24041,
        "sourceUnit": 24691,
        "src": "633:55:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 23466,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24041,
        "sourceUnit": 27102,
        "src": "689:65:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 23467,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24041,
        "sourceUnit": 26878,
        "src": "755:51:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 23468,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24041,
        "sourceUnit": 24145,
        "src": "807:52:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 23469,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24144,
              "src": "881:7:50"
            },
            "id": 23470,
            "nodeType": "InheritanceSpecifier",
            "src": "881:7:50"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24040,
        "linearizedBaseContracts": [
          24040,
          24144,
          27123
        ],
        "name": "Vesting",
        "nameLocation": "870:7:50",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 23473,
            "libraryName": {
              "id": 23471,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26877,
              "src": "901:7:50"
            },
            "nodeType": "UsingForDirective",
            "src": "895:26:50",
            "typeName": {
              "id": 23472,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "913:7:50",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 23477,
            "libraryName": {
              "id": 23474,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27101,
              "src": "932:9:50"
            },
            "nodeType": "UsingForDirective",
            "src": "926:26:50",
            "typeName": {
              "id": 23476,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23475,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24690,
                "src": "946:5:50"
              },
              "referencedDeclaration": 24690,
              "src": "946:5:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$24690",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "bde59079",
            "id": 23481,
            "mutability": "mutable",
            "name": "tokensAlloted",
            "nameLocation": "1048:13:50",
            "nodeType": "VariableDeclaration",
            "scope": 24040,
            "src": "1013:48:50",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 23480,
              "keyType": {
                "id": 23478,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1021:7:50",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1013:27:50",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 23479,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1032:7:50",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "624601b6",
            "id": 23485,
            "mutability": "mutable",
            "name": "tokensClaimed",
            "nameLocation": "1102:13:50",
            "nodeType": "VariableDeclaration",
            "scope": 24040,
            "src": "1067:48:50",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 23484,
              "keyType": {
                "id": 23482,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1075:7:50",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1067:27:50",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 23483,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1086:7:50",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 23488,
            "mutability": "constant",
            "name": "PERCENT100",
            "nameLocation": "1148:10:50",
            "nodeType": "VariableDeclaration",
            "scope": 24040,
            "src": "1122:42:50",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23486,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1122:7:50",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "316536",
              "id": 23487,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1161:3:50",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "value": "1e6"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23490,
            "mutability": "mutable",
            "name": "_pool_name",
            "nameLocation": "1186:10:50",
            "nodeType": "VariableDeclaration",
            "scope": 24040,
            "src": "1171:25:50",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 23489,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1171:6:50",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "Vesting.VestingInfo",
            "id": 23501,
            "members": [
              {
                "constant": false,
                "id": 23493,
                "mutability": "mutable",
                "name": "periods",
                "nameLocation": "1242:7:50",
                "nodeType": "VariableDeclaration",
                "scope": 23501,
                "src": "1232:17:50",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 23491,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1232:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23492,
                  "nodeType": "ArrayTypeName",
                  "src": "1232:9:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23496,
                "mutability": "mutable",
                "name": "percents",
                "nameLocation": "1269:8:50",
                "nodeType": "VariableDeclaration",
                "scope": 23501,
                "src": "1259:18:50",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 23494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1259:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23495,
                  "nodeType": "ArrayTypeName",
                  "src": "1259:9:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23498,
                "mutability": "mutable",
                "name": "startTime",
                "nameLocation": "1295:9:50",
                "nodeType": "VariableDeclaration",
                "scope": 23501,
                "src": "1287:17:50",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23497,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1287:7:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23500,
                "mutability": "mutable",
                "name": "vestingTimerStarted",
                "nameLocation": "1319:19:50",
                "nodeType": "VariableDeclaration",
                "scope": 23501,
                "src": "1314:24:50",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 23499,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1314:4:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "VestingInfo",
            "nameLocation": "1210:11:50",
            "nodeType": "StructDefinition",
            "scope": 24040,
            "src": "1203:142:50",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bcb43a1d",
            "id": 23504,
            "mutability": "mutable",
            "name": "vestInfo",
            "nameLocation": "1369:8:50",
            "nodeType": "VariableDeclaration",
            "scope": 24040,
            "src": "1350:27:50",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_VestingInfo_$23501_storage",
              "typeString": "struct Vesting.VestingInfo"
            },
            "typeName": {
              "id": 23503,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23502,
                "name": "VestingInfo",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23501,
                "src": "1350:11:50"
              },
              "referencedDeclaration": 23501,
              "src": "1350:11:50",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_VestingInfo_$23501_storage_ptr",
                "typeString": "struct Vesting.VestingInfo"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "029704af",
            "id": 23506,
            "mutability": "mutable",
            "name": "vestInfoLength",
            "nameLocation": "1398:14:50",
            "nodeType": "VariableDeclaration",
            "scope": 24040,
            "src": "1383:29:50",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23505,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1383:7:50",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 23512,
            "mutability": "mutable",
            "name": "investorsClaimMap",
            "nameLocation": "1463:17:50",
            "nodeType": "VariableDeclaration",
            "scope": 24040,
            "src": "1418:62:50",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(uint256 => bool))"
            },
            "typeName": {
              "id": 23511,
              "keyType": {
                "id": 23507,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1426:7:50",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1418:44:50",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(uint256 => bool))"
              },
              "valueType": {
                "id": 23510,
                "keyType": {
                  "id": 23508,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1445:7:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "1437:24:50",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "valueType": {
                  "id": 23509,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1456:4:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 23515,
            "mutability": "immutable",
            "name": "token",
            "nameLocation": "1510:5:50",
            "nodeType": "VariableDeclaration",
            "scope": 24040,
            "src": "1487:28:50",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$24690",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 23514,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23513,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24690,
                "src": "1487:5:50"
              },
              "referencedDeclaration": 24690,
              "src": "1487:5:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$24690",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 23523,
            "name": "TokenClaimed",
            "nameLocation": "1528:12:50",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23517,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1566:4:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 23523,
                  "src": "1550:20:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23516,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1550:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23519,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timeStamp",
                  "nameLocation": "1588:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 23523,
                  "src": "1580:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23518,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1580:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23521,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "1615:11:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 23523,
                  "src": "1607:19:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23520,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1607:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1540:92:50"
            },
            "src": "1522:111:50"
          },
          {
            "body": {
              "id": 23539,
              "nodeType": "Block",
              "src": "1686:59:50",
              "statements": [
                {
                  "expression": {
                    "id": 23533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23531,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23515,
                      "src": "1696:5:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$24690",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23532,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23526,
                      "src": "1704:6:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$24690",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1696:14:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$24690",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 23534,
                  "nodeType": "ExpressionStatement",
                  "src": "1696:14:50"
                },
                {
                  "expression": {
                    "id": 23537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23535,
                      "name": "_pool_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23490,
                      "src": "1720:10:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23536,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23528,
                      "src": "1733:5:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1720:18:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 23538,
                  "nodeType": "ExpressionStatement",
                  "src": "1720:18:50"
                }
              ]
            },
            "id": 23540,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23526,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1657:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 23540,
                  "src": "1651:12:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$24690",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 23525,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 23524,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24690,
                      "src": "1651:5:50"
                    },
                    "referencedDeclaration": 24690,
                    "src": "1651:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$24690",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23528,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1679:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 23540,
                  "src": "1665:19:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 23527,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1665:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1650:35:50"
            },
            "returnParameters": {
              "id": 23530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1686:0:50"
            },
            "scope": 24040,
            "src": "1639:106:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23622,
              "nodeType": "Block",
              "src": "2117:726:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2135:29:50",
                        "subExpression": {
                          "expression": {
                            "id": 23553,
                            "name": "vestInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23504,
                            "src": "2136:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingInfo_$23501_storage",
                              "typeString": "struct Vesting.VestingInfo storage ref"
                            }
                          },
                          "id": 23554,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "vestingTimerStarted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23500,
                          "src": "2136:28:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e6720616c72656164792073746172746564",
                        "id": 23556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2166:25:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e",
                          "typeString": "literal_string \"Vesting already started\""
                        },
                        "value": "Vesting already started"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e",
                          "typeString": "literal_string \"Vesting already started\""
                        }
                      ],
                      "id": 23552,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2127:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2127:65:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23558,
                  "nodeType": "ExpressionStatement",
                  "src": "2127:65:50"
                },
                {
                  "assignments": [
                    23560
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23560,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "2211:3:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 23622,
                      "src": "2203:11:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23559,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2203:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23563,
                  "initialValue": {
                    "expression": {
                      "id": 23561,
                      "name": "_periods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23544,
                      "src": "2217:8:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "id": 23562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2217:15:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2203:29:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23565,
                          "name": "len",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23560,
                          "src": "2250:3:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 23566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2256:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2250:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206c656e677468",
                        "id": 23568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2259:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7",
                          "typeString": "literal_string \"Invalid length\""
                        },
                        "value": "Invalid length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7",
                          "typeString": "literal_string \"Invalid length\""
                        }
                      ],
                      "id": 23564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2242:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2242:34:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23570,
                  "nodeType": "ExpressionStatement",
                  "src": "2242:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23572,
                          "name": "len",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23560,
                          "src": "2294:3:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 23573,
                            "name": "_percents",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23547,
                            "src": "2301:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 23574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2301:16:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2294:23:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e672072616e676573",
                        "id": 23576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2319:14:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f73aead3daafb06cc3ee0ca53878ed1facdf50498daa8f3b241de1cb7be7efc",
                          "typeString": "literal_string \"Wrong ranges\""
                        },
                        "value": "Wrong ranges"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f73aead3daafb06cc3ee0ca53878ed1facdf50498daa8f3b241de1cb7be7efc",
                          "typeString": "literal_string \"Wrong ranges\""
                        }
                      ],
                      "id": 23571,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2286:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2286:48:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23578,
                  "nodeType": "ExpressionStatement",
                  "src": "2286:48:50"
                },
                {
                  "assignments": [
                    23580
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23580,
                      "mutability": "mutable",
                      "name": "totalPcnt",
                      "nameLocation": "2439:9:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 23622,
                      "src": "2431:17:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23579,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2431:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23581,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2431:17:50"
                },
                {
                  "body": {
                    "id": 23600,
                    "nodeType": "Block",
                    "src": "2492:61:50",
                    "statements": [
                      {
                        "expression": {
                          "id": 23598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 23592,
                            "name": "totalPcnt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23580,
                            "src": "2506:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 23597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 23593,
                              "name": "totalPcnt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23580,
                              "src": "2518:9:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 23594,
                                "name": "_percents",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23547,
                                "src": "2530:9:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 23596,
                              "indexExpression": {
                                "id": 23595,
                                "name": "n",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23583,
                                "src": "2540:1:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2530:12:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2518:24:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2506:36:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 23599,
                        "nodeType": "ExpressionStatement",
                        "src": "2506:36:50"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 23588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 23586,
                      "name": "n",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23583,
                      "src": "2478:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 23587,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23560,
                      "src": "2482:3:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2478:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23601,
                  "initializationExpression": {
                    "assignments": [
                      23583
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 23583,
                        "mutability": "mutable",
                        "name": "n",
                        "nameLocation": "2471:1:50",
                        "nodeType": "VariableDeclaration",
                        "scope": 23601,
                        "src": "2463:9:50",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 23582,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2463:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 23585,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 23584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2475:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2463:13:50"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 23590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2487:3:50",
                      "subExpression": {
                        "id": 23589,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23583,
                        "src": "2487:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23591,
                    "nodeType": "ExpressionStatement",
                    "src": "2487:3:50"
                  },
                  "nodeType": "ForStatement",
                  "src": "2458:95:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23603,
                          "name": "totalPcnt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23580,
                          "src": "2570:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 23604,
                          "name": "PERCENT100",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23488,
                          "src": "2583:10:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2570:23:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50657263656e7461676573206164642075702073686f756c642062652031303025",
                        "id": 23606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2595:35:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_819d62e53befd63df97ea0ac4415c15f51985e52013fb07128c48e15249ce269",
                          "typeString": "literal_string \"Percentages add up should be 100%\""
                        },
                        "value": "Percentages add up should be 100%"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_819d62e53befd63df97ea0ac4415c15f51985e52013fb07128c48e15249ce269",
                          "typeString": "literal_string \"Percentages add up should be 100%\""
                        }
                      ],
                      "id": 23602,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2562:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2562:69:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23608,
                  "nodeType": "ExpressionStatement",
                  "src": "2562:69:50"
                },
                {
                  "expression": {
                    "id": 23611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23609,
                      "name": "vestInfoLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23506,
                      "src": "2642:14:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23610,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23560,
                      "src": "2659:3:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2642:20:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23612,
                  "nodeType": "ExpressionStatement",
                  "src": "2642:20:50"
                },
                {
                  "expression": {
                    "id": 23620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23613,
                      "name": "vestInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23504,
                      "src": "2672:8:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VestingInfo_$23501_storage",
                        "typeString": "struct Vesting.VestingInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 23615,
                          "name": "_periods",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23544,
                          "src": "2718:8:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        },
                        {
                          "id": 23616,
                          "name": "_percents",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23547,
                          "src": "2750:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 23617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2784:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 23618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2820:5:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 23614,
                        "name": "VestingInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23501,
                        "src": "2683:11:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_VestingInfo_$23501_storage_ptr_$",
                          "typeString": "type(struct Vesting.VestingInfo storage pointer)"
                        }
                      },
                      "id": 23619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "periods",
                        "percents",
                        "startTime",
                        "vestingTimerStarted"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2683:153:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VestingInfo_$23501_memory_ptr",
                        "typeString": "struct Vesting.VestingInfo memory"
                      }
                    },
                    "src": "2672:164:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingInfo_$23501_storage",
                      "typeString": "struct Vesting.VestingInfo storage ref"
                    }
                  },
                  "id": 23621,
                  "nodeType": "ExpressionStatement",
                  "src": "2672:164:50"
                }
              ]
            },
            "documentation": {
              "id": 23541,
              "nodeType": "StructuredDocumentation",
              "src": "1751:237:50",
              "text": " @dev Setup and turn on the vesting feature\n @param _periods - Array of period of the vesting.\n @param _percents - Array of percents release of the vesting.\n @notice - Access control: Public onlyOwner."
            },
            "functionSelector": "11e128a9",
            "id": 23623,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 23550,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23549,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24087,
                  "src": "2107:9:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "2107:9:50"
              }
            ],
            "name": "setupVestingMode",
            "nameLocation": "2002:16:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23544,
                  "mutability": "mutable",
                  "name": "_periods",
                  "nameLocation": "2047:8:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 23623,
                  "src": "2028:27:50",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23542,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2028:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23543,
                    "nodeType": "ArrayTypeName",
                    "src": "2028:9:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23547,
                  "mutability": "mutable",
                  "name": "_percents",
                  "nameLocation": "2084:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 23623,
                  "src": "2065:28:50",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23545,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2065:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23546,
                    "nodeType": "ArrayTypeName",
                    "src": "2065:9:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2018:81:50"
            },
            "returnParameters": {
              "id": 23551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2117:0:50"
            },
            "scope": 24040,
            "src": "1993:850:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23709,
              "nodeType": "Block",
              "src": "3260:540:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3278:29:50",
                        "subExpression": {
                          "expression": {
                            "id": 23636,
                            "name": "vestInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23504,
                            "src": "3279:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingInfo_$23501_storage",
                              "typeString": "struct Vesting.VestingInfo storage ref"
                            }
                          },
                          "id": 23637,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "vestingTimerStarted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23500,
                          "src": "3279:28:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e6720616c72656164792073746172746564",
                        "id": 23639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3309:25:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e",
                          "typeString": "literal_string \"Vesting already started\""
                        },
                        "value": "Vesting already started"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e",
                          "typeString": "literal_string \"Vesting already started\""
                        }
                      ],
                      "id": 23635,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3270:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3270:65:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23641,
                  "nodeType": "ExpressionStatement",
                  "src": "3270:65:50"
                },
                {
                  "assignments": [
                    23643
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23643,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "3354:3:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 23709,
                      "src": "3346:11:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23642,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3346:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23646,
                  "initialValue": {
                    "expression": {
                      "id": 23644,
                      "name": "_users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23627,
                      "src": "3360:6:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "id": 23645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3360:13:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3346:27:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23648,
                          "name": "len",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23643,
                          "src": "3391:3:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 23649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3397:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3391:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206c656e677468",
                        "id": 23651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3400:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7",
                          "typeString": "literal_string \"Invalid length\""
                        },
                        "value": "Invalid length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7",
                          "typeString": "literal_string \"Invalid length\""
                        }
                      ],
                      "id": 23647,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3383:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3383:34:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23653,
                  "nodeType": "ExpressionStatement",
                  "src": "3383:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23655,
                          "name": "len",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23643,
                          "src": "3435:3:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 23656,
                            "name": "_tokenAmounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23630,
                            "src": "3442:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 23657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3442:20:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3435:27:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e672072616e676573",
                        "id": 23659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3464:14:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f73aead3daafb06cc3ee0ca53878ed1facdf50498daa8f3b241de1cb7be7efc",
                          "typeString": "literal_string \"Wrong ranges\""
                        },
                        "value": "Wrong ranges"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f73aead3daafb06cc3ee0ca53878ed1facdf50498daa8f3b241de1cb7be7efc",
                          "typeString": "literal_string \"Wrong ranges\""
                        }
                      ],
                      "id": 23654,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3427:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3427:52:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23661,
                  "nodeType": "ExpressionStatement",
                  "src": "3427:52:50"
                },
                {
                  "assignments": [
                    23663
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23663,
                      "mutability": "mutable",
                      "name": "totalAllotedAmount",
                      "nameLocation": "3498:18:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 23709,
                      "src": "3490:26:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23662,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3490:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23664,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3490:26:50"
                },
                {
                  "body": {
                    "id": 23695,
                    "nodeType": "Block",
                    "src": "3561:156:50",
                    "statements": [
                      {
                        "assignments": [
                          23676
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 23676,
                            "mutability": "mutable",
                            "name": "_user",
                            "nameLocation": "3583:5:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 23695,
                            "src": "3575:13:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 23675,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3575:7:50",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 23680,
                        "initialValue": {
                          "baseExpression": {
                            "id": 23677,
                            "name": "_users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23627,
                            "src": "3591:6:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 23679,
                          "indexExpression": {
                            "id": 23678,
                            "name": "n",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23666,
                            "src": "3598:1:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3591:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3575:25:50"
                      },
                      {
                        "expression": {
                          "id": 23687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 23681,
                              "name": "tokensAlloted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23481,
                              "src": "3614:13:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 23683,
                            "indexExpression": {
                              "id": 23682,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23676,
                              "src": "3628:5:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3614:20:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 23684,
                              "name": "_tokenAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23630,
                              "src": "3638:13:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 23686,
                            "indexExpression": {
                              "id": 23685,
                              "name": "n",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23666,
                              "src": "3652:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3638:16:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3614:40:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 23688,
                        "nodeType": "ExpressionStatement",
                        "src": "3614:40:50"
                      },
                      {
                        "expression": {
                          "id": 23693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 23689,
                            "name": "totalAllotedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23663,
                            "src": "3668:18:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 23690,
                              "name": "_tokenAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23630,
                              "src": "3690:13:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 23692,
                            "indexExpression": {
                              "id": 23691,
                              "name": "n",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23666,
                              "src": "3704:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3690:16:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3668:38:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 23694,
                        "nodeType": "ExpressionStatement",
                        "src": "3668:38:50"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 23671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 23669,
                      "name": "n",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23666,
                      "src": "3547:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 23670,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23643,
                      "src": "3551:3:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3547:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23696,
                  "initializationExpression": {
                    "assignments": [
                      23666
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 23666,
                        "mutability": "mutable",
                        "name": "n",
                        "nameLocation": "3540:1:50",
                        "nodeType": "VariableDeclaration",
                        "scope": 23696,
                        "src": "3532:9:50",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 23665,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3532:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 23668,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 23667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3544:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3532:13:50"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 23673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3556:3:50",
                      "subExpression": {
                        "id": 23672,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23666,
                        "src": "3556:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23674,
                    "nodeType": "ExpressionStatement",
                    "src": "3556:3:50"
                  },
                  "nodeType": "ForStatement",
                  "src": "3527:190:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 23700,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24073,
                          "src": "3750:5:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 23701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3750:7:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 23704,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3767:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vesting_$24040",
                              "typeString": "contract Vesting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vesting_$24040",
                              "typeString": "contract Vesting"
                            }
                          ],
                          "id": 23703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3759:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23702,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3759:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3759:13:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23706,
                        "name": "totalAllotedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23663,
                        "src": "3774:18:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 23697,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23515,
                        "src": "3727:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$24690",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 23699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26934,
                      "src": "3727:22:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$27201_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$27201_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 23707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3727:66:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23708,
                  "nodeType": "ExpressionStatement",
                  "src": "3727:66:50"
                }
              ]
            },
            "documentation": {
              "id": 23624,
              "nodeType": "StructuredDocumentation",
              "src": "2849:285:50",
              "text": " @dev Allot tokens to users and transfer that many tokens to the contract\n @param _users - Array of user addresses for alloting the tokens.\n @param _tokenAmounts - Array of token amounts alloted to users.\n @notice - Access control: Public onlyOwner."
            },
            "functionSelector": "7d8ab226",
            "id": 23710,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 23633,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23632,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24087,
                  "src": "3250:9:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "3250:9:50"
              }
            ],
            "name": "allotTokens",
            "nameLocation": "3148:11:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23627,
                  "mutability": "mutable",
                  "name": "_users",
                  "nameLocation": "3188:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 23710,
                  "src": "3169:25:50",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23625,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3169:7:50",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 23626,
                    "nodeType": "ArrayTypeName",
                    "src": "3169:9:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23630,
                  "mutability": "mutable",
                  "name": "_tokenAmounts",
                  "nameLocation": "3223:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 23710,
                  "src": "3204:32:50",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23628,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3204:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23629,
                    "nodeType": "ArrayTypeName",
                    "src": "3204:9:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3159:83:50"
            },
            "returnParameters": {
              "id": 23634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3260:0:50"
            },
            "scope": 24040,
            "src": "3139:661:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23737,
              "nodeType": "Block",
              "src": "4043:204:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4097:29:50",
                        "subExpression": {
                          "expression": {
                            "id": 23719,
                            "name": "vestInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23504,
                            "src": "4098:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingInfo_$23501_storage",
                              "typeString": "struct Vesting.VestingInfo storage ref"
                            }
                          },
                          "id": 23720,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "vestingTimerStarted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23500,
                          "src": "4098:28:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e6720616c72656164792073746172746564",
                        "id": 23722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4128:25:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e",
                          "typeString": "literal_string \"Vesting already started\""
                        },
                        "value": "Vesting already started"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e",
                          "typeString": "literal_string \"Vesting already started\""
                        }
                      ],
                      "id": 23718,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4089:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4089:65:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23724,
                  "nodeType": "ExpressionStatement",
                  "src": "4089:65:50"
                },
                {
                  "expression": {
                    "id": 23729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 23725,
                        "name": "vestInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23504,
                        "src": "4165:8:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingInfo_$23501_storage",
                          "typeString": "struct Vesting.VestingInfo storage ref"
                        }
                      },
                      "id": 23727,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "startTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23498,
                      "src": "4165:18:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23728,
                      "name": "startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23713,
                      "src": "4186:9:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4165:30:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23730,
                  "nodeType": "ExpressionStatement",
                  "src": "4165:30:50"
                },
                {
                  "expression": {
                    "id": 23735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 23731,
                        "name": "vestInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23504,
                        "src": "4205:8:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingInfo_$23501_storage",
                          "typeString": "struct Vesting.VestingInfo storage ref"
                        }
                      },
                      "id": 23733,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "vestingTimerStarted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23500,
                      "src": "4205:28:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 23734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4236:4:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4205:35:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23736,
                  "nodeType": "ExpressionStatement",
                  "src": "4205:35:50"
                }
              ]
            },
            "documentation": {
              "id": 23711,
              "nodeType": "StructuredDocumentation",
              "src": "3806:168:50",
              "text": " @dev Start the vesting counter.\n @param startTime - Time at which the vesting will start.\n @notice - Access control: External. onlyOwner."
            },
            "functionSelector": "7cae771b",
            "id": 23738,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 23716,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23715,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24087,
                  "src": "4033:9:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "4033:9:50"
              }
            ],
            "name": "startVestingMode",
            "nameLocation": "3988:16:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23713,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "4013:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 23738,
                  "src": "4005:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4005:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4004:19:50"
            },
            "returnParameters": {
              "id": 23717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4043:0:50"
            },
            "scope": 24040,
            "src": "3979:268:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23797,
              "nodeType": "Block",
              "src": "4611:421:50",
              "statements": [
                {
                  "condition": {
                    "id": 23750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4625:29:50",
                    "subExpression": {
                      "expression": {
                        "id": 23748,
                        "name": "vestInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23504,
                        "src": "4626:8:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingInfo_$23501_storage",
                          "typeString": "struct Vesting.VestingInfo storage ref"
                        }
                      },
                      "id": 23749,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vestingTimerStarted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23500,
                      "src": "4626:28:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23756,
                  "nodeType": "IfStatement",
                  "src": "4621:77:50",
                  "trueBody": {
                    "id": 23755,
                    "nodeType": "Block",
                    "src": "4656:42:50",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "66616c7365",
                              "id": 23751,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4678:5:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "hexValue": "30",
                              "id": 23752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4685:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "id": 23753,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4677:10:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                            "typeString": "tuple(bool,int_const 0)"
                          }
                        },
                        "functionReturnParameters": 23747,
                        "id": 23754,
                        "nodeType": "Return",
                        "src": "4670:17:50"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    23758
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23758,
                      "mutability": "mutable",
                      "name": "period",
                      "nameLocation": "4715:6:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 23797,
                      "src": "4707:14:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23757,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4707:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23763,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "id": 23759,
                        "name": "vestInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23504,
                        "src": "4724:8:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingInfo_$23501_storage",
                          "typeString": "struct Vesting.VestingInfo storage ref"
                        }
                      },
                      "id": 23760,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "periods",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23493,
                      "src": "4724:16:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 23762,
                    "indexExpression": {
                      "id": 23761,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23741,
                      "src": "4741:6:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4724:24:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4707:41:50"
                },
                {
                  "assignments": [
                    23765
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23765,
                      "mutability": "mutable",
                      "name": "releaseTime",
                      "nameLocation": "4766:11:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 23797,
                      "src": "4758:19:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23764,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4758:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23770,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 23769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 23766,
                        "name": "vestInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23504,
                        "src": "4780:8:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingInfo_$23501_storage",
                          "typeString": "struct Vesting.VestingInfo storage ref"
                        }
                      },
                      "id": 23767,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23498,
                      "src": "4780:18:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 23768,
                      "name": "period",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23758,
                      "src": "4801:6:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4780:27:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4758:49:50"
                },
                {
                  "assignments": [
                    23772
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23772,
                      "mutability": "mutable",
                      "name": "claimable",
                      "nameLocation": "4822:9:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 23797,
                      "src": "4817:14:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 23771,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4817:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23778,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 23773,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4835:5:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 23774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4835:15:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 23775,
                          "name": "releaseTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23765,
                          "src": "4853:11:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4835:29:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 23777,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4834:31:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4817:48:50"
                },
                {
                  "assignments": [
                    23780
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23780,
                      "mutability": "mutable",
                      "name": "remainTime",
                      "nameLocation": "4883:10:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 23797,
                      "src": "4875:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23779,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4875:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23781,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4875:18:50"
                },
                {
                  "condition": {
                    "id": 23783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4907:10:50",
                    "subExpression": {
                      "id": 23782,
                      "name": "claimable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23772,
                      "src": "4908:9:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23792,
                  "nodeType": "IfStatement",
                  "src": "4903:83:50",
                  "trueBody": {
                    "id": 23791,
                    "nodeType": "Block",
                    "src": "4919:67:50",
                    "statements": [
                      {
                        "expression": {
                          "id": 23789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 23784,
                            "name": "remainTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23780,
                            "src": "4933:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 23788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 23785,
                              "name": "releaseTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23765,
                              "src": "4946:11:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "expression": {
                                "id": 23786,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "4960:5:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 23787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "4960:15:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4946:29:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4933:42:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 23790,
                        "nodeType": "ExpressionStatement",
                        "src": "4933:42:50"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 23793,
                        "name": "claimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23772,
                        "src": "5003:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 23794,
                        "name": "remainTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23780,
                        "src": "5014:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 23795,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5002:23:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 23747,
                  "id": 23796,
                  "nodeType": "Return",
                  "src": "4995:30:50"
                }
              ]
            },
            "documentation": {
              "id": 23739,
              "nodeType": "StructuredDocumentation",
              "src": "4253:245:50",
              "text": " @dev Check whether a particular vesting index has elapsed and claimable\n @return - Bool: Claimable, uint256: If started and not claimable, returns the time needed to be claimable.\n @notice - Access control: Public."
            },
            "functionSelector": "fa71067d",
            "id": 23798,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isVestingClaimable",
            "nameLocation": "4512:18:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23741,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "4539:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 23798,
                  "src": "4531:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4531:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4530:16:50"
            },
            "returnParameters": {
              "id": 23747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23744,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23798,
                  "src": "4592:4:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23743,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4592:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23746,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23798,
                  "src": "4598:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4598:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4591:15:50"
            },
            "scope": 24040,
            "src": "4503:529:50",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23888,
              "nodeType": "Block",
              "src": "5303:708:50",
              "statements": [
                {
                  "assignments": [
                    23805,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23805,
                      "mutability": "mutable",
                      "name": "claimable",
                      "nameLocation": "5319:9:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 23888,
                      "src": "5314:14:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 23804,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5314:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 23809,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 23807,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23801,
                        "src": "5353:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23806,
                      "name": "isVestingClaimable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23798,
                      "src": "5334:18:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (bool,uint256)"
                      }
                    },
                    "id": 23808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5334:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5313:47:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23811,
                        "name": "claimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23805,
                        "src": "5378:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420636c61696d61626c6520617420746869732074696d65",
                        "id": 23812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5389:28:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_172eb5be252e1a49bd83815d752c5f7e35cbb91b1b8923ccc50b8e7c7d60af98",
                          "typeString": "literal_string \"Not claimable at this time\""
                        },
                        "value": "Not claimable at this time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_172eb5be252e1a49bd83815d752c5f7e35cbb91b1b8923ccc50b8e7c7d60af98",
                          "typeString": "literal_string \"Not claimable at this time\""
                        }
                      ],
                      "id": 23810,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5370:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5370:48:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23814,
                  "nodeType": "ExpressionStatement",
                  "src": "5370:48:50"
                },
                {
                  "assignments": [
                    23816
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23816,
                      "mutability": "mutable",
                      "name": "amtTotalToken",
                      "nameLocation": "5437:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 23888,
                      "src": "5429:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23815,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5429:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23821,
                  "initialValue": {
                    "baseExpression": {
                      "id": 23817,
                      "name": "tokensAlloted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23481,
                      "src": "5453:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 23820,
                    "indexExpression": {
                      "expression": {
                        "id": 23818,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5467:3:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 23819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5467:10:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5453:25:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5429:49:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23823,
                          "name": "amtTotalToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23816,
                          "src": "5497:13:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 23824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5513:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5497:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20746f6b656e732068617665206265656e20616c6c6f74656420746f20796f75",
                        "id": 23826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5516:36:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c02dcc80b968de48a27b41972b690234c1acf4bdd208552289590a81deffcb1",
                          "typeString": "literal_string \"No tokens have been alloted to you\""
                        },
                        "value": "No tokens have been alloted to you"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c02dcc80b968de48a27b41972b690234c1acf4bdd208552289590a81deffcb1",
                          "typeString": "literal_string \"No tokens have been alloted to you\""
                        }
                      ],
                      "id": 23822,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5489:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5489:64:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23828,
                  "nodeType": "ExpressionStatement",
                  "src": "5489:64:50"
                },
                {
                  "assignments": [
                    23830
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23830,
                      "mutability": "mutable",
                      "name": "claimed",
                      "nameLocation": "5569:7:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 23888,
                      "src": "5564:12:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 23829,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5564:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23837,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 23831,
                        "name": "investorsClaimMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23512,
                        "src": "5579:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(uint256 => bool))"
                        }
                      },
                      "id": 23834,
                      "indexExpression": {
                        "expression": {
                          "id": 23832,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5597:3:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 23833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5597:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5579:29:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                        "typeString": "mapping(uint256 => bool)"
                      }
                    },
                    "id": 23836,
                    "indexExpression": {
                      "id": 23835,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23801,
                      "src": "5609:6:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5579:37:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5564:52:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5634:8:50",
                        "subExpression": {
                          "id": 23839,
                          "name": "claimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23830,
                          "src": "5635:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973207665737420616d6f756e7420697320616c726561647920636c61696d6564",
                        "id": 23841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5644:37:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_979095a961454536daa993f14257f0a68e70f52be6e63c12bcb81af9ca9aa5d5",
                          "typeString": "literal_string \"This vest amount is already claimed\""
                        },
                        "value": "This vest amount is already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_979095a961454536daa993f14257f0a68e70f52be6e63c12bcb81af9ca9aa5d5",
                          "typeString": "literal_string \"This vest amount is already claimed\""
                        }
                      ],
                      "id": 23838,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5626:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5626:56:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23843,
                  "nodeType": "ExpressionStatement",
                  "src": "5626:56:50"
                },
                {
                  "expression": {
                    "id": 23851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 23844,
                          "name": "investorsClaimMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23512,
                          "src": "5693:17:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(uint256 => bool))"
                          }
                        },
                        "id": 23848,
                        "indexExpression": {
                          "expression": {
                            "id": 23845,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5711:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 23846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5711:10:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5693:29:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 23849,
                      "indexExpression": {
                        "id": 23847,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23801,
                        "src": "5723:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5693:37:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 23850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5733:4:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5693:44:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23852,
                  "nodeType": "ExpressionStatement",
                  "src": "5693:44:50"
                },
                {
                  "assignments": [
                    23854
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23854,
                      "mutability": "mutable",
                      "name": "amtTokens",
                      "nameLocation": "5756:9:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 23888,
                      "src": "5748:17:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23853,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5748:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23864,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 23863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 23860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 23855,
                                "name": "vestInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23504,
                                "src": "5769:8:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_VestingInfo_$23501_storage",
                                  "typeString": "struct Vesting.VestingInfo storage ref"
                                }
                              },
                              "id": 23856,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "percents",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23496,
                              "src": "5769:17:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 23858,
                            "indexExpression": {
                              "id": 23857,
                              "name": "_index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23801,
                              "src": "5787:6:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5769:25:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 23859,
                            "name": "amtTotalToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23816,
                            "src": "5797:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5769:41:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 23861,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5768:43:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 23862,
                      "name": "PERCENT100",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23488,
                      "src": "5826:10:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5768:68:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5748:88:50"
                },
                {
                  "expression": {
                    "id": 23870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23865,
                        "name": "tokensClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23485,
                        "src": "5847:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 23868,
                      "indexExpression": {
                        "expression": {
                          "id": 23866,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5861:3:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 23867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5861:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5847:25:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 23869,
                      "name": "amtTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23854,
                      "src": "5876:9:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5847:38:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23871,
                  "nodeType": "ExpressionStatement",
                  "src": "5847:38:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 23875,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5915:3:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 23876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5915:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23877,
                        "name": "amtTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23854,
                        "src": "5927:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 23872,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23515,
                        "src": "5896:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$24690",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 23874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26908,
                      "src": "5896:18:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$27201_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$27201_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 23878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5896:41:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23879,
                  "nodeType": "ExpressionStatement",
                  "src": "5896:41:50"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 23881,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5965:3:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 23882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5965:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 23883,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "5977:5:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 23884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "5977:15:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23885,
                        "name": "amtTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23854,
                        "src": "5994:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23880,
                      "name": "TokenClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23523,
                      "src": "5952:12:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 23886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5952:52:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23887,
                  "nodeType": "EmitStatement",
                  "src": "5947:57:50"
                }
              ]
            },
            "documentation": {
              "id": 23799,
              "nodeType": "StructuredDocumentation",
              "src": "5038:208:50",
              "text": " @dev Allow users to claim their vested token, according to the index of the vested period.\n @param _index - The index of the vesting period.\n @notice - Access control: External."
            },
            "functionSelector": "7935510b",
            "id": 23889,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimVestedTokens",
            "nameLocation": "5260:17:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23801,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "5286:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 23889,
                  "src": "5278:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5278:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5277:16:50"
            },
            "returnParameters": {
              "id": 23803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5303:0:50"
            },
            "scope": 24040,
            "src": "5251:760:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 24006,
              "nodeType": "Block",
              "src": "6585:823:50",
              "statements": [
                {
                  "condition": {
                    "id": 23903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6599:29:50",
                    "subExpression": {
                      "expression": {
                        "id": 23901,
                        "name": "vestInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23504,
                        "src": "6600:8:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingInfo_$23501_storage",
                          "typeString": "struct Vesting.VestingInfo storage ref"
                        }
                      },
                      "id": 23902,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vestingTimerStarted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23500,
                      "src": "6600:28:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23911,
                  "nodeType": "IfStatement",
                  "src": "6595:77:50",
                  "trueBody": {
                    "id": 23910,
                    "nodeType": "Block",
                    "src": "6630:42:50",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 23905,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "-",
                              "prefix": true,
                              "src": "6652:2:50",
                              "subExpression": {
                                "hexValue": "31",
                                "id": 23904,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6653:1:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_minus_1_by_1",
                                "typeString": "int_const -1"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 23906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6656:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "30",
                              "id": 23907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6659:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "id": 23908,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6651:10:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_rational_minus_1_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                            "typeString": "tuple(int_const -1,int_const 0,int_const 0)"
                          }
                        },
                        "functionReturnParameters": 23900,
                        "id": 23909,
                        "nodeType": "Return",
                        "src": "6644:17:50"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    23913
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23913,
                      "mutability": "mutable",
                      "name": "amtTotalToken",
                      "nameLocation": "6690:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 24006,
                      "src": "6682:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23912,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6682:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23917,
                  "initialValue": {
                    "baseExpression": {
                      "id": 23914,
                      "name": "tokensAlloted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23481,
                      "src": "6706:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 23916,
                    "indexExpression": {
                      "id": 23915,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23892,
                      "src": "6720:5:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6706:20:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6682:44:50"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 23920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 23918,
                      "name": "amtTotalToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23913,
                      "src": "6740:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 23919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6757:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6740:18:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23928,
                  "nodeType": "IfStatement",
                  "src": "6736:66:50",
                  "trueBody": {
                    "id": 23927,
                    "nodeType": "Block",
                    "src": "6760:42:50",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 23922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "-",
                              "prefix": true,
                              "src": "6782:2:50",
                              "subExpression": {
                                "hexValue": "31",
                                "id": 23921,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6783:1:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_minus_1_by_1",
                                "typeString": "int_const -1"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 23923,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6786:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "30",
                              "id": 23924,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6789:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "id": 23925,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6781:10:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_rational_minus_1_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                            "typeString": "tuple(int_const -1,int_const 0,int_const 0)"
                          }
                        },
                        "functionReturnParameters": 23900,
                        "id": 23926,
                        "nodeType": "Return",
                        "src": "6774:17:50"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    23930
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23930,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "6820:3:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 24006,
                      "src": "6812:11:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23929,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6812:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23934,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 23931,
                        "name": "vestInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23504,
                        "src": "6826:8:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingInfo_$23501_storage",
                          "typeString": "struct Vesting.VestingInfo storage ref"
                        }
                      },
                      "id": 23932,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "periods",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23493,
                      "src": "6826:16:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 23933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6826:23:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6812:37:50"
                },
                {
                  "body": {
                    "id": 23998,
                    "nodeType": "Block",
                    "src": "6893:459:50",
                    "statements": [
                      {
                        "assignments": [
                          23946,
                          23948
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 23946,
                            "mutability": "mutable",
                            "name": "claimable",
                            "nameLocation": "6913:9:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 23998,
                            "src": "6908:14:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 23945,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6908:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 23948,
                            "mutability": "mutable",
                            "name": "time",
                            "nameLocation": "6932:4:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 23998,
                            "src": "6924:12:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 23947,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6924:7:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 23952,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 23950,
                              "name": "n",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23936,
                              "src": "6959:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 23949,
                            "name": "isVestingClaimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23798,
                            "src": "6940:18:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                              "typeString": "function (uint256) view returns (bool,uint256)"
                            }
                          },
                          "id": 23951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6940:21:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                            "typeString": "tuple(bool,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6907:54:50"
                      },
                      {
                        "assignments": [
                          23954
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 23954,
                            "mutability": "mutable",
                            "name": "amtTokens",
                            "nameLocation": "6983:9:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 23998,
                            "src": "6975:17:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 23953,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6975:7:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 23964,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 23963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 23960,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 23955,
                                      "name": "vestInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23504,
                                      "src": "6996:8:50",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_VestingInfo_$23501_storage",
                                        "typeString": "struct Vesting.VestingInfo storage ref"
                                      }
                                    },
                                    "id": 23956,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "percents",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23496,
                                    "src": "6996:17:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 23958,
                                  "indexExpression": {
                                    "id": 23957,
                                    "name": "n",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23936,
                                    "src": "7014:1:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6996:20:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 23959,
                                  "name": "amtTotalToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23913,
                                  "src": "7019:13:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6996:36:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 23961,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6995:38:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 23962,
                            "name": "PERCENT100",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23488,
                            "src": "7052:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6995:67:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6975:87:50"
                      },
                      {
                        "assignments": [
                          23966
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 23966,
                            "mutability": "mutable",
                            "name": "claimed",
                            "nameLocation": "7081:7:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 23998,
                            "src": "7076:12:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 23965,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "7076:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 23972,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 23967,
                              "name": "investorsClaimMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23512,
                              "src": "7091:17:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(uint256 => bool))"
                              }
                            },
                            "id": 23969,
                            "indexExpression": {
                              "id": 23968,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23892,
                              "src": "7109:5:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7091:24:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 23971,
                          "indexExpression": {
                            "id": 23970,
                            "name": "n",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23936,
                            "src": "7116:1:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7091:27:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7076:42:50"
                      },
                      {
                        "condition": {
                          "id": 23974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "7137:10:50",
                          "subExpression": {
                            "id": 23973,
                            "name": "claimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23946,
                            "src": "7138:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 23996,
                          "nodeType": "Block",
                          "src": "7223:119:50",
                          "statements": [
                            {
                              "condition": {
                                "id": 23985,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "7245:8:50",
                                "subExpression": {
                                  "id": 23984,
                                  "name": "claimed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23966,
                                  "src": "7246:7:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 23995,
                              "nodeType": "IfStatement",
                              "src": "7241:87:50",
                              "trueBody": {
                                "id": 23994,
                                "nodeType": "Block",
                                "src": "7255:73:50",
                                "statements": [
                                  {
                                    "expression": {
                                      "components": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 23988,
                                              "name": "n",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 23936,
                                              "src": "7292:1:50",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 23987,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "7285:6:50",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_int256_$",
                                              "typeString": "type(int256)"
                                            },
                                            "typeName": {
                                              "id": 23986,
                                              "name": "int256",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "7285:6:50",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 23989,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "7285:9:50",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        },
                                        {
                                          "id": 23990,
                                          "name": "amtTokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 23954,
                                          "src": "7296:9:50",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "hexValue": "30",
                                          "id": 23991,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "7307:1:50",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "id": 23992,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "7284:25:50",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$_t_rational_0_by_1_$",
                                        "typeString": "tuple(int256,uint256,int_const 0)"
                                      }
                                    },
                                    "functionReturnParameters": 23900,
                                    "id": 23993,
                                    "nodeType": "Return",
                                    "src": "7277:32:50"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 23997,
                        "nodeType": "IfStatement",
                        "src": "7133:209:50",
                        "trueBody": {
                          "id": 23983,
                          "nodeType": "Block",
                          "src": "7149:68:50",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 23977,
                                        "name": "n",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 23936,
                                        "src": "7182:1:50",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 23976,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7175:6:50",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_int256_$",
                                        "typeString": "type(int256)"
                                      },
                                      "typeName": {
                                        "id": 23975,
                                        "name": "int256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7175:6:50",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 23978,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7175:9:50",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  {
                                    "id": 23979,
                                    "name": "amtTokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23954,
                                    "src": "7186:9:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 23980,
                                    "name": "time",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23948,
                                    "src": "7197:4:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 23981,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "7174:28:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$_t_uint256_$",
                                  "typeString": "tuple(int256,uint256,uint256)"
                                }
                              },
                              "functionReturnParameters": 23900,
                              "id": 23982,
                              "nodeType": "Return",
                              "src": "7167:35:50"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 23941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 23939,
                      "name": "n",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23936,
                      "src": "6879:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 23940,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23930,
                      "src": "6883:3:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6879:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23999,
                  "initializationExpression": {
                    "assignments": [
                      23936
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 23936,
                        "mutability": "mutable",
                        "name": "n",
                        "nameLocation": "6872:1:50",
                        "nodeType": "VariableDeclaration",
                        "scope": 23999,
                        "src": "6864:9:50",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 23935,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6864:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 23938,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 23937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6876:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6864:13:50"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 23943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6888:3:50",
                      "subExpression": {
                        "id": 23942,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23936,
                        "src": "6888:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23944,
                    "nodeType": "ExpressionStatement",
                    "src": "6888:3:50"
                  },
                  "nodeType": "ForStatement",
                  "src": "6859:493:50"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 24001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "-",
                        "prefix": true,
                        "src": "7392:2:50",
                        "subExpression": {
                          "hexValue": "31",
                          "id": 24000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7393:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_minus_1_by_1",
                          "typeString": "int_const -1"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 24002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7396:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 24003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7399:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 24004,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7391:10:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_minus_1_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                      "typeString": "tuple(int_const -1,int_const 0,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 23900,
                  "id": 24005,
                  "nodeType": "Return",
                  "src": "7384:17:50"
                }
              ]
            },
            "documentation": {
              "id": 23890,
              "nodeType": "StructuredDocumentation",
              "src": "6017:396:50",
              "text": " @dev To get the next vesting claim for a user.\n @param _user - The user's address.\n @return - int256 : the next period. -1 to indicate none found.\n @return - uint256 : the amount of token claimable\n @return - uint256 : time left to claim. If 0 (and next claim period is valid), it is currently claimable.\n @notice - Access control: External. View."
            },
            "functionSelector": "22e77e2d",
            "id": 24007,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNextVestingClaim",
            "nameLocation": "6427:19:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23892,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "6455:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 24007,
                  "src": "6447:13:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23891,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6447:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6446:15:50"
            },
            "returnParameters": {
              "id": 23900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23895,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24007,
                  "src": "6522:6:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 23894,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6522:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23897,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24007,
                  "src": "6542:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23896,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6542:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23899,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24007,
                  "src": "6563:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6563:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6508:72:50"
            },
            "scope": 24040,
            "src": "6418:990:50",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 24015,
              "nodeType": "Block",
              "src": "7537:34:50",
              "statements": [
                {
                  "expression": {
                    "id": 24013,
                    "name": "_pool_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23490,
                    "src": "7554:10:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 24012,
                  "id": 24014,
                  "nodeType": "Return",
                  "src": "7547:17:50"
                }
              ]
            },
            "documentation": {
              "id": 24008,
              "nodeType": "StructuredDocumentation",
              "src": "7414:61:50",
              "text": " @dev Returns the name of the Vesting Pool."
            },
            "functionSelector": "2d59680d",
            "id": 24016,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pool_name",
            "nameLocation": "7489:9:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7498:2:50"
            },
            "returnParameters": {
              "id": 24012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24011,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24016,
                  "src": "7522:13:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24010,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7522:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7521:15:50"
            },
            "scope": 24040,
            "src": "7480:91:50",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24038,
              "nodeType": "Block",
              "src": "7670:88:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24026,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7707:3:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 24027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7707:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7699:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24024,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7699:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7699:19:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 24033,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7744:4:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vesting_$24040",
                                  "typeString": "contract Vesting"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Vesting_$24040",
                                  "typeString": "contract Vesting"
                                }
                              ],
                              "id": 24032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7736:7:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24031,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7736:7:50",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7736:13:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 24029,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23515,
                            "src": "7720:5:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$24690",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 24030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24243,
                          "src": "7720:15:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 24035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7720:30:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24021,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23515,
                        "src": "7680:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$24690",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 24023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26908,
                      "src": "7680:18:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$27201_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$27201_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 24036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7680:71:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24037,
                  "nodeType": "ExpressionStatement",
                  "src": "7680:71:50"
                }
              ]
            },
            "functionSelector": "93aefa76",
            "id": 24039,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 24019,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24018,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24087,
                  "src": "7660:9:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "7660:9:50"
              }
            ],
            "name": "emergencyTokenWithdraw",
            "nameLocation": "7626:22:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7648:2:50"
            },
            "returnParameters": {
              "id": 24020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7670:0:50"
            },
            "scope": 24040,
            "src": "7617:141:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 24041,
        "src": "861:6899:50",
        "usedErrors": []
      }
    ],
    "src": "608:7153:50"
  },
  "bytecode": "",
  "bytecodeSha1": "16811aceb22e5063dc8b66e506a2917f80d550e9",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 1
    },
    "version": "0.8.4+commit.c7e474f2"
  },
  "contractName": "Vesting",
  "coverageMap": {
    "branches": {
      "13": {
        "Address.functionCallWithValue": {
          "68": [
            4745,
            4775,
            true
          ]
        },
        "Address.verifyCallResult": {
          "69": [
            7335,
            7342,
            false
          ],
          "70": [
            7476,
            7497,
            false
          ]
        }
      },
      "14": {},
      "2": {
        "Context._msgSender": {
          "71": [
            1185,
            1208,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "72": [
            1934,
            1956,
            true
          ]
        }
      },
      "4": {},
      "5": {},
      "50": {
        "Vesting.allotTokens": {
          "64": [
            3278,
            3307,
            true
          ],
          "65": [
            3391,
            3398,
            true
          ],
          "66": [
            3435,
            3462,
            true
          ]
        },
        "Vesting.claimVestedTokens": {
          "60": [
            5378,
            5387,
            true
          ],
          "61": [
            5497,
            5514,
            true
          ],
          "62": [
            5634,
            5642,
            true
          ]
        },
        "Vesting.getNextVestingClaim": {
          "56": [
            6600,
            6628,
            false
          ],
          "57": [
            6740,
            6758,
            false
          ],
          "58": [
            7138,
            7147,
            false
          ],
          "59": [
            7246,
            7253,
            false
          ]
        },
        "Vesting.isVestingClaimable": {
          "67": [
            4626,
            4654,
            false
          ]
        },
        "Vesting.setupVestingMode": {
          "52": [
            2135,
            2164,
            true
          ],
          "53": [
            2250,
            2257,
            true
          ],
          "54": [
            2294,
            2317,
            true
          ],
          "55": [
            2570,
            2593,
            true
          ]
        },
        "Vesting.startVestingMode": {
          "63": [
            4097,
            4126,
            true
          ]
        }
      },
      "6": {},
      "7": {
        "SafeERC20._callOptionalReturn": {
          "73": [
            3668,
            3689,
            false
          ],
          "74": [
            3752,
            3782,
            true
          ]
        }
      }
    },
    "statements": {
      "13": {
        "Address.functionCall": {
          "46": [
            3618,
            3677
          ]
        },
        "Address.functionCallWithValue": {
          "47": [
            4737,
            4818
          ],
          "48": [
            4828,
            4888
          ],
          "49": [
            4982,
            5040
          ]
        },
        "Address.verifyCallResult": {
          "50": [
            7358,
            7375
          ],
          "51": [
            7802,
            7822
          ]
        }
      },
      "14": {
        "Context._msgSender": {
          "0": [
            659,
            676
          ]
        }
      },
      "2": {
        "Ownable._setOwner": {
          "41": [
            2131,
            2148
          ],
          "42": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "34": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "16": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "36": [
            1926,
            1999
          ],
          "37": [
            2009,
            2028
          ]
        }
      },
      "4": {},
      "5": {},
      "50": {
        "Vesting.allotTokens": {
          "27": [
            3270,
            3335
          ],
          "28": [
            3383,
            3417
          ],
          "29": [
            3427,
            3479
          ],
          "30": [
            3614,
            3654
          ],
          "31": [
            3668,
            3706
          ],
          "32": [
            3556,
            3559
          ],
          "33": [
            3727,
            3793
          ]
        },
        "Vesting.claimVestedTokens": {
          "17": [
            5370,
            5418
          ],
          "18": [
            5489,
            5553
          ],
          "19": [
            5626,
            5682
          ],
          "20": [
            5693,
            5737
          ],
          "21": [
            5847,
            5885
          ],
          "22": [
            5896,
            5937
          ],
          "23": [
            5947,
            6004
          ]
        },
        "Vesting.emergencyTokenWithdraw": {
          "35": [
            7680,
            7751
          ]
        },
        "Vesting.getNextVestingClaim": {
          "9": [
            6644,
            6661
          ],
          "10": [
            6774,
            6791
          ],
          "11": [
            7167,
            7202
          ],
          "12": [
            7277,
            7309
          ],
          "13": [
            6888,
            6891
          ],
          "14": [
            7384,
            7401
          ]
        },
        "Vesting.isVestingClaimable": {
          "38": [
            4670,
            4687
          ],
          "39": [
            4933,
            4975
          ],
          "40": [
            4995,
            5025
          ]
        },
        "Vesting.pool_name": {
          "15": [
            7547,
            7564
          ]
        },
        "Vesting.setupVestingMode": {
          "1": [
            2127,
            2192
          ],
          "2": [
            2242,
            2276
          ],
          "3": [
            2286,
            2334
          ],
          "4": [
            2506,
            2542
          ],
          "5": [
            2487,
            2490
          ],
          "6": [
            2562,
            2631
          ],
          "7": [
            2642,
            2662
          ],
          "8": [
            2672,
            2836
          ]
        },
        "Vesting.startVestingMode": {
          "24": [
            4089,
            4154
          ],
          "25": [
            4165,
            4195
          ],
          "26": [
            4205,
            4240
          ]
        }
      },
      "6": {},
      "7": {
        "SafeERC20._callOptionalReturn": {
          "45": [
            3744,
            3829
          ]
        },
        "SafeERC20.safeTransfer": {
          "43": [
            746,
            832
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "44": [
            983,
            1079
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/SafeERC20"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "861:6899:50:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1383:29;;;;;;;;;10069:25:51;;;10057:2;10042:18;1383:29:50;;;;;;;;1993:850;;;;;;:::i;:::-;;:::i;:::-;;6418:990;;;;;;:::i;:::-;;:::i;:::-;;;;4869:25:51;;;4925:2;4910:18;;4903:34;;;;4953:18;;;4946:34;4857:2;4842:18;6418:990:50;4824:162:51;7480:91:50;;;:::i;:::-;;;;;;;:::i;1067:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1605:92:2;;;:::i;5251:760:50:-;;;;;;:::i;:::-;;:::i;3979:268::-;;;;;;:::i;:::-;;:::i;3139:661::-;;;;;;:::i;:::-;;:::i;973:85:2:-;;;:::i;:::-;;;;;;;:::i;7617:141:50:-;;;:::i;1350:27::-;;;;;;;;;;;;;;;;10273:25:51;;;10341:14;;10334:22;10329:2;10314:18;;10307:50;10246:18;1350:27:50;10228:135:51;1013:48:50;;;;;;:::i;:::-;;;;;;;;;;;;;;1846:189:2;;;;;;:::i;:::-;;:::i;4503:529:50:-;;;;;;:::i;:::-;;:::i;:::-;;;;4376:14:51;;4369:22;4351:41;;4423:2;4408:18;;4401:34;;;;4324:18;4503:529:50;4306:135:51;1487:28:50;;;;;1993:850;666:10:14;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;;;;;;;;;2136:28:50;;::::1;;2135:29;2127:65;;;;-1:-1:-1::0;;;2127:65:50::1;;;;;;;:::i;:::-;2217:8:::0;2250:7;2242:34:::1;;;;-1:-1:-1::0;;;2242:34:50::1;;;;;;;:::i;:::-;2294:23:::0;;::::1;2286:48;;;;-1:-1:-1::0;;;2286:48:50::1;;;;;;;:::i;:::-;2431:17;::::0;2458:95:::1;2482:3;2478:1;:7;2458:95;;;2530:9;;2540:1;2530:12;;;;;-1:-1:-1::0;;;2530:12:50::1;;;;;;;;;;;;;;;2518:9;:24;;;;:::i;:::-;2506:36:::0;-1:-1:-1;2487:3:50;::::1;::::0;::::1;:::i;:::-;;;;2458:95;;;;1161:3;2570:9;:23;2562:69;;;::::0;-1:-1:-1;;;2562:69:50;;8189:2:51;2562:69:50::1;::::0;::::1;8171:21:51::0;8228:2;8208:18;;;8201:30;8267:34;8247:18;;;8240:62;-1:-1:-1;;;8318:18:51;;;8311:31;8359:19;;2562:69:50::1;8161:223:51::0;2562:69:50::1;2642:14;:20:::0;;;2683:153:::1;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;;;;;;;;2718:8;;;;;;2683:153;;;;2718:8;;2683:153;2718:8;2683:153;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;;;2683:153:50;;;-1:-1:-1;2683:153:50::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;::::1;::::0;;;2750:9;;;;;;2683:153;::::1;::::0;2750:9;;2683:153;2750:9;2683:153;::::1;;::::0;::::1;::::0;;;-1:-1:-1;2683:153:50;;;-1:-1:-1;;;2683:153:50::1;::::0;;::::1;::::0;;;;;;;;2672:164;;;;:8:::1;::::0;:164:::1;::::0;:8;;:164;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2672:164:50::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2672:164:50::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;2672:164:50::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;;;;;;1993:850:50:o;6418:990::-;6600:28;;6522:6;;;;;;6600:28;;6595:77;;-1:-1:-1;;;6652:2:50;-1:-1:-1;6656:1:50;;-1:-1:-1;6656:1:50;6644:17;;6595:77;-1:-1:-1;;;;;6706:20:50;;6682:21;6706:20;;;:13;:20;;;;;;6740:18;6736:66;;-1:-1:-1;;6786:1:50;6789;6774:17;;;;;;;;;6736:66;6826:8;:23;6812:11;6859:493;6883:3;6879:1;:7;6859:493;;;6908:14;6924:12;6940:21;6959:1;6940:18;:21::i;:::-;6907:54;;;;6975:17;1161:3;7019:13;6996:8;:17;;7014:1;6996:20;;;;;;-1:-1:-1;;;6996:20:50;;;;;;;;;;;;;;;;;:36;;;;:::i;:::-;6995:67;;;;:::i;:::-;-1:-1:-1;;;;;7091:24:50;;7076:12;7091:24;;;:17;:24;;;;;;;;:27;;;;;;;;;6975:87;;-1:-1:-1;7091:27:50;;7138:9;7133:209;;-1:-1:-1;7182:1:50;;-1:-1:-1;7186:9:50;;-1:-1:-1;7197:4:50;;-1:-1:-1;7167:35:50;;-1:-1:-1;;;7167:35:50;7133:209;7246:7;7241:87;;-1:-1:-1;7292:1:50;;-1:-1:-1;7296:9:50;;-1:-1:-1;7307:1:50;;-1:-1:-1;7277:32:50;;-1:-1:-1;;;;7277:32:50;7241:87;6859:493;;;;6888:3;;;;;:::i;:::-;;;;6859:493;;;;-1:-1:-1;;7396:1:50;7399;7384:17;;;;;;;;6418:990;;;;;;:::o;7480:91::-;7522:13;7554:10;7547:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7480:91;:::o;1605:92:2:-;666:10:14;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;5251:760:50:-;5314:14;5334:26;5353:6;5334:18;:26::i;:::-;5313:47;;;5378:9;5370:48;;;;-1:-1:-1;;;5370:48:50;;5924:2:51;5370:48:50;;;5906:21:51;5963:2;5943:18;;;5936:30;-1:-1:-1;;;5982:18:51;;;5975:56;6048:18;;5370:48:50;5896:176:51;5370:48:50;5467:10;5429:21;5453:25;;;:13;:25;;;;;;5497:17;5489:64;;;;-1:-1:-1;;;5489:64:50;;7027:2:51;5489:64:50;;;7009:21:51;7066:2;7046:18;;;7039:30;7105:34;7085:18;;;7078:62;-1:-1:-1;;;7156:18:51;;;7149:32;7198:19;;5489:64:50;6999:224:51;5489:64:50;5597:10;5564:12;5579:29;;;:17;:29;;;;;;;;:37;;;;;;;;;;;5634:8;;5626:56;;;;-1:-1:-1;;;5626:56:50;;8591:2:51;5626:56:50;;;8573:21:51;8630:2;8610:18;;;8603:30;8669:34;8649:18;;;8642:62;-1:-1:-1;;;8720:18:51;;;8713:33;8763:19;;5626:56:50;8563:225:51;5626:56:50;5711:10;5693:29;;;;:17;:29;;;;;;;;:37;;;;;;;;:44;;-1:-1:-1;;5693:44:50;5733:4;5693:44;;;5769:17;:25;;1161:3;;5797:13;;5723:6;;5769:25;;;;-1:-1:-1;;;5769:25:50;;;;;;;;;;;;;;;;;:41;;;;:::i;:::-;5768:68;;;;:::i;:::-;5861:10;5847:25;;;;:13;:25;;;;;:38;;5748:88;;-1:-1:-1;5748:88:50;;5847:25;;;:38;;5748:88;;5847:38;:::i;:::-;;;;-1:-1:-1;5896:41:50;;-1:-1:-1;;;;;;5896:5:50;:18;5915:10;5927:9;5896:18;:41::i;:::-;5952:52;;;5977:15;10542:25:51;;10598:2;10583:18;;10576:34;;;5965:10:50;;5952:52;;10515:18:51;5952:52:50;;;;;;;5251:760;;;;;:::o;3979:268::-;666:10:14;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;4098:28:50;;::::1;;4097:29;4089:65;;;;-1:-1:-1::0;;;4089:65:50::1;;;;;;;:::i;:::-;4165:18:::0;:30;4205:28;:35;;-1:-1:-1;;4205:35:50::1;4236:4;4205:35;::::0;;3979:268::o;3139:661::-;666:10:14;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;3279:28:50;;::::1;;3278:29;3270:65;;;;-1:-1:-1::0;;;3270:65:50::1;;;;;;;:::i;:::-;3360:6:::0;3391:7;3383:34:::1;;;;-1:-1:-1::0;;;3383:34:50::1;;;;;;;:::i;:::-;3435:27:::0;;::::1;3427:52;;;;-1:-1:-1::0;;;3427:52:50::1;;;;;;;:::i;:::-;3490:26;::::0;3527:190:::1;3551:3;3547:1;:7;3527:190;;;3575:13;3591:6;;3598:1;3591:9;;;;;-1:-1:-1::0;;;3591:9:50::1;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3575:25;;3638:13;;3652:1;3638:16;;;;;-1:-1:-1::0;;;3638:16:50::1;;;;;;;;;;;;;;;3614:13;:20;3628:5;-1:-1:-1::0;;;;;3614:20:50::1;-1:-1:-1::0;;;;;3614:20:50::1;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;3690:13:50;;-1:-1:-1;3690:13:50;3704:1;3690:16;;::::1;;;-1:-1:-1::0;;;3690:16:50::1;;;;;;;;;;;;;;;3668:38;;;;;:::i;:::-;;;3527:190;3556:3;;;;;:::i;:::-;;;;3527:190;;;;3727:66;3750:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;3727:5:50::1;:22;::::0;3767:4:::1;3774:18:::0;3727:22:::1;:66::i;:::-;1255:1:2;;3139:661:50::0;;;;:::o;973:85:2:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:2;;973:85::o;7617:141:50:-;666:10:14;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;7680:71:50::1;7707:10;7720:5;-1:-1:-1::0;;;;;7720:15:50::1;;7744:4;7720:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;7680:5:50::1;:18;::::0;:71;:18:::1;:71::i;1846:189:2:-:0;666:10:14;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:2;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:2;;6279:2:51;1926:73:2::1;::::0;::::1;6261:21:51::0;6318:2;6298:18;;;6291:30;6357:34;6337:18;;;6330:62;-1:-1:-1;;;6408:18:51;;;6401:36;6454:19;;1926:73:2::1;6251:228:51::0;1926:73:2::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;4503:529:50:-;4626:28;;4592:4;;;;4626:28;;4621:77;;-1:-1:-1;4678:5:50;;;;-1:-1:-1;4503:529:50;-1:-1:-1;4503:529:50:o;4621:77::-;4707:14;4724:8;:16;;4741:6;4724:24;;;;;;-1:-1:-1;;;4724:24:50;;;;;;;;;;;;;;;;;;4780:18;;4724:24;;-1:-1:-1;4780:27:50;;4724:24;;4780:27;:::i;:::-;4758:49;-1:-1:-1;4835:15:50;:29;-1:-1:-1;4817:14:50;4835:29;4903:83;;4946:29;4960:15;4946:11;:29;:::i;:::-;4933:42;;4903:83;5003:9;;5014:10;;-1:-1:-1;4503:529:50;-1:-1:-1;;;;4503:529:50:o;2041:169:2:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;634:205:7:-;773:58;;-1:-1:-1;;;;;4096:32:51;;773:58:7;;;4078:51:51;4145:18;;;4138:34;;;746:86:7;;766:5;;-1:-1:-1;;;796:23:7;4051:18:51;;773:58:7;;;;-1:-1:-1;;773:58:7;;;;;;;;;;;;;;-1:-1:-1;;;;;773:58:7;-1:-1:-1;;;;;;773:58:7;;;;;;;;;;746:19;:86::i;:::-;634:205;;;:::o;845:241::-;1010:68;;-1:-1:-1;;;;;3782:15:51;;;1010:68:7;;;3764:34:51;3834:15;;3814:18;;;3807:43;3866:18;;;3859:34;;;983:96:7;;1003:5;;-1:-1:-1;;;1033:27:7;3699:18:51;;1010:68:7;3681:218:51;983:96:7;845:241;;;;:::o;3140:706::-;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:7;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:7;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:7;;9714:2:51;3744:85:7;;;9696:21:51;9753:2;9733:18;;;9726:30;9792:34;9772:18;;;9765:62;-1:-1:-1;;;9843:18:51;;;9836:40;9893:19;;3744:85:7;9686:232:51;3461:223:13;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;;3461:223;;;;;;:::o;4548:499::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:13;;7430:2:51;4737:81:13;;;7412:21:51;7469:2;7449:18;;;7442:30;7508:34;7488:18;;;7481:62;-1:-1:-1;;;7559:18:51;;;7552:36;7605:19;;4737:81:13;7402:228:51;4737:81:13;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:13;;9356:2:51;4828:60:13;;;9338:21:51;9395:2;9375:18;;;9368:30;9434:31;9414:18;;;9407:59;9483:18;;4828:60:13;9328:179:51;4828:60:13;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:13;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:51;5006:7;5015:10;5027:12;4989:16;:51::i;:::-;4982:58;4548:499;-1:-1:-1;;;;;;;4548:499:13:o;7161:692::-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:13;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7619:145;7809:12;7802:20;;-1:-1:-1;;;7802:20:13;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:395:51;77:8;87:6;141:3;134:4;126:6;122:17;118:27;108:2;;166:8;156;149:26;108:2;-1:-1:-1;196:20:51;;-1:-1:-1;;;;;228:30:51;;225:2;;;278:8;268;261:26;225:2;322:4;314:6;310:17;298:29;;382:3;375:4;365:6;362:1;358:14;350:6;346:27;342:38;339:47;336:2;;;399:1;396;389:12;336:2;98:311;;;;;:::o;414:306::-;473:6;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;578:23;;-1:-1:-1;;;;;630:31:51;;620:42;;610:2;;681:6;673;666:22;725:803;847:6;855;863;871;924:2;912:9;903:7;899:23;895:32;892:2;;;945:6;937;930:22;892:2;977:23;;-1:-1:-1;;;;;1049:14:51;;;1046:2;;;1081:6;1073;1066:22;1046:2;1125:70;1187:7;1178:6;1167:9;1163:22;1125:70;:::i;:::-;1214:8;;-1:-1:-1;1099:96:51;-1:-1:-1;1302:2:51;1287:18;;1274:32;;-1:-1:-1;1318:16:51;;;1315:2;;;1352:6;1344;1337:22;1315:2;;1396:72;1460:7;1449:8;1438:9;1434:24;1396:72;:::i;:::-;882:646;;;;-1:-1:-1;1487:8:51;-1:-1:-1;;;;882:646:51:o;1533:803::-;1655:6;1663;1671;1679;1732:2;1720:9;1711:7;1707:23;1703:32;1700:2;;;1753:6;1745;1738:22;1700:2;1785:23;;-1:-1:-1;;;;;1857:14:51;;;1854:2;;;1889:6;1881;1874:22;2341:297;2408:6;2461:2;2449:9;2440:7;2436:23;2432:32;2429:2;;;2482:6;2474;2467:22;2429:2;2519:9;2513:16;2572:5;2565:13;2558:21;2551:5;2548:32;2538:2;;2599:6;2591;2584:22;2643:190;2702:6;2755:2;2743:9;2734:7;2730:23;2726:32;2723:2;;;2776:6;2768;2761:22;2723:2;-1:-1:-1;2804:23:51;;2713:120;-1:-1:-1;2713:120:51:o;2838:194::-;2908:6;2961:2;2949:9;2940:7;2936:23;2932:32;2929:2;;;2982:6;2974;2967:22;2929:2;-1:-1:-1;3010:16:51;;2919:113;-1:-1:-1;2919:113:51:o;3037:274::-;3166:3;3204:6;3198:13;3220:53;3266:6;3261:3;3254:4;3246:6;3242:17;3220:53;:::i;:::-;3289:16;;;;;3174:137;-1:-1:-1;;3174:137:51:o;3316:203::-;-1:-1:-1;;;;;3480:32:51;;;;3462:51;;3450:2;3435:18;;3417:102::o;4991:383::-;5140:2;5129:9;5122:21;5103:4;5172:6;5166:13;5215:6;5210:2;5199:9;5195:18;5188:34;5231:66;5290:6;5285:2;5274:9;5270:18;5265:2;5257:6;5253:15;5231:66;:::i;:::-;5358:2;5337:15;-1:-1:-1;;5333:29:51;5318:45;;;;5365:2;5314:54;;5112:262;-1:-1:-1;;5112:262:51:o;5379:338::-;5581:2;5563:21;;;5620:2;5600:18;;;5593:30;-1:-1:-1;;;5654:2:51;5639:18;;5632:44;5708:2;5693:18;;5553:164::o;6484:336::-;6686:2;6668:21;;;6725:2;6705:18;;;6698:30;-1:-1:-1;;;6759:2:51;6744:18;;6737:42;6811:2;6796:18;;6658:162::o;7635:347::-;7837:2;7819:21;;;7876:2;7856:18;;;7849:30;-1:-1:-1;;;7910:2:51;7895:18;;7888:53;7973:2;7958:18;;7809:173::o;8793:356::-;8995:2;8977:21;;;9014:18;;;9007:30;9073:34;9068:2;9053:18;;9046:62;9140:2;9125:18;;8967:182::o;10621:128::-;10661:3;10692:1;10688:6;10685:1;10682:13;10679:2;;;10698:18;;:::i;:::-;-1:-1:-1;10734:9:51;;10669:80::o;10754:217::-;10794:1;10820;10810:2;;-1:-1:-1;;;10845:31:51;;10899:4;10896:1;10889:15;10927:4;10852:1;10917:15;10810:2;-1:-1:-1;10956:9:51;;10800:171::o;10976:168::-;11016:7;11082:1;11078;11074:6;11070:14;11067:1;11064:21;11059:1;11052:9;11045:17;11041:45;11038:2;;;11089:18;;:::i;:::-;-1:-1:-1;11129:9:51;;11028:116::o;11149:125::-;11189:4;11217:1;11214;11211:8;11208:2;;;11222:18;;:::i;:::-;-1:-1:-1;11259:9:51;;11198:76::o;11279:258::-;11351:1;11361:113;11375:6;11372:1;11369:13;11361:113;;;11451:11;;;11445:18;11432:11;;;11425:39;11397:2;11390:10;11361:113;;;11492:6;11489:1;11486:13;11483:2;;;-1:-1:-1;;11527:1:51;11509:16;;11502:27;11332:205::o;11542:380::-;11621:1;11617:12;;;;11664;;;11685:2;;11739:4;11731:6;11727:17;11717:27;;11685:2;11792;11784:6;11781:14;11761:18;11758:38;11755:2;;;11838:10;11833:3;11829:20;11826:1;11819:31;11873:4;11870:1;11863:15;11901:4;11898:1;11891:15;11755:2;;11597:325;;;:::o;11927:135::-;11966:3;-1:-1:-1;;11987:17:51;;11984:2;;;12007:18;;:::i;:::-;-1:-1:-1;12054:1:51;12043:13;;11974:88::o;12067:127::-;12128:10;12123:3;12119:20;12116:1;12109:31;12159:4;12156:1;12149:15;12183:4;12180:1;12173:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allotTokens(address[],uint256[])": {
        "details": "Allot tokens to users and transfer that many tokens to the contract",
        "notice": "- Access control: Public onlyOwner.",
        "params": {
          "_tokenAmounts": "- Array of token amounts alloted to users.",
          "_users": "- Array of user addresses for alloting the tokens."
        }
      },
      "claimVestedTokens(uint256)": {
        "details": "Allow users to claim their vested token, according to the index of the vested period.",
        "notice": "- Access control: External.",
        "params": {
          "_index": "- The index of the vesting period."
        }
      },
      "getNextVestingClaim(address)": {
        "details": "To get the next vesting claim for a user.",
        "notice": "- Access control: External. View.",
        "params": {
          "_user": "- The user's address."
        },
        "returns": {
          "_0": "- int256 : the next period. -1 to indicate none found.",
          "_1": "- uint256 : the amount of token claimable",
          "_2": "- uint256 : time left to claim. If 0 (and next claim period is valid), it is currently claimable."
        }
      },
      "isVestingClaimable(uint256)": {
        "details": "Check whether a particular vesting index has elapsed and claimable",
        "notice": "- Access control: Public.",
        "returns": {
          "_0": "- Bool: Claimable, uint256: If started and not claimable, returns the time needed to be claimable."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pool_name()": {
        "details": "Returns the name of the Vesting Pool."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setupVestingMode(uint256[],uint256[])": {
        "details": "Setup and turn on the vesting feature",
        "notice": "- Access control: Public onlyOwner.",
        "params": {
          "_percents": "- Array of percents release of the vesting.",
          "_periods": "- Array of period of the vesting."
        }
      },
      "startVestingMode(uint256)": {
        "details": "Start the vesting counter.",
        "notice": "- Access control: External. onlyOwner.",
        "params": {
          "startTime": "- Time at which the vesting will start."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    861,
    7760
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29704AF EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x11E128A9 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x22E77E2D EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x2D59680D EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x624601B6 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x7935510B EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x7CAE771B EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x7D8AB226 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x93AEFA76 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xBCB43A1D EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xBDE59079 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xFA71067D EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x24A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x11C0 JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x119 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x1131 JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH2 0x13C PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH2 0xDE PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x104 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x120B JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x104 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x120B JUMP JUMPDEST PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1158 JUMP JUMPDEST PUSH2 0x953 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x1257 JUMP JUMPDEST PUSH2 0x104 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0xE8 JUMP JUMPDEST PUSH2 0xDE PUSH2 0x1FB CALLDATASIZE PUSH1 0x4 PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x1131 JUMP JUMPDEST PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x120B JUMP JUMPDEST PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xE8 JUMP JUMPDEST PUSH2 0x1B2 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH2 0x27A PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x12EC JUMP JUMPDEST DUP3 DUP1 PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x129E JUMP JUMPDEST DUP1 DUP3 EQ PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x35B JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x335 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x1352 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x353 DUP2 PUSH2 0x1427 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x30D JUMP JUMPDEST POP PUSH3 0xF4240 DUP2 EQ PUSH2 0x3B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50657263656E7461676573206164642075702073686F756C6420626520313030 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x8 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 PUSH1 0x20 DUP9 MUL DUP1 DUP4 ADD DUP3 ADD SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP3 ADD DUP9 DUP2 MSTORE SWAP2 SWAP3 DUP4 SWAP3 SWAP2 DUP11 SWAP2 DUP11 SWAP2 DUP3 SWAP2 SWAP1 DUP7 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP8 DUP2 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP8 DUP3 MSTORE SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 DUP9 SWAP2 DUP9 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP POP PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP3 ADD MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x4 SWAP3 PUSH2 0x454 SWAP3 DUP5 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1088 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0x46D SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x1088 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND PUSH2 0x4BB JUMPI POP PUSH1 0x0 NOT SWAP2 POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x4EB JUMPI PUSH1 0x0 NOT PUSH1 0x0 DUP1 SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5C6 JUMPI PUSH1 0x0 DUP1 PUSH2 0x505 DUP4 PUSH2 0xCC5 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH3 0xF4240 DUP7 PUSH1 0x4 PUSH1 0x1 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x534 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x138A JUMP JUMPDEST PUSH2 0x553 SWAP2 SWAP1 PUSH2 0x136A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND DUP4 PUSH2 0x595 JUMPI POP SWAP3 SWAP8 POP SWAP2 SWAP6 POP SWAP1 SWAP4 POP PUSH2 0x5D6 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x5AF JUMPI POP SWAP3 SWAP8 POP SWAP2 SWAP6 POP PUSH1 0x0 SWAP5 POP PUSH2 0x5D6 SWAP4 POP POP POP POP JUMP JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x5BE SWAP1 PUSH2 0x1427 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4F1 JUMP JUMPDEST POP PUSH1 0x0 NOT PUSH1 0x0 DUP1 SWAP5 POP SWAP5 POP SWAP5 POP POP POP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5EC SWAP1 PUSH2 0x13EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x618 SWAP1 PUSH2 0x13EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x665 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x63A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x665 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x648 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH2 0x678 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x69E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH2 0x6A8 PUSH1 0x0 PUSH2 0xD46 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B5 DUP3 PUSH2 0xCC5 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x702 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x4E6F7420636C61696D61626C6520617420746869732074696D65 PUSH1 0x30 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2A0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x76A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20746F6B656E732068617665206265656E20616C6C6F74656420746F2079 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6F75 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2A0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973207665737420616D6F756E7420697320616C726561647920636C6169 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1B5959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2A0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH3 0xF4240 SWAP2 DUP6 SWAP2 DUP9 SWAP1 DUP2 LT PUSH2 0x830 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x138A JUMP JUMPDEST PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x136A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x873 SWAP1 DUP5 SWAP1 PUSH2 0x1352 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x8AD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP4 PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xCB1E26772E882480176A3E649A5F7937DC0EC3F50126283FAF56F927B070BE80 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x8F8 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x91E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x941 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x12EC JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH2 0x95C PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x12EC JUMP JUMPDEST DUP3 DUP1 PUSH2 0x9C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x129E JUMP JUMPDEST DUP1 DUP3 EQ PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAD0 JUMPI PUSH1 0x0 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0xA10 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA25 SWAP2 SWAP1 PUSH2 0x1131 JUMP JUMPDEST SWAP1 POP DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0xA47 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA82 SWAP2 SWAP1 PUSH2 0x1352 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP7 SWAP1 POP DUP6 DUP4 DUP2 DUP2 LT PUSH2 0xAA8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP4 PUSH2 0xABA SWAP2 SWAP1 PUSH2 0x1352 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0xAC8 SWAP1 PUSH2 0x1427 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9E6 JUMP JUMPDEST POP PUSH2 0xB0E PUSH2 0xADC PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 ADDRESS DUP5 PUSH2 0xDFE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH2 0xB2E PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH2 0x6A8 CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA4 SWAP2 SWAP1 PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF4 SWAP2 SWAP1 PUSH2 0x1223 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 SWAP1 PUSH2 0xD96 JUMP JUMPDEST CALLER PUSH2 0xC2E PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2A0 JUMP JUMPDEST PUSH2 0xCC2 DUP2 PUSH2 0xD46 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND PUSH2 0xCDF JUMPI POP PUSH1 0x0 SWAP3 DUP4 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xD05 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x6 SLOAD SWAP1 SWAP3 POP PUSH2 0xD21 SWAP1 DUP4 SWAP1 PUSH2 0x1352 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP2 LT PUSH1 0x0 DUP2 PUSH2 0xD3A JUMPI PUSH2 0xD37 TIMESTAMP DUP5 PUSH2 0x13A9 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xDF9 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0xE3C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xE36 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0xDC2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE91 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF0E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xDF9 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xEAF SWAP2 SWAP1 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0xDF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF1D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xF27 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xF88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2A0 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0xFD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xFF2 SWAP2 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x102F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1044 DUP3 DUP3 DUP7 PUSH2 0x104F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x105E JUMPI POP DUP2 PUSH2 0xF20 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x106E JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x10C3 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x10C3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x10A8 JUMP JUMPDEST POP PUSH2 0x10CF SWAP3 SWAP2 POP PUSH2 0x10D3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x10CF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x10F9 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x110F JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1142 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF20 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x116D JUMPI DUP3 DUP4 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1183 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x118F DUP9 DUP4 DUP10 ADD PUSH2 0x10E8 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x11A7 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x11B4 DUP8 DUP3 DUP9 ADD PUSH2 0x10E8 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x11D5 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1183 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF20 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121C JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1234 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x124D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x13C0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x128A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x92DCECC2D8D2C840D8CADCCEE8D PUSH1 0x93 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x57726F6E672072616E676573 PUSH1 0xA0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH23 0x15995CDD1A5B99C8185B1C9958591E481CDD185C9D1959 PUSH1 0x4A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1365 JUMPI PUSH2 0x1365 PUSH2 0x1442 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1385 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x13A4 JUMPI PUSH2 0x13A4 PUSH2 0x1442 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x13BB JUMPI PUSH2 0x13BB PUSH2 0x1442 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13DB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13C3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xE36 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1400 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1421 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x143B JUMPI PUSH2 0x143B PUSH2 0x1442 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D PUSH12 0x7D99AEAEF1DEDB22E0AFC6EB SWAP8 0xC3 SHR PUSH23 0xA13134A72B98AA2D0AFED91118A64736F6C6343000804 STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        861,
        7760
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "CALLVALUE",
      "path": "50"
    },
    "6": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "8": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "12": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "DUP1",
      "path": "50"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "REVERT",
      "path": "50"
    },
    "16": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "17": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "POP",
      "path": "50"
    },
    "18": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "21": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "LT",
      "path": "50"
    },
    "22": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD0"
    },
    "25": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "26": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "CALLDATALOAD",
      "path": "50"
    },
    "29": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "SHR",
      "path": "50"
    },
    "32": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "DUP1",
      "path": "50"
    },
    "33": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x29704AF"
    },
    "38": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "EQ",
      "path": "50"
    },
    "39": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD5"
    },
    "42": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "43": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "DUP1",
      "path": "50"
    },
    "44": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x11E128A9"
    },
    "49": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "EQ",
      "path": "50"
    },
    "50": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xF1"
    },
    "53": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "54": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "DUP1",
      "path": "50"
    },
    "55": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x22E77E2D"
    },
    "60": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "EQ",
      "path": "50"
    },
    "61": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x106"
    },
    "64": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "65": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "DUP1",
      "path": "50"
    },
    "66": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x2D59680D"
    },
    "71": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "EQ",
      "path": "50"
    },
    "72": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x134"
    },
    "75": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "76": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "DUP1",
      "path": "50"
    },
    "77": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x624601B6"
    },
    "82": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "EQ",
      "path": "50"
    },
    "83": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x149"
    },
    "86": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "87": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "DUP1",
      "path": "50"
    },
    "88": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x715018A6"
    },
    "93": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "EQ",
      "path": "50"
    },
    "94": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x169"
    },
    "97": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "98": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "DUP1",
      "path": "50"
    },
    "99": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x7935510B"
    },
    "104": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "EQ",
      "path": "50"
    },
    "105": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x171"
    },
    "108": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "109": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "DUP1",
      "path": "50"
    },
    "110": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x7CAE771B"
    },
    "115": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "EQ",
      "path": "50"
    },
    "116": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x184"
    },
    "119": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "120": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "DUP1",
      "path": "50"
    },
    "121": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x7D8AB226"
    },
    "126": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "EQ",
      "path": "50"
    },
    "127": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x197"
    },
    "130": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "131": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "DUP1",
      "path": "50"
    },
    "132": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x8DA5CB5B"
    },
    "137": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "EQ",
      "path": "50"
    },
    "138": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1AA"
    },
    "141": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "142": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "DUP1",
      "path": "50"
    },
    "143": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x93AEFA76"
    },
    "148": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "EQ",
      "path": "50"
    },
    "149": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1BF"
    },
    "152": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "153": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "DUP1",
      "path": "50"
    },
    "154": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xBCB43A1D"
    },
    "159": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "EQ",
      "path": "50"
    },
    "160": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1C7"
    },
    "163": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "164": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "DUP1",
      "path": "50"
    },
    "165": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xBDE59079"
    },
    "170": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "EQ",
      "path": "50"
    },
    "171": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1ED"
    },
    "174": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "175": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "DUP1",
      "path": "50"
    },
    "176": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xF2FDE38B"
    },
    "181": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "EQ",
      "path": "50"
    },
    "182": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x20D"
    },
    "185": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "186": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "DUP1",
      "path": "50"
    },
    "187": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFA71067D"
    },
    "192": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "EQ",
      "path": "50"
    },
    "193": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x220"
    },
    "196": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "197": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "DUP1",
      "path": "50"
    },
    "198": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFC0C546A"
    },
    "203": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "EQ",
      "path": "50"
    },
    "204": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x24A"
    },
    "207": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "208": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "209": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "211": {
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "DUP1",
      "path": "50"
    },
    "212": {
      "first_revert": true,
      "fn": null,
      "offset": [
        861,
        7760
      ],
      "op": "REVERT",
      "path": "50"
    },
    "213": {
      "offset": [
        1383,
        1412
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "214": {
      "fn": null,
      "offset": [
        1383,
        1412
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xDE"
    },
    "217": {
      "fn": null,
      "offset": [
        1383,
        1412
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x8"
    },
    "219": {
      "fn": null,
      "offset": [
        1383,
        1412
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "220": {
      "fn": null,
      "offset": [
        1383,
        1412
      ],
      "op": "DUP2",
      "path": "50"
    },
    "221": {
      "fn": null,
      "offset": [
        1383,
        1412
      ],
      "op": "JUMP",
      "path": "50"
    },
    "222": {
      "fn": null,
      "offset": [
        1383,
        1412
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "223": {
      "fn": null,
      "offset": [
        1383,
        1412
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "225": {
      "fn": null,
      "offset": [
        1383,
        1412
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "226": {
      "op": "SWAP1"
    },
    "227": {
      "op": "DUP2"
    },
    "228": {
      "op": "MSTORE"
    },
    "229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "231": {
      "op": "ADD"
    },
    "232": {
      "offset": [
        1383,
        1412
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "233": {
      "fn": null,
      "offset": [
        1383,
        1412
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "235": {
      "fn": null,
      "offset": [
        1383,
        1412
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "236": {
      "fn": null,
      "offset": [
        1383,
        1412
      ],
      "op": "DUP1",
      "path": "50"
    },
    "237": {
      "fn": null,
      "offset": [
        1383,
        1412
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "238": {
      "fn": null,
      "offset": [
        1383,
        1412
      ],
      "op": "SUB",
      "path": "50"
    },
    "239": {
      "fn": null,
      "offset": [
        1383,
        1412
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "240": {
      "fn": null,
      "offset": [
        1383,
        1412
      ],
      "op": "RETURN",
      "path": "50"
    },
    "241": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        1993,
        2843
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "242": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        1993,
        2843
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x104"
    },
    "245": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        1993,
        2843
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xFF"
    },
    "248": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        1993,
        2843
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "249": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        1993,
        2843
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "251": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        1993,
        2843
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x11C0"
    },
    "254": {
      "fn": "Vesting.setupVestingMode",
      "jump": "i",
      "offset": [
        1993,
        2843
      ],
      "op": "JUMP",
      "path": "50"
    },
    "255": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        1993,
        2843
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "256": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        1993,
        2843
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x271"
    },
    "259": {
      "fn": "Vesting.setupVestingMode",
      "jump": "i",
      "offset": [
        1993,
        2843
      ],
      "op": "JUMP",
      "path": "50"
    },
    "260": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        1993,
        2843
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "261": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        1993,
        2843
      ],
      "op": "STOP",
      "path": "50"
    },
    "262": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6418,
        7408
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "263": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6418,
        7408
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x119"
    },
    "266": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6418,
        7408
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x114"
    },
    "269": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6418,
        7408
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "270": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6418,
        7408
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "272": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6418,
        7408
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1131"
    },
    "275": {
      "fn": "Vesting.getNextVestingClaim",
      "jump": "i",
      "offset": [
        6418,
        7408
      ],
      "op": "JUMP",
      "path": "50"
    },
    "276": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6418,
        7408
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "277": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6418,
        7408
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x49A"
    },
    "280": {
      "fn": "Vesting.getNextVestingClaim",
      "jump": "i",
      "offset": [
        6418,
        7408
      ],
      "op": "JUMP",
      "path": "50"
    },
    "281": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6418,
        7408
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "282": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6418,
        7408
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "284": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6418,
        7408
      ],
      "op": "DUP1",
      "path": "50"
    },
    "285": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6418,
        7408
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "286": {
      "op": "SWAP4"
    },
    "287": {
      "op": "DUP5"
    },
    "288": {
      "op": "MSTORE"
    },
    "289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "291": {
      "op": "DUP5"
    },
    "292": {
      "op": "ADD"
    },
    "293": {
      "op": "SWAP3"
    },
    "294": {
      "op": "SWAP1"
    },
    "295": {
      "op": "SWAP3"
    },
    "296": {
      "op": "MSTORE"
    },
    "297": {
      "op": "SWAP1"
    },
    "298": {
      "op": "DUP3"
    },
    "299": {
      "op": "ADD"
    },
    "300": {
      "op": "MSTORE"
    },
    "301": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "303": {
      "op": "ADD"
    },
    "304": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6418,
        7408
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xE8"
    },
    "307": {
      "op": "JUMP"
    },
    "308": {
      "fn": "Vesting.pool_name",
      "offset": [
        7480,
        7571
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "309": {
      "fn": "Vesting.pool_name",
      "offset": [
        7480,
        7571
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x13C"
    },
    "312": {
      "fn": "Vesting.pool_name",
      "offset": [
        7480,
        7571
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5DD"
    },
    "315": {
      "fn": "Vesting.pool_name",
      "jump": "i",
      "offset": [
        7480,
        7571
      ],
      "op": "JUMP",
      "path": "50"
    },
    "316": {
      "fn": "Vesting.pool_name",
      "offset": [
        7480,
        7571
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "317": {
      "fn": "Vesting.pool_name",
      "offset": [
        7480,
        7571
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "319": {
      "fn": "Vesting.pool_name",
      "offset": [
        7480,
        7571
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "320": {
      "fn": "Vesting.pool_name",
      "offset": [
        7480,
        7571
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xE8"
    },
    "323": {
      "fn": "Vesting.pool_name",
      "offset": [
        7480,
        7571
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "324": {
      "fn": "Vesting.pool_name",
      "offset": [
        7480,
        7571
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "325": {
      "fn": "Vesting.pool_name",
      "offset": [
        7480,
        7571
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x126B"
    },
    "328": {
      "fn": "Vesting.pool_name",
      "jump": "i",
      "offset": [
        7480,
        7571
      ],
      "op": "JUMP",
      "path": "50"
    },
    "329": {
      "offset": [
        1067,
        1115
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "330": {
      "fn": "Vesting.pool_name",
      "offset": [
        1067,
        1115
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xDE"
    },
    "333": {
      "fn": "Vesting.pool_name",
      "offset": [
        1067,
        1115
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x157"
    },
    "336": {
      "fn": "Vesting.pool_name",
      "offset": [
        1067,
        1115
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "337": {
      "fn": "Vesting.pool_name",
      "offset": [
        1067,
        1115
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "339": {
      "fn": "Vesting.pool_name",
      "offset": [
        1067,
        1115
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1131"
    },
    "342": {
      "fn": "Vesting.pool_name",
      "jump": "i",
      "offset": [
        1067,
        1115
      ],
      "op": "JUMP",
      "path": "50"
    },
    "343": {
      "fn": "Vesting.pool_name",
      "offset": [
        1067,
        1115
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "344": {
      "fn": "Vesting.pool_name",
      "offset": [
        1067,
        1115
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x2"
    },
    "346": {
      "fn": "Vesting.pool_name",
      "offset": [
        1067,
        1115
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "348": {
      "fn": "Vesting.pool_name",
      "offset": [
        1067,
        1115
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "349": {
      "fn": "Vesting.pool_name",
      "offset": [
        1067,
        1115
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "351": {
      "fn": "Vesting.pool_name",
      "offset": [
        1067,
        1115
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "352": {
      "fn": "Vesting.pool_name",
      "offset": [
        1067,
        1115
      ],
      "op": "DUP2",
      "path": "50"
    },
    "353": {
      "fn": "Vesting.pool_name",
      "offset": [
        1067,
        1115
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "354": {
      "fn": "Vesting.pool_name",
      "offset": [
        1067,
        1115
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "356": {
      "fn": "Vesting.pool_name",
      "offset": [
        1067,
        1115
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "357": {
      "fn": "Vesting.pool_name",
      "offset": [
        1067,
        1115
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "358": {
      "fn": "Vesting.pool_name",
      "offset": [
        1067,
        1115
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "359": {
      "fn": "Vesting.pool_name",
      "offset": [
        1067,
        1115
      ],
      "op": "DUP2",
      "path": "50"
    },
    "360": {
      "fn": "Vesting.pool_name",
      "offset": [
        1067,
        1115
      ],
      "op": "JUMP",
      "path": "50"
    },
    "361": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "362": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x104"
    },
    "365": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x66F"
    },
    "368": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "2"
    },
    "369": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5251,
        6011
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "370": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5251,
        6011
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x104"
    },
    "373": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5251,
        6011
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x17F"
    },
    "376": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5251,
        6011
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "377": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5251,
        6011
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "379": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5251,
        6011
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x120B"
    },
    "382": {
      "fn": "Vesting.claimVestedTokens",
      "jump": "i",
      "offset": [
        5251,
        6011
      ],
      "op": "JUMP",
      "path": "50"
    },
    "383": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5251,
        6011
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "384": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5251,
        6011
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x6AA"
    },
    "387": {
      "fn": "Vesting.claimVestedTokens",
      "jump": "i",
      "offset": [
        5251,
        6011
      ],
      "op": "JUMP",
      "path": "50"
    },
    "388": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        3979,
        4247
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "389": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        3979,
        4247
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x104"
    },
    "392": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        3979,
        4247
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x192"
    },
    "395": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        3979,
        4247
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "396": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        3979,
        4247
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "398": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        3979,
        4247
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x120B"
    },
    "401": {
      "fn": "Vesting.startVestingMode",
      "jump": "i",
      "offset": [
        3979,
        4247
      ],
      "op": "JUMP",
      "path": "50"
    },
    "402": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        3979,
        4247
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "403": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        3979,
        4247
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x8EF"
    },
    "406": {
      "fn": "Vesting.startVestingMode",
      "jump": "i",
      "offset": [
        3979,
        4247
      ],
      "op": "JUMP",
      "path": "50"
    },
    "407": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3139,
        3800
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "408": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3139,
        3800
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x104"
    },
    "411": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3139,
        3800
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1A5"
    },
    "414": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3139,
        3800
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "415": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3139,
        3800
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "417": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3139,
        3800
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1158"
    },
    "420": {
      "fn": "Vesting.allotTokens",
      "jump": "i",
      "offset": [
        3139,
        3800
      ],
      "op": "JUMP",
      "path": "50"
    },
    "421": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3139,
        3800
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "422": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3139,
        3800
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x953"
    },
    "425": {
      "fn": "Vesting.allotTokens",
      "jump": "i",
      "offset": [
        3139,
        3800
      ],
      "op": "JUMP",
      "path": "50"
    },
    "426": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "427": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B2"
    },
    "430": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB16"
    },
    "433": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "2"
    },
    "434": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "435": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "437": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "438": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE8"
    },
    "441": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "442": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "443": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1257"
    },
    "446": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "2"
    },
    "447": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7617,
        7758
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "448": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7617,
        7758
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x104"
    },
    "451": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7617,
        7758
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xB25"
    },
    "454": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "jump": "i",
      "offset": [
        7617,
        7758
      ],
      "op": "JUMP",
      "path": "50"
    },
    "455": {
      "offset": [
        1350,
        1377
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "456": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1350,
        1377
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x6"
    },
    "458": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1350,
        1377
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "459": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1350,
        1377
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x7"
    },
    "461": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1350,
        1377
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "462": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1350,
        1377
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1D8"
    },
    "465": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1350,
        1377
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "466": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1350,
        1377
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "467": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1350,
        1377
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xFF"
    },
    "469": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1350,
        1377
      ],
      "op": "AND",
      "path": "50"
    },
    "470": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1350,
        1377
      ],
      "op": "DUP3",
      "path": "50"
    },
    "471": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1350,
        1377
      ],
      "op": "JUMP",
      "path": "50"
    },
    "472": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1350,
        1377
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "473": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1350,
        1377
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "475": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1350,
        1377
      ],
      "op": "DUP1",
      "path": "50"
    },
    "476": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1350,
        1377
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "477": {
      "op": "SWAP3"
    },
    "478": {
      "op": "DUP4"
    },
    "479": {
      "op": "MSTORE"
    },
    "480": {
      "op": "SWAP1"
    },
    "481": {
      "op": "ISZERO"
    },
    "482": {
      "op": "ISZERO"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "485": {
      "op": "DUP4"
    },
    "486": {
      "op": "ADD"
    },
    "487": {
      "op": "MSTORE"
    },
    "488": {
      "op": "ADD"
    },
    "489": {
      "offset": [
        1350,
        1377
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xE8"
    },
    "492": {
      "op": "JUMP"
    },
    "493": {
      "offset": [
        1013,
        1061
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "494": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1013,
        1061
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xDE"
    },
    "497": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1013,
        1061
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1FB"
    },
    "500": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1013,
        1061
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "501": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1013,
        1061
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "503": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1013,
        1061
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1131"
    },
    "506": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "jump": "i",
      "offset": [
        1013,
        1061
      ],
      "op": "JUMP",
      "path": "50"
    },
    "507": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1013,
        1061
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "508": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1013,
        1061
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "510": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1013,
        1061
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "512": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1013,
        1061
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "513": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1013,
        1061
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "515": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1013,
        1061
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "516": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1013,
        1061
      ],
      "op": "DUP2",
      "path": "50"
    },
    "517": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1013,
        1061
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "518": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1013,
        1061
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "520": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1013,
        1061
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "521": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1013,
        1061
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "522": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1013,
        1061
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "523": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1013,
        1061
      ],
      "op": "DUP2",
      "path": "50"
    },
    "524": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        1013,
        1061
      ],
      "op": "JUMP",
      "path": "50"
    },
    "525": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "526": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x104"
    },
    "529": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B"
    },
    "532": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "533": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "535": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1131"
    },
    "538": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "539": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "540": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC25"
    },
    "543": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "544": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4503,
        5032
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "545": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4503,
        5032
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x233"
    },
    "548": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4503,
        5032
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x22E"
    },
    "551": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4503,
        5032
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "552": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4503,
        5032
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "554": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4503,
        5032
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x120B"
    },
    "557": {
      "fn": "Vesting.isVestingClaimable",
      "jump": "i",
      "offset": [
        4503,
        5032
      ],
      "op": "JUMP",
      "path": "50"
    },
    "558": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4503,
        5032
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "559": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4503,
        5032
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xCC5"
    },
    "562": {
      "fn": "Vesting.isVestingClaimable",
      "jump": "i",
      "offset": [
        4503,
        5032
      ],
      "op": "JUMP",
      "path": "50"
    },
    "563": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4503,
        5032
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "564": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4503,
        5032
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "566": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4503,
        5032
      ],
      "op": "DUP1",
      "path": "50"
    },
    "567": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4503,
        5032
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "568": {
      "op": "SWAP3"
    },
    "569": {
      "op": "ISZERO"
    },
    "570": {
      "op": "ISZERO"
    },
    "571": {
      "op": "DUP4"
    },
    "572": {
      "op": "MSTORE"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "575": {
      "op": "DUP4"
    },
    "576": {
      "op": "ADD"
    },
    "577": {
      "op": "SWAP2"
    },
    "578": {
      "op": "SWAP1"
    },
    "579": {
      "op": "SWAP2"
    },
    "580": {
      "op": "MSTORE"
    },
    "581": {
      "op": "ADD"
    },
    "582": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4503,
        5032
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xE8"
    },
    "585": {
      "op": "JUMP"
    },
    "586": {
      "offset": [
        1487,
        1515
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "587": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        1487,
        1515
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1B2"
    },
    "590": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        1487,
        1515
      ],
      "op": "PUSH32",
      "path": "50",
      "value": "0x0"
    },
    "623": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        1487,
        1515
      ],
      "op": "DUP2",
      "path": "50"
    },
    "624": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        1487,
        1515
      ],
      "op": "JUMP",
      "path": "50"
    },
    "625": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        1993,
        2843
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "626": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "14",
      "statement": 0
    },
    "627": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27A"
    },
    "630": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB16"
    },
    "633": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "634": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "641": {
      "op": "SHL"
    },
    "642": {
      "op": "SUB"
    },
    "643": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "644": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "645": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A9"
    },
    "648": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "649": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "651": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "652": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "656": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "658": {
      "op": "SHL"
    },
    "659": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "660": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "661": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "663": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "664": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0"
    },
    "667": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "668": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x131D"
    },
    "671": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "672": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "673": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "675": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "676": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "677": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "678": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "2"
    },
    "679": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "680": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "681": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "682": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2136,
        2164
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 1,
      "value": "0x7"
    },
    "684": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2136,
        2164
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "685": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2136,
        2164
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xFF"
    },
    "687": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2136,
        2164
      ],
      "op": "AND",
      "path": "50"
    },
    "688": {
      "branch": 52,
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2135,
        2164
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "689": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2127,
        2192
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2CC"
    },
    "692": {
      "branch": 52,
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2127,
        2192
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "693": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2127,
        2192
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "695": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2127,
        2192
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "696": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "700": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "702": {
      "op": "SHL"
    },
    "703": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2127,
        2192
      ],
      "op": "DUP2",
      "path": "50"
    },
    "704": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2127,
        2192
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "705": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2127,
        2192
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "707": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2127,
        2192
      ],
      "op": "ADD",
      "path": "50"
    },
    "708": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2127,
        2192
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2A0"
    },
    "711": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2127,
        2192
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "712": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2127,
        2192
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x12EC"
    },
    "715": {
      "fn": "Vesting.setupVestingMode",
      "jump": "i",
      "offset": [
        2127,
        2192
      ],
      "op": "JUMP",
      "path": "50"
    },
    "716": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2127,
        2192
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "717": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2217,
        2225
      ],
      "op": "DUP3",
      "path": "50"
    },
    "718": {
      "branch": 53,
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2250,
        2257
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 2
    },
    "719": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2242,
        2276
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2EA"
    },
    "722": {
      "branch": 53,
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2242,
        2276
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "723": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2242,
        2276
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "725": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2242,
        2276
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "726": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "730": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "732": {
      "op": "SHL"
    },
    "733": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2242,
        2276
      ],
      "op": "DUP2",
      "path": "50"
    },
    "734": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2242,
        2276
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "735": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2242,
        2276
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "737": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2242,
        2276
      ],
      "op": "ADD",
      "path": "50"
    },
    "738": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2242,
        2276
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2A0"
    },
    "741": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2242,
        2276
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "742": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2242,
        2276
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x129E"
    },
    "745": {
      "fn": "Vesting.setupVestingMode",
      "jump": "i",
      "offset": [
        2242,
        2276
      ],
      "op": "JUMP",
      "path": "50"
    },
    "746": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2242,
        2276
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "747": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2294,
        2317
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 3
    },
    "748": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2294,
        2317
      ],
      "op": "DUP3",
      "path": "50"
    },
    "749": {
      "branch": 54,
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2294,
        2317
      ],
      "op": "EQ",
      "path": "50"
    },
    "750": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2286,
        2334
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x309"
    },
    "753": {
      "branch": 54,
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2286,
        2334
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "754": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2286,
        2334
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "756": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2286,
        2334
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "757": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "761": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "763": {
      "op": "SHL"
    },
    "764": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2286,
        2334
      ],
      "op": "DUP2",
      "path": "50"
    },
    "765": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2286,
        2334
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "766": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2286,
        2334
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "768": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2286,
        2334
      ],
      "op": "ADD",
      "path": "50"
    },
    "769": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2286,
        2334
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2A0"
    },
    "772": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2286,
        2334
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "773": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2286,
        2334
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x12C6"
    },
    "776": {
      "fn": "Vesting.setupVestingMode",
      "jump": "i",
      "offset": [
        2286,
        2334
      ],
      "op": "JUMP",
      "path": "50"
    },
    "777": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2286,
        2334
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "778": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2431,
        2448
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "780": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2431,
        2448
      ],
      "op": "DUP1",
      "path": "50"
    },
    "781": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2458,
        2553
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "782": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2482,
        2485
      ],
      "op": "DUP3",
      "path": "50"
    },
    "783": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2478,
        2479
      ],
      "op": "DUP2",
      "path": "50"
    },
    "784": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2478,
        2485
      ],
      "op": "LT",
      "path": "50"
    },
    "785": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2458,
        2553
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "786": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2458,
        2553
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x35B"
    },
    "789": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2458,
        2553
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "790": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2530,
        2539
      ],
      "op": "DUP5",
      "path": "50",
      "statement": 4
    },
    "791": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2530,
        2539
      ],
      "op": "DUP5",
      "path": "50"
    },
    "792": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2540,
        2541
      ],
      "op": "DUP3",
      "path": "50"
    },
    "793": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2530,
        2542
      ],
      "op": "DUP2",
      "path": "50"
    },
    "794": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2530,
        2542
      ],
      "op": "DUP2",
      "path": "50"
    },
    "795": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2530,
        2542
      ],
      "op": "LT",
      "path": "50"
    },
    "796": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2530,
        2542
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x335"
    },
    "799": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2530,
        2542
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "800": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "805": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "807": {
      "op": "SHL"
    },
    "808": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2530,
        2542
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "810": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2530,
        2542
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "811": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2530,
        2542
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x32"
    },
    "813": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2530,
        2542
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "815": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2530,
        2542
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "816": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2530,
        2542
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "818": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2530,
        2542
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "820": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2530,
        2542
      ],
      "op": "REVERT",
      "path": "50"
    },
    "821": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2530,
        2542
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "822": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2530,
        2542
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "823": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2530,
        2542
      ],
      "op": "POP",
      "path": "50"
    },
    "824": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2530,
        2542
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "826": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2530,
        2542
      ],
      "op": "MUL",
      "path": "50"
    },
    "827": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2530,
        2542
      ],
      "op": "ADD",
      "path": "50"
    },
    "828": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2530,
        2542
      ],
      "op": "CALLDATALOAD",
      "path": "50"
    },
    "829": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2518,
        2527
      ],
      "op": "DUP3",
      "path": "50"
    },
    "830": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2518,
        2542
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x347"
    },
    "833": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2518,
        2542
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "834": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2518,
        2542
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "835": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2518,
        2542
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1352"
    },
    "838": {
      "fn": "Vesting.setupVestingMode",
      "jump": "i",
      "offset": [
        2518,
        2542
      ],
      "op": "JUMP",
      "path": "50"
    },
    "839": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2518,
        2542
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "840": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2506,
        2542
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "841": {
      "op": "POP"
    },
    "842": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2487,
        2490
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 5
    },
    "843": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2487,
        2490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x353"
    },
    "846": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2487,
        2490
      ],
      "op": "DUP2",
      "path": "50"
    },
    "847": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2487,
        2490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1427"
    },
    "850": {
      "fn": "Vesting.setupVestingMode",
      "jump": "i",
      "offset": [
        2487,
        2490
      ],
      "op": "JUMP",
      "path": "50"
    },
    "851": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2487,
        2490
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "852": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2487,
        2490
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "853": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2487,
        2490
      ],
      "op": "POP",
      "path": "50"
    },
    "854": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2487,
        2490
      ],
      "op": "POP",
      "path": "50"
    },
    "855": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2458,
        2553
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x30D"
    },
    "858": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2458,
        2553
      ],
      "op": "JUMP",
      "path": "50"
    },
    "859": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2458,
        2553
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "860": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2458,
        2553
      ],
      "op": "POP",
      "path": "50"
    },
    "861": {
      "offset": [
        1161,
        1164
      ],
      "op": "PUSH3",
      "path": "50",
      "value": "0xF4240"
    },
    "865": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2570,
        2579
      ],
      "op": "DUP2",
      "path": "50",
      "statement": 6
    },
    "866": {
      "branch": 55,
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2570,
        2593
      ],
      "op": "EQ",
      "path": "50"
    },
    "867": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2562,
        2631
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3B8"
    },
    "870": {
      "branch": 55,
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2562,
        2631
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "871": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2562,
        2631
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "873": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2562,
        2631
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "874": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "878": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "880": {
      "op": "SHL"
    },
    "881": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2562,
        2631
      ],
      "op": "DUP2",
      "path": "50"
    },
    "882": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2562,
        2631
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "885": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2562,
        2631
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "887": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2562,
        2631
      ],
      "op": "DUP3",
      "path": "50"
    },
    "888": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2562,
        2631
      ],
      "op": "ADD",
      "path": "50"
    },
    "889": {
      "op": "MSTORE"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "894": {
      "op": "DUP3"
    },
    "895": {
      "op": "ADD"
    },
    "896": {
      "op": "MSTORE"
    },
    "897": {
      "op": "PUSH32",
      "value": "0x50657263656E7461676573206164642075702073686F756C6420626520313030"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "932": {
      "op": "DUP3"
    },
    "933": {
      "op": "ADD"
    },
    "934": {
      "op": "MSTORE"
    },
    "935": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "937": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "939": {
      "op": "SHL"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "942": {
      "op": "DUP3"
    },
    "943": {
      "op": "ADD"
    },
    "944": {
      "op": "MSTORE"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "947": {
      "op": "ADD"
    },
    "948": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2562,
        2631
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2A0"
    },
    "951": {
      "op": "JUMP"
    },
    "952": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2562,
        2631
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "953": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2642,
        2656
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 7,
      "value": "0x8"
    },
    "955": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2642,
        2662
      ],
      "op": "DUP3",
      "path": "50"
    },
    "956": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2642,
        2662
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "957": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2642,
        2662
      ],
      "op": "SSTORE",
      "path": "50"
    },
    "958": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 8,
      "value": "0x40"
    },
    "960": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP1",
      "path": "50"
    },
    "961": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "962": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xA0"
    },
    "964": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "966": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP9",
      "path": "50"
    },
    "967": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "MUL",
      "path": "50"
    },
    "968": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP1",
      "path": "50"
    },
    "969": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP4",
      "path": "50"
    },
    "970": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "ADD",
      "path": "50"
    },
    "971": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP3",
      "path": "50"
    },
    "972": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "ADD",
      "path": "50"
    },
    "973": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "974": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "975": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "976": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x80"
    },
    "978": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP3",
      "path": "50"
    },
    "979": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "ADD",
      "path": "50"
    },
    "980": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP9",
      "path": "50"
    },
    "981": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP2",
      "path": "50"
    },
    "982": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "983": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "984": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "985": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP4",
      "path": "50"
    },
    "986": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "987": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "988": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2718,
        2726
      ],
      "op": "DUP11",
      "path": "50"
    },
    "989": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2718,
        2726
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "990": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2718,
        2726
      ],
      "op": "DUP11",
      "path": "50"
    },
    "991": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2718,
        2726
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "992": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2718,
        2726
      ],
      "op": "DUP3",
      "path": "50"
    },
    "993": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2718,
        2726
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "994": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "995": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP7",
      "path": "50"
    },
    "996": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "ADD",
      "path": "50"
    },
    "997": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "998": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2718,
        2726
      ],
      "op": "DUP5",
      "path": "50"
    },
    "999": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2718,
        2726
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1000": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1001": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2718,
        2726
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1002": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP5",
      "path": "50"
    },
    "1003": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "CALLDATACOPY",
      "path": "50"
    },
    "1004": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1006": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "1007": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "ADD",
      "path": "50"
    },
    "1008": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1009": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1010": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1011": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1012": {
      "op": "POP"
    },
    "1013": {
      "op": "POP"
    },
    "1014": {
      "op": "POP"
    },
    "1015": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1016": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1017": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1018": {
      "op": "POP"
    },
    "1019": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1021": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1022": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1023": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1025": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP8",
      "path": "50"
    },
    "1026": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1027": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "MUL",
      "path": "50"
    },
    "1028": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1029": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1030": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "ADD",
      "path": "50"
    },
    "1031": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1032": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "ADD",
      "path": "50"
    },
    "1033": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1034": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "1035": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1036": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP8",
      "path": "50"
    },
    "1037": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1038": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1039": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "1040": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP4",
      "path": "50"
    },
    "1041": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "ADD",
      "path": "50"
    },
    "1042": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "1043": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1044": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1045": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2750,
        2759
      ],
      "op": "DUP9",
      "path": "50"
    },
    "1046": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2750,
        2759
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1047": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2750,
        2759
      ],
      "op": "DUP9",
      "path": "50"
    },
    "1048": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2750,
        2759
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1049": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2750,
        2759
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1050": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2750,
        2759
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1051": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP6",
      "path": "50"
    },
    "1052": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "ADD",
      "path": "50"
    },
    "1053": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1054": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2750,
        2759
      ],
      "op": "DUP5",
      "path": "50"
    },
    "1055": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2750,
        2759
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1056": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1057": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2750,
        2759
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1058": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP5",
      "path": "50"
    },
    "1059": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "CALLDATACOPY",
      "path": "50"
    },
    "1060": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1062": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "1063": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "ADD",
      "path": "50"
    },
    "1064": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1065": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1066": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1067": {
      "op": "POP"
    },
    "1068": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "1069": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP6",
      "path": "50"
    },
    "1070": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1071": {
      "op": "POP"
    },
    "1072": {
      "op": "POP"
    },
    "1073": {
      "op": "POP"
    },
    "1074": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1076": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1077": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP4",
      "path": "50"
    },
    "1078": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "ADD",
      "path": "50"
    },
    "1079": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1080": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1081": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1082": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1084": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1085": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "1086": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "ADD",
      "path": "50"
    },
    "1087": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2683,
        2836
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1088": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1089": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1090": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1091": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1092": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2680
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1094": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2680
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "1095": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x454"
    },
    "1098": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "1099": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2680
      ],
      "op": "DUP5",
      "path": "50"
    },
    "1100": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2680
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "1101": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1102": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "ADD",
      "path": "50"
    },
    "1103": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1104": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1088"
    },
    "1107": {
      "fn": "Vesting.setupVestingMode",
      "jump": "i",
      "offset": [
        2672,
        2836
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1108": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1109": {
      "op": "POP"
    },
    "1110": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1112": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1113": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1114": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "ADD",
      "path": "50"
    },
    "1115": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1116": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1117": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1118": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x46D"
    },
    "1121": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "1122": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "1124": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "DUP6",
      "path": "50"
    },
    "1125": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "ADD",
      "path": "50"
    },
    "1126": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "1127": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "ADD",
      "path": "50"
    },
    "1128": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1129": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1088"
    },
    "1132": {
      "fn": "Vesting.setupVestingMode",
      "jump": "i",
      "offset": [
        2672,
        2836
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1133": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1134": {
      "op": "POP"
    },
    "1135": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1137": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1138": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "ADD",
      "path": "50"
    },
    "1139": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1140": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x2"
    },
    "1142": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1143": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "ADD",
      "path": "50"
    },
    "1144": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "SSTORE",
      "path": "50"
    },
    "1145": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "1147": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1148": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1149": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "ADD",
      "path": "50"
    },
    "1150": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1151": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3"
    },
    "1153": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1154": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1155": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "ADD",
      "path": "50"
    },
    "1156": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1157": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1160": {
      "op": "NOT"
    },
    "1161": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "AND",
      "path": "50"
    },
    "1162": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1163": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "1164": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "1165": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1166": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1167": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1168": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "OR",
      "path": "50"
    },
    "1169": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1170": {
      "fn": "Vesting.setupVestingMode",
      "offset": [
        2672,
        2836
      ],
      "op": "SSTORE",
      "path": "50"
    },
    "1171": {
      "op": "POP"
    },
    "1172": {
      "op": "POP"
    },
    "1173": {
      "op": "POP"
    },
    "1174": {
      "op": "POP"
    },
    "1175": {
      "op": "POP"
    },
    "1176": {
      "op": "POP"
    },
    "1177": {
      "fn": "Vesting.setupVestingMode",
      "jump": "o",
      "offset": [
        1993,
        2843
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1178": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6418,
        7408
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1179": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6600,
        6628
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x7"
    },
    "1181": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6600,
        6628
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1182": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6522,
        6528
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1184": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6522,
        6528
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1185": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6522,
        6528
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1186": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6522,
        6528
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1187": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6522,
        6528
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1188": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6522,
        6528
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1189": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6600,
        6628
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xFF"
    },
    "1191": {
      "branch": 56,
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6600,
        6628
      ],
      "op": "AND",
      "path": "50"
    },
    "1192": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6595,
        6672
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4BB"
    },
    "1195": {
      "branch": 56,
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6595,
        6672
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1196": {
      "op": "POP"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1199": {
      "op": "NOT"
    },
    "1200": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6652,
        6654
      ],
      "op": "SWAP2",
      "path": "50",
      "statement": 9
    },
    "1201": {
      "op": "POP"
    },
    "1202": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6656,
        6657
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1204": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6656,
        6657
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1205": {
      "op": "POP"
    },
    "1206": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6656,
        6657
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1207": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6644,
        6661
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5D6"
    },
    "1210": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6644,
        6661
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1211": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6595,
        6672
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1218": {
      "op": "SHL"
    },
    "1219": {
      "op": "SUB"
    },
    "1220": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6706,
        6726
      ],
      "op": "DUP5",
      "path": "50"
    },
    "1221": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6706,
        6726
      ],
      "op": "AND",
      "path": "50"
    },
    "1222": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6682,
        6703
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1224": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6706,
        6726
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1225": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6706,
        6726
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1226": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6706,
        6726
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1227": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6706,
        6719
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "1229": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6706,
        6726
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1231": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6706,
        6726
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1232": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6706,
        6726
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1234": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6706,
        6726
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1235": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6706,
        6726
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "1236": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6706,
        6726
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1237": {
      "branch": 57,
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6740,
        6758
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1238": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6736,
        6802
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4EB"
    },
    "1241": {
      "branch": 57,
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6736,
        6802
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1244": {
      "op": "NOT"
    },
    "1245": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6786,
        6787
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 10,
      "value": "0x0"
    },
    "1247": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6789,
        6790
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1248": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6774,
        6791
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "1249": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6774,
        6791
      ],
      "op": "POP",
      "path": "50"
    },
    "1250": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6774,
        6791
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "1251": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6774,
        6791
      ],
      "op": "POP",
      "path": "50"
    },
    "1252": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6774,
        6791
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "1253": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6774,
        6791
      ],
      "op": "POP",
      "path": "50"
    },
    "1254": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6774,
        6791
      ],
      "op": "POP",
      "path": "50"
    },
    "1255": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6774,
        6791
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5D6"
    },
    "1258": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6774,
        6791
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1259": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6736,
        6802
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1260": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6826,
        6834
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1262": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6826,
        6849
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1263": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6812,
        6823
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1265": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6859,
        7352
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1266": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6883,
        6886
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1267": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6879,
        6880
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1268": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6879,
        6886
      ],
      "op": "LT",
      "path": "50"
    },
    "1269": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6859,
        7352
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "1270": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6859,
        7352
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5C6"
    },
    "1273": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6859,
        7352
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1274": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6908,
        6922
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1276": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6924,
        6936
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1277": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6940,
        6961
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x505"
    },
    "1280": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6959,
        6960
      ],
      "op": "DUP4",
      "path": "50"
    },
    "1281": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6940,
        6958
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xCC5"
    },
    "1284": {
      "fn": "Vesting.getNextVestingClaim",
      "jump": "i",
      "offset": [
        6940,
        6961
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1285": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6940,
        6961
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1286": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6907,
        6961
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1287": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6907,
        6961
      ],
      "op": "POP",
      "path": "50"
    },
    "1288": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6907,
        6961
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1289": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6907,
        6961
      ],
      "op": "POP",
      "path": "50"
    },
    "1290": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6975,
        6992
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1292": {
      "offset": [
        1161,
        1164
      ],
      "op": "PUSH3",
      "path": "50",
      "value": "0xF4240"
    },
    "1296": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7019,
        7032
      ],
      "op": "DUP7",
      "path": "50"
    },
    "1297": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7004
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1299": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7013
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "1301": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7013
      ],
      "op": "ADD",
      "path": "50"
    },
    "1302": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7014,
        7015
      ],
      "op": "DUP7",
      "path": "50"
    },
    "1303": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1304": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1305": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1306": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "LT",
      "path": "50"
    },
    "1307": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x534"
    },
    "1310": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1311": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1318": {
      "op": "SHL"
    },
    "1319": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1321": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1322": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x32"
    },
    "1324": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1326": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1327": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "1329": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1331": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "REVERT",
      "path": "50"
    },
    "1332": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1333": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1334": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1336": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1337": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1339": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1341": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "1342": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "ADD",
      "path": "50"
    },
    "1343": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7016
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1344": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7032
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x549"
    },
    "1347": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7032
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1348": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7032
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1349": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7032
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x138A"
    },
    "1352": {
      "fn": "Vesting.getNextVestingClaim",
      "jump": "i",
      "offset": [
        6996,
        7032
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1353": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6996,
        7032
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1354": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6995,
        7062
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x553"
    },
    "1357": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6995,
        7062
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1358": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6995,
        7062
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1359": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6995,
        7062
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x136A"
    },
    "1362": {
      "fn": "Vesting.getNextVestingClaim",
      "jump": "i",
      "offset": [
        6995,
        7062
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1363": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6995,
        7062
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1370": {
      "op": "SHL"
    },
    "1371": {
      "op": "SUB"
    },
    "1372": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7115
      ],
      "op": "DUP12",
      "path": "50"
    },
    "1373": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7115
      ],
      "op": "AND",
      "path": "50"
    },
    "1374": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7076,
        7088
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1376": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7115
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1377": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7115
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1378": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7115
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1379": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7108
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x9"
    },
    "1381": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7115
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1383": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7115
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1384": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7115
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1385": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7115
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1386": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7115
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1388": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7115
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1389": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7115
      ],
      "op": "DUP4",
      "path": "50"
    },
    "1390": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7115
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "1391": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7118
      ],
      "op": "DUP9",
      "path": "50"
    },
    "1392": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7118
      ],
      "op": "DUP5",
      "path": "50"
    },
    "1393": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7118
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1394": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7118
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1395": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7118
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1396": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7118
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1397": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7118
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1398": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7118
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "1399": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7118
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1400": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6975,
        7062
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1401": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6975,
        7062
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1402": {
      "op": "POP"
    },
    "1403": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7118
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xFF"
    },
    "1405": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7091,
        7118
      ],
      "op": "AND",
      "path": "50"
    },
    "1406": {
      "branch": 58,
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7138,
        7147
      ],
      "op": "DUP4",
      "path": "50"
    },
    "1407": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7133,
        7342
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x595"
    },
    "1410": {
      "branch": 58,
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7133,
        7342
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1411": {
      "op": "POP"
    },
    "1412": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7182,
        7183
      ],
      "op": "SWAP3",
      "path": "50",
      "statement": 11
    },
    "1413": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7182,
        7183
      ],
      "op": "SWAP8",
      "path": "50"
    },
    "1414": {
      "op": "POP"
    },
    "1415": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7186,
        7195
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1416": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7186,
        7195
      ],
      "op": "SWAP6",
      "path": "50"
    },
    "1417": {
      "op": "POP"
    },
    "1418": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7197,
        7201
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1419": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7197,
        7201
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "1420": {
      "op": "POP"
    },
    "1421": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7167,
        7202
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5D6"
    },
    "1424": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7167,
        7202
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "1425": {
      "op": "POP"
    },
    "1426": {
      "op": "POP"
    },
    "1427": {
      "op": "POP"
    },
    "1428": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7167,
        7202
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1429": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7133,
        7342
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1430": {
      "branch": 59,
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7246,
        7253
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1431": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7241,
        7328
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5AF"
    },
    "1434": {
      "branch": 59,
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7241,
        7328
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1435": {
      "op": "POP"
    },
    "1436": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7292,
        7293
      ],
      "op": "SWAP3",
      "path": "50",
      "statement": 12
    },
    "1437": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7292,
        7293
      ],
      "op": "SWAP8",
      "path": "50"
    },
    "1438": {
      "op": "POP"
    },
    "1439": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7296,
        7305
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1440": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7296,
        7305
      ],
      "op": "SWAP6",
      "path": "50"
    },
    "1441": {
      "op": "POP"
    },
    "1442": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7307,
        7308
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1444": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7307,
        7308
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "1445": {
      "op": "POP"
    },
    "1446": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7277,
        7309
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5D6"
    },
    "1449": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7277,
        7309
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "1450": {
      "op": "POP"
    },
    "1451": {
      "op": "POP"
    },
    "1452": {
      "op": "POP"
    },
    "1453": {
      "op": "POP"
    },
    "1454": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7277,
        7309
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1455": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7241,
        7328
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1456": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6859,
        7352
      ],
      "op": "POP",
      "path": "50"
    },
    "1457": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6859,
        7352
      ],
      "op": "POP",
      "path": "50"
    },
    "1458": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6859,
        7352
      ],
      "op": "POP",
      "path": "50"
    },
    "1459": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6859,
        7352
      ],
      "op": "POP",
      "path": "50"
    },
    "1460": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6888,
        6891
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 13
    },
    "1461": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6888,
        6891
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1462": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6888,
        6891
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5BE"
    },
    "1465": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6888,
        6891
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1466": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6888,
        6891
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1427"
    },
    "1469": {
      "fn": "Vesting.getNextVestingClaim",
      "jump": "i",
      "offset": [
        6888,
        6891
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1470": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6888,
        6891
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1471": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6888,
        6891
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1472": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6888,
        6891
      ],
      "op": "POP",
      "path": "50"
    },
    "1473": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6888,
        6891
      ],
      "op": "POP",
      "path": "50"
    },
    "1474": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6859,
        7352
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4F1"
    },
    "1477": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6859,
        7352
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1478": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6859,
        7352
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1479": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6859,
        7352
      ],
      "op": "POP",
      "path": "50"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1482": {
      "op": "NOT"
    },
    "1483": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7396,
        7397
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 14,
      "value": "0x0"
    },
    "1485": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7399,
        7400
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1486": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7384,
        7401
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "1487": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7384,
        7401
      ],
      "op": "POP",
      "path": "50"
    },
    "1488": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7384,
        7401
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "1489": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7384,
        7401
      ],
      "op": "POP",
      "path": "50"
    },
    "1490": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7384,
        7401
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "1491": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7384,
        7401
      ],
      "op": "POP",
      "path": "50"
    },
    "1492": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7384,
        7401
      ],
      "op": "POP",
      "path": "50"
    },
    "1493": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        7384,
        7401
      ],
      "op": "POP",
      "path": "50"
    },
    "1494": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6418,
        7408
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1495": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6418,
        7408
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1496": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6418,
        7408
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "1497": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6418,
        7408
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1498": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6418,
        7408
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "1499": {
      "fn": "Vesting.getNextVestingClaim",
      "offset": [
        6418,
        7408
      ],
      "op": "POP",
      "path": "50"
    },
    "1500": {
      "fn": "Vesting.getNextVestingClaim",
      "jump": "o",
      "offset": [
        6418,
        7408
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1501": {
      "fn": "Vesting.pool_name",
      "offset": [
        7480,
        7571
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1502": {
      "fn": "Vesting.pool_name",
      "offset": [
        7522,
        7535
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "1504": {
      "fn": "Vesting.pool_name",
      "offset": [
        7554,
        7564
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 15,
      "value": "0x3"
    },
    "1506": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1507": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1508": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5EC"
    },
    "1511": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1512": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x13EC"
    },
    "1515": {
      "fn": "Vesting.pool_name",
      "jump": "i",
      "offset": [
        7547,
        7564
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1516": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1517": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1518": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "1520": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "ADD",
      "path": "50"
    },
    "1521": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1523": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1524": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1525": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DIV",
      "path": "50"
    },
    "1526": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "MUL",
      "path": "50"
    },
    "1527": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1529": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "ADD",
      "path": "50"
    },
    "1530": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1532": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1533": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1534": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1535": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "ADD",
      "path": "50"
    },
    "1536": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1538": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1539": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1540": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "1541": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1542": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1543": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1544": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1545": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1546": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1548": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "ADD",
      "path": "50"
    },
    "1549": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1550": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1551": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1552": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x618"
    },
    "1555": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1556": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x13EC"
    },
    "1559": {
      "fn": "Vesting.pool_name",
      "jump": "i",
      "offset": [
        7547,
        7564
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1560": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1561": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1562": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "1563": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x665"
    },
    "1566": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1567": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1568": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "1570": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "LT",
      "path": "50"
    },
    "1571": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x63A"
    },
    "1574": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1575": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "1578": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1579": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DUP4",
      "path": "50"
    },
    "1580": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1581": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DIV",
      "path": "50"
    },
    "1582": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "MUL",
      "path": "50"
    },
    "1583": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DUP4",
      "path": "50"
    },
    "1584": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1585": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1586": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1588": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "ADD",
      "path": "50"
    },
    "1589": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1590": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x665"
    },
    "1593": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1594": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1595": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1596": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "ADD",
      "path": "50"
    },
    "1597": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1598": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1599": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1601": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1602": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1604": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1606": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "1607": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1608": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1609": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1610": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1611": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1612": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1613": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1614": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "1616": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "ADD",
      "path": "50"
    },
    "1617": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1618": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1620": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "ADD",
      "path": "50"
    },
    "1621": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1622": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DUP4",
      "path": "50"
    },
    "1623": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "GT",
      "path": "50"
    },
    "1624": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x648"
    },
    "1627": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1628": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1629": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1630": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "SUB",
      "path": "50"
    },
    "1631": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "1633": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "AND",
      "path": "50"
    },
    "1634": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1635": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "ADD",
      "path": "50"
    },
    "1636": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1637": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1638": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "POP",
      "path": "50"
    },
    "1639": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "POP",
      "path": "50"
    },
    "1640": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "POP",
      "path": "50"
    },
    "1641": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "POP",
      "path": "50"
    },
    "1642": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "POP",
      "path": "50"
    },
    "1643": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1644": {
      "fn": "Vesting.pool_name",
      "offset": [
        7547,
        7564
      ],
      "op": "POP",
      "path": "50"
    },
    "1645": {
      "fn": "Vesting.pool_name",
      "offset": [
        7480,
        7571
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1646": {
      "fn": "Vesting.pool_name",
      "jump": "o",
      "offset": [
        7480,
        7571
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1647": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1648": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1649": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x678"
    },
    "1652": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB16"
    },
    "1655": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1656": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1663": {
      "op": "SHL"
    },
    "1664": {
      "op": "SUB"
    },
    "1665": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "1666": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1667": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x69E"
    },
    "1670": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1671": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1673": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1674": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1680": {
      "op": "SHL"
    },
    "1681": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1682": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1683": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1685": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1686": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0"
    },
    "1689": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1690": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x131D"
    },
    "1693": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1694": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1695": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 16,
      "value": "0x6A8"
    },
    "1698": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1700": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD46"
    },
    "1703": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1704": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1705": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1706": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5251,
        6011
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1707": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5314,
        5328
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1709": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5334,
        5360
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x6B5"
    },
    "1712": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5353,
        5359
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1713": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5334,
        5352
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xCC5"
    },
    "1716": {
      "fn": "Vesting.claimVestedTokens",
      "jump": "i",
      "offset": [
        5334,
        5360
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1717": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5334,
        5360
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1718": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5313,
        5360
      ],
      "op": "POP",
      "path": "50"
    },
    "1719": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5313,
        5360
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1720": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5313,
        5360
      ],
      "op": "POP",
      "path": "50"
    },
    "1721": {
      "branch": 60,
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5378,
        5387
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 17
    },
    "1722": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5370,
        5418
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x702"
    },
    "1725": {
      "branch": 60,
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5370,
        5418
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1726": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5370,
        5418
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1728": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5370,
        5418
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1729": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1735": {
      "op": "SHL"
    },
    "1736": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5370,
        5418
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1737": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5370,
        5418
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1740": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5370,
        5418
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1742": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5370,
        5418
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1743": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5370,
        5418
      ],
      "op": "ADD",
      "path": "50"
    },
    "1744": {
      "op": "MSTORE"
    },
    "1745": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1749": {
      "op": "DUP3"
    },
    "1750": {
      "op": "ADD"
    },
    "1751": {
      "op": "MSTORE"
    },
    "1752": {
      "op": "PUSH26",
      "value": "0x4E6F7420636C61696D61626C6520617420746869732074696D65"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "1781": {
      "op": "SHL"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1784": {
      "op": "DUP3"
    },
    "1785": {
      "op": "ADD"
    },
    "1786": {
      "op": "MSTORE"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1789": {
      "op": "ADD"
    },
    "1790": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5370,
        5418
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2A0"
    },
    "1793": {
      "op": "JUMP"
    },
    "1794": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5370,
        5418
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1795": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5467,
        5477
      ],
      "op": "CALLER",
      "path": "50"
    },
    "1796": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5429,
        5450
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1798": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5453,
        5478
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1799": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5453,
        5478
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1800": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5453,
        5478
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1801": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5453,
        5466
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "1803": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5453,
        5478
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1805": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5453,
        5478
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1806": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5453,
        5478
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1808": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5453,
        5478
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1809": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5453,
        5478
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "1810": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5453,
        5478
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1811": {
      "branch": 61,
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5497,
        5514
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 18
    },
    "1812": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5489,
        5553
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x76A"
    },
    "1815": {
      "branch": 61,
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5489,
        5553
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1816": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5489,
        5553
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1818": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5489,
        5553
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1819": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1825": {
      "op": "SHL"
    },
    "1826": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5489,
        5553
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1827": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5489,
        5553
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1830": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5489,
        5553
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1832": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5489,
        5553
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1833": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5489,
        5553
      ],
      "op": "ADD",
      "path": "50"
    },
    "1834": {
      "op": "MSTORE"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1839": {
      "op": "DUP3"
    },
    "1840": {
      "op": "ADD"
    },
    "1841": {
      "op": "MSTORE"
    },
    "1842": {
      "op": "PUSH32",
      "value": "0x4E6F20746F6B656E732068617665206265656E20616C6C6F74656420746F2079"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1877": {
      "op": "DUP3"
    },
    "1878": {
      "op": "ADD"
    },
    "1879": {
      "op": "MSTORE"
    },
    "1880": {
      "op": "PUSH2",
      "value": "0x6F75"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1885": {
      "op": "SHL"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1888": {
      "op": "DUP3"
    },
    "1889": {
      "op": "ADD"
    },
    "1890": {
      "op": "MSTORE"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1893": {
      "op": "ADD"
    },
    "1894": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5489,
        5553
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2A0"
    },
    "1897": {
      "op": "JUMP"
    },
    "1898": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5489,
        5553
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1899": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5597,
        5607
      ],
      "op": "CALLER",
      "path": "50"
    },
    "1900": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5564,
        5576
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1902": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5608
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1903": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5608
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1904": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5608
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1905": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5596
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x9"
    },
    "1907": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5608
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1909": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5608
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1910": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5608
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1911": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5608
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1912": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5608
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1914": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5608
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1915": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5608
      ],
      "op": "DUP4",
      "path": "50"
    },
    "1916": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5608
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "1917": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5616
      ],
      "op": "DUP7",
      "path": "50"
    },
    "1918": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5616
      ],
      "op": "DUP5",
      "path": "50"
    },
    "1919": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5616
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1920": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5616
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1921": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5616
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1922": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5616
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1923": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5616
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1924": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5616
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "1925": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5616
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1926": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5616
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xFF"
    },
    "1928": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5579,
        5616
      ],
      "op": "AND",
      "path": "50"
    },
    "1929": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5634,
        5642
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 19
    },
    "1930": {
      "branch": 62,
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5634,
        5642
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "1931": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5626,
        5682
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x7E2"
    },
    "1934": {
      "branch": 62,
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5626,
        5682
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1935": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5626,
        5682
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1937": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5626,
        5682
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1938": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1944": {
      "op": "SHL"
    },
    "1945": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5626,
        5682
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1946": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5626,
        5682
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1949": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5626,
        5682
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1951": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5626,
        5682
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1952": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5626,
        5682
      ],
      "op": "ADD",
      "path": "50"
    },
    "1953": {
      "op": "MSTORE"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1958": {
      "op": "DUP3"
    },
    "1959": {
      "op": "ADD"
    },
    "1960": {
      "op": "MSTORE"
    },
    "1961": {
      "op": "PUSH32",
      "value": "0x54686973207665737420616D6F756E7420697320616C726561647920636C6169"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1996": {
      "op": "DUP3"
    },
    "1997": {
      "op": "ADD"
    },
    "1998": {
      "op": "MSTORE"
    },
    "1999": {
      "op": "PUSH3",
      "value": "0x1B5959"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "2005": {
      "op": "SHL"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2008": {
      "op": "DUP3"
    },
    "2009": {
      "op": "ADD"
    },
    "2010": {
      "op": "MSTORE"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2013": {
      "op": "ADD"
    },
    "2014": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5626,
        5682
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2A0"
    },
    "2017": {
      "op": "JUMP"
    },
    "2018": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5626,
        5682
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2019": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5711,
        5721
      ],
      "op": "CALLER",
      "path": "50",
      "statement": 20
    },
    "2020": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5722
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2022": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5722
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2023": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5722
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2024": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5722
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2025": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5710
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x9"
    },
    "2027": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5722
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2029": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5722
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2030": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5722
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2031": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5722
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2032": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5722
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2034": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5722
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2035": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5722
      ],
      "op": "DUP4",
      "path": "50"
    },
    "2036": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5722
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "2037": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5730
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2038": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5730
      ],
      "op": "DUP5",
      "path": "50"
    },
    "2039": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5730
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2040": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5730
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2041": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5730
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2042": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5730
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2043": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5730
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2044": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5730
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "2045": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5737
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2046": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5737
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2049": {
      "op": "NOT"
    },
    "2050": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5737
      ],
      "op": "AND",
      "path": "50"
    },
    "2051": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5733,
        5737
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "2053": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5737
      ],
      "op": "OR",
      "path": "50"
    },
    "2054": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5737
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2055": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5693,
        5737
      ],
      "op": "SSTORE",
      "path": "50"
    },
    "2056": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5786
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x5"
    },
    "2058": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2059": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2060": {
      "offset": [
        1161,
        1164
      ],
      "op": "PUSH3",
      "path": "50",
      "value": "0xF4240"
    },
    "2064": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        1161,
        1164
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2065": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5797,
        5810
      ],
      "op": "DUP6",
      "path": "50"
    },
    "2066": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5797,
        5810
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2067": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5723,
        5729
      ],
      "op": "DUP9",
      "path": "50"
    },
    "2068": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5723,
        5729
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2069": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2070": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "LT",
      "path": "50"
    },
    "2071": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x830"
    },
    "2074": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "2075": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2082": {
      "op": "SHL"
    },
    "2083": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2085": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2086": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x32"
    },
    "2088": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "2090": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2091": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "2093": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2095": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "REVERT",
      "path": "50"
    },
    "2096": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2097": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2098": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2100": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2101": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2103": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2105": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "2106": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "ADD",
      "path": "50"
    },
    "2107": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5794
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2108": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5810
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x845"
    },
    "2111": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5810
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2112": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5810
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2113": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5810
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x138A"
    },
    "2116": {
      "fn": "Vesting.claimVestedTokens",
      "jump": "i",
      "offset": [
        5769,
        5810
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2117": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5769,
        5810
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2118": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5768,
        5836
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x84F"
    },
    "2121": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5768,
        5836
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2122": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5768,
        5836
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2123": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5768,
        5836
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x136A"
    },
    "2126": {
      "fn": "Vesting.claimVestedTokens",
      "jump": "i",
      "offset": [
        5768,
        5836
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2127": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5768,
        5836
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2128": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5861,
        5871
      ],
      "op": "CALLER",
      "path": "50",
      "statement": 21
    },
    "2129": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5847,
        5872
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2131": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5847,
        5872
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2132": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5847,
        5872
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2133": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5847,
        5872
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2134": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5847,
        5860
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x2"
    },
    "2136": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5847,
        5872
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2138": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5847,
        5872
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2139": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5847,
        5872
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2141": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5847,
        5872
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2142": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5847,
        5872
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "2143": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5847,
        5885
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2144": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5847,
        5885
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2145": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5748,
        5836
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "2146": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5748,
        5836
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "2147": {
      "op": "POP"
    },
    "2148": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5748,
        5836
      ],
      "op": "DUP4",
      "path": "50"
    },
    "2149": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5748,
        5836
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "2150": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5847,
        5872
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2151": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5847,
        5872
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2152": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5847,
        5872
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2153": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5847,
        5885
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x873"
    },
    "2156": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5847,
        5885
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2157": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5748,
        5836
      ],
      "op": "DUP5",
      "path": "50"
    },
    "2158": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5748,
        5836
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2159": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5847,
        5885
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1352"
    },
    "2162": {
      "fn": "Vesting.claimVestedTokens",
      "jump": "i",
      "offset": [
        5847,
        5885
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2163": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5847,
        5885
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2164": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5847,
        5885
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2165": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5847,
        5885
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2166": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5847,
        5885
      ],
      "op": "SSTORE",
      "path": "50"
    },
    "2167": {
      "op": "POP"
    },
    "2168": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5896,
        5937
      ],
      "op": "PUSH2",
      "path": "50",
      "statement": 22,
      "value": "0x8AD"
    },
    "2171": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5896,
        5937
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2172": {
      "op": "POP"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2179": {
      "op": "SHL"
    },
    "2180": {
      "op": "SUB"
    },
    "2181": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5896,
        5901
      ],
      "op": "PUSH32",
      "path": "50",
      "value": "0x0"
    },
    "2214": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5896,
        5914
      ],
      "op": "AND",
      "path": "50"
    },
    "2215": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5915,
        5925
      ],
      "op": "CALLER",
      "path": "50"
    },
    "2216": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5927,
        5936
      ],
      "op": "DUP4",
      "path": "50"
    },
    "2217": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5896,
        5914
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD96"
    },
    "2220": {
      "fn": "Vesting.claimVestedTokens",
      "jump": "i",
      "offset": [
        5896,
        5937
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2221": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5896,
        5937
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2222": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5952,
        6004
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 23,
      "value": "0x40"
    },
    "2224": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5952,
        6004
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2225": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5952,
        6004
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2226": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5977,
        5992
      ],
      "op": "TIMESTAMP",
      "path": "50"
    },
    "2227": {
      "op": "DUP2"
    },
    "2228": {
      "op": "MSTORE"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2231": {
      "op": "DUP2"
    },
    "2232": {
      "op": "ADD"
    },
    "2233": {
      "op": "DUP4"
    },
    "2234": {
      "op": "SWAP1"
    },
    "2235": {
      "op": "MSTORE"
    },
    "2236": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5965,
        5975
      ],
      "op": "CALLER",
      "path": "50"
    },
    "2237": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5965,
        5975
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2238": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5952,
        6004
      ],
      "op": "PUSH32",
      "path": "50",
      "value": "0xCB1E26772E882480176A3E649A5F7937DC0EC3F50126283FAF56F927B070BE80"
    },
    "2271": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5952,
        6004
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2272": {
      "op": "ADD"
    },
    "2273": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5952,
        6004
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2275": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5952,
        6004
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2276": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5952,
        6004
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2277": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5952,
        6004
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2278": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5952,
        6004
      ],
      "op": "SUB",
      "path": "50"
    },
    "2279": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5952,
        6004
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2280": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5952,
        6004
      ],
      "op": "LOG2",
      "path": "50"
    },
    "2281": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5251,
        6011
      ],
      "op": "POP",
      "path": "50"
    },
    "2282": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5251,
        6011
      ],
      "op": "POP",
      "path": "50"
    },
    "2283": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5251,
        6011
      ],
      "op": "POP",
      "path": "50"
    },
    "2284": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5251,
        6011
      ],
      "op": "POP",
      "path": "50"
    },
    "2285": {
      "fn": "Vesting.claimVestedTokens",
      "offset": [
        5251,
        6011
      ],
      "op": "POP",
      "path": "50"
    },
    "2286": {
      "fn": "Vesting.claimVestedTokens",
      "jump": "o",
      "offset": [
        5251,
        6011
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2287": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        3979,
        4247
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2288": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2289": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8F8"
    },
    "2292": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB16"
    },
    "2295": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2296": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2303": {
      "op": "SHL"
    },
    "2304": {
      "op": "SUB"
    },
    "2305": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "2306": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "2307": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x91E"
    },
    "2310": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2311": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2313": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2314": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2320": {
      "op": "SHL"
    },
    "2321": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2322": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2323": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2325": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "2326": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0"
    },
    "2329": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2330": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x131D"
    },
    "2333": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2334": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2335": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4098,
        4126
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 24,
      "value": "0x7"
    },
    "2337": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4098,
        4126
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2338": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4098,
        4126
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xFF"
    },
    "2340": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4098,
        4126
      ],
      "op": "AND",
      "path": "50"
    },
    "2341": {
      "branch": 63,
      "fn": "Vesting.startVestingMode",
      "offset": [
        4097,
        4126
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "2342": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4089,
        4154
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x941"
    },
    "2345": {
      "branch": 63,
      "fn": "Vesting.startVestingMode",
      "offset": [
        4089,
        4154
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "2346": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4089,
        4154
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2348": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4089,
        4154
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2349": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2355": {
      "op": "SHL"
    },
    "2356": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4089,
        4154
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2357": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4089,
        4154
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2358": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4089,
        4154
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "2360": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4089,
        4154
      ],
      "op": "ADD",
      "path": "50"
    },
    "2361": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4089,
        4154
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2A0"
    },
    "2364": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4089,
        4154
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2365": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4089,
        4154
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x12EC"
    },
    "2368": {
      "fn": "Vesting.startVestingMode",
      "jump": "i",
      "offset": [
        4089,
        4154
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2369": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4089,
        4154
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2370": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4165,
        4183
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 25,
      "value": "0x6"
    },
    "2372": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4165,
        4195
      ],
      "op": "SSTORE",
      "path": "50"
    },
    "2373": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4205,
        4233
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 26,
      "value": "0x7"
    },
    "2375": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4205,
        4240
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2376": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4205,
        4240
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2379": {
      "op": "NOT"
    },
    "2380": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4205,
        4240
      ],
      "op": "AND",
      "path": "50"
    },
    "2381": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4236,
        4240
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "2383": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4205,
        4240
      ],
      "op": "OR",
      "path": "50"
    },
    "2384": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4205,
        4240
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2385": {
      "fn": "Vesting.startVestingMode",
      "offset": [
        4205,
        4240
      ],
      "op": "SSTORE",
      "path": "50"
    },
    "2386": {
      "fn": "Vesting.startVestingMode",
      "jump": "o",
      "offset": [
        3979,
        4247
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2387": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3139,
        3800
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2388": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2389": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x95C"
    },
    "2392": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB16"
    },
    "2395": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2396": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2403": {
      "op": "SHL"
    },
    "2404": {
      "op": "SUB"
    },
    "2405": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "2406": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "2407": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x982"
    },
    "2410": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2411": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2413": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2414": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2420": {
      "op": "SHL"
    },
    "2421": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2422": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2423": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2425": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "2426": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0"
    },
    "2429": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2430": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x131D"
    },
    "2433": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2434": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2435": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3279,
        3307
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 27,
      "value": "0x7"
    },
    "2437": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3279,
        3307
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2438": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3279,
        3307
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xFF"
    },
    "2440": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3279,
        3307
      ],
      "op": "AND",
      "path": "50"
    },
    "2441": {
      "branch": 64,
      "fn": "Vesting.allotTokens",
      "offset": [
        3278,
        3307
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "2442": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3270,
        3335
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x9A5"
    },
    "2445": {
      "branch": 64,
      "fn": "Vesting.allotTokens",
      "offset": [
        3270,
        3335
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "2446": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3270,
        3335
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2448": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3270,
        3335
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2449": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2455": {
      "op": "SHL"
    },
    "2456": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3270,
        3335
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2457": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3270,
        3335
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2458": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3270,
        3335
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "2460": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3270,
        3335
      ],
      "op": "ADD",
      "path": "50"
    },
    "2461": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3270,
        3335
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2A0"
    },
    "2464": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3270,
        3335
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2465": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3270,
        3335
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x12EC"
    },
    "2468": {
      "fn": "Vesting.allotTokens",
      "jump": "i",
      "offset": [
        3270,
        3335
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2469": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3270,
        3335
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2470": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3360,
        3366
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2471": {
      "branch": 65,
      "fn": "Vesting.allotTokens",
      "offset": [
        3391,
        3398
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 28
    },
    "2472": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3383,
        3417
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x9C3"
    },
    "2475": {
      "branch": 65,
      "fn": "Vesting.allotTokens",
      "offset": [
        3383,
        3417
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "2476": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3383,
        3417
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2478": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3383,
        3417
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2479": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2485": {
      "op": "SHL"
    },
    "2486": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3383,
        3417
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2487": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3383,
        3417
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2488": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3383,
        3417
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "2490": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3383,
        3417
      ],
      "op": "ADD",
      "path": "50"
    },
    "2491": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3383,
        3417
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2A0"
    },
    "2494": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3383,
        3417
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2495": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3383,
        3417
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x129E"
    },
    "2498": {
      "fn": "Vesting.allotTokens",
      "jump": "i",
      "offset": [
        3383,
        3417
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2499": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3383,
        3417
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2500": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3435,
        3462
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 29
    },
    "2501": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3435,
        3462
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2502": {
      "branch": 66,
      "fn": "Vesting.allotTokens",
      "offset": [
        3435,
        3462
      ],
      "op": "EQ",
      "path": "50"
    },
    "2503": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3427,
        3479
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x9E2"
    },
    "2506": {
      "branch": 66,
      "fn": "Vesting.allotTokens",
      "offset": [
        3427,
        3479
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "2507": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3427,
        3479
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2509": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3427,
        3479
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2510": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2516": {
      "op": "SHL"
    },
    "2517": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3427,
        3479
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2518": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3427,
        3479
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2519": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3427,
        3479
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "2521": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3427,
        3479
      ],
      "op": "ADD",
      "path": "50"
    },
    "2522": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3427,
        3479
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2A0"
    },
    "2525": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3427,
        3479
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2526": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3427,
        3479
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x12C6"
    },
    "2529": {
      "fn": "Vesting.allotTokens",
      "jump": "i",
      "offset": [
        3427,
        3479
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2530": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3427,
        3479
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2531": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3490,
        3516
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2533": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3490,
        3516
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2534": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3527,
        3717
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2535": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3551,
        3554
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2536": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3547,
        3548
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2537": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3547,
        3554
      ],
      "op": "LT",
      "path": "50"
    },
    "2538": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3527,
        3717
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "2539": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3527,
        3717
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xAD0"
    },
    "2542": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3527,
        3717
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "2543": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3575,
        3588
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2545": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3597
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2546": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3597
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2547": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3598,
        3599
      ],
      "op": "DUP4",
      "path": "50"
    },
    "2548": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2549": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2550": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "LT",
      "path": "50"
    },
    "2551": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xA10"
    },
    "2554": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "2555": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2562": {
      "op": "SHL"
    },
    "2563": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2565": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2566": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x32"
    },
    "2568": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "2570": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2571": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "2573": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2575": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "REVERT",
      "path": "50"
    },
    "2576": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2577": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2578": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "POP",
      "path": "50"
    },
    "2579": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2581": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "MUL",
      "path": "50"
    },
    "2582": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "ADD",
      "path": "50"
    },
    "2583": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2585": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2586": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "ADD",
      "path": "50"
    },
    "2587": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2588": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xA25"
    },
    "2591": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2592": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2593": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1131"
    },
    "2596": {
      "fn": "Vesting.allotTokens",
      "jump": "i",
      "offset": [
        3591,
        3600
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2597": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3591,
        3600
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2598": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3575,
        3600
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2599": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3575,
        3600
      ],
      "op": "POP",
      "path": "50"
    },
    "2600": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3638,
        3651
      ],
      "op": "DUP6",
      "path": "50",
      "statement": 30
    },
    "2601": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3638,
        3651
      ],
      "op": "DUP6",
      "path": "50"
    },
    "2602": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3652,
        3653
      ],
      "op": "DUP4",
      "path": "50"
    },
    "2603": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3638,
        3654
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2604": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3638,
        3654
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2605": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3638,
        3654
      ],
      "op": "LT",
      "path": "50"
    },
    "2606": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3638,
        3654
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xA47"
    },
    "2609": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3638,
        3654
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "2610": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2617": {
      "op": "SHL"
    },
    "2618": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3638,
        3654
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2620": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3638,
        3654
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2621": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3638,
        3654
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x32"
    },
    "2623": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3638,
        3654
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "2625": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3638,
        3654
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2626": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3638,
        3654
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "2628": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3638,
        3654
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2630": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3638,
        3654
      ],
      "op": "REVERT",
      "path": "50"
    },
    "2631": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3638,
        3654
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2632": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3638,
        3654
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2633": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3638,
        3654
      ],
      "op": "POP",
      "path": "50"
    },
    "2634": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3638,
        3654
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2636": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3638,
        3654
      ],
      "op": "MUL",
      "path": "50"
    },
    "2637": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3638,
        3654
      ],
      "op": "ADD",
      "path": "50"
    },
    "2638": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3638,
        3654
      ],
      "op": "CALLDATALOAD",
      "path": "50"
    },
    "2639": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3627
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "2641": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3634
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2643": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3628,
        3633
      ],
      "op": "DUP4",
      "path": "50"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2650": {
      "op": "SHL"
    },
    "2651": {
      "op": "SUB"
    },
    "2652": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3634
      ],
      "op": "AND",
      "path": "50"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2659": {
      "op": "SHL"
    },
    "2660": {
      "op": "SUB"
    },
    "2661": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3634
      ],
      "op": "AND",
      "path": "50"
    },
    "2662": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3634
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2663": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3634
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2664": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3634
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2666": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3634
      ],
      "op": "ADD",
      "path": "50"
    },
    "2667": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3634
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2668": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3634
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2669": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3634
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2670": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3634
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2672": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3634
      ],
      "op": "ADD",
      "path": "50"
    },
    "2673": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3634
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2675": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3634
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "2676": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3634
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2678": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3654
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2679": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3654
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2680": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3654
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2681": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3654
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xA82"
    },
    "2684": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3654
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2685": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3654
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2686": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3654
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1352"
    },
    "2689": {
      "fn": "Vesting.allotTokens",
      "jump": "i",
      "offset": [
        3614,
        3654
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2690": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3654
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2691": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3654
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2692": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3654
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2693": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3614,
        3654
      ],
      "op": "SSTORE",
      "path": "50"
    },
    "2694": {
      "op": "POP"
    },
    "2695": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3703
      ],
      "op": "DUP7",
      "path": "50",
      "statement": 31
    },
    "2696": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3703
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2697": {
      "op": "POP"
    },
    "2698": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3703
      ],
      "op": "DUP6",
      "path": "50"
    },
    "2699": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3704,
        3705
      ],
      "op": "DUP4",
      "path": "50"
    },
    "2700": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3706
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2701": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3706
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2702": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3706
      ],
      "op": "LT",
      "path": "50"
    },
    "2703": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3706
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xAA8"
    },
    "2706": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3706
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "2707": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2714": {
      "op": "SHL"
    },
    "2715": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3706
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2717": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3706
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2718": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3706
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x32"
    },
    "2720": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3706
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "2722": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3706
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2723": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3706
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "2725": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3706
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2727": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3706
      ],
      "op": "REVERT",
      "path": "50"
    },
    "2728": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3706
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2729": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3706
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2730": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3706
      ],
      "op": "POP",
      "path": "50"
    },
    "2731": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3706
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2733": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3706
      ],
      "op": "MUL",
      "path": "50"
    },
    "2734": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3706
      ],
      "op": "ADD",
      "path": "50"
    },
    "2735": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3690,
        3706
      ],
      "op": "CALLDATALOAD",
      "path": "50"
    },
    "2736": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3668,
        3706
      ],
      "op": "DUP4",
      "path": "50"
    },
    "2737": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3668,
        3706
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xABA"
    },
    "2740": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3668,
        3706
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2741": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3668,
        3706
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2742": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3668,
        3706
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1352"
    },
    "2745": {
      "fn": "Vesting.allotTokens",
      "jump": "i",
      "offset": [
        3668,
        3706
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2746": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3668,
        3706
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2747": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3668,
        3706
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "2748": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3668,
        3706
      ],
      "op": "POP",
      "path": "50"
    },
    "2749": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3527,
        3717
      ],
      "op": "POP",
      "path": "50"
    },
    "2750": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3556,
        3559
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 32
    },
    "2751": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3556,
        3559
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2752": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3556,
        3559
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xAC8"
    },
    "2755": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3556,
        3559
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2756": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3556,
        3559
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1427"
    },
    "2759": {
      "fn": "Vesting.allotTokens",
      "jump": "i",
      "offset": [
        3556,
        3559
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2760": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3556,
        3559
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2761": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3556,
        3559
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2762": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3556,
        3559
      ],
      "op": "POP",
      "path": "50"
    },
    "2763": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3556,
        3559
      ],
      "op": "POP",
      "path": "50"
    },
    "2764": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3527,
        3717
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x9E6"
    },
    "2767": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3527,
        3717
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2768": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3527,
        3717
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2769": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3527,
        3717
      ],
      "op": "POP",
      "path": "50"
    },
    "2770": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3727,
        3793
      ],
      "op": "PUSH2",
      "path": "50",
      "statement": 33,
      "value": "0xB0E"
    },
    "2773": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3750,
        3757
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xADC"
    },
    "2776": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3750,
        3755
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xB16"
    },
    "2779": {
      "fn": "Vesting.allotTokens",
      "jump": "i",
      "offset": [
        3750,
        3757
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2780": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3750,
        3757
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2785": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2787": {
      "op": "SHL"
    },
    "2788": {
      "op": "SUB"
    },
    "2789": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3727,
        3732
      ],
      "op": "PUSH32",
      "path": "50",
      "value": "0x0"
    },
    "2822": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3727,
        3749
      ],
      "op": "AND",
      "path": "50"
    },
    "2823": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3727,
        3749
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2824": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3767,
        3771
      ],
      "op": "ADDRESS",
      "path": "50"
    },
    "2825": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3774,
        3792
      ],
      "op": "DUP5",
      "path": "50"
    },
    "2826": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3727,
        3749
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xDFE"
    },
    "2829": {
      "fn": "Vesting.allotTokens",
      "jump": "i",
      "offset": [
        3727,
        3793
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2830": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3727,
        3793
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2831": {
      "offset": [
        1255,
        1256
      ],
      "op": "POP",
      "path": "2"
    },
    "2832": {
      "fn": "Vesting.allotTokens",
      "offset": [
        1255,
        1256
      ],
      "op": "POP",
      "path": "2"
    },
    "2833": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3139,
        3800
      ],
      "op": "POP",
      "path": "50"
    },
    "2834": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3139,
        3800
      ],
      "op": "POP",
      "path": "50"
    },
    "2835": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3139,
        3800
      ],
      "op": "POP",
      "path": "50"
    },
    "2836": {
      "fn": "Vesting.allotTokens",
      "offset": [
        3139,
        3800
      ],
      "op": "POP",
      "path": "50"
    },
    "2837": {
      "fn": "Vesting.allotTokens",
      "jump": "o",
      "offset": [
        3139,
        3800
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2838": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2839": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2841": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "2",
      "statement": 34
    },
    "2842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2846": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2848": {
      "op": "SHL"
    },
    "2849": {
      "op": "SUB"
    },
    "2850": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "2"
    },
    "2851": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2852": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2853": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7617,
        7758
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2854": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2855": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2E"
    },
    "2858": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB16"
    },
    "2861": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2862": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2869": {
      "op": "SHL"
    },
    "2870": {
      "op": "SUB"
    },
    "2871": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "2872": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "2873": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB54"
    },
    "2876": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2877": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2879": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2880": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2886": {
      "op": "SHL"
    },
    "2887": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2888": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2889": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2891": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "2892": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0"
    },
    "2895": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2896": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x131D"
    },
    "2899": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2900": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2901": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7680,
        7751
      ],
      "op": "PUSH2",
      "path": "50",
      "statement": 35,
      "value": "0x6A8"
    },
    "2904": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7707,
        7717
      ],
      "op": "CALLER",
      "path": "50"
    },
    "2905": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7725
      ],
      "op": "PUSH32",
      "path": "50",
      "value": "0x0"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2944": {
      "op": "SHL"
    },
    "2945": {
      "op": "SUB"
    },
    "2946": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7735
      ],
      "op": "AND",
      "path": "50"
    },
    "2947": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x70A08231"
    },
    "2952": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7744,
        7748
      ],
      "op": "ADDRESS",
      "path": "50"
    },
    "2953": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2955": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2956": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2957": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "2962": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "AND",
      "path": "50"
    },
    "2963": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "2965": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "SHL",
      "path": "50"
    },
    "2966": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2967": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2968": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "2970": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "ADD",
      "path": "50"
    },
    "2971": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xBA4"
    },
    "2974": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2975": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2976": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1257"
    },
    "2979": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "jump": "i",
      "offset": [
        7720,
        7750
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2980": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2981": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2983": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2985": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2986": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2987": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "DUP4",
      "path": "50"
    },
    "2988": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "SUB",
      "path": "50"
    },
    "2989": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2990": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "DUP7",
      "path": "50"
    },
    "2991": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2992": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "EXTCODESIZE",
      "path": "50"
    },
    "2993": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "2994": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2995": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "2996": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xBBC"
    },
    "2999": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3000": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3002": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3003": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "REVERT",
      "path": "50"
    },
    "3004": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3005": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "POP",
      "path": "50"
    },
    "3006": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "GAS",
      "path": "50"
    },
    "3007": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "3008": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3009": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3010": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3011": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xBD0"
    },
    "3014": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3015": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3016": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3018": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3019": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "3020": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3021": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3023": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "REVERT",
      "path": "50"
    },
    "3024": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3025": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "POP",
      "path": "50"
    },
    "3026": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "POP",
      "path": "50"
    },
    "3027": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "POP",
      "path": "50"
    },
    "3028": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "POP",
      "path": "50"
    },
    "3029": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3031": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3032": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3033": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3035": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "NOT",
      "path": "50"
    },
    "3036": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3038": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3039": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "ADD",
      "path": "50"
    },
    "3040": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "AND",
      "path": "50"
    },
    "3041": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3042": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "ADD",
      "path": "50"
    },
    "3043": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3044": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3046": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3047": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "POP",
      "path": "50"
    },
    "3048": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3049": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "ADD",
      "path": "50"
    },
    "3050": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3051": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xBF4"
    },
    "3054": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3055": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3056": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1223"
    },
    "3059": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "jump": "i",
      "offset": [
        7720,
        7750
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3060": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7720,
        7750
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3067": {
      "op": "SHL"
    },
    "3068": {
      "op": "SUB"
    },
    "3069": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7680,
        7685
      ],
      "op": "PUSH32",
      "path": "50",
      "value": "0x0"
    },
    "3102": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7680,
        7698
      ],
      "op": "AND",
      "path": "50"
    },
    "3103": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7680,
        7698
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3104": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7680,
        7751
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3105": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "offset": [
        7680,
        7698
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD96"
    },
    "3108": {
      "fn": "Vesting.emergencyTokenWithdraw",
      "jump": "i",
      "offset": [
        7680,
        7751
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3109": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3110": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3111": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC2E"
    },
    "3114": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB16"
    },
    "3117": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3118": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3125": {
      "op": "SHL"
    },
    "3126": {
      "op": "SUB"
    },
    "3127": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "3128": {
      "branch": 71,
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "3129": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC54"
    },
    "3132": {
      "branch": 71,
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3133": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3135": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3136": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3142": {
      "op": "SHL"
    },
    "3143": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3144": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3145": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3147": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "3148": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0"
    },
    "3151": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3152": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x131D"
    },
    "3155": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3156": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3163": {
      "op": "SHL"
    },
    "3164": {
      "op": "SUB"
    },
    "3165": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 36
    },
    "3166": {
      "branch": 72,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "2"
    },
    "3167": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCB9"
    },
    "3170": {
      "branch": 72,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3171": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3173": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3174": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3180": {
      "op": "SHL"
    },
    "3181": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3182": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3185": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3187": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3188": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "2"
    },
    "3189": {
      "op": "MSTORE"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3194": {
      "op": "DUP3"
    },
    "3195": {
      "op": "ADD"
    },
    "3196": {
      "op": "MSTORE"
    },
    "3197": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "3230": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3232": {
      "op": "DUP3"
    },
    "3233": {
      "op": "ADD"
    },
    "3234": {
      "op": "MSTORE"
    },
    "3235": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3244": {
      "op": "SHL"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3247": {
      "op": "DUP3"
    },
    "3248": {
      "op": "ADD"
    },
    "3249": {
      "op": "MSTORE"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3252": {
      "op": "ADD"
    },
    "3253": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0"
    },
    "3256": {
      "op": "JUMP"
    },
    "3257": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3258": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 37,
      "value": "0xCC2"
    },
    "3261": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3262": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD46"
    },
    "3265": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3266": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3267": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "2"
    },
    "3268": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3269": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4503,
        5032
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3270": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4626,
        4654
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x7"
    },
    "3272": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4626,
        4654
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3273": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4592,
        4596
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3275": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4592,
        4596
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3276": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4592,
        4596
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3277": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4592,
        4596
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3278": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4626,
        4654
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xFF"
    },
    "3280": {
      "branch": 67,
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4626,
        4654
      ],
      "op": "AND",
      "path": "50"
    },
    "3281": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4621,
        4698
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xCDF"
    },
    "3284": {
      "branch": 67,
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4621,
        4698
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3285": {
      "op": "POP"
    },
    "3286": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4678,
        4683
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 38,
      "value": "0x0"
    },
    "3288": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4678,
        4683
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3289": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4678,
        4683
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3290": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4678,
        4683
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3291": {
      "op": "POP"
    },
    "3292": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4503,
        5032
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3293": {
      "op": "POP"
    },
    "3294": {
      "fn": "Vesting.isVestingClaimable",
      "jump": "o",
      "offset": [
        4503,
        5032
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3295": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4621,
        4698
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3296": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4707,
        4721
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3298": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4732
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "3300": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4740
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3302": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4740
      ],
      "op": "ADD",
      "path": "50"
    },
    "3303": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4741,
        4747
      ],
      "op": "DUP5",
      "path": "50"
    },
    "3304": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3305": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3306": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3307": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "LT",
      "path": "50"
    },
    "3308": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD05"
    },
    "3311": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3312": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3319": {
      "op": "SHL"
    },
    "3320": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3322": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3323": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x32"
    },
    "3325": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "3327": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3328": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "3330": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3332": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "REVERT",
      "path": "50"
    },
    "3333": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3334": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3336": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3337": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3338": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3339": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3341": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3342": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "3343": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "ADD",
      "path": "50"
    },
    "3344": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3345": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4780,
        4798
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x6"
    },
    "3347": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4780,
        4798
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3348": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3349": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3350": {
      "op": "POP"
    },
    "3351": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4780,
        4807
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD21"
    },
    "3354": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4780,
        4807
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3355": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3356": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4724,
        4748
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3357": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4780,
        4807
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1352"
    },
    "3360": {
      "fn": "Vesting.isVestingClaimable",
      "jump": "i",
      "offset": [
        4780,
        4807
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3361": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4780,
        4807
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3362": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4758,
        4807
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3363": {
      "op": "POP"
    },
    "3364": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4835,
        4850
      ],
      "op": "TIMESTAMP",
      "path": "50"
    },
    "3365": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4835,
        4864
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3366": {
      "op": "LT"
    },
    "3367": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4817,
        4831
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3369": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4835,
        4864
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3370": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4903,
        4986
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD3A"
    },
    "3373": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4903,
        4986
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3374": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4946,
        4975
      ],
      "op": "PUSH2",
      "path": "50",
      "statement": 39,
      "value": "0xD37"
    },
    "3377": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4960,
        4975
      ],
      "op": "TIMESTAMP",
      "path": "50"
    },
    "3378": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4946,
        4957
      ],
      "op": "DUP5",
      "path": "50"
    },
    "3379": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4946,
        4975
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x13A9"
    },
    "3382": {
      "fn": "Vesting.isVestingClaimable",
      "jump": "i",
      "offset": [
        4946,
        4975
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3383": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4946,
        4975
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3384": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4933,
        4975
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3385": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4933,
        4975
      ],
      "op": "POP",
      "path": "50"
    },
    "3386": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4903,
        4986
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3387": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        5003,
        5012
      ],
      "op": "SWAP1",
      "path": "50",
      "statement": 40
    },
    "3388": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        5003,
        5012
      ],
      "op": "SWAP7",
      "path": "50"
    },
    "3389": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        5014,
        5024
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3390": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        5014,
        5024
      ],
      "op": "SWAP6",
      "path": "50"
    },
    "3391": {
      "op": "POP"
    },
    "3392": {
      "fn": "Vesting.isVestingClaimable",
      "offset": [
        4503,
        5032
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "3393": {
      "op": "POP"
    },
    "3394": {
      "op": "POP"
    },
    "3395": {
      "op": "POP"
    },
    "3396": {
      "op": "POP"
    },
    "3397": {
      "fn": "Vesting.isVestingClaimable",
      "jump": "o",
      "offset": [
        4503,
        5032
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3398": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3399": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3401": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3402": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3409": {
      "op": "SHL"
    },
    "3410": {
      "op": "SUB"
    },
    "3411": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 41
    },
    "3412": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3413": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "2"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3420": {
      "op": "SHL"
    },
    "3421": {
      "op": "SUB"
    },
    "3422": {
      "op": "NOT"
    },
    "3423": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3424": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "2"
    },
    "3425": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3426": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "2"
    },
    "3427": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3428": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3429": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 42,
      "value": "0x40"
    },
    "3431": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3432": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3433": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3434": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3435": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "2"
    },
    "3436": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3437": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3438": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3439": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3472": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3473": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3474": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "2"
    },
    "3475": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "2"
    },
    "3476": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "2"
    },
    "3477": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3478": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3479": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 43,
      "value": "0x40"
    },
    "3481": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3488": {
      "op": "SHL"
    },
    "3489": {
      "op": "SUB"
    },
    "3490": {
      "op": "DUP4"
    },
    "3491": {
      "op": "AND"
    },
    "3492": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "3494": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3495": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "7"
    },
    "3496": {
      "op": "MSTORE"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3499": {
      "op": "DUP2"
    },
    "3500": {
      "op": "ADD"
    },
    "3501": {
      "op": "DUP3"
    },
    "3502": {
      "op": "SWAP1"
    },
    "3503": {
      "op": "MSTORE"
    },
    "3504": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDF9"
    },
    "3507": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3508": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3509": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3510": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3517": {
      "op": "SHL"
    },
    "3518": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        796,
        819
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3519": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3521": {
      "op": "ADD"
    },
    "3522": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3523": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3525": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3526": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3527": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3529": {
      "op": "NOT"
    },
    "3530": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3531": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3532": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SUB",
      "path": "7"
    },
    "3533": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "7"
    },
    "3534": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3535": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3536": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3537": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3538": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3539": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3541": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3542": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "7"
    },
    "3543": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3544": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3551": {
      "op": "SHL"
    },
    "3552": {
      "op": "SUB"
    },
    "3553": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "AND",
      "path": "7"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3560": {
      "op": "SHL"
    },
    "3561": {
      "op": "SUB"
    },
    "3562": {
      "op": "NOT"
    },
    "3563": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3564": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "3565": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "AND",
      "path": "7"
    },
    "3566": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3567": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3568": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3569": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "OR",
      "path": "7"
    },
    "3570": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3571": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3572": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3573": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        765
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE3C"
    },
    "3576": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        746,
        832
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3577": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3578": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "POP",
      "path": "7"
    },
    "3579": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "POP",
      "path": "7"
    },
    "3580": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "POP",
      "path": "7"
    },
    "3581": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        634,
        839
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3582": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1086
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3583": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 44,
      "value": "0x40"
    },
    "3585": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3592": {
      "op": "SHL"
    },
    "3593": {
      "op": "SUB"
    },
    "3594": {
      "op": "DUP1"
    },
    "3595": {
      "op": "DUP6"
    },
    "3596": {
      "op": "AND"
    },
    "3597": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "3599": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3600": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "ADD",
      "path": "7"
    },
    "3601": {
      "op": "MSTORE"
    },
    "3602": {
      "op": "DUP4"
    },
    "3603": {
      "op": "AND"
    },
    "3604": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3606": {
      "op": "DUP3"
    },
    "3607": {
      "op": "ADD"
    },
    "3608": {
      "op": "MSTORE"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3611": {
      "op": "DUP2"
    },
    "3612": {
      "op": "ADD"
    },
    "3613": {
      "op": "DUP3"
    },
    "3614": {
      "op": "SWAP1"
    },
    "3615": {
      "op": "MSTORE"
    },
    "3616": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1079
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE36"
    },
    "3619": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1079
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3620": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1003,
        1008
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3621": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1003,
        1008
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3622": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3629": {
      "op": "SHL"
    },
    "3630": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1033,
        1060
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3633": {
      "op": "ADD"
    },
    "3634": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDC2"
    },
    "3637": {
      "op": "JUMP"
    },
    "3638": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1079
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3639": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1086
      ],
      "op": "POP",
      "path": "7"
    },
    "3640": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1086
      ],
      "op": "POP",
      "path": "7"
    },
    "3641": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1086
      ],
      "op": "POP",
      "path": "7"
    },
    "3642": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1086
      ],
      "op": "POP",
      "path": "7"
    },
    "3643": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        845,
        1086
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3644": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3140,
        3846
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3645": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3647": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE91"
    },
    "3650": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3613,
        3617
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3651": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3653": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3654": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3655": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3657": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "7"
    },
    "3658": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3660": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3661": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3662": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3664": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3665": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3666": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3668": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "7"
    },
    "3669": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "3702": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3703": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3704": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "POP",
      "path": "7"
    },
    "3705": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3593,
        3598
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3712": {
      "op": "SHL"
    },
    "3713": {
      "op": "SUB"
    },
    "3714": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "AND",
      "path": "7"
    },
    "3715": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF0E"
    },
    "3718": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3719": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3720": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3721": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3722": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "3727": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "AND",
      "path": "7"
    },
    "3728": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3729": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3730": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3731": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3732": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3733": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3734": {
      "op": "POP"
    },
    "3735": {
      "branch": 73,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3689
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3736": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDF9"
    },
    "3739": {
      "branch": 73,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3740": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3763,
        3773
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 45
    },
    "3741": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3742": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3744": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "7"
    },
    "3745": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3746": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3747": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3748": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "7"
    },
    "3749": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3750": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEAF"
    },
    "3753": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3754": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3755": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11EB"
    },
    "3758": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3759": {
      "branch": 74,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3760": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDF9"
    },
    "3763": {
      "branch": 74,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3764": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3766": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3767": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3771": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3773": {
      "op": "SHL"
    },
    "3774": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3775": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3778": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3780": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3781": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "ADD",
      "path": "7"
    },
    "3782": {
      "op": "MSTORE"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3787": {
      "op": "DUP3"
    },
    "3788": {
      "op": "ADD"
    },
    "3789": {
      "op": "MSTORE"
    },
    "3790": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "3823": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3825": {
      "op": "DUP3"
    },
    "3826": {
      "op": "ADD"
    },
    "3827": {
      "op": "MSTORE"
    },
    "3828": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "3841": {
      "op": "SHL"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3844": {
      "op": "DUP3"
    },
    "3845": {
      "op": "ADD"
    },
    "3846": {
      "op": "MSTORE"
    },
    "3847": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3849": {
      "op": "ADD"
    },
    "3850": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A0"
    },
    "3853": {
      "op": "JUMP"
    },
    "3854": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3855": {
      "fn": "Address.functionCall",
      "offset": [
        3594,
        3606
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "3857": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 46,
      "value": "0xF1D"
    },
    "3860": {
      "fn": "Address.functionCall",
      "offset": [
        3647,
        3653
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3861": {
      "fn": "Address.functionCall",
      "offset": [
        3655,
        3659
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3862": {
      "fn": "Address.functionCall",
      "offset": [
        3661,
        3662
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3864": {
      "fn": "Address.functionCall",
      "offset": [
        3664,
        3676
      ],
      "op": "DUP6",
      "path": "13"
    },
    "3865": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3646
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF27"
    },
    "3868": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3869": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3870": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3871": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "POP",
      "path": "13"
    },
    "3872": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3873": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "3874": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3875": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "13"
    },
    "3876": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "13"
    },
    "3877": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "13"
    },
    "3878": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3879": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3880": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4713,
        4725
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "3882": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4770,
        4775
      ],
      "op": "DUP3",
      "path": "13",
      "statement": 47
    },
    "3883": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4766
      ],
      "op": "SELFBALANCE",
      "path": "13"
    },
    "3884": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "LT",
      "path": "13"
    },
    "3885": {
      "branch": 68,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3886": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF88"
    },
    "3889": {
      "branch": 68,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3890": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3892": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3893": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3899": {
      "op": "SHL"
    },
    "3900": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3901": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3902": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3904": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3906": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3907": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "ADD",
      "path": "13"
    },
    "3908": {
      "op": "MSTORE"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3913": {
      "op": "DUP3"
    },
    "3914": {
      "op": "ADD"
    },
    "3915": {
      "op": "MSTORE"
    },
    "3916": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3951": {
      "op": "DUP3"
    },
    "3952": {
      "op": "ADD"
    },
    "3953": {
      "op": "MSTORE"
    },
    "3954": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "3961": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "3963": {
      "op": "SHL"
    },
    "3964": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3966": {
      "op": "DUP3"
    },
    "3967": {
      "op": "ADD"
    },
    "3968": {
      "op": "MSTORE"
    },
    "3969": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3971": {
      "op": "ADD"
    },
    "3972": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A0"
    },
    "3975": {
      "op": "JUMP"
    },
    "3976": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3977": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3978": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "3979": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 48,
      "value": "0xFD6"
    },
    "3982": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3983": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3985": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3986": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3990": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3992": {
      "op": "SHL"
    },
    "3993": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3994": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3997": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3999": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4000": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "ADD",
      "path": "13"
    },
    "4001": {
      "op": "MSTORE"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4006": {
      "op": "DUP3"
    },
    "4007": {
      "op": "ADD"
    },
    "4008": {
      "op": "MSTORE"
    },
    "4009": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4044": {
      "op": "DUP3"
    },
    "4045": {
      "op": "ADD"
    },
    "4046": {
      "op": "MSTORE"
    },
    "4047": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4049": {
      "op": "ADD"
    },
    "4050": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A0"
    },
    "4053": {
      "op": "JUMP"
    },
    "4054": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4055": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4900,
        4912
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4057": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4914,
        4937
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4058": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4947
      ],
      "op": "DUP7",
      "path": "13"
    },
    "4059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4065": {
      "op": "SHL"
    },
    "4066": {
      "op": "SUB"
    },
    "4067": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4952
      ],
      "op": "AND",
      "path": "13"
    },
    "4068": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        4965
      ],
      "op": "DUP6",
      "path": "13"
    },
    "4069": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4967,
        4971
      ],
      "op": "DUP8",
      "path": "13"
    },
    "4070": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4072": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4073": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFF2"
    },
    "4076": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4077": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4078": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x123B"
    },
    "4081": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4082": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4083": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4085": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4087": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4088": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4089": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP4",
      "path": "13"
    },
    "4090": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SUB",
      "path": "13"
    },
    "4091": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4092": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP6",
      "path": "13"
    },
    "4093": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP8",
      "path": "13"
    },
    "4094": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "GAS",
      "path": "13"
    },
    "4095": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "CALL",
      "path": "13"
    },
    "4096": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "4097": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "4098": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "4099": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "4100": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "4101": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4102": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4104": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4105": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "EQ",
      "path": "13"
    },
    "4106": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x102F"
    },
    "4109": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4110": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4112": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4113": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4114": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "4115": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "4117": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "NOT",
      "path": "13"
    },
    "4118": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3F"
    },
    "4120": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "4121": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "13"
    },
    "4122": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "AND",
      "path": "13"
    },
    "4123": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4124": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "13"
    },
    "4125": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4127": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4128": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "4129": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4130": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4131": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "4132": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4134": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4136": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP5",
      "path": "13"
    },
    "4137": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "13"
    },
    "4138": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "4139": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1034"
    },
    "4142": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4143": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4144": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "4146": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4147": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "4148": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4149": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "4150": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4151": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "4152": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4153": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "4154": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 49,
      "value": "0x1044"
    },
    "4157": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5006,
        5013
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4158": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5015,
        5025
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4159": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5027,
        5039
      ],
      "op": "DUP7",
      "path": "13"
    },
    "4160": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5005
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x104F"
    },
    "4163": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4164": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4165": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5040
      ],
      "op": "SWAP8",
      "path": "13"
    },
    "4166": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "SWAP7",
      "path": "13"
    },
    "4167": {
      "op": "POP"
    },
    "4168": {
      "op": "POP"
    },
    "4169": {
      "op": "POP"
    },
    "4170": {
      "op": "POP"
    },
    "4171": {
      "op": "POP"
    },
    "4172": {
      "op": "POP"
    },
    "4173": {
      "op": "POP"
    },
    "4174": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4175": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7161,
        7853
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4176": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7307,
        7319
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "4178": {
      "branch": 69,
      "fn": "Address.verifyCallResult",
      "offset": [
        7335,
        7342
      ],
      "op": "DUP4",
      "path": "13"
    },
    "4179": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "4180": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x105E"
    },
    "4183": {
      "branch": 69,
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4184": {
      "op": "POP"
    },
    "4185": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7365,
        7375
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 50
    },
    "4186": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF20"
    },
    "4189": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4190": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4191": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4192": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4193": {
      "branch": 70,
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7497
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "4194": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x106E"
    },
    "4197": {
      "branch": 70,
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4198": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7670,
        7680
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4199": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7664,
        7681
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4200": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7730,
        7745
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4201": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7717,
        7727
      ],
      "op": "DUP5",
      "path": "13"
    },
    "4202": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7713,
        7715
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4204": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7709,
        7728
      ],
      "op": "ADD",
      "path": "13"
    },
    "4205": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7702,
        7746
      ],
      "op": "REVERT",
      "path": "13"
    },
    "4206": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7619,
        7764
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4207": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7809,
        7821
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 51
    },
    "4208": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4210": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4211": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4217": {
      "op": "SHL"
    },
    "4218": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4219": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4220": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4222": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "ADD",
      "path": "13"
    },
    "4223": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A0"
    },
    "4226": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4227": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4228": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x126B"
    },
    "4231": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        7802,
        7822
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4232": {
      "op": "JUMPDEST"
    },
    "4233": {
      "op": "DUP3"
    },
    "4234": {
      "op": "DUP1"
    },
    "4235": {
      "op": "SLOAD"
    },
    "4236": {
      "op": "DUP3"
    },
    "4237": {
      "op": "DUP3"
    },
    "4238": {
      "op": "SSTORE"
    },
    "4239": {
      "op": "SWAP1"
    },
    "4240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4242": {
      "op": "MSTORE"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4247": {
      "op": "KECCAK256"
    },
    "4248": {
      "op": "SWAP1"
    },
    "4249": {
      "op": "DUP2"
    },
    "4250": {
      "op": "ADD"
    },
    "4251": {
      "op": "SWAP3"
    },
    "4252": {
      "op": "DUP3"
    },
    "4253": {
      "op": "ISZERO"
    },
    "4254": {
      "op": "PUSH2",
      "value": "0x10C3"
    },
    "4257": {
      "op": "JUMPI"
    },
    "4258": {
      "op": "SWAP2"
    },
    "4259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4261": {
      "op": "MUL"
    },
    "4262": {
      "op": "DUP3"
    },
    "4263": {
      "op": "ADD"
    },
    "4264": {
      "op": "JUMPDEST"
    },
    "4265": {
      "op": "DUP3"
    },
    "4266": {
      "op": "DUP2"
    },
    "4267": {
      "op": "GT"
    },
    "4268": {
      "op": "ISZERO"
    },
    "4269": {
      "op": "PUSH2",
      "value": "0x10C3"
    },
    "4272": {
      "op": "JUMPI"
    },
    "4273": {
      "op": "DUP3"
    },
    "4274": {
      "op": "MLOAD"
    },
    "4275": {
      "op": "DUP3"
    },
    "4276": {
      "op": "SSTORE"
    },
    "4277": {
      "op": "SWAP2"
    },
    "4278": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4280": {
      "op": "ADD"
    },
    "4281": {
      "op": "SWAP2"
    },
    "4282": {
      "op": "SWAP1"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4285": {
      "op": "ADD"
    },
    "4286": {
      "op": "SWAP1"
    },
    "4287": {
      "op": "PUSH2",
      "value": "0x10A8"
    },
    "4290": {
      "op": "JUMP"
    },
    "4291": {
      "op": "JUMPDEST"
    },
    "4292": {
      "op": "POP"
    },
    "4293": {
      "op": "PUSH2",
      "value": "0x10CF"
    },
    "4296": {
      "op": "SWAP3"
    },
    "4297": {
      "op": "SWAP2"
    },
    "4298": {
      "op": "POP"
    },
    "4299": {
      "op": "PUSH2",
      "value": "0x10D3"
    },
    "4302": {
      "jump": "i",
      "op": "JUMP"
    },
    "4303": {
      "op": "JUMPDEST"
    },
    "4304": {
      "op": "POP"
    },
    "4305": {
      "op": "SWAP1"
    },
    "4306": {
      "jump": "o",
      "op": "JUMP"
    },
    "4307": {
      "op": "JUMPDEST"
    },
    "4308": {
      "op": "JUMPDEST"
    },
    "4309": {
      "op": "DUP1"
    },
    "4310": {
      "op": "DUP3"
    },
    "4311": {
      "op": "GT"
    },
    "4312": {
      "op": "ISZERO"
    },
    "4313": {
      "op": "PUSH2",
      "value": "0x10CF"
    },
    "4316": {
      "op": "JUMPI"
    },
    "4317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4319": {
      "op": "DUP2"
    },
    "4320": {
      "op": "SSTORE"
    },
    "4321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4323": {
      "op": "ADD"
    },
    "4324": {
      "op": "PUSH2",
      "value": "0x10D4"
    },
    "4327": {
      "op": "JUMP"
    },
    "4328": {
      "op": "JUMPDEST"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4331": {
      "op": "DUP1"
    },
    "4332": {
      "op": "DUP4"
    },
    "4333": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4335": {
      "op": "DUP5"
    },
    "4336": {
      "op": "ADD"
    },
    "4337": {
      "op": "SLT"
    },
    "4338": {
      "op": "PUSH2",
      "value": "0x10F9"
    },
    "4341": {
      "op": "JUMPI"
    },
    "4342": {
      "op": "DUP2"
    },
    "4343": {
      "op": "DUP3"
    },
    "4344": {
      "op": "REVERT"
    },
    "4345": {
      "op": "JUMPDEST"
    },
    "4346": {
      "op": "POP"
    },
    "4347": {
      "op": "DUP2"
    },
    "4348": {
      "op": "CALLDATALOAD"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4353": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4355": {
      "op": "SHL"
    },
    "4356": {
      "op": "SUB"
    },
    "4357": {
      "op": "DUP2"
    },
    "4358": {
      "op": "GT"
    },
    "4359": {
      "op": "ISZERO"
    },
    "4360": {
      "op": "PUSH2",
      "value": "0x110F"
    },
    "4363": {
      "op": "JUMPI"
    },
    "4364": {
      "op": "DUP2"
    },
    "4365": {
      "op": "DUP3"
    },
    "4366": {
      "op": "REVERT"
    },
    "4367": {
      "op": "JUMPDEST"
    },
    "4368": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4370": {
      "op": "DUP4"
    },
    "4371": {
      "op": "ADD"
    },
    "4372": {
      "op": "SWAP2"
    },
    "4373": {
      "op": "POP"
    },
    "4374": {
      "op": "DUP4"
    },
    "4375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4377": {
      "op": "DUP3"
    },
    "4378": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4380": {
      "op": "SHL"
    },
    "4381": {
      "op": "DUP6"
    },
    "4382": {
      "op": "ADD"
    },
    "4383": {
      "op": "ADD"
    },
    "4384": {
      "op": "GT"
    },
    "4385": {
      "op": "ISZERO"
    },
    "4386": {
      "op": "PUSH2",
      "value": "0x112A"
    },
    "4389": {
      "op": "JUMPI"
    },
    "4390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4392": {
      "op": "DUP1"
    },
    "4393": {
      "op": "REVERT"
    },
    "4394": {
      "op": "JUMPDEST"
    },
    "4395": {
      "op": "SWAP3"
    },
    "4396": {
      "op": "POP"
    },
    "4397": {
      "op": "SWAP3"
    },
    "4398": {
      "op": "SWAP1"
    },
    "4399": {
      "op": "POP"
    },
    "4400": {
      "jump": "o",
      "op": "JUMP"
    },
    "4401": {
      "op": "JUMPDEST"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4406": {
      "op": "DUP3"
    },
    "4407": {
      "op": "DUP5"
    },
    "4408": {
      "op": "SUB"
    },
    "4409": {
      "op": "SLT"
    },
    "4410": {
      "op": "ISZERO"
    },
    "4411": {
      "op": "PUSH2",
      "value": "0x1142"
    },
    "4414": {
      "op": "JUMPI"
    },
    "4415": {
      "op": "DUP1"
    },
    "4416": {
      "op": "DUP2"
    },
    "4417": {
      "op": "REVERT"
    },
    "4418": {
      "op": "JUMPDEST"
    },
    "4419": {
      "op": "DUP2"
    },
    "4420": {
      "op": "CALLDATALOAD"
    },
    "4421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4427": {
      "op": "SHL"
    },
    "4428": {
      "op": "SUB"
    },
    "4429": {
      "op": "DUP2"
    },
    "4430": {
      "op": "AND"
    },
    "4431": {
      "op": "DUP2"
    },
    "4432": {
      "op": "EQ"
    },
    "4433": {
      "op": "PUSH2",
      "value": "0xF20"
    },
    "4436": {
      "op": "JUMPI"
    },
    "4437": {
      "op": "DUP2"
    },
    "4438": {
      "op": "DUP3"
    },
    "4439": {
      "op": "REVERT"
    },
    "4440": {
      "op": "JUMPDEST"
    },
    "4441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4443": {
      "op": "DUP1"
    },
    "4444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4446": {
      "op": "DUP1"
    },
    "4447": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4449": {
      "op": "DUP6"
    },
    "4450": {
      "op": "DUP8"
    },
    "4451": {
      "op": "SUB"
    },
    "4452": {
      "op": "SLT"
    },
    "4453": {
      "op": "ISZERO"
    },
    "4454": {
      "op": "PUSH2",
      "value": "0x116D"
    },
    "4457": {
      "op": "JUMPI"
    },
    "4458": {
      "op": "DUP3"
    },
    "4459": {
      "op": "DUP4"
    },
    "4460": {
      "op": "REVERT"
    },
    "4461": {
      "op": "JUMPDEST"
    },
    "4462": {
      "op": "DUP5"
    },
    "4463": {
      "op": "CALLDATALOAD"
    },
    "4464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4468": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4470": {
      "op": "SHL"
    },
    "4471": {
      "op": "SUB"
    },
    "4472": {
      "op": "DUP1"
    },
    "4473": {
      "op": "DUP3"
    },
    "4474": {
      "op": "GT"
    },
    "4475": {
      "op": "ISZERO"
    },
    "4476": {
      "op": "PUSH2",
      "value": "0x1183"
    },
    "4479": {
      "op": "JUMPI"
    },
    "4480": {
      "op": "DUP5"
    },
    "4481": {
      "op": "DUP6"
    },
    "4482": {
      "op": "REVERT"
    },
    "4483": {
      "op": "JUMPDEST"
    },
    "4484": {
      "op": "PUSH2",
      "value": "0x118F"
    },
    "4487": {
      "op": "DUP9"
    },
    "4488": {
      "op": "DUP4"
    },
    "4489": {
      "op": "DUP10"
    },
    "4490": {
      "op": "ADD"
    },
    "4491": {
      "op": "PUSH2",
      "value": "0x10E8"
    },
    "4494": {
      "jump": "i",
      "op": "JUMP"
    },
    "4495": {
      "op": "JUMPDEST"
    },
    "4496": {
      "op": "SWAP1"
    },
    "4497": {
      "op": "SWAP7"
    },
    "4498": {
      "op": "POP"
    },
    "4499": {
      "op": "SWAP5"
    },
    "4500": {
      "op": "POP"
    },
    "4501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4503": {
      "op": "DUP8"
    },
    "4504": {
      "op": "ADD"
    },
    "4505": {
      "op": "CALLDATALOAD"
    },
    "4506": {
      "op": "SWAP2"
    },
    "4507": {
      "op": "POP"
    },
    "4508": {
      "op": "DUP1"
    },
    "4509": {
      "op": "DUP3"
    },
    "4510": {
      "op": "GT"
    },
    "4511": {
      "op": "ISZERO"
    },
    "4512": {
      "op": "PUSH2",
      "value": "0x11A7"
    },
    "4515": {
      "op": "JUMPI"
    },
    "4516": {
      "op": "DUP4"
    },
    "4517": {
      "op": "DUP5"
    },
    "4518": {
      "op": "REVERT"
    },
    "4519": {
      "op": "JUMPDEST"
    },
    "4520": {
      "op": "POP"
    },
    "4521": {
      "op": "PUSH2",
      "value": "0x11B4"
    },
    "4524": {
      "op": "DUP8"
    },
    "4525": {
      "op": "DUP3"
    },
    "4526": {
      "op": "DUP9"
    },
    "4527": {
      "op": "ADD"
    },
    "4528": {
      "op": "PUSH2",
      "value": "0x10E8"
    },
    "4531": {
      "jump": "i",
      "op": "JUMP"
    },
    "4532": {
      "op": "JUMPDEST"
    },
    "4533": {
      "op": "SWAP6"
    },
    "4534": {
      "op": "SWAP9"
    },
    "4535": {
      "op": "SWAP5"
    },
    "4536": {
      "op": "SWAP8"
    },
    "4537": {
      "op": "POP"
    },
    "4538": {
      "op": "SWAP6"
    },
    "4539": {
      "op": "POP"
    },
    "4540": {
      "op": "POP"
    },
    "4541": {
      "op": "POP"
    },
    "4542": {
      "op": "POP"
    },
    "4543": {
      "jump": "o",
      "op": "JUMP"
    },
    "4544": {
      "op": "JUMPDEST"
    },
    "4545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4547": {
      "op": "DUP1"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4550": {
      "op": "DUP1"
    },
    "4551": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4553": {
      "op": "DUP6"
    },
    "4554": {
      "op": "DUP8"
    },
    "4555": {
      "op": "SUB"
    },
    "4556": {
      "op": "SLT"
    },
    "4557": {
      "op": "ISZERO"
    },
    "4558": {
      "op": "PUSH2",
      "value": "0x11D5"
    },
    "4561": {
      "op": "JUMPI"
    },
    "4562": {
      "op": "DUP4"
    },
    "4563": {
      "op": "DUP5"
    },
    "4564": {
      "op": "REVERT"
    },
    "4565": {
      "op": "JUMPDEST"
    },
    "4566": {
      "op": "DUP5"
    },
    "4567": {
      "op": "CALLDATALOAD"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4574": {
      "op": "SHL"
    },
    "4575": {
      "op": "SUB"
    },
    "4576": {
      "op": "DUP1"
    },
    "4577": {
      "op": "DUP3"
    },
    "4578": {
      "op": "GT"
    },
    "4579": {
      "op": "ISZERO"
    },
    "4580": {
      "op": "PUSH2",
      "value": "0x1183"
    },
    "4583": {
      "op": "JUMPI"
    },
    "4584": {
      "op": "DUP6"
    },
    "4585": {
      "op": "DUP7"
    },
    "4586": {
      "op": "REVERT"
    },
    "4587": {
      "op": "JUMPDEST"
    },
    "4588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4592": {
      "op": "DUP3"
    },
    "4593": {
      "op": "DUP5"
    },
    "4594": {
      "op": "SUB"
    },
    "4595": {
      "op": "SLT"
    },
    "4596": {
      "op": "ISZERO"
    },
    "4597": {
      "op": "PUSH2",
      "value": "0x11FC"
    },
    "4600": {
      "op": "JUMPI"
    },
    "4601": {
      "op": "DUP1"
    },
    "4602": {
      "op": "DUP2"
    },
    "4603": {
      "op": "REVERT"
    },
    "4604": {
      "op": "JUMPDEST"
    },
    "4605": {
      "op": "DUP2"
    },
    "4606": {
      "op": "MLOAD"
    },
    "4607": {
      "op": "DUP1"
    },
    "4608": {
      "op": "ISZERO"
    },
    "4609": {
      "op": "ISZERO"
    },
    "4610": {
      "op": "DUP2"
    },
    "4611": {
      "op": "EQ"
    },
    "4612": {
      "op": "PUSH2",
      "value": "0xF20"
    },
    "4615": {
      "op": "JUMPI"
    },
    "4616": {
      "op": "DUP2"
    },
    "4617": {
      "op": "DUP3"
    },
    "4618": {
      "op": "REVERT"
    },
    "4619": {
      "op": "JUMPDEST"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4624": {
      "op": "DUP3"
    },
    "4625": {
      "op": "DUP5"
    },
    "4626": {
      "op": "SUB"
    },
    "4627": {
      "op": "SLT"
    },
    "4628": {
      "op": "ISZERO"
    },
    "4629": {
      "op": "PUSH2",
      "value": "0x121C"
    },
    "4632": {
      "op": "JUMPI"
    },
    "4633": {
      "op": "DUP1"
    },
    "4634": {
      "op": "DUP2"
    },
    "4635": {
      "op": "REVERT"
    },
    "4636": {
      "op": "JUMPDEST"
    },
    "4637": {
      "op": "POP"
    },
    "4638": {
      "op": "CALLDATALOAD"
    },
    "4639": {
      "op": "SWAP2"
    },
    "4640": {
      "op": "SWAP1"
    },
    "4641": {
      "op": "POP"
    },
    "4642": {
      "jump": "o",
      "op": "JUMP"
    },
    "4643": {
      "op": "JUMPDEST"
    },
    "4644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4646": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4648": {
      "op": "DUP3"
    },
    "4649": {
      "op": "DUP5"
    },
    "4650": {
      "op": "SUB"
    },
    "4651": {
      "op": "SLT"
    },
    "4652": {
      "op": "ISZERO"
    },
    "4653": {
      "op": "PUSH2",
      "value": "0x1234"
    },
    "4656": {
      "op": "JUMPI"
    },
    "4657": {
      "op": "DUP1"
    },
    "4658": {
      "op": "DUP2"
    },
    "4659": {
      "op": "REVERT"
    },
    "4660": {
      "op": "JUMPDEST"
    },
    "4661": {
      "op": "POP"
    },
    "4662": {
      "op": "MLOAD"
    },
    "4663": {
      "op": "SWAP2"
    },
    "4664": {
      "op": "SWAP1"
    },
    "4665": {
      "op": "POP"
    },
    "4666": {
      "jump": "o",
      "op": "JUMP"
    },
    "4667": {
      "op": "JUMPDEST"
    },
    "4668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4670": {
      "op": "DUP3"
    },
    "4671": {
      "op": "MLOAD"
    },
    "4672": {
      "op": "PUSH2",
      "value": "0x124D"
    },
    "4675": {
      "op": "DUP2"
    },
    "4676": {
      "op": "DUP5"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4679": {
      "op": "DUP8"
    },
    "4680": {
      "op": "ADD"
    },
    "4681": {
      "op": "PUSH2",
      "value": "0x13C0"
    },
    "4684": {
      "jump": "i",
      "op": "JUMP"
    },
    "4685": {
      "op": "JUMPDEST"
    },
    "4686": {
      "op": "SWAP2"
    },
    "4687": {
      "op": "SWAP1"
    },
    "4688": {
      "op": "SWAP2"
    },
    "4689": {
      "op": "ADD"
    },
    "4690": {
      "op": "SWAP3"
    },
    "4691": {
      "op": "SWAP2"
    },
    "4692": {
      "op": "POP"
    },
    "4693": {
      "op": "POP"
    },
    "4694": {
      "jump": "o",
      "op": "JUMP"
    },
    "4695": {
      "op": "JUMPDEST"
    },
    "4696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4702": {
      "op": "SHL"
    },
    "4703": {
      "op": "SUB"
    },
    "4704": {
      "op": "SWAP2"
    },
    "4705": {
      "op": "SWAP1"
    },
    "4706": {
      "op": "SWAP2"
    },
    "4707": {
      "op": "AND"
    },
    "4708": {
      "op": "DUP2"
    },
    "4709": {
      "op": "MSTORE"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4712": {
      "op": "ADD"
    },
    "4713": {
      "op": "SWAP1"
    },
    "4714": {
      "jump": "o",
      "op": "JUMP"
    },
    "4715": {
      "op": "JUMPDEST"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4718": {
      "op": "DUP2"
    },
    "4719": {
      "op": "MSTORE"
    },
    "4720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4722": {
      "op": "DUP3"
    },
    "4723": {
      "op": "MLOAD"
    },
    "4724": {
      "op": "DUP1"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4727": {
      "op": "DUP5"
    },
    "4728": {
      "op": "ADD"
    },
    "4729": {
      "op": "MSTORE"
    },
    "4730": {
      "op": "PUSH2",
      "value": "0x128A"
    },
    "4733": {
      "op": "DUP2"
    },
    "4734": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4736": {
      "op": "DUP6"
    },
    "4737": {
      "op": "ADD"
    },
    "4738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4740": {
      "op": "DUP8"
    },
    "4741": {
      "op": "ADD"
    },
    "4742": {
      "op": "PUSH2",
      "value": "0x13C0"
    },
    "4745": {
      "jump": "i",
      "op": "JUMP"
    },
    "4746": {
      "op": "JUMPDEST"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4749": {
      "op": "ADD"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4752": {
      "op": "NOT"
    },
    "4753": {
      "op": "AND"
    },
    "4754": {
      "op": "SWAP2"
    },
    "4755": {
      "op": "SWAP1"
    },
    "4756": {
      "op": "SWAP2"
    },
    "4757": {
      "op": "ADD"
    },
    "4758": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4760": {
      "op": "ADD"
    },
    "4761": {
      "op": "SWAP3"
    },
    "4762": {
      "op": "SWAP2"
    },
    "4763": {
      "op": "POP"
    },
    "4764": {
      "op": "POP"
    },
    "4765": {
      "jump": "o",
      "op": "JUMP"
    },
    "4766": {
      "op": "JUMPDEST"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4769": {
      "op": "DUP1"
    },
    "4770": {
      "op": "DUP3"
    },
    "4771": {
      "op": "MSTORE"
    },
    "4772": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "4774": {
      "op": "SWAP1"
    },
    "4775": {
      "op": "DUP3"
    },
    "4776": {
      "op": "ADD"
    },
    "4777": {
      "op": "MSTORE"
    },
    "4778": {
      "op": "PUSH14",
      "value": "0x92DCECC2D8D2C840D8CADCCEE8D"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0x93"
    },
    "4795": {
      "op": "SHL"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4798": {
      "op": "DUP3"
    },
    "4799": {
      "op": "ADD"
    },
    "4800": {
      "op": "MSTORE"
    },
    "4801": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4803": {
      "op": "ADD"
    },
    "4804": {
      "op": "SWAP1"
    },
    "4805": {
      "jump": "o",
      "op": "JUMP"
    },
    "4806": {
      "op": "JUMPDEST"
    },
    "4807": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4809": {
      "op": "DUP1"
    },
    "4810": {
      "op": "DUP3"
    },
    "4811": {
      "op": "MSTORE"
    },
    "4812": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "4814": {
      "op": "SWAP1"
    },
    "4815": {
      "op": "DUP3"
    },
    "4816": {
      "op": "ADD"
    },
    "4817": {
      "op": "MSTORE"
    },
    "4818": {
      "op": "PUSH12",
      "value": "0x57726F6E672072616E676573"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4833": {
      "op": "SHL"
    },
    "4834": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4836": {
      "op": "DUP3"
    },
    "4837": {
      "op": "ADD"
    },
    "4838": {
      "op": "MSTORE"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4841": {
      "op": "ADD"
    },
    "4842": {
      "op": "SWAP1"
    },
    "4843": {
      "jump": "o",
      "op": "JUMP"
    },
    "4844": {
      "op": "JUMPDEST"
    },
    "4845": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4847": {
      "op": "DUP1"
    },
    "4848": {
      "op": "DUP3"
    },
    "4849": {
      "op": "MSTORE"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "4852": {
      "op": "SWAP1"
    },
    "4853": {
      "op": "DUP3"
    },
    "4854": {
      "op": "ADD"
    },
    "4855": {
      "op": "MSTORE"
    },
    "4856": {
      "op": "PUSH23",
      "value": "0x15995CDD1A5B99C8185B1C9958591E481CDD185C9D1959"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0x4A"
    },
    "4882": {
      "op": "SHL"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4885": {
      "op": "DUP3"
    },
    "4886": {
      "op": "ADD"
    },
    "4887": {
      "op": "MSTORE"
    },
    "4888": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4890": {
      "op": "ADD"
    },
    "4891": {
      "op": "SWAP1"
    },
    "4892": {
      "jump": "o",
      "op": "JUMP"
    },
    "4893": {
      "op": "JUMPDEST"
    },
    "4894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4896": {
      "op": "DUP1"
    },
    "4897": {
      "op": "DUP3"
    },
    "4898": {
      "op": "MSTORE"
    },
    "4899": {
      "op": "DUP2"
    },
    "4900": {
      "op": "DUP2"
    },
    "4901": {
      "op": "ADD"
    },
    "4902": {
      "op": "MSTORE"
    },
    "4903": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "4936": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4938": {
      "op": "DUP3"
    },
    "4939": {
      "op": "ADD"
    },
    "4940": {
      "op": "MSTORE"
    },
    "4941": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4943": {
      "op": "ADD"
    },
    "4944": {
      "op": "SWAP1"
    },
    "4945": {
      "jump": "o",
      "op": "JUMP"
    },
    "4946": {
      "op": "JUMPDEST"
    },
    "4947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4949": {
      "op": "DUP3"
    },
    "4950": {
      "op": "NOT"
    },
    "4951": {
      "op": "DUP3"
    },
    "4952": {
      "op": "GT"
    },
    "4953": {
      "op": "ISZERO"
    },
    "4954": {
      "op": "PUSH2",
      "value": "0x1365"
    },
    "4957": {
      "op": "JUMPI"
    },
    "4958": {
      "op": "PUSH2",
      "value": "0x1365"
    },
    "4961": {
      "op": "PUSH2",
      "value": "0x1442"
    },
    "4964": {
      "jump": "i",
      "op": "JUMP"
    },
    "4965": {
      "op": "JUMPDEST"
    },
    "4966": {
      "op": "POP"
    },
    "4967": {
      "op": "ADD"
    },
    "4968": {
      "op": "SWAP1"
    },
    "4969": {
      "jump": "o",
      "op": "JUMP"
    },
    "4970": {
      "op": "JUMPDEST"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4973": {
      "op": "DUP3"
    },
    "4974": {
      "op": "PUSH2",
      "value": "0x1385"
    },
    "4977": {
      "op": "JUMPI"
    },
    "4978": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4983": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4985": {
      "op": "SHL"
    },
    "4986": {
      "op": "DUP2"
    },
    "4987": {
      "op": "MSTORE"
    },
    "4988": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4990": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4992": {
      "op": "MSTORE"
    },
    "4993": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4995": {
      "op": "DUP2"
    },
    "4996": {
      "op": "REVERT"
    },
    "4997": {
      "op": "JUMPDEST"
    },
    "4998": {
      "op": "POP"
    },
    "4999": {
      "op": "DIV"
    },
    "5000": {
      "op": "SWAP1"
    },
    "5001": {
      "jump": "o",
      "op": "JUMP"
    },
    "5002": {
      "op": "JUMPDEST"
    },
    "5003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5005": {
      "op": "DUP2"
    },
    "5006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5008": {
      "op": "NOT"
    },
    "5009": {
      "op": "DIV"
    },
    "5010": {
      "op": "DUP4"
    },
    "5011": {
      "op": "GT"
    },
    "5012": {
      "op": "DUP3"
    },
    "5013": {
      "op": "ISZERO"
    },
    "5014": {
      "op": "ISZERO"
    },
    "5015": {
      "op": "AND"
    },
    "5016": {
      "op": "ISZERO"
    },
    "5017": {
      "op": "PUSH2",
      "value": "0x13A4"
    },
    "5020": {
      "op": "JUMPI"
    },
    "5021": {
      "op": "PUSH2",
      "value": "0x13A4"
    },
    "5024": {
      "op": "PUSH2",
      "value": "0x1442"
    },
    "5027": {
      "jump": "i",
      "op": "JUMP"
    },
    "5028": {
      "op": "JUMPDEST"
    },
    "5029": {
      "op": "POP"
    },
    "5030": {
      "op": "MUL"
    },
    "5031": {
      "op": "SWAP1"
    },
    "5032": {
      "jump": "o",
      "op": "JUMP"
    },
    "5033": {
      "op": "JUMPDEST"
    },
    "5034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5036": {
      "op": "DUP3"
    },
    "5037": {
      "op": "DUP3"
    },
    "5038": {
      "op": "LT"
    },
    "5039": {
      "op": "ISZERO"
    },
    "5040": {
      "op": "PUSH2",
      "value": "0x13BB"
    },
    "5043": {
      "op": "JUMPI"
    },
    "5044": {
      "op": "PUSH2",
      "value": "0x13BB"
    },
    "5047": {
      "op": "PUSH2",
      "value": "0x1442"
    },
    "5050": {
      "jump": "i",
      "op": "JUMP"
    },
    "5051": {
      "op": "JUMPDEST"
    },
    "5052": {
      "op": "POP"
    },
    "5053": {
      "op": "SUB"
    },
    "5054": {
      "op": "SWAP1"
    },
    "5055": {
      "jump": "o",
      "op": "JUMP"
    },
    "5056": {
      "op": "JUMPDEST"
    },
    "5057": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5059": {
      "op": "JUMPDEST"
    },
    "5060": {
      "op": "DUP4"
    },
    "5061": {
      "op": "DUP2"
    },
    "5062": {
      "op": "LT"
    },
    "5063": {
      "op": "ISZERO"
    },
    "5064": {
      "op": "PUSH2",
      "value": "0x13DB"
    },
    "5067": {
      "op": "JUMPI"
    },
    "5068": {
      "op": "DUP2"
    },
    "5069": {
      "op": "DUP2"
    },
    "5070": {
      "op": "ADD"
    },
    "5071": {
      "op": "MLOAD"
    },
    "5072": {
      "op": "DUP4"
    },
    "5073": {
      "op": "DUP3"
    },
    "5074": {
      "op": "ADD"
    },
    "5075": {
      "op": "MSTORE"
    },
    "5076": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5078": {
      "op": "ADD"
    },
    "5079": {
      "op": "PUSH2",
      "value": "0x13C3"
    },
    "5082": {
      "op": "JUMP"
    },
    "5083": {
      "op": "JUMPDEST"
    },
    "5084": {
      "op": "DUP4"
    },
    "5085": {
      "op": "DUP2"
    },
    "5086": {
      "op": "GT"
    },
    "5087": {
      "op": "ISZERO"
    },
    "5088": {
      "op": "PUSH2",
      "value": "0xE36"
    },
    "5091": {
      "op": "JUMPI"
    },
    "5092": {
      "op": "POP"
    },
    "5093": {
      "op": "POP"
    },
    "5094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5096": {
      "op": "SWAP2"
    },
    "5097": {
      "op": "ADD"
    },
    "5098": {
      "op": "MSTORE"
    },
    "5099": {
      "jump": "o",
      "op": "JUMP"
    },
    "5100": {
      "op": "JUMPDEST"
    },
    "5101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5103": {
      "op": "DUP2"
    },
    "5104": {
      "op": "DUP2"
    },
    "5105": {
      "op": "SHR"
    },
    "5106": {
      "op": "SWAP1"
    },
    "5107": {
      "op": "DUP3"
    },
    "5108": {
      "op": "AND"
    },
    "5109": {
      "op": "DUP1"
    },
    "5110": {
      "op": "PUSH2",
      "value": "0x1400"
    },
    "5113": {
      "op": "JUMPI"
    },
    "5114": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5116": {
      "op": "DUP3"
    },
    "5117": {
      "op": "AND"
    },
    "5118": {
      "op": "SWAP2"
    },
    "5119": {
      "op": "POP"
    },
    "5120": {
      "op": "JUMPDEST"
    },
    "5121": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5123": {
      "op": "DUP3"
    },
    "5124": {
      "op": "LT"
    },
    "5125": {
      "op": "DUP2"
    },
    "5126": {
      "op": "EQ"
    },
    "5127": {
      "op": "ISZERO"
    },
    "5128": {
      "op": "PUSH2",
      "value": "0x1421"
    },
    "5131": {
      "op": "JUMPI"
    },
    "5132": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5137": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5139": {
      "op": "SHL"
    },
    "5140": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5142": {
      "op": "MSTORE"
    },
    "5143": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5145": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5147": {
      "op": "MSTORE"
    },
    "5148": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5152": {
      "op": "REVERT"
    },
    "5153": {
      "op": "JUMPDEST"
    },
    "5154": {
      "op": "POP"
    },
    "5155": {
      "op": "SWAP2"
    },
    "5156": {
      "op": "SWAP1"
    },
    "5157": {
      "op": "POP"
    },
    "5158": {
      "jump": "o",
      "op": "JUMP"
    },
    "5159": {
      "op": "JUMPDEST"
    },
    "5160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5162": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5164": {
      "op": "NOT"
    },
    "5165": {
      "op": "DUP3"
    },
    "5166": {
      "op": "EQ"
    },
    "5167": {
      "op": "ISZERO"
    },
    "5168": {
      "op": "PUSH2",
      "value": "0x143B"
    },
    "5171": {
      "op": "JUMPI"
    },
    "5172": {
      "op": "PUSH2",
      "value": "0x143B"
    },
    "5175": {
      "op": "PUSH2",
      "value": "0x1442"
    },
    "5178": {
      "jump": "i",
      "op": "JUMP"
    },
    "5179": {
      "op": "JUMPDEST"
    },
    "5180": {
      "op": "POP"
    },
    "5181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5183": {
      "op": "ADD"
    },
    "5184": {
      "op": "SWAP1"
    },
    "5185": {
      "jump": "o",
      "op": "JUMP"
    },
    "5186": {
      "op": "JUMPDEST"
    },
    "5187": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5192": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5194": {
      "op": "SHL"
    },
    "5195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5197": {
      "op": "MSTORE"
    },
    "5198": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5200": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5202": {
      "op": "MSTORE"
    },
    "5203": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5207": {
      "op": "REVERT"
    }
  },
  "sha1": "5aadc9df9b72000c8ca1ffc86fed65d6f657d0fe",
  "source": "// SPDX-License-Identifier: agpl-3.0\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Vesting is Ownable {\n    using Address for address;\n    using SafeERC20 for ERC20;\n\n    // Map user address to amount of tokens alloted //\n    mapping(address => uint256) public tokensAlloted;\n    mapping(address => uint256) public tokensClaimed;\n\n    uint256 internal constant PERCENT100 = 1e6;\n\n    string private _pool_name;\n\n    struct VestingInfo {\n        uint256[] periods;\n        uint256[] percents;\n        uint256 startTime;\n        bool vestingTimerStarted;\n    }\n    VestingInfo public vestInfo;\n    uint256 public vestInfoLength;\n    mapping(address => mapping(uint256 => bool)) investorsClaimMap;\n\n    ERC20 public immutable token;\n\n    event TokenClaimed(\n        address indexed user,\n        uint256 timeStamp,\n        uint256 amountToken\n    );\n\n    constructor(ERC20 _token, string memory _name) {\n        token = _token;\n        _pool_name = _name;\n    }\n\n    /**\n     * @dev Setup and turn on the vesting feature\n     * @param _periods - Array of period of the vesting.\n     * @param _percents - Array of percents release of the vesting.\n     * @notice - Access control: Public onlyOwner.\n     */\n    function setupVestingMode(\n        uint256[] calldata _periods,\n        uint256[] calldata _percents\n    ) public onlyOwner {\n        require(!vestInfo.vestingTimerStarted, \"Vesting already started\");\n\n        uint256 len = _periods.length;\n        require(len > 0, \"Invalid length\");\n        require(len == _percents.length, \"Wrong ranges\");\n\n        // check that all percentages should add up to 100% //\n        // 100% is 1e6\n        uint256 totalPcnt;\n        for (uint256 n = 0; n < len; n++) {\n            totalPcnt = totalPcnt + _percents[n];\n        }\n        require(totalPcnt == PERCENT100, \"Percentages add up should be 100%\");\n\n        vestInfoLength = len;\n        vestInfo = VestingInfo({\n            periods: _periods,\n            percents: _percents,\n            startTime: 0,\n            vestingTimerStarted: false\n        });\n    }\n\n    /**\n     * @dev Allot tokens to users and transfer that many tokens to the contract\n     * @param _users - Array of user addresses for alloting the tokens.\n     * @param _tokenAmounts - Array of token amounts alloted to users.\n     * @notice - Access control: Public onlyOwner.\n     */\n    function allotTokens(\n        address[] calldata _users,\n        uint256[] calldata _tokenAmounts\n    ) public onlyOwner {\n        require(!vestInfo.vestingTimerStarted, \"Vesting already started\");\n\n        uint256 len = _users.length;\n        require(len > 0, \"Invalid length\");\n        require(len == _tokenAmounts.length, \"Wrong ranges\");\n\n        uint256 totalAllotedAmount;\n\n        for (uint256 n = 0; n < len; n++) {\n            address _user = _users[n];\n            tokensAlloted[_user] += _tokenAmounts[n];\n            totalAllotedAmount += _tokenAmounts[n];\n        }\n\n        token.safeTransferFrom(owner(), address(this), totalAllotedAmount);\n    }\n\n    /**\n     * @dev Start the vesting counter.\n     * @param startTime - Time at which the vesting will start.\n     * @notice - Access control: External. onlyOwner.\n     */\n    function startVestingMode(uint256 startTime) external onlyOwner {\n        // Can be started only once\n        require(!vestInfo.vestingTimerStarted, \"Vesting already started\");\n\n        vestInfo.startTime = startTime;\n        vestInfo.vestingTimerStarted = true;\n    }\n\n    /**\n     * @dev Check whether a particular vesting index has elapsed and claimable\n     * @return - Bool: Claimable, uint256: If started and not claimable, returns the time needed to be claimable.\n     * @notice - Access control: Public.\n     */\n    function isVestingClaimable(uint256 _index)\n        public\n        view\n        returns (bool, uint256)\n    {\n        if (!vestInfo.vestingTimerStarted) {\n            return (false, 0);\n        }\n        uint256 period = vestInfo.periods[_index];\n        uint256 releaseTime = vestInfo.startTime + period;\n        bool claimable = (block.timestamp > releaseTime);\n        uint256 remainTime;\n        if (!claimable) {\n            remainTime = releaseTime - block.timestamp;\n        }\n        return (claimable, remainTime);\n    }\n\n    /**\n     * @dev Allow users to claim their vested token, according to the index of the vested period.\n     * @param _index - The index of the vesting period.\n     * @notice - Access control: External.\n     */\n    function claimVestedTokens(uint256 _index) external {\n        (bool claimable, ) = isVestingClaimable(_index);\n        require(claimable, \"Not claimable at this time\");\n\n        uint256 amtTotalToken = tokensAlloted[msg.sender];\n\n        require(amtTotalToken > 0, \"No tokens have been alloted to you\");\n\n        bool claimed = investorsClaimMap[msg.sender][_index];\n        require(!claimed, \"This vest amount is already claimed\");\n\n        investorsClaimMap[msg.sender][_index] = true;\n\n        uint256 amtTokens = (vestInfo.percents[_index] * amtTotalToken) /\n            PERCENT100;\n\n        tokensClaimed[msg.sender] += amtTokens;\n\n        token.safeTransfer(msg.sender, amtTokens);\n        emit TokenClaimed(msg.sender, block.timestamp, amtTokens);\n    }\n\n    /**\n     * @dev To get the next vesting claim for a user.\n     * @param _user - The user's address.\n     * @return - int256 : the next period. -1 to indicate none found.\n     * @return - uint256 : the amount of token claimable\n     * @return - uint256 : time left to claim. If 0 (and next claim period is valid), it is currently claimable.\n     * @notice - Access control: External. View.\n     */\n    function getNextVestingClaim(address _user)\n        external\n        view\n        returns (\n            int256,\n            uint256,\n            uint256\n        )\n    {\n        if (!vestInfo.vestingTimerStarted) {\n            return (-1, 0, 0);\n        }\n\n        uint256 amtTotalToken = tokensAlloted[_user];\n        if (amtTotalToken == 0) {\n            return (-1, 0, 0);\n        }\n\n        uint256 len = vestInfo.periods.length;\n        for (uint256 n = 0; n < len; n++) {\n            (bool claimable, uint256 time) = isVestingClaimable(n);\n            uint256 amtTokens = (vestInfo.percents[n] * amtTotalToken) /\n                PERCENT100;\n            bool claimed = investorsClaimMap[_user][n];\n\n            if (!claimable) {\n                return (int256(n), amtTokens, time);\n            } else {\n                if (!claimed) {\n                    return (int256(n), amtTokens, 0);\n                }\n            }\n        }\n        // All claimed\n        return (-1, 0, 0);\n    }\n\n    /**\n     * @dev Returns the name of the Vesting Pool.\n     */\n    function pool_name() public view returns (string memory) {\n        return _pool_name;\n    }\n\n    // Withdraw tokens. EMERGENCY ONLY.\n    function emergencyTokenWithdraw() external onlyOwner {\n        token.safeTransfer(address(msg.sender), token.balanceOf(address(this)));\n    }\n}\n",
  "sourceMap": "861:6899:50:-:0;;;1639:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:2;666:10:14;867:9:2;:23::i;:::-;-1:-1:-1;;;;;;1696:14:50;;;;;;;1720:18;;;;:10;;:18;;;;;:::i;:::-;;1639:106;;861:6899;;2041:169:2;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;861:6899:50:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;861:6899:50;;;-1:-1:-1;861:6899:50;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1329:51;118:6;126;179:2;167:9;158:7;154:23;150:32;147:2;;;200:6;192;185:22;147:2;231:16;;-1:-1:-1;;;;;276:31:51;;266:42;;256:2;;327:6;319;312:22;256:2;379;410:18;;;404:25;355:5;;-1:-1:-1;379:2:51;-1:-1:-1;;;;;478:14:51;;;475:2;;;510:6;502;495:22;475:2;553:6;542:9;538:22;528:32;;598:7;591:4;587:2;583:13;579:27;569:2;;625:6;617;610:22;569:2;659;653:9;681:2;677;674:10;671:2;;;687:18;;:::i;:::-;762:2;756:9;730:2;816:13;;-1:-1:-1;;812:22:51;;;836:2;808:31;804:40;792:53;;;860:18;;;880:22;;;857:46;854:2;;;906:18;;:::i;:::-;946:10;942:2;935:22;981:2;973:6;966:18;1021:7;1016:2;1011;1007;1003:11;999:20;996:33;993:2;;;1047:6;1039;1032:22;993:2;1074:6;1065:15;;1089:129;1103:2;1100:1;1097:9;1089:129;;;1191:10;;;1187:19;;1181:26;1160:14;;;1156:23;;1149:59;1114:10;;;;1089:129;;;1236:2;1233:1;1230:9;1227:2;;;1295:6;1290:2;1285;1277:6;1273:15;1269:24;1262:40;1227:2;1331:6;1321:16;;;;;;;;137:1206;;;;;:::o;1348:380::-;1427:1;1423:12;;;;1470;;;1491:2;;1545:4;1537:6;1533:17;1523:27;;1491:2;1598;1590:6;1587:14;1567:18;1564:38;1561:2;;;1644:10;1639:3;1635:20;1632:1;1625:31;1679:4;1676:1;1669:15;1707:4;1704:1;1697:15;1561:2;;1403:325;;;:::o;1733:127::-;1794:10;1789:3;1785:20;1782:1;1775:31;1825:4;1822:1;1815:15;1849:4;1846:1;1839:15;1765:95;861:6899:50;;;;;;;;;;;;",
  "sourcePath": "contracts/Vesting.sol",
  "type": "contract"
}