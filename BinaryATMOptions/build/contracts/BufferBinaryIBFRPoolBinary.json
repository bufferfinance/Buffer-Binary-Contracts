{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_tokenX",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenXAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "InitiateWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Loss",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "round",
          "type": "uint256"
        }
      ],
      "name": "PoolRollOver",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenXAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "ProcessWithdrawRequest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Profit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "writeAmount",
          "type": "uint256"
        }
      ],
      "name": "Provide",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "name": "UpdateExpiry",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "maxLiquidity",
          "type": "uint256"
        }
      ],
      "name": "UpdateMaxLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "hasPoolEnded",
          "type": "bool"
        }
      ],
      "name": "UpdatePoolState",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "UpdateProjectOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "UpdateRevertTransfersInLockUpPeriod",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "writeAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ACCURACY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INITIAL_RATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OPTION_ISSUER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PROJECT_OWNER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenXAmount",
          "type": "uint256"
        }
      ],
      "name": "adminWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "availableBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenXAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "premium",
          "type": "uint256"
        }
      ],
      "name": "changeLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenXAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "premium",
          "type": "uint256"
        }
      ],
      "name": "lock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lockedLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "premium",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "locked",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockedPremium",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "projectOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenXAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minMint",
          "type": "uint256"
        }
      ],
      "name": "provide",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mint",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenXAmount",
          "type": "uint256"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxLiquidity",
          "type": "uint256"
        }
      ],
      "name": "setMaxLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "setProjectOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "shareOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "share",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenX",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalTokenXBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "unlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "unlockWithoutProfit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenXAmount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/AccessControl.sol",
    "1": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/IAccessControl.sol",
    "15": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
    "18": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/ERC165.sol",
    "19": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/IERC165.sol",
    "22": "contracts/Binary ATM Options/BufferBinaryIBFRPoolBinary.sol",
    "24": "contracts/Binary ATM Options/InterfacesBinary.sol",
    "4": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol",
    "5": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
    "6": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/extensions/IERC20Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/Binary ATM Options/BufferBinaryIBFRPoolBinary.sol",
    "exportedSymbols": {
      "AccessControl": [
        19540
      ],
      "BufferBinaryIBFRPoolBinary": [
        2825
      ],
      "Context": [
        27611
      ],
      "ERC165": [
        28014
      ],
      "ERC20": [
        18824
      ],
      "IAccessControl": [
        27787
      ],
      "IBufferBinaryOptions": [
        18960
      ],
      "IBufferOptions": [
        19019
      ],
      "IERC165": [
        32292
      ],
      "IERC20": [
        27689
      ],
      "IERC20Metadata": [
        27714
      ],
      "ILiquidityPool": [
        19135
      ],
      "IOptionsConfig": [
        19194
      ],
      "IPriceProvider": [
        19233
      ],
      "Strings": [
        27990
      ]
    },
    "id": 2826,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1962,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:22"
      },
      {
        "absolutePath": "contracts/Binary ATM Options/InterfacesBinary.sol",
        "file": "./InterfacesBinary.sol",
        "id": 1963,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2826,
        "sourceUnit": 19234,
        "src": "63:32:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 1964,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2826,
        "sourceUnit": 19541,
        "src": "96:58:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 1965,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2826,
        "sourceUnit": 18825,
        "src": "155:55:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "427566666572204c5020546f6b656e",
                "id": 1968,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "412:17:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_d40ac767b07fba5d974520657b750ec18de149a7aaebe5e20638d1590f1fc811",
                  "typeString": "literal_string \"Buffer LP Token\""
                },
                "value": "Buffer LP Token"
              },
              {
                "hexValue": "72424652",
                "id": 1969,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "431:6:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_df87712ce783866a144afda64b2d2fe179755d132f4fd11008cb766b743d44f2",
                  "typeString": "literal_string \"rBFR\""
                },
                "value": "rBFR"
              }
            ],
            "baseName": {
              "id": 1967,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18824,
              "src": "406:5:22"
            },
            "id": 1970,
            "nodeType": "InheritanceSpecifier",
            "src": "406:32:22"
          },
          {
            "baseName": {
              "id": 1971,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19540,
              "src": "444:13:22"
            },
            "id": 1972,
            "nodeType": "InheritanceSpecifier",
            "src": "444:13:22"
          },
          {
            "baseName": {
              "id": 1973,
              "name": "ILiquidityPool",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19135,
              "src": "463:14:22"
            },
            "id": 1974,
            "nodeType": "InheritanceSpecifier",
            "src": "463:14:22"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1966,
          "nodeType": "StructuredDocumentation",
          "src": "212:150:22",
          "text": " @author Heisenberg\n @title Buffer TokenX Liquidity Pool\n @notice Accumulates liquidity in TokenX from LPs and distributes P&L in TokenX"
        },
        "fullyImplemented": true,
        "id": 2825,
        "linearizedBaseContracts": [
          2825,
          19135,
          19540,
          28014,
          32292,
          27787,
          18824,
          27714,
          27689,
          27611
        ],
        "name": "BufferBinaryIBFRPoolBinary",
        "nameLocation": "372:26:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1976,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "499:5:22",
            "nodeType": "VariableDeclaration",
            "scope": 2825,
            "src": "484:20:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1975,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "484:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1978,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "525:7:22",
            "nodeType": "VariableDeclaration",
            "scope": 2825,
            "src": "510:22:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1977,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "510:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "functionSelector": "fbcd9b05",
            "id": 1981,
            "mutability": "constant",
            "name": "ACCURACY",
            "nameLocation": "562:8:22",
            "nodeType": "VariableDeclaration",
            "scope": 2825,
            "src": "538:38:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1979,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "538:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "316533",
              "id": 1980,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "573:3:22",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1e3"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "4dbac733",
            "id": 1984,
            "mutability": "constant",
            "name": "INITIAL_RATE",
            "nameLocation": "606:12:22",
            "nodeType": "VariableDeclaration",
            "scope": 2825,
            "src": "582:42:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1982,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "582:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "316533",
              "id": 1983,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "621:3:22",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1e3"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6ab28bc8",
            "id": 1986,
            "mutability": "mutable",
            "name": "lockedAmount",
            "nameLocation": "645:12:22",
            "nodeType": "VariableDeclaration",
            "scope": 2825,
            "src": "630:27:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1985,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "630:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "797be55e",
            "id": 1988,
            "mutability": "mutable",
            "name": "lockedPremium",
            "nameLocation": "678:13:22",
            "nodeType": "VariableDeclaration",
            "scope": 2825,
            "src": "663:28:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1987,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "663:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "70c0345c",
            "id": 1990,
            "mutability": "mutable",
            "name": "maxLiquidity",
            "nameLocation": "712:12:22",
            "nodeType": "VariableDeclaration",
            "scope": 2825,
            "src": "697:27:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1989,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "697:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a4475ce4",
            "id": 1992,
            "mutability": "mutable",
            "name": "projectOwner",
            "nameLocation": "745:12:22",
            "nodeType": "VariableDeclaration",
            "scope": 2825,
            "src": "730:27:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1991,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "730:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 1994,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "778:5:22",
            "nodeType": "VariableDeclaration",
            "scope": 2825,
            "src": "763:20:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1993,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "763:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b9cfe348",
            "id": 2000,
            "mutability": "mutable",
            "name": "lockedLiquidity",
            "nameLocation": "834:15:22",
            "nodeType": "VariableDeclaration",
            "scope": 2825,
            "src": "789:60:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockedLiquidity_$19026_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct ILiquidityPool.LockedLiquidity[])"
            },
            "typeName": {
              "id": 1999,
              "keyType": {
                "id": 1995,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "797:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "789:37:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockedLiquidity_$19026_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct ILiquidityPool.LockedLiquidity[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1997,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1996,
                    "name": "LockedLiquidity",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 19026,
                    "src": "808:15:22"
                  },
                  "referencedDeclaration": 19026,
                  "src": "808:15:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                    "typeString": "struct ILiquidityPool.LockedLiquidity"
                  }
                },
                "id": 1998,
                "nodeType": "ArrayTypeName",
                "src": "808:17:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_LockedLiquidity_$19026_storage_$dyn_storage_ptr",
                  "typeString": "struct ILiquidityPool.LockedLiquidity[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "ec277a66",
            "id": 2005,
            "mutability": "constant",
            "name": "OPTION_ISSUER_ROLE",
            "nameLocation": "880:18:22",
            "nodeType": "VariableDeclaration",
            "scope": 2825,
            "src": "856:84:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2001,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "856:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4f5054494f4e5f4953535545525f524f4c45",
                  "id": 2003,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "919:20:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_02b0c433c31e2b44fbbb341ca2a1a7c86f98b5158b42b073f63efe02d35ea89f",
                    "typeString": "literal_string \"OPTION_ISSUER_ROLE\""
                  },
                  "value": "OPTION_ISSUER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_02b0c433c31e2b44fbbb341ca2a1a7c86f98b5158b42b073f63efe02d35ea89f",
                    "typeString": "literal_string \"OPTION_ISSUER_ROLE\""
                  }
                ],
                "id": 2002,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "909:9:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 2004,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "909:31:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "be62da0e",
            "id": 2010,
            "mutability": "constant",
            "name": "PROJECT_OWNER_ROLE",
            "nameLocation": "971:18:22",
            "nodeType": "VariableDeclaration",
            "scope": 2825,
            "src": "947:84:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2006,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "947:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "50524f4a4543545f4f574e45525f524f4c45",
                  "id": 2008,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1010:20:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_770fadb28e0e3026382976ee8b810cb0eb8666922148dd9e10b20cfb9b477ba8",
                    "typeString": "literal_string \"PROJECT_OWNER_ROLE\""
                  },
                  "value": "PROJECT_OWNER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_770fadb28e0e3026382976ee8b810cb0eb8666922148dd9e10b20cfb9b477ba8",
                    "typeString": "literal_string \"PROJECT_OWNER_ROLE\""
                  }
                ],
                "id": 2007,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1000:9:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 2009,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1000:31:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16dc165b",
            "id": 2013,
            "mutability": "mutable",
            "name": "tokenX",
            "nameLocation": "1051:6:22",
            "nodeType": "VariableDeclaration",
            "scope": 2825,
            "src": "1038:19:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$18824",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 2012,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2011,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 18824,
                "src": "1038:5:22"
              },
              "referencedDeclaration": 18824,
              "src": "1038:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$18824",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2079,
              "nodeType": "Block",
              "src": "1091:419:22",
              "statements": [
                {
                  "expression": {
                    "id": 2035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2019,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1976,
                      "src": "1101:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "4275666665722047656e6572696320",
                              "id": 2025,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1159:17:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a790b9543a9e3095b5c073e2bf0dc5d562e8f91d15cb2d0ccd32f3c9b712ed42",
                                "typeString": "literal_string \"Buffer Generic \""
                              },
                              "value": "Buffer Generic "
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 2028,
                                      "name": "_tokenX",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2016,
                                      "src": "1200:7:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$18824",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 2029,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "symbol",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 18343,
                                    "src": "1200:14:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                      "typeString": "function () view external returns (string memory)"
                                    }
                                  },
                                  "id": 2030,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1200:16:22",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 2027,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1194:5:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 2026,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1194:5:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1194:23:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "204c5020546f6b656e",
                              "id": 2032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1235:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d2b666bacbb8a2027b3c4fa84611af2075138b63ff53e061576e5d08eb01eff3",
                                "typeString": "literal_string \" LP Token\""
                              },
                              "value": " LP Token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_a790b9543a9e3095b5c073e2bf0dc5d562e8f91d15cb2d0ccd32f3c9b712ed42",
                                "typeString": "literal_string \"Buffer Generic \""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d2b666bacbb8a2027b3c4fa84611af2075138b63ff53e061576e5d08eb01eff3",
                                "typeString": "literal_string \" LP Token\""
                              }
                            ],
                            "expression": {
                              "id": 2023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1129:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 2022,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "1129:5:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "concat",
                            "nodeType": "MemberAccess",
                            "src": "1129:12:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 2033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1129:131:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 2021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1109:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 2020,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1109:6:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1109:161:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1101:169:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2036,
                  "nodeType": "ExpressionStatement",
                  "src": "1101:169:22"
                },
                {
                  "expression": {
                    "id": 2052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2037,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1978,
                      "src": "1280:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "72",
                              "id": 2043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1310:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010",
                                "typeString": "literal_string \"r\""
                              },
                              "value": "r"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 2046,
                                      "name": "_tokenX",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2016,
                                      "src": "1321:7:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$18824",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 2047,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "symbol",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 18343,
                                    "src": "1321:14:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                      "typeString": "function () view external returns (string memory)"
                                    }
                                  },
                                  "id": 2048,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1321:16:22",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 2045,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1315:5:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 2044,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1315:5:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2049,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1315:23:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010",
                                "typeString": "literal_string \"r\""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 2041,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1297:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 2040,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "1297:5:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "concat",
                            "nodeType": "MemberAccess",
                            "src": "1297:12:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 2050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1297:42:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 2039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1290:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 2038,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1290:6:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1290:50:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1280:60:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2053,
                  "nodeType": "ExpressionStatement",
                  "src": "1280:60:22"
                },
                {
                  "expression": {
                    "id": 2056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2054,
                      "name": "tokenX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2013,
                      "src": "1350:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$18824",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2055,
                      "name": "_tokenX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2016,
                      "src": "1359:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$18824",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1350:16:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$18824",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 2057,
                  "nodeType": "ExpressionStatement",
                  "src": "1350:16:22"
                },
                {
                  "expression": {
                    "id": 2061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2058,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1994,
                      "src": "1376:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2059,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1384:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1384:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1376:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2062,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:18:22"
                },
                {
                  "expression": {
                    "id": 2071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2063,
                      "name": "maxLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1990,
                      "src": "1404:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "35303030303030",
                        "id": 2064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1419:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000_by_1",
                          "typeString": "int_const 5000000"
                        },
                        "value": "5000000"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 2065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1429:2:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2066,
                              "name": "_tokenX",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2016,
                              "src": "1433:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$18824",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 2067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decimals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18353,
                            "src": "1433:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                              "typeString": "function () view external returns (uint8)"
                            }
                          },
                          "id": 2068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1433:18:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "1429:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1419:32:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1404:47:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2072,
                  "nodeType": "ExpressionStatement",
                  "src": "1404:47:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2074,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19261,
                        "src": "1472:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 2075,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1492:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1492:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2073,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19450,
                      "src": "1461:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 2077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1461:42:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2078,
                  "nodeType": "ExpressionStatement",
                  "src": "1461:42:22"
                }
              ]
            },
            "id": 2080,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2016,
                  "mutability": "mutable",
                  "name": "_tokenX",
                  "nameLocation": "1082:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2080,
                  "src": "1076:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$18824",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 2015,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2014,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18824,
                      "src": "1076:5:22"
                    },
                    "referencedDeclaration": 18824,
                    "src": "1076:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$18824",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1075:15:22"
            },
            "returnParameters": {
              "id": 2018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1091:0:22"
            },
            "scope": 2825,
            "src": "1064:446:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              18333
            ],
            "body": {
              "id": 2089,
              "nodeType": "Block",
              "src": "1644:29:22",
              "statements": [
                {
                  "expression": {
                    "id": 2087,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1976,
                    "src": "1661:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2086,
                  "id": 2088,
                  "nodeType": "Return",
                  "src": "1654:12:22"
                }
              ]
            },
            "documentation": {
              "id": 2081,
              "nodeType": "StructuredDocumentation",
              "src": "1516:54:22",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 2090,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "1584:4:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2083,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1611:8:22"
            },
            "parameters": {
              "id": 2082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1588:2:22"
            },
            "returnParameters": {
              "id": 2086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2085,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2090,
                  "src": "1629:13:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2084,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1629:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1628:15:22"
            },
            "scope": 2825,
            "src": "1575:98:22",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              18343
            ],
            "body": {
              "id": 2099,
              "nodeType": "Block",
              "src": "1857:31:22",
              "statements": [
                {
                  "expression": {
                    "id": 2097,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1978,
                    "src": "1874:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2096,
                  "id": 2098,
                  "nodeType": "Return",
                  "src": "1867:14:22"
                }
              ]
            },
            "documentation": {
              "id": 2091,
              "nodeType": "StructuredDocumentation",
              "src": "1679:102:22",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 2100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "1795:6:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2093,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1824:8:22"
            },
            "parameters": {
              "id": 2092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1801:2:22"
            },
            "returnParameters": {
              "id": 2096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2095,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2100,
                  "src": "1842:13:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2094,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1842:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1841:15:22"
            },
            "scope": 2825,
            "src": "1786:102:22",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              18353
            ],
            "body": {
              "id": 2111,
              "nodeType": "Block",
              "src": "2022:41:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2107,
                        "name": "tokenX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "2039:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$18824",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18353,
                      "src": "2039:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 2109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2039:17:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 2106,
                  "id": 2110,
                  "nodeType": "Return",
                  "src": "2032:24:22"
                }
              ]
            },
            "documentation": {
              "id": 2101,
              "nodeType": "StructuredDocumentation",
              "src": "1894:58:22",
              "text": " @dev Returns the decimals of the token."
            },
            "functionSelector": "313ce567",
            "id": 2112,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "1966:8:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2103,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1997:8:22"
            },
            "parameters": {
              "id": 2102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1974:2:22"
            },
            "returnParameters": {
              "id": 2106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2105,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2112,
                  "src": "2015:5:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2104,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2015:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2014:7:22"
            },
            "scope": 2825,
            "src": "1957:106:22",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2134,
              "nodeType": "Block",
              "src": "2259:129:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2122,
                        "name": "PROJECT_OWNER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2010,
                        "src": "2279:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2123,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2115,
                        "src": "2299:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2121,
                      "name": "grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19393,
                      "src": "2269:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 2124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2269:38:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2125,
                  "nodeType": "ExpressionStatement",
                  "src": "2269:38:22"
                },
                {
                  "expression": {
                    "id": 2128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2126,
                      "name": "projectOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1992,
                      "src": "2317:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2127,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2115,
                      "src": "2332:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2317:22:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2129,
                  "nodeType": "ExpressionStatement",
                  "src": "2317:22:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2131,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2115,
                        "src": "2373:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2130,
                      "name": "UpdateProjectOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19097,
                      "src": "2354:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2354:27:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2133,
                  "nodeType": "EmitStatement",
                  "src": "2349:32:22"
                }
              ]
            },
            "documentation": {
              "id": 2113,
              "nodeType": "StructuredDocumentation",
              "src": "2069:85:22",
              "text": " @notice Used for setting owner\n @param account owner account"
            },
            "functionSelector": "a2416f74",
            "id": 2135,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2118,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19261,
                    "src": "2235:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 2119,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2117,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19274,
                  "src": "2226:8:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "2226:28:22"
              }
            ],
            "name": "setProjectOwner",
            "nameLocation": "2168:15:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2115,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2192:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2135,
                  "src": "2184:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2184:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2183:17:22"
            },
            "returnParameters": {
              "id": 2120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2259:0:22"
            },
            "scope": 2825,
            "src": "2159:229:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2152,
              "nodeType": "Block",
              "src": "2614:93:22",
              "statements": [
                {
                  "expression": {
                    "id": 2146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2144,
                      "name": "maxLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1990,
                      "src": "2624:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2145,
                      "name": "_maxLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2138,
                      "src": "2639:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2624:28:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2147,
                  "nodeType": "ExpressionStatement",
                  "src": "2624:28:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2149,
                        "name": "_maxLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2138,
                        "src": "2686:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2148,
                      "name": "UpdateMaxLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19089,
                      "src": "2667:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2667:33:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2151,
                  "nodeType": "EmitStatement",
                  "src": "2662:38:22"
                }
              ]
            },
            "documentation": {
              "id": 2136,
              "nodeType": "StructuredDocumentation",
              "src": "2394:109:22",
              "text": " @notice Used for adjusting the max limit of the pool\n @param _maxLiquidity New limit"
            },
            "functionSelector": "71081c8e",
            "id": 2153,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2141,
                    "name": "PROJECT_OWNER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2010,
                    "src": "2590:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 2142,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2140,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19274,
                  "src": "2581:8:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "2581:28:22"
              }
            ],
            "name": "setMaxLiquidity",
            "nameLocation": "2517:15:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2138,
                  "mutability": "mutable",
                  "name": "_maxLiquidity",
                  "nameLocation": "2541:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2153,
                  "src": "2533:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2533:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2532:23:22"
            },
            "returnParameters": {
              "id": 2143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2614:0:22"
            },
            "scope": 2825,
            "src": "2508:199:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2251,
              "nodeType": "Block",
              "src": "3293:788:22",
              "statements": [
                {
                  "assignments": [
                    2164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2164,
                      "mutability": "mutable",
                      "name": "supply",
                      "nameLocation": "3311:6:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2251,
                      "src": "3303:14:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2163,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3303:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2167,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2165,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18363,
                      "src": "3320:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 2166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3320:13:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3303:30:22"
                },
                {
                  "assignments": [
                    2169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2169,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3351:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2251,
                      "src": "3343:15:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2168,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3343:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2172,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2170,
                      "name": "totalTokenXBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2788,
                      "src": "3361:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 2171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3361:20:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3343:38:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2174,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2169,
                            "src": "3413:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 2175,
                            "name": "tokenXAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2156,
                            "src": "3423:12:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3413:22:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 2177,
                          "name": "maxLiquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1990,
                          "src": "3439:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3413:38:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c2068617320616c726561647920726561636865642069742773206d6178206c696d6974",
                        "id": 2179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3465:41:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b5aab2704402c87459e7b9d84866048c09374cfcaf0fe1f50134c8d1bf224d1",
                          "typeString": "literal_string \"Pool has already reached it's max limit\""
                        },
                        "value": "Pool has already reached it's max limit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b5aab2704402c87459e7b9d84866048c09374cfcaf0fe1f50134c8d1bf224d1",
                          "typeString": "literal_string \"Pool has already reached it's max limit\""
                        }
                      ],
                      "id": 2173,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3392:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3392:124:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2181,
                  "nodeType": "ExpressionStatement",
                  "src": "3392:124:22"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2182,
                        "name": "supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2164,
                        "src": "3531:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3540:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3531:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2185,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2169,
                        "src": "3545:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3555:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3545:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3531:25:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "id": 2203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2199,
                        "name": "mint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2161,
                        "src": "3627:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2200,
                          "name": "tokenXAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2156,
                          "src": "3634:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 2201,
                          "name": "INITIAL_RATE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1984,
                          "src": "3649:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3634:27:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3627:34:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2204,
                    "nodeType": "ExpressionStatement",
                    "src": "3627:34:22"
                  },
                  "id": 2205,
                  "nodeType": "IfStatement",
                  "src": "3527:134:22",
                  "trueBody": {
                    "expression": {
                      "id": 2197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2189,
                        "name": "mint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2161,
                        "src": "3570:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2190,
                                "name": "tokenXAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2156,
                                "src": "3578:12:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 2191,
                                "name": "supply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2164,
                                "src": "3593:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3578:21:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2193,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3577:23:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "components": [
                            {
                              "id": 2194,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2169,
                              "src": "3604:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2195,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3603:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3577:35:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3570:42:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2198,
                    "nodeType": "ExpressionStatement",
                    "src": "3570:42:22"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2207,
                          "name": "mint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2161,
                          "src": "3680:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2208,
                          "name": "minMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2158,
                          "src": "3688:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3680:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c3a204d696e74206c696d697420697320746f6f206c61726765",
                        "id": 2210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3697:31:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a6d5b1a12edcd65f93d0f05eb836decd196d2bbdc9b83fa2e92b30271d012fe",
                          "typeString": "literal_string \"Pool: Mint limit is too large\""
                        },
                        "value": "Pool: Mint limit is too large"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a6d5b1a12edcd65f93d0f05eb836decd196d2bbdc9b83fa2e92b30271d012fe",
                          "typeString": "literal_string \"Pool: Mint limit is too large\""
                        }
                      ],
                      "id": 2206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3672:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3672:57:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2212,
                  "nodeType": "ExpressionStatement",
                  "src": "3672:57:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2214,
                          "name": "mint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2161,
                          "src": "3747:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3754:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3747:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c3a20416d6f756e7420697320746f6f20736d616c6c",
                        "id": 2217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3757:27:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1aa0c2cb2134aad5f223d94a9b288522cd506e390baa6362e4b7c74a5084846",
                          "typeString": "literal_string \"Pool: Amount is too small\""
                        },
                        "value": "Pool: Amount is too small"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1aa0c2cb2134aad5f223d94a9b288522cd506e390baa6362e4b7c74a5084846",
                          "typeString": "literal_string \"Pool: Amount is too small\""
                        }
                      ],
                      "id": 2213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3739:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3739:46:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2219,
                  "nodeType": "ExpressionStatement",
                  "src": "3739:46:22"
                },
                {
                  "assignments": [
                    2221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2221,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "3801:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2251,
                      "src": "3796:12:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2220,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3796:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2232,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2224,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3844:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3844:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2228,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3876:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BufferBinaryIBFRPoolBinary_$2825",
                              "typeString": "contract BufferBinaryIBFRPoolBinary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BufferBinaryIBFRPoolBinary_$2825",
                              "typeString": "contract BufferBinaryIBFRPoolBinary"
                            }
                          ],
                          "id": 2227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3868:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2226,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3868:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3868:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2230,
                        "name": "tokenXAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2156,
                        "src": "3895:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2222,
                        "name": "tokenX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "3811:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$18824",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18485,
                      "src": "3811:19:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3811:106:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3796:121:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2234,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2221,
                        "src": "3935:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652050726f76696465207472616e73666572206469646e277420676f207468726f756768",
                        "id": 2235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3944:40:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47c8a0c426c3ea571e9f087a0256c98958216c3e776f2879367d32c38dcdedf8",
                          "typeString": "literal_string \"The Provide transfer didn't go through\""
                        },
                        "value": "The Provide transfer didn't go through"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47c8a0c426c3ea571e9f087a0256c98958216c3e776f2879367d32c38dcdedf8",
                          "typeString": "literal_string \"The Provide transfer didn't go through\""
                        }
                      ],
                      "id": 2233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3927:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3927:58:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2237,
                  "nodeType": "ExpressionStatement",
                  "src": "3927:58:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2239,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4002:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4002:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2241,
                        "name": "mint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2161,
                        "src": "4014:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2238,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18684,
                      "src": "3996:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3996:23:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2243,
                  "nodeType": "ExpressionStatement",
                  "src": "3996:23:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2245,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4043:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4043:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2247,
                        "name": "tokenXAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2156,
                        "src": "4055:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2248,
                        "name": "mint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2161,
                        "src": "4069:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2244,
                      "name": "Provide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19046,
                      "src": "4035:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4035:39:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2250,
                  "nodeType": "EmitStatement",
                  "src": "4030:44:22"
                }
              ]
            },
            "documentation": {
              "id": 2154,
              "nodeType": "StructuredDocumentation",
              "src": "2713:467:22",
              "text": " @notice A provider supplies tokenX to the pool and receives rBFR-X tokens\n @param minMint Minimum amount of tokens that should be received by a provider.\nCalling the provide function will require the minimum amount of tokens to be minted.\nThe actual amount that will be minted could vary but can only be higher (not lower) than the minimum value.\n @return mint Amount of tokens to be received"
            },
            "functionSelector": "e8c3c54f",
            "id": 2252,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "provide",
            "nameLocation": "3194:7:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2156,
                  "mutability": "mutable",
                  "name": "tokenXAmount",
                  "nameLocation": "3210:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2252,
                  "src": "3202:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3202:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2158,
                  "mutability": "mutable",
                  "name": "minMint",
                  "nameLocation": "3232:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2252,
                  "src": "3224:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3224:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3201:39:22"
            },
            "returnParameters": {
              "id": 2162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2161,
                  "mutability": "mutable",
                  "name": "mint",
                  "nameLocation": "3283:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2252,
                  "src": "3275:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3275:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3274:14:22"
            },
            "scope": 2825,
            "src": "3185:896:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2350,
              "nodeType": "Block",
              "src": "4458:948:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2263,
                          "name": "tokenXAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2255,
                          "src": "4489:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2264,
                            "name": "availableBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2770,
                            "src": "4505:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4505:18:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4489:34:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c3a204e6f7420656e6f7567682066756e6473206f6e2074686520706f6f6c20636f6e74726163742e20506c65617365206c6f7765722074686520616d6f756e742e",
                        "id": 2267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4537:71:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9cce7217f1f389cdbbe34bdaf020ee0b9cb2692dc25cc4eebd2640f573b5a50",
                          "typeString": "literal_string \"Pool: Not enough funds on the pool contract. Please lower the amount.\""
                        },
                        "value": "Pool: Not enough funds on the pool contract. Please lower the amount."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9cce7217f1f389cdbbe34bdaf020ee0b9cb2692dc25cc4eebd2640f573b5a50",
                          "typeString": "literal_string \"Pool: Not enough funds on the pool contract. Please lower the amount.\""
                        }
                      ],
                      "id": 2262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4468:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4468:150:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2269,
                  "nodeType": "ExpressionStatement",
                  "src": "4468:150:22"
                },
                {
                  "assignments": [
                    2271
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2271,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "nameLocation": "4636:11:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2350,
                      "src": "4628:19:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2270,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4628:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2274,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2272,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18363,
                      "src": "4650:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 2273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4650:13:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4628:35:22"
                },
                {
                  "assignments": [
                    2276
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2276,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "4681:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2350,
                      "src": "4673:15:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2275,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4673:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2279,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2277,
                      "name": "totalTokenXBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2788,
                      "src": "4691:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 2278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4691:20:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4673:38:22"
                },
                {
                  "assignments": [
                    2281
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2281,
                      "mutability": "mutable",
                      "name": "maxUserTokenXWithdrawal",
                      "nameLocation": "4730:23:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2350,
                      "src": "4722:31:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2280,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4722:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2290,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 2283,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2257,
                                "src": "4767:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2282,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18377,
                              "src": "4757:9:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 2284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4757:18:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 2285,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2276,
                            "src": "4778:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4757:28:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2287,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4756:30:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 2288,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2271,
                      "src": "4801:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4756:56:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4722:90:22"
                },
                {
                  "assignments": [
                    2292
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2292,
                      "mutability": "mutable",
                      "name": "tokenXAmountToWithdraw",
                      "nameLocation": "4831:22:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2350,
                      "src": "4823:30:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2291,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4823:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2299,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2293,
                        "name": "maxUserTokenXWithdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2281,
                        "src": "4856:23:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 2294,
                        "name": "tokenXAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2255,
                        "src": "4882:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4856:38:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 2297,
                      "name": "tokenXAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2255,
                      "src": "4947:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4856:103:22",
                    "trueExpression": {
                      "id": 2296,
                      "name": "maxUserTokenXWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2281,
                      "src": "4909:23:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4823:136:22"
                },
                {
                  "expression": {
                    "id": 2308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2300,
                      "name": "burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2260,
                      "src": "4970:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2302,
                                "name": "tokenXAmountToWithdraw",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2292,
                                "src": "4986:22:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 2303,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2271,
                                "src": "5011:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4986:36:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2305,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4985:38:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2306,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2276,
                          "src": "5025:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2301,
                        "name": "divCeil",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2824,
                        "src": "4977:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4977:56:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4970:63:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2309,
                  "nodeType": "ExpressionStatement",
                  "src": "4970:63:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2311,
                          "name": "burn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2260,
                          "src": "5052:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2313,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2257,
                              "src": "5070:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2312,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18377,
                            "src": "5060:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 2314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5060:18:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5052:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c3a20416d6f756e7420697320746f6f206c61726765",
                        "id": 2316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5080:27:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5b579e36cc583399cf8b16476e3f2ecb2aef3fcf82211d161eb784c9c390634",
                          "typeString": "literal_string \"Pool: Amount is too large\""
                        },
                        "value": "Pool: Amount is too large"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5b579e36cc583399cf8b16476e3f2ecb2aef3fcf82211d161eb784c9c390634",
                          "typeString": "literal_string \"Pool: Amount is too large\""
                        }
                      ],
                      "id": 2310,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5044:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5044:64:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2318,
                  "nodeType": "ExpressionStatement",
                  "src": "5044:64:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2320,
                          "name": "burn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2260,
                          "src": "5126:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5133:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5126:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c3a20416d6f756e7420697320746f6f20736d616c6c",
                        "id": 2323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5136:27:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1aa0c2cb2134aad5f223d94a9b288522cd506e390baa6362e4b7c74a5084846",
                          "typeString": "literal_string \"Pool: Amount is too small\""
                        },
                        "value": "Pool: Amount is too small"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1aa0c2cb2134aad5f223d94a9b288522cd506e390baa6362e4b7c74a5084846",
                          "typeString": "literal_string \"Pool: Amount is too small\""
                        }
                      ],
                      "id": 2319,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5118:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5118:46:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2325,
                  "nodeType": "ExpressionStatement",
                  "src": "5118:46:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2327,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2257,
                        "src": "5181:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2328,
                        "name": "burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2260,
                        "src": "5190:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2326,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18756,
                      "src": "5175:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5175:20:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2330,
                  "nodeType": "ExpressionStatement",
                  "src": "5175:20:22"
                },
                {
                  "assignments": [
                    2332
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2332,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "5211:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2350,
                      "src": "5206:12:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2331,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5206:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2338,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2335,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2257,
                        "src": "5237:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2336,
                        "name": "tokenXAmountToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2292,
                        "src": "5246:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2333,
                        "name": "tokenX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "5221:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$18824",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18398,
                      "src": "5221:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5221:48:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5206:63:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2340,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2332,
                        "src": "5287:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c3a20546865205769746864726177616c206469646e277420676f207468726f756768",
                        "id": 2341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5296:40:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2b3160223dd6b48ee44b8f93ec8a7c691bc85134a409f57bdcaf0fb3865a6b89",
                          "typeString": "literal_string \"Pool: The Withdrawal didn't go through\""
                        },
                        "value": "Pool: The Withdrawal didn't go through"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2b3160223dd6b48ee44b8f93ec8a7c691bc85134a409f57bdcaf0fb3865a6b89",
                          "typeString": "literal_string \"Pool: The Withdrawal didn't go through\""
                        }
                      ],
                      "id": 2339,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5279:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5279:58:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2343,
                  "nodeType": "ExpressionStatement",
                  "src": "5279:58:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2345,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2257,
                        "src": "5361:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2346,
                        "name": "tokenXAmountToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2292,
                        "src": "5370:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2347,
                        "name": "burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2260,
                        "src": "5394:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2344,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19054,
                      "src": "5352:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5352:47:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2349,
                  "nodeType": "EmitStatement",
                  "src": "5347:52:22"
                }
              ]
            },
            "documentation": {
              "id": 2253,
              "nodeType": "StructuredDocumentation",
              "src": "4087:256:22",
              "text": " @notice Provider burns rBFR-X and receives X from the pool\n @param tokenXAmount Amount of X to receive\n @param account User address for which the withdrawal has to be initiated\n @return burn Amount of tokens to be burnt"
            },
            "id": 2351,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nameLocation": "4357:9:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2255,
                  "mutability": "mutable",
                  "name": "tokenXAmount",
                  "nameLocation": "4375:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2351,
                  "src": "4367:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4367:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2257,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4397:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2351,
                  "src": "4389:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4389:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4366:39:22"
            },
            "returnParameters": {
              "id": 2261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2260,
                  "mutability": "mutable",
                  "name": "burn",
                  "nameLocation": "4448:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2351,
                  "src": "4440:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4440:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4439:14:22"
            },
            "scope": 2825,
            "src": "4348:1058:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2363,
              "nodeType": "Block",
              "src": "5600:52:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2358,
                        "name": "tokenXAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2354,
                        "src": "5620:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2359,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5634:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5634:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2357,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2351,
                      "src": "5610:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) returns (uint256)"
                      }
                    },
                    "id": 2361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5610:35:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2362,
                  "nodeType": "ExpressionStatement",
                  "src": "5610:35:22"
                }
              ]
            },
            "documentation": {
              "id": 2352,
              "nodeType": "StructuredDocumentation",
              "src": "5412:134:22",
              "text": " @notice withdraw burns rBFR-X and receives X from the pool\n @param tokenXAmount Amount Amount of X to receive"
            },
            "functionSelector": "2e1a7d4d",
            "id": 2364,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "5560:8:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2354,
                  "mutability": "mutable",
                  "name": "tokenXAmount",
                  "nameLocation": "5577:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2364,
                  "src": "5569:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5569:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5568:22:22"
            },
            "returnParameters": {
              "id": 2356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5600:0:22"
            },
            "scope": 2825,
            "src": "5551:101:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2380,
              "nodeType": "Block",
              "src": "5983:46:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2376,
                        "name": "tokenXAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2369,
                        "src": "6003:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2377,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2367,
                        "src": "6017:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2375,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2351,
                      "src": "5993:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) returns (uint256)"
                      }
                    },
                    "id": 2378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5993:29:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2379,
                  "nodeType": "ExpressionStatement",
                  "src": "5993:29:22"
                }
              ]
            },
            "documentation": {
              "id": 2365,
              "nodeType": "StructuredDocumentation",
              "src": "5658:203:22",
              "text": " @notice allows admin to send back the funds of the depositer\n @param user  User address for which the withdrawal has to be made\n @param tokenXAmount  Amount of X to receive"
            },
            "functionSelector": "401d4482",
            "id": 2381,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2372,
                    "name": "PROJECT_OWNER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2010,
                    "src": "5959:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 2373,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2371,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19274,
                  "src": "5950:8:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "5950:28:22"
              }
            ],
            "name": "adminWithdraw",
            "nameLocation": "5875:13:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2367,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5897:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2381,
                  "src": "5889:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5889:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2369,
                  "mutability": "mutable",
                  "name": "tokenXAmount",
                  "nameLocation": "5911:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2381,
                  "src": "5903:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5903:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5888:36:22"
            },
            "returnParameters": {
              "id": 2374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5983:0:22"
            },
            "scope": 2825,
            "src": "5866:163:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              19125
            ],
            "body": {
              "id": 2459,
              "nodeType": "Block",
              "src": "6332:576:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2396,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2384,
                          "src": "6350:2:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2397,
                              "name": "lockedLiquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2000,
                              "src": "6356:15:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockedLiquidity_$19026_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct ILiquidityPool.LockedLiquidity storage ref[] storage ref)"
                              }
                            },
                            "id": 2400,
                            "indexExpression": {
                              "expression": {
                                "id": 2398,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6372:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6372:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6356:27:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_LockedLiquidity_$19026_storage_$dyn_storage",
                              "typeString": "struct ILiquidityPool.LockedLiquidity storage ref[] storage ref"
                            }
                          },
                          "id": 2401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6356:34:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6350:40:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e67206964",
                        "id": 2403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6392:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ee69e74efe88f367f67f12cc520005ee33af942aa1612f1c2f7cf912f5d56ac",
                          "typeString": "literal_string \"Wrong id\""
                        },
                        "value": "Wrong id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ee69e74efe88f367f67f12cc520005ee33af942aa1612f1c2f7cf912f5d56ac",
                          "typeString": "literal_string \"Wrong id\""
                        }
                      ],
                      "id": 2395,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6342:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6342:61:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2405,
                  "nodeType": "ExpressionStatement",
                  "src": "6342:61:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2407,
                                "name": "lockedAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1986,
                                "src": "6436:12:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 2408,
                                "name": "tokenXAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2386,
                                "src": "6451:12:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6436:27:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2410,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6435:29:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2411,
                            "name": "totalTokenXBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2788,
                            "src": "6468:18:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6468:20:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6435:53:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c3a20416d6f756e7420697320746f6f206c617267652e",
                        "id": 2414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6502:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c90a50469ce10d45b76b4e1e6e216e1fe8bf6443e939c7d2c17a364684eac56",
                          "typeString": "literal_string \"Pool: Amount is too large.\""
                        },
                        "value": "Pool: Amount is too large."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c90a50469ce10d45b76b4e1e6e216e1fe8bf6443e939c7d2c17a364684eac56",
                          "typeString": "literal_string \"Pool: Amount is too large.\""
                        }
                      ],
                      "id": 2406,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6414:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6414:126:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2416,
                  "nodeType": "ExpressionStatement",
                  "src": "6414:126:22"
                },
                {
                  "assignments": [
                    2418
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2418,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "6556:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2459,
                      "src": "6551:12:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2417,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6551:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2429,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2421,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6586:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6586:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2425,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6606:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BufferBinaryIBFRPoolBinary_$2825",
                              "typeString": "contract BufferBinaryIBFRPoolBinary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BufferBinaryIBFRPoolBinary_$2825",
                              "typeString": "contract BufferBinaryIBFRPoolBinary"
                            }
                          ],
                          "id": 2424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6598:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2423,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6598:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6598:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2427,
                        "name": "premium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2388,
                        "src": "6613:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2419,
                        "name": "tokenX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "6566:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$18824",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18485,
                      "src": "6566:19:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6566:55:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6551:70:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2431,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2418,
                        "src": "6639:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865205072656d69756d207472616e73666572206469646e277420676f207468726f756768",
                        "id": 2432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6648:40:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3aa27d0f05cd6e351d88bfa5719cae19934d7c7e1c680e024be90458f5a4b47",
                          "typeString": "literal_string \"The Premium transfer didn't go through\""
                        },
                        "value": "The Premium transfer didn't go through"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3aa27d0f05cd6e351d88bfa5719cae19934d7c7e1c680e024be90458f5a4b47",
                          "typeString": "literal_string \"The Premium transfer didn't go through\""
                        }
                      ],
                      "id": 2430,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6631:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6631:58:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2434,
                  "nodeType": "ExpressionStatement",
                  "src": "6631:58:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2441,
                            "name": "tokenXAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2386,
                            "src": "6762:12:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2442,
                            "name": "premium",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2388,
                            "src": "6776:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "74727565",
                            "id": 2443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6785:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 2440,
                          "name": "LockedLiquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19026,
                          "src": "6746:15:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_LockedLiquidity_$19026_storage_ptr_$",
                            "typeString": "type(struct ILiquidityPool.LockedLiquidity storage pointer)"
                          }
                        },
                        "id": 2444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6746:44:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedLiquidity_$19026_memory_ptr",
                          "typeString": "struct ILiquidityPool.LockedLiquidity memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LockedLiquidity_$19026_memory_ptr",
                          "typeString": "struct ILiquidityPool.LockedLiquidity memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 2435,
                          "name": "lockedLiquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2000,
                          "src": "6700:15:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockedLiquidity_$19026_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct ILiquidityPool.LockedLiquidity storage ref[] storage ref)"
                          }
                        },
                        "id": 2438,
                        "indexExpression": {
                          "expression": {
                            "id": 2436,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6716:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6716:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6700:27:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LockedLiquidity_$19026_storage_$dyn_storage",
                          "typeString": "struct ILiquidityPool.LockedLiquidity storage ref[] storage ref"
                        }
                      },
                      "id": 2439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6700:32:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_LockedLiquidity_$19026_storage_$dyn_storage_ptr_$_t_struct$_LockedLiquidity_$19026_storage_$returns$__$bound_to$_t_array$_t_struct$_LockedLiquidity_$19026_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct ILiquidityPool.LockedLiquidity storage ref[] storage pointer,struct ILiquidityPool.LockedLiquidity storage ref)"
                      }
                    },
                    "id": 2445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6700:100:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2446,
                  "nodeType": "ExpressionStatement",
                  "src": "6700:100:22"
                },
                {
                  "expression": {
                    "id": 2451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2447,
                      "name": "lockedPremium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1988,
                      "src": "6810:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2448,
                        "name": "lockedPremium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1988,
                        "src": "6826:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 2449,
                        "name": "premium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2388,
                        "src": "6842:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6826:23:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6810:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2452,
                  "nodeType": "ExpressionStatement",
                  "src": "6810:39:22"
                },
                {
                  "expression": {
                    "id": 2457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2453,
                      "name": "lockedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1986,
                      "src": "6859:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2454,
                        "name": "lockedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1986,
                        "src": "6874:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 2455,
                        "name": "tokenXAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2386,
                        "src": "6889:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6874:27:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6859:42:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2458,
                  "nodeType": "ExpressionStatement",
                  "src": "6859:42:22"
                }
              ]
            },
            "documentation": {
              "id": 2382,
              "nodeType": "StructuredDocumentation",
              "src": "6035:150:22",
              "text": " @notice Called by BufferCallOptions to lock the funds\n @param tokenXAmount Amount of funds that should be locked in an option"
            },
            "functionSelector": "edd0d421",
            "id": 2460,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2392,
                    "name": "OPTION_ISSUER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2005,
                    "src": "6312:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 2393,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2391,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19274,
                  "src": "6303:8:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "6303:28:22"
              }
            ],
            "name": "lock",
            "nameLocation": "6199:4:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2390,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6294:8:22"
            },
            "parameters": {
              "id": 2389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2384,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "6221:2:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2460,
                  "src": "6213:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2383,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6213:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2386,
                  "mutability": "mutable",
                  "name": "tokenXAmount",
                  "nameLocation": "6241:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2460,
                  "src": "6233:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6233:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2388,
                  "mutability": "mutable",
                  "name": "premium",
                  "nameLocation": "6271:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2460,
                  "src": "6263:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6263:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6203:81:22"
            },
            "returnParameters": {
              "id": 2394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6332:0:22"
            },
            "scope": 2825,
            "src": "6190:718:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              19134
            ],
            "body": {
              "id": 2537,
              "nodeType": "Block",
              "src": "7224:440:22",
              "statements": [
                {
                  "assignments": [
                    2476
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2476,
                      "mutability": "mutable",
                      "name": "ll",
                      "nameLocation": "7258:2:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2537,
                      "src": "7234:26:22",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                        "typeString": "struct ILiquidityPool.LockedLiquidity"
                      },
                      "typeName": {
                        "id": 2475,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2474,
                          "name": "LockedLiquidity",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 19026,
                          "src": "7234:15:22"
                        },
                        "referencedDeclaration": 19026,
                        "src": "7234:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                          "typeString": "struct ILiquidityPool.LockedLiquidity"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2483,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2477,
                        "name": "lockedLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2000,
                        "src": "7263:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockedLiquidity_$19026_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct ILiquidityPool.LockedLiquidity storage ref[] storage ref)"
                        }
                      },
                      "id": 2480,
                      "indexExpression": {
                        "expression": {
                          "id": 2478,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7279:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7279:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7263:27:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_LockedLiquidity_$19026_storage_$dyn_storage",
                        "typeString": "struct ILiquidityPool.LockedLiquidity storage ref[] storage ref"
                      }
                    },
                    "id": 2482,
                    "indexExpression": {
                      "id": 2481,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2463,
                      "src": "7291:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7263:31:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage",
                      "typeString": "struct ILiquidityPool.LockedLiquidity storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7234:60:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2485,
                          "name": "ll",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2476,
                          "src": "7312:2:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                            "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                          }
                        },
                        "id": 2486,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "locked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19025,
                        "src": "7312:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6c6f636b6564416d6f756e7420697320616c726561647920756e6c6f636b6564",
                        "id": 2487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7323:34:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c75bfd615697f07aa12fe172f30081f9680e6b54275abfb18077e3834c1061d",
                          "typeString": "literal_string \"lockedAmount is already unlocked\""
                        },
                        "value": "lockedAmount is already unlocked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c75bfd615697f07aa12fe172f30081f9680e6b54275abfb18077e3834c1061d",
                          "typeString": "literal_string \"lockedAmount is already unlocked\""
                        }
                      ],
                      "id": 2484,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7304:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7304:54:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2489,
                  "nodeType": "ExpressionStatement",
                  "src": "7304:54:22"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2490,
                        "name": "ll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2476,
                        "src": "7372:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                          "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                        }
                      },
                      "id": 2491,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "premium",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19023,
                      "src": "7372:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 2492,
                      "name": "premium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2467,
                      "src": "7385:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7372:20:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2506,
                  "nodeType": "IfStatement",
                  "src": "7368:100:22",
                  "trueBody": {
                    "id": 2505,
                    "nodeType": "Block",
                    "src": "7394:74:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2497,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7424:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7424:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2499,
                                  "name": "ll",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2476,
                                  "src": "7436:2:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                                    "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                                  }
                                },
                                "id": 2500,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "premium",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 19023,
                                "src": "7436:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2501,
                                "name": "premium",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2467,
                                "src": "7449:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7436:20:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2494,
                              "name": "tokenX",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2013,
                              "src": "7408:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$18824",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 2496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18398,
                            "src": "7408:15:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7408:49:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2504,
                        "nodeType": "ExpressionStatement",
                        "src": "7408:49:22"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2507,
                      "name": "lockedPremium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1988,
                      "src": "7477:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2508,
                          "name": "lockedPremium",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1988,
                          "src": "7493:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 2509,
                            "name": "ll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2476,
                            "src": "7509:2:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                              "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                            }
                          },
                          "id": 2510,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "premium",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19023,
                          "src": "7509:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7493:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 2512,
                        "name": "premium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2467,
                        "src": "7522:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7493:36:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7477:52:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2515,
                  "nodeType": "ExpressionStatement",
                  "src": "7477:52:22"
                },
                {
                  "expression": {
                    "id": 2523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2516,
                      "name": "lockedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1986,
                      "src": "7539:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2517,
                          "name": "lockedAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1986,
                          "src": "7554:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 2518,
                            "name": "ll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2476,
                            "src": "7569:2:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                              "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                            }
                          },
                          "id": 2519,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19021,
                          "src": "7569:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7554:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 2521,
                        "name": "tokenXAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2465,
                        "src": "7581:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7554:39:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7539:54:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2524,
                  "nodeType": "ExpressionStatement",
                  "src": "7539:54:22"
                },
                {
                  "expression": {
                    "id": 2529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2525,
                        "name": "ll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2476,
                        "src": "7603:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                          "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                        }
                      },
                      "id": 2527,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "premium",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19023,
                      "src": "7603:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2528,
                      "name": "premium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2467,
                      "src": "7616:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7603:20:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2530,
                  "nodeType": "ExpressionStatement",
                  "src": "7603:20:22"
                },
                {
                  "expression": {
                    "id": 2535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2531,
                        "name": "ll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2476,
                        "src": "7633:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                          "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                        }
                      },
                      "id": 2533,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19021,
                      "src": "7633:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2534,
                      "name": "tokenXAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2465,
                      "src": "7645:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7633:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2536,
                  "nodeType": "ExpressionStatement",
                  "src": "7633:24:22"
                }
              ]
            },
            "documentation": {
              "id": 2461,
              "nodeType": "StructuredDocumentation",
              "src": "6914:159:22",
              "text": " @notice Called by BufferCallOptions to change the locked funds\n @param tokenXAmount Amount of funds that should be locked in an option"
            },
            "functionSelector": "57a5c967",
            "id": 2538,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2471,
                    "name": "OPTION_ISSUER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2005,
                    "src": "7204:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 2472,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2470,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19274,
                  "src": "7195:8:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "7195:28:22"
              }
            ],
            "name": "changeLock",
            "nameLocation": "7087:10:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2469,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7186:8:22"
            },
            "parameters": {
              "id": 2468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2463,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "7115:2:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2538,
                  "src": "7107:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7107:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2465,
                  "mutability": "mutable",
                  "name": "tokenXAmount",
                  "nameLocation": "7135:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2538,
                  "src": "7127:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7127:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2467,
                  "mutability": "mutable",
                  "name": "premium",
                  "nameLocation": "7165:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2538,
                  "src": "7157:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7157:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7097:81:22"
            },
            "returnParameters": {
              "id": 2473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7224:0:22"
            },
            "scope": 2825,
            "src": "7078:586:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2590,
              "nodeType": "Block",
              "src": "7929:306:22",
              "statements": [
                {
                  "assignments": [
                    2551
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2551,
                      "mutability": "mutable",
                      "name": "ll",
                      "nameLocation": "7963:2:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2590,
                      "src": "7939:26:22",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                        "typeString": "struct ILiquidityPool.LockedLiquidity"
                      },
                      "typeName": {
                        "id": 2550,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2549,
                          "name": "LockedLiquidity",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 19026,
                          "src": "7939:15:22"
                        },
                        "referencedDeclaration": 19026,
                        "src": "7939:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                          "typeString": "struct ILiquidityPool.LockedLiquidity"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2558,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2552,
                        "name": "lockedLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2000,
                        "src": "7968:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockedLiquidity_$19026_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct ILiquidityPool.LockedLiquidity storage ref[] storage ref)"
                        }
                      },
                      "id": 2555,
                      "indexExpression": {
                        "expression": {
                          "id": 2553,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7984:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7984:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7968:27:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_LockedLiquidity_$19026_storage_$dyn_storage",
                        "typeString": "struct ILiquidityPool.LockedLiquidity storage ref[] storage ref"
                      }
                    },
                    "id": 2557,
                    "indexExpression": {
                      "id": 2556,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2541,
                      "src": "7996:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7968:31:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage",
                      "typeString": "struct ILiquidityPool.LockedLiquidity storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7939:60:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2560,
                          "name": "ll",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2551,
                          "src": "8017:2:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                            "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                          }
                        },
                        "id": 2561,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "locked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19025,
                        "src": "8017:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c3a206c6f636b6564416d6f756e7420697320616c726561647920756e6c6f636b6564",
                        "id": 2562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8028:40:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20aa42c12630b5e92a3ba3c815c84bed8219883ea91067c401c891e552c927c9",
                          "typeString": "literal_string \"Pool: lockedAmount is already unlocked\""
                        },
                        "value": "Pool: lockedAmount is already unlocked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20aa42c12630b5e92a3ba3c815c84bed8219883ea91067c401c891e552c927c9",
                          "typeString": "literal_string \"Pool: lockedAmount is already unlocked\""
                        }
                      ],
                      "id": 2559,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8009:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8009:60:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2564,
                  "nodeType": "ExpressionStatement",
                  "src": "8009:60:22"
                },
                {
                  "expression": {
                    "id": 2569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2565,
                        "name": "ll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2551,
                        "src": "8079:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                          "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                        }
                      },
                      "id": 2567,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19025,
                      "src": "8079:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 2568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8091:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "8079:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2570,
                  "nodeType": "ExpressionStatement",
                  "src": "8079:17:22"
                },
                {
                  "expression": {
                    "id": 2576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2571,
                      "name": "lockedPremium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1988,
                      "src": "8107:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2572,
                        "name": "lockedPremium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1988,
                        "src": "8123:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 2573,
                          "name": "ll",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2551,
                          "src": "8139:2:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                            "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                          }
                        },
                        "id": 2574,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "premium",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19023,
                        "src": "8139:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8123:26:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8107:42:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2577,
                  "nodeType": "ExpressionStatement",
                  "src": "8107:42:22"
                },
                {
                  "expression": {
                    "id": 2583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2578,
                      "name": "lockedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1986,
                      "src": "8159:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2579,
                        "name": "lockedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1986,
                        "src": "8174:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 2580,
                          "name": "ll",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2551,
                          "src": "8189:2:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                            "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                          }
                        },
                        "id": 2581,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19021,
                        "src": "8189:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8174:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8159:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2584,
                  "nodeType": "ExpressionStatement",
                  "src": "8159:39:22"
                },
                {
                  "expression": {
                    "id": 2588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2585,
                      "name": "premium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2547,
                      "src": "8208:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2586,
                        "name": "ll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2551,
                        "src": "8218:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                          "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                        }
                      },
                      "id": 2587,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "premium",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19023,
                      "src": "8218:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8208:20:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2589,
                  "nodeType": "ExpressionStatement",
                  "src": "8208:20:22"
                }
              ]
            },
            "documentation": {
              "id": 2539,
              "nodeType": "StructuredDocumentation",
              "src": "7670:133:22",
              "text": " @notice Called by BufferOptions to unlock the funds\n @param id Id of LockedLiquidity that should be unlocked"
            },
            "id": 2591,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2544,
                    "name": "OPTION_ISSUER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2005,
                    "src": "7871:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 2545,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2543,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19274,
                  "src": "7862:8:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "7862:28:22"
              }
            ],
            "name": "_unlock",
            "nameLocation": "7817:7:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2541,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "7833:2:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2591,
                  "src": "7825:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2540,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7825:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7824:12:22"
            },
            "returnParameters": {
              "id": 2548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2547,
                  "mutability": "mutable",
                  "name": "premium",
                  "nameLocation": "7916:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2591,
                  "src": "7908:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7908:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7907:17:22"
            },
            "scope": 2825,
            "src": "7808:427:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              19059
            ],
            "body": {
              "id": 2609,
              "nodeType": "Block",
              "src": "8425:81:22",
              "statements": [
                {
                  "assignments": [
                    2599
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2599,
                      "mutability": "mutable",
                      "name": "premium",
                      "nameLocation": "8443:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2609,
                      "src": "8435:15:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2598,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8435:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2603,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2601,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2594,
                        "src": "8461:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2600,
                      "name": "_unlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2591,
                      "src": "8453:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 2602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8453:11:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8435:29:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2605,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2594,
                        "src": "8487:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2606,
                        "name": "premium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2599,
                        "src": "8491:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2604,
                      "name": "Profit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19032,
                      "src": "8480:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8480:19:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2608,
                  "nodeType": "EmitStatement",
                  "src": "8475:24:22"
                }
              ]
            },
            "documentation": {
              "id": 2592,
              "nodeType": "StructuredDocumentation",
              "src": "8241:133:22",
              "text": " @notice Called by BufferOptions to unlock the funds\n @param id Id of LockedLiquidity that should be unlocked"
            },
            "functionSelector": "6198e339",
            "id": 2610,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlock",
            "nameLocation": "8388:6:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2596,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8416:8:22"
            },
            "parameters": {
              "id": 2595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2594,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "8403:2:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2610,
                  "src": "8395:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8395:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8394:12:22"
            },
            "returnParameters": {
              "id": 2597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8425:0:22"
            },
            "scope": 2825,
            "src": "8379:127:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              19107
            ],
            "body": {
              "id": 2621,
              "nodeType": "Block",
              "src": "8709:28:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2618,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2613,
                        "src": "8727:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2617,
                      "name": "_unlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2591,
                      "src": "8719:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 2619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8719:11:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2620,
                  "nodeType": "ExpressionStatement",
                  "src": "8719:11:22"
                }
              ]
            },
            "documentation": {
              "id": 2611,
              "nodeType": "StructuredDocumentation",
              "src": "8512:133:22",
              "text": " @notice Called by BufferOptions to unlock the funds\n @param id Id of LockedLiquidity that should be unlocked"
            },
            "functionSelector": "0dbf21b0",
            "id": 2622,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlockWithoutProfit",
            "nameLocation": "8659:19:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2615,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8700:8:22"
            },
            "parameters": {
              "id": 2614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2613,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "8687:2:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2622,
                  "src": "8679:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2612,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8679:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8678:12:22"
            },
            "returnParameters": {
              "id": 2616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8709:0:22"
            },
            "scope": 2825,
            "src": "8650:87:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              19116
            ],
            "body": {
              "id": 2726,
              "nodeType": "Block",
              "src": "9084:744:22",
              "statements": [
                {
                  "assignments": [
                    2638
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2638,
                      "mutability": "mutable",
                      "name": "ll",
                      "nameLocation": "9118:2:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2726,
                      "src": "9094:26:22",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                        "typeString": "struct ILiquidityPool.LockedLiquidity"
                      },
                      "typeName": {
                        "id": 2637,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2636,
                          "name": "LockedLiquidity",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 19026,
                          "src": "9094:15:22"
                        },
                        "referencedDeclaration": 19026,
                        "src": "9094:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                          "typeString": "struct ILiquidityPool.LockedLiquidity"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2645,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2639,
                        "name": "lockedLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2000,
                        "src": "9123:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockedLiquidity_$19026_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct ILiquidityPool.LockedLiquidity storage ref[] storage ref)"
                        }
                      },
                      "id": 2642,
                      "indexExpression": {
                        "expression": {
                          "id": 2640,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9139:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9139:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9123:27:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_LockedLiquidity_$19026_storage_$dyn_storage",
                        "typeString": "struct ILiquidityPool.LockedLiquidity storage ref[] storage ref"
                      }
                    },
                    "id": 2644,
                    "indexExpression": {
                      "id": 2643,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2625,
                      "src": "9151:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9123:31:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage",
                      "typeString": "struct ILiquidityPool.LockedLiquidity storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9094:60:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2647,
                          "name": "ll",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2638,
                          "src": "9172:2:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                            "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                          }
                        },
                        "id": 2648,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "locked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19025,
                        "src": "9172:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c3a206c6f636b6564416d6f756e7420697320616c726561647920756e6c6f636b6564",
                        "id": 2649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9183:40:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20aa42c12630b5e92a3ba3c815c84bed8219883ea91067c401c891e552c927c9",
                          "typeString": "literal_string \"Pool: lockedAmount is already unlocked\""
                        },
                        "value": "Pool: lockedAmount is already unlocked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20aa42c12630b5e92a3ba3c815c84bed8219883ea91067c401c891e552c927c9",
                          "typeString": "literal_string \"Pool: lockedAmount is already unlocked\""
                        }
                      ],
                      "id": 2646,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9164:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9164:60:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2651,
                  "nodeType": "ExpressionStatement",
                  "src": "9164:60:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2653,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2627,
                          "src": "9242:2:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9256:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9248:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2654,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9248:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9248:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9242:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2652,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9234:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9234:25:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2660,
                  "nodeType": "ExpressionStatement",
                  "src": "9234:25:22"
                },
                {
                  "expression": {
                    "id": 2665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2661,
                        "name": "ll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2638,
                        "src": "9270:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                          "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                        }
                      },
                      "id": 2663,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19025,
                      "src": "9270:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 2664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9282:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "9270:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2666,
                  "nodeType": "ExpressionStatement",
                  "src": "9270:17:22"
                },
                {
                  "expression": {
                    "id": 2672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2667,
                      "name": "lockedPremium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1988,
                      "src": "9297:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2668,
                        "name": "lockedPremium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1988,
                        "src": "9313:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 2669,
                          "name": "ll",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2638,
                          "src": "9329:2:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                            "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                          }
                        },
                        "id": 2670,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "premium",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19023,
                        "src": "9329:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9313:26:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9297:42:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2673,
                  "nodeType": "ExpressionStatement",
                  "src": "9297:42:22"
                },
                {
                  "expression": {
                    "id": 2679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2674,
                      "name": "lockedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1986,
                      "src": "9349:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2675,
                        "name": "lockedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1986,
                        "src": "9364:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 2676,
                          "name": "ll",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2638,
                          "src": "9379:2:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                            "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                          }
                        },
                        "id": 2677,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19021,
                        "src": "9379:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9364:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9349:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2680,
                  "nodeType": "ExpressionStatement",
                  "src": "9349:39:22"
                },
                {
                  "assignments": [
                    2682
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2682,
                      "mutability": "mutable",
                      "name": "transferTokenXAmount",
                      "nameLocation": "9407:20:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2726,
                      "src": "9399:28:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2681,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9399:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2691,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2683,
                        "name": "tokenXAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2629,
                        "src": "9430:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "expression": {
                          "id": 2684,
                          "name": "ll",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2638,
                          "src": "9445:2:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                            "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                          }
                        },
                        "id": 2685,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19021,
                        "src": "9445:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9430:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 2689,
                      "name": "tokenXAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2629,
                      "src": "9493:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "9430:75:22",
                    "trueExpression": {
                      "expression": {
                        "id": 2687,
                        "name": "ll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2638,
                        "src": "9469:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                          "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                        }
                      },
                      "id": 2688,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19021,
                      "src": "9469:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9399:106:22"
                },
                {
                  "assignments": [
                    2693
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2693,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "9521:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2726,
                      "src": "9516:12:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2692,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9516:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2699,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2696,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2627,
                        "src": "9547:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2697,
                        "name": "transferTokenXAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2682,
                        "src": "9551:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2694,
                        "name": "tokenX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "9531:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$18824",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18398,
                      "src": "9531:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9531:41:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9516:56:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2701,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2693,
                        "src": "9590:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c3a20546865205061796f7574207472616e73666572206469646e277420676f207468726f756768",
                        "id": 2702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9599:45:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70e216740e70ed0702531a934585be186e71886baae4b6089e78aa4736c8e795",
                          "typeString": "literal_string \"Pool: The Payout transfer didn't go through\""
                        },
                        "value": "Pool: The Payout transfer didn't go through"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70e216740e70ed0702531a934585be186e71886baae4b6089e78aa4736c8e795",
                          "typeString": "literal_string \"Pool: The Payout transfer didn't go through\""
                        }
                      ],
                      "id": 2700,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9582:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9582:63:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2704,
                  "nodeType": "ExpressionStatement",
                  "src": "9582:63:22"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2705,
                      "name": "transferTokenXAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2682,
                      "src": "9660:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 2706,
                        "name": "ll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2638,
                        "src": "9684:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                          "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                        }
                      },
                      "id": 2707,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "premium",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19023,
                      "src": "9684:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9660:34:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 2718,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2625,
                          "src": "9783:2:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2719,
                            "name": "transferTokenXAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2682,
                            "src": "9787:20:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 2720,
                              "name": "ll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2638,
                              "src": "9810:2:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                                "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                              }
                            },
                            "id": 2721,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "premium",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19023,
                            "src": "9810:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9787:33:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2717,
                        "name": "Loss",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19038,
                        "src": "9778:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256)"
                        }
                      },
                      "id": 2723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9778:43:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2724,
                    "nodeType": "EmitStatement",
                    "src": "9773:48:22"
                  },
                  "id": 2725,
                  "nodeType": "IfStatement",
                  "src": "9656:165:22",
                  "trueBody": {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 2710,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2625,
                          "src": "9720:2:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2711,
                              "name": "ll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2638,
                              "src": "9724:2:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LockedLiquidity_$19026_storage_ptr",
                                "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                              }
                            },
                            "id": 2712,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "premium",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19023,
                            "src": "9724:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2713,
                            "name": "transferTokenXAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2682,
                            "src": "9737:20:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9724:33:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2709,
                        "name": "Profit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19032,
                        "src": "9713:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256)"
                        }
                      },
                      "id": 2715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9713:45:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2716,
                    "nodeType": "EmitStatement",
                    "src": "9708:50:22"
                  }
                }
              ]
            },
            "documentation": {
              "id": 2623,
              "nodeType": "StructuredDocumentation",
              "src": "8743:199:22",
              "text": " @notice Called by BufferCallOptions to send funds to liquidity providers after an option's expiration\n @param to Provider\n @param tokenXAmount Funds that should be sent"
            },
            "functionSelector": "81b34f15",
            "id": 2727,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2633,
                    "name": "OPTION_ISSUER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2005,
                    "src": "9064:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 2634,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2632,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19274,
                  "src": "9055:8:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "9055:28:22"
              }
            ],
            "name": "send",
            "nameLocation": "8956:4:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2631,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9046:8:22"
            },
            "parameters": {
              "id": 2630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2625,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "8978:2:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "8970:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2624,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8970:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2627,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8998:2:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "8990:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2626,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8990:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2629,
                  "mutability": "mutable",
                  "name": "tokenXAmount",
                  "nameLocation": "9018:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "9010:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9010:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8960:76:22"
            },
            "returnParameters": {
              "id": 2635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9084:0:22"
            },
            "scope": 2825,
            "src": "8947:881:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2757,
              "nodeType": "Block",
              "src": "10051:143:22",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2735,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18363,
                        "src": "10065:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 2736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10065:13:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10081:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10065:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "id": 2754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2752,
                        "name": "share",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2733,
                        "src": "10178:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 2753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10186:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "10178:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2755,
                    "nodeType": "ExpressionStatement",
                    "src": "10178:9:22"
                  },
                  "id": 2756,
                  "nodeType": "IfStatement",
                  "src": "10061:126:22",
                  "trueBody": {
                    "expression": {
                      "id": 2750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2739,
                        "name": "share",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2733,
                        "src": "10096:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2745,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2740,
                                  "name": "totalTokenXBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2788,
                                  "src": "10105:18:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 2741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10105:20:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 2743,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2730,
                                    "src": "10138:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2742,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18377,
                                  "src": "10128:9:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 2744,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10128:18:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10105:41:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2746,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10104:43:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2747,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18363,
                            "src": "10150:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10150:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10104:59:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10096:67:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2751,
                    "nodeType": "ExpressionStatement",
                    "src": "10096:67:22"
                  }
                }
              ]
            },
            "documentation": {
              "id": 2728,
              "nodeType": "StructuredDocumentation",
              "src": "9834:140:22",
              "text": " @notice Returns provider's share in X\n @param account Provider's address\n @return share Provider's share in X"
            },
            "functionSelector": "21e5e2c4",
            "id": 2758,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "shareOf",
            "nameLocation": "9988:7:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2730,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10004:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2758,
                  "src": "9996:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9996:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9995:17:22"
            },
            "returnParameters": {
              "id": 2734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2733,
                  "mutability": "mutable",
                  "name": "share",
                  "nameLocation": "10044:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2758,
                  "src": "10036:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2732,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10036:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10035:15:22"
            },
            "scope": 2825,
            "src": "9979:215:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2769,
              "nodeType": "Block",
              "src": "10386:59:22",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2764,
                        "name": "totalTokenXBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2788,
                        "src": "10403:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 2765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10403:20:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 2766,
                      "name": "lockedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1986,
                      "src": "10426:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10403:35:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2763,
                  "id": 2768,
                  "nodeType": "Return",
                  "src": "10396:42:22"
                }
              ]
            },
            "documentation": {
              "id": 2759,
              "nodeType": "StructuredDocumentation",
              "src": "10200:115:22",
              "text": " @notice Returns the amount of X available for withdrawals\n @return balance Unlocked amount"
            },
            "functionSelector": "ab2f0e51",
            "id": 2770,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "availableBalance",
            "nameLocation": "10329:16:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10345:2:22"
            },
            "returnParameters": {
              "id": 2763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2762,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "10377:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2770,
                  "src": "10369:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10369:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10368:17:22"
            },
            "scope": 2825,
            "src": "10320:125:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              19102
            ],
            "body": {
              "id": 2787,
              "nodeType": "Block",
              "src": "10683:71:22",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 2781,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "10725:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BufferBinaryIBFRPoolBinary_$2825",
                                "typeString": "contract BufferBinaryIBFRPoolBinary"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BufferBinaryIBFRPoolBinary_$2825",
                                "typeString": "contract BufferBinaryIBFRPoolBinary"
                              }
                            ],
                            "id": 2780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10717:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2779,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10717:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10717:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 2777,
                          "name": "tokenX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2013,
                          "src": "10700:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$18824",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 2778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18377,
                        "src": "10700:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 2783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10700:31:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 2784,
                      "name": "lockedPremium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1988,
                      "src": "10734:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10700:47:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2776,
                  "id": 2786,
                  "nodeType": "Return",
                  "src": "10693:54:22"
                }
              ]
            },
            "documentation": {
              "id": 2771,
              "nodeType": "StructuredDocumentation",
              "src": "10451:114:22",
              "text": " @notice Returns the total balance of X provided to the pool\n @return balance Pool balance"
            },
            "functionSelector": "d9ac10d9",
            "id": 2788,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalTokenXBalance",
            "nameLocation": "10579:18:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2773,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10636:8:22"
            },
            "parameters": {
              "id": 2772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10597:2:22"
            },
            "returnParameters": {
              "id": 2776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2775,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "10670:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2788,
                  "src": "10662:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10662:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10661:17:22"
            },
            "scope": 2825,
            "src": "10570:184:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2823,
              "nodeType": "Block",
              "src": "10831:111:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2798,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2792,
                          "src": "10849:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10853:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10849:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2797,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10841:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10841:14:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2802,
                  "nodeType": "ExpressionStatement",
                  "src": "10841:14:22"
                },
                {
                  "assignments": [
                    2804
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2804,
                      "mutability": "mutable",
                      "name": "c",
                      "nameLocation": "10873:1:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2823,
                      "src": "10865:9:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2803,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10865:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2808,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2805,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2790,
                      "src": "10877:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 2806,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2792,
                      "src": "10881:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10877:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10865:17:22"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2809,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2790,
                        "src": "10896:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "id": 2810,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2792,
                        "src": "10900:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10896:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10905:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10896:10:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2820,
                  "nodeType": "IfStatement",
                  "src": "10892:25:22",
                  "trueBody": {
                    "expression": {
                      "id": 2818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2814,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2804,
                        "src": "10908:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2815,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2804,
                          "src": "10912:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 2816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10916:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "10912:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10908:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2819,
                    "nodeType": "ExpressionStatement",
                    "src": "10908:9:22"
                  }
                },
                {
                  "expression": {
                    "id": 2821,
                    "name": "c",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2804,
                    "src": "10934:1:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2796,
                  "id": 2822,
                  "nodeType": "Return",
                  "src": "10927:8:22"
                }
              ]
            },
            "id": 2824,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "divCeil",
            "nameLocation": "10769:7:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2790,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "10785:1:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2824,
                  "src": "10777:9:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2789,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10777:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2792,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "10796:1:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2824,
                  "src": "10788:9:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10788:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10776:22:22"
            },
            "returnParameters": {
              "id": 2796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2795,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2824,
                  "src": "10822:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10822:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10821:9:22"
            },
            "scope": 2825,
            "src": "10760:182:22",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2826,
        "src": "363:10581:22",
        "usedErrors": []
      }
    ],
    "src": "0:10945:22"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162002ca438038062002ca4833981016040819052620000349162000440565b604080518082018252600f81526e213ab33332b9102628102a37b5b2b760891b6020808301918252835180850190945260048452633921232960e11b90840152815191929162000087916003916200039a565b5080516200009d9060049060208401906200039a565b505050806001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015620000da57600080fd5b505afa158015620000ef573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000119919081019062000470565b6040516020016200012b919062000572565b60405160208183030381529060405260069080519060200190620001519291906200039a565b50806001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156200018c57600080fd5b505afa158015620001a1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620001cb919081019062000470565b604051602001620001dd919062000547565b60405160208183030381529060405260079080519060200190620002039291906200039a565b50600e80546001600160a01b0383166001600160a01b03199182168117909255600c8054909116331790556040805163313ce56760e01b8152905163313ce56791600480820192602092909190829003018186803b1580156200026557600080fd5b505afa1580156200027a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002a0919062000524565b620002ad90600a62000607565b620002bc90624c4b40620006c6565b600a55620002cc600033620002d3565b5062000784565b620002df8282620002e3565b5050565b620002ef82826200036d565b620002df5760008281526005602090815260408083206001600160a01b03851684529091529020805460ff19166001179055620003293390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff165b92915050565b828054620003a8906200071b565b90600052602060002090601f016020900481019282620003cc576000855562000417565b82601f10620003e757805160ff191683800117855562000417565b8280016001018555821562000417579182015b8281111562000417578251825591602001919060010190620003fa565b506200042592915062000429565b5090565b5b808211156200042557600081556001016200042a565b60006020828403121562000452578081fd5b81516001600160a01b038116811462000469578182fd5b9392505050565b60006020828403121562000482578081fd5b81516001600160401b038082111562000499578283fd5b818401915084601f830112620004ad578283fd5b815181811115620004c257620004c26200076e565b604051601f8201601f19908116603f01168101908382118183101715620004ed57620004ed6200076e565b8160405282815287602084870101111562000506578586fd5b62000519836020830160208801620006e8565b979650505050505050565b60006020828403121562000536578081fd5b815160ff8116811462000469578182fd5b603960f91b81526000825162000565816001850160208701620006e8565b9190910160010192915050565b6e0213ab33332b91023b2b732b934b19608d1b8152600082516200059e81600f850160208701620006e8565b68102628102a37b5b2b760b91b600f939091019283015250601801919050565b600181815b80851115620005ff578160001904821115620005e357620005e362000758565b80851615620005f157918102915b93841c9390800290620005c3565b509250929050565b60006200046960ff841683600082620006235750600162000394565b81620006325750600062000394565b81600181146200064b5760028114620006565762000676565b600191505062000394565b60ff8411156200066a576200066a62000758565b50506001821b62000394565b5060208310610133831016604e8410600b84101617156200069b575081810a62000394565b620006a78383620005be565b8060001904821115620006be57620006be62000758565b029392505050565b6000816000190483118215151615620006e357620006e362000758565b500290565b60005b8381101562000705578181015183820152602001620006eb565b8381111562000715576000848401525b50505050565b600181811c908216806200073057607f821691505b602082108114156200075257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b61251080620007946000396000f3fe608060405234801561001057600080fd5b50600436106101ee5760003560e01c806301ffc9a7146101f357806306fdde031461021b578063095ea7b3146102305780630dbf21b01461024357806316dc165b1461025857806318160ddd1461027857806321e5e2c41461028a57806323b872dd1461029d578063248a9ca3146102b05780632e1a7d4d146102c35780632f2ff15d146102d6578063313ce567146102e957806336568abe146103035780633950935114610316578063401d4482146103295780634dbac7331461033c57806357a5c967146103455780636198e339146103585780636ab28bc81461036b57806370a082311461037457806370c0345c1461038757806371081c8e14610390578063797be55e146103a357806381b34f15146103ac5780638da5cb5b146103bf57806391d14854146103d257806395d89b41146103e5578063a217fddf146103ed578063a2416f74146103f5578063a4475ce414610408578063a457c2d71461041b578063a9059cbb1461042e578063ab2f0e5114610441578063b9cfe34814610449578063be62da0e14610479578063d547741f1461048e578063d9ac10d9146104a1578063dd62ed3e146104a9578063e8c3c54f146104e2578063ec277a66146104f5578063edd0d4211461050a578063fbcd9b051461033c575b600080fd5b6102066102013660046120fd565b61051d565b60405190151581526020015b60405180910390f35b610223610554565b604051610212919061228e565b61020661023e36600461207a565b6105e6565b6102566102513660046120c3565b6105fc565b005b600e5461026b906001600160a01b031681565b604051610212919061223d565b6002545b604051908152602001610212565b61027c610298366004611ff3565b610609565b6102066102ab36600461203f565b61064c565b61027c6102be3660046120c3565b6106fb565b6102566102d13660046120c3565b610710565b6102566102e43660046120db565b61071a565b6102f161073c565b60405160ff9091168152602001610212565b6102566103113660046120db565b6107be565b61020661032436600461207a565b610838565b61025661033736600461207a565b610874565b61027c6103e881565b610256610353366004612182565b61089d565b6102566103663660046120c3565b610a3a565b61027c60085481565b61027c610382366004611ff3565b610a73565b61027c600a5481565b61025661039e3660046120c3565b610a8e565b61027c60095481565b6102566103ba36600461213d565b610adb565b600c5461026b906001600160a01b031681565b6102066103e03660046120db565b610d2f565b610223610d5a565b61027c600081565b610256610403366004611ff3565b610d69565b600b5461026b906001600160a01b031681565b61020661042936600461207a565b610de4565b61020661043c36600461207a565b610e7d565b61027c610e8a565b61045c61045736600461207a565b610ea1565b604080519384526020840192909252151590820152606001610212565b61027c60008051602061247b83398151915281565b61025661049c3660046120db565b610ee6565b61027c610f03565b61027c6104b736600461200d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61027c6104f0366004612161565b610f88565b61027c60008051602061249b83398151915281565b610256610518366004612182565b6111f1565b60006001600160e01b03198216637965db0b60e01b148061054e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060068054610563906123df565b80601f016020809104026020016040519081016040528092919081815260200182805461058f906123df565b80156105dc5780601f106105b1576101008083540402835291602001916105dc565b820191906000526020600020905b8154815290600101906020018083116105bf57829003601f168201915b5050505050905090565b60006105f3338484611421565b50600192915050565b61060581611545565b5050565b60008061061560025490565b11156106435760025461062783610a73565b61062f610f03565b6106399190612366565b61054e9190612352565b5060005b919050565b6000610659848484611604565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156106e35760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6106f08533858403611421565b506001949350505050565b60009081526005602052604090206001015490565b61060581336117c0565b610723826106fb565b61072d8133611a61565b6107378383611ac5565b505050565b600e546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561078157600080fd5b505afa158015610795573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b991906121ad565b905090565b6001600160a01b038116331461082e5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016106da565b6106058282611b4b565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916105f391859061086f90869061233a565b611421565b60008051602061247b83398151915261088d8133611a61565b61089782846117c0565b50505050565b60008051602061249b8339815191526108b68133611a61565b336000908152600d602052604081208054869081106108e557634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201600281015490915060ff1661094c5760405162461bcd60e51b815260206004820181905260248201527f6c6f636b6564416d6f756e7420697320616c726561647920756e6c6f636b656460448201526064016106da565b82816001015411156109f057600e5460018201546001600160a01b039091169063a9059cbb90339061097f908790612385565b6040518363ffffffff1660e01b815260040161099c929190612275565b602060405180830381600087803b1580156109b657600080fd5b505af11580156109ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ee91906120a3565b505b828160010154600954610a039190612385565b610a0d919061233a565b60095580546008548591610a2091612385565b610a2a919061233a565b6008556001810192909255505550565b6000610a4582611545565b90508160008051602061245b83398151915282604051610a6791815260200190565b60405180910390a25050565b6001600160a01b031660009081526020819052604090205490565b60008051602061247b833981519152610aa78133611a61565b600a82905560405182907f2138d5b63f1e1fc5996475c0d8565b0f4ce68622680c894db2bfd3ece685d25790600090a25050565b60008051602061249b833981519152610af48133611a61565b336000908152600d60205260408120805486908110610b2357634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201600281015490915060ff16610b5a5760405162461bcd60e51b81526004016106da906122c1565b6001600160a01b038416610b6d57600080fd5b60028101805460ff191690556001810154600954610b8b9190612385565b6009558054600854610b9d9190612385565b60085580546000908411610bb15783610bb4565b81545b600e5460405163a9059cbb60e01b81529192506000916001600160a01b039091169063a9059cbb90610bec9089908690600401612275565b602060405180830381600087803b158015610c0657600080fd5b505af1158015610c1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3e91906120a3565b905080610ca15760405162461bcd60e51b815260206004820152602b60248201527f506f6f6c3a20546865205061796f7574207472616e73666572206469646e277460448201526a040cede40e8d0e4deeaced60ab1b60648201526084016106da565b82600101548211610ce2578660008051602061245b833981519152838560010154610ccc9190612385565b60405190815260200160405180910390a2610d26565b867f86f83f021a5ecb92d6dcaec11be9da0e65b5401ce748ac3c1f0ddbae029f55ce846001015484610d149190612385565b60405190815260200160405180910390a25b50505050505050565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b606060078054610563906123df565b6000610d758133611a61565b610d8d60008051602061247b8339815191528361071a565b600b80546001600160a01b0319166001600160a01b0384161790556040517fb36db503700bf425dc3b747b57da91cb2e39a0d909ada3206bd18b034d7053ca90610dd890849061223d565b60405180910390a15050565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610e665760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106da565b610e733385858403611421565b5060019392505050565b60006105f3338484611604565b6000600854610e97610f03565b6107b99190612385565b600d6020528160005260406000208181548110610ebd57600080fd5b600091825260209091206003909102018054600182015460029092015490935090915060ff1683565b610eef826106fb565b610ef98133611a61565b6107378383611b4b565b600954600e546040516370a0823160e01b8152600092916001600160a01b0316906370a0823190610f3890309060040161223d565b60206040518083038186803b158015610f5057600080fd5b505afa158015610f64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e979190612125565b600080610f9460025490565b90506000610fa0610f03565b600a54909150610fb0868361233a565b111561100e5760405162461bcd60e51b815260206004820152602760248201527f506f6f6c2068617320616c726561647920726561636865642069742773206d616044820152661e081b1a5b5a5d60ca1b60648201526084016106da565b60008211801561101e5750600081115b1561103f578061102e8387612366565b6110389190612352565b925061104e565b61104b6103e886612366565b92505b8383101561109e5760405162461bcd60e51b815260206004820152601d60248201527f506f6f6c3a204d696e74206c696d697420697320746f6f206c6172676500000060448201526064016106da565b600083116110be5760405162461bcd60e51b81526004016106da90612307565b600e546040516323b872dd60e01b81526000916001600160a01b0316906323b872dd906110f390339030908b90600401612251565b602060405180830381600087803b15801561110d57600080fd5b505af1158015611121573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114591906120a3565b9050806111a35760405162461bcd60e51b815260206004820152602660248201527f5468652050726f76696465207472616e73666572206469646e277420676f20746044820152650d0e4deeaced60d31b60648201526084016106da565b6111ad3385611bb2565b604080518781526020810186905233917f4089141ea5e4c16575f5ebf65f1786497ea07c175846fc7745ef8d8986a4ff65910160405180910390a250505092915050565b60008051602061249b83398151915261120a8133611a61565b336000908152600d602052604090205484146112535760405162461bcd60e51b815260206004820152600860248201526715dc9bdb99c81a5960c21b60448201526064016106da565b61125b610f03565b83600854611269919061233a565b11156112b45760405162461bcd60e51b815260206004820152601a6024820152792837b7b61d1020b6b7bab73a1034b9903a37b7903630b933b29760311b60448201526064016106da565b600e546040516323b872dd60e01b81526000916001600160a01b0316906323b872dd906112e990339030908890600401612251565b602060405180830381600087803b15801561130357600080fd5b505af1158015611317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133b91906120a3565b9050806113995760405162461bcd60e51b815260206004820152602660248201527f546865205072656d69756d207472616e73666572206469646e277420676f20746044820152650d0e4deeaced60d31b60648201526084016106da565b336000908152600d602090815260408083208151606081018352888152808401888152600193820184815283548086018555938752949095209051600390920201908155925190830155516002909101805460ff191691151591909117905560095461140690849061233a565b60095560085461141790859061233a565b6008555050505050565b6001600160a01b0383166114835760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106da565b6001600160a01b0382166114e45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106da565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600060008051602061249b8339815191526115608133611a61565b336000908152600d6020526040812080548590811061158f57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201600281015490915060ff166115c65760405162461bcd60e51b81526004016106da906122c1565b60028101805460ff1916905560018101546009546115e49190612385565b60095580546008546115f69190612385565b600855600101549392505050565b6001600160a01b0383166116685760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106da565b6001600160a01b0382166116ca5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106da565b6001600160a01b038316600090815260208190526040902054818110156117425760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106da565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061177990849061233a565b92505081905550826001600160a01b0316846001600160a01b03166000805160206124bb833981519152846040516117b391815260200190565b60405180910390a3610897565b60006117ca610e8a565b83111561184d5760405162461bcd60e51b815260206004820152604560248201527f506f6f6c3a204e6f7420656e6f7567682066756e6473206f6e2074686520706f60448201527f6f6c20636f6e74726163742e20506c65617365206c6f7765722074686520616d60648201526437bab73a1760d91b608482015260a4016106da565b600061185860025490565b90506000611864610f03565b90506000828261187387610a73565b61187d9190612366565b6118879190612352565b90506000868210611898578661189a565b815b90506118af6118a98583612366565b84611c7f565b94506118ba86610a73565b8511156119055760405162461bcd60e51b8152602060048201526019602482015278506f6f6c3a20416d6f756e7420697320746f6f206c6172676560381b60448201526064016106da565b600085116119255760405162461bcd60e51b81526004016106da90612307565b61192f8686611cbf565b600e5460405163a9059cbb60e01b81526000916001600160a01b03169063a9059cbb90611962908a908690600401612275565b602060405180830381600087803b15801561197c57600080fd5b505af1158015611990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b491906120a3565b905080611a125760405162461bcd60e51b815260206004820152602660248201527f506f6f6c3a20546865205769746864726177616c206469646e277420676f20746044820152650d0e4deeaced60d31b60648201526084016106da565b60408051838152602081018890526001600160a01b038916917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568910160405180910390a2505050505092915050565b611a6b8282610d2f565b61060557611a83816001600160a01b03166014611dfb565b611a8e836020611dfb565b604051602001611a9f9291906121ce565b60408051601f198184030181529082905262461bcd60e51b82526106da9160040161228e565b611acf8282610d2f565b6106055760008281526005602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611b073390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b611b558282610d2f565b156106055760008281526005602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b038216611c085760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106da565b8060026000828254611c1a919061233a565b90915550506001600160a01b03821660009081526020819052604081208054839290611c4790849061233a565b90915550506040518181526001600160a01b038316906000906000805160206124bb8339815191529060200160405180910390a35050565b6000808211611c8d57600080fd5b6000611c998385612352565b9050611ca5838561241a565b15611cb857611cb581600161233a565b90505b9392505050565b6001600160a01b038216611d1f5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106da565b6001600160a01b03821660009081526020819052604090205481811015611d935760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106da565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611dc2908490612385565b90915550506040518281526000906001600160a01b038516906000805160206124bb8339815191529060200160405180910390a3505050565b60606000611e0a836002612366565b611e1590600261233a565b6001600160401b03811115611e3a57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611e64576020820181803683370190505b509050600360fc1b81600081518110611e8d57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611eca57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611eee846002612366565b611ef990600161233a565b90505b6001811115611f8d576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611f3b57634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110611f5f57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93611f86816123c8565b9050611efc565b508315611cb85760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106da565b80356001600160a01b038116811461064757600080fd5b600060208284031215612004578081fd5b611cb882611fdc565b6000806040838503121561201f578081fd5b61202883611fdc565b915061203660208401611fdc565b90509250929050565b600080600060608486031215612053578081fd5b61205c84611fdc565b925061206a60208501611fdc565b9150604084013590509250925092565b6000806040838503121561208c578182fd5b61209583611fdc565b946020939093013593505050565b6000602082840312156120b4578081fd5b81518015158114611cb8578182fd5b6000602082840312156120d4578081fd5b5035919050565b600080604083850312156120ed578182fd5b8235915061203660208401611fdc565b60006020828403121561210e578081fd5b81356001600160e01b031981168114611cb8578182fd5b600060208284031215612136578081fd5b5051919050565b600080600060608486031215612151578283fd5b8335925061206a60208501611fdc565b60008060408385031215612173578182fd5b50508035926020909101359150565b600080600060608486031215612196578283fd5b505081359360208301359350604090920135919050565b6000602082840312156121be578081fd5b815160ff81168114611cb8578182fd5b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b81526000835161220081601785016020880161239c565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161223181602884016020880161239c565b01602801949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60208152600082518060208401526122ad81604085016020870161239c565b601f01601f19169190910160400192915050565b60208082526026908201527f506f6f6c3a206c6f636b6564416d6f756e7420697320616c726561647920756e6040820152651b1bd8dad95960d21b606082015260800190565b602080825260199082015278141bdbdb0e88105b5bdd5b9d081a5cc81d1bdbc81cdb585b1b603a1b604082015260600190565b6000821982111561234d5761234d61242e565b500190565b60008261236157612361612444565b500490565b60008160001904831182151516156123805761238061242e565b500290565b6000828210156123975761239761242e565b500390565b60005b838110156123b757818101518382015260200161239f565b838111156108975750506000910152565b6000816123d7576123d761242e565b506000190190565b600181811c908216806123f357607f821691505b6020821081141561241457634e487b7160e01b600052602260045260246000fd5b50919050565b60008261242957612429612444565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfe9f78baa7a8e3640efadcbedc2d00f5930ade7a7bb66038dbf88684d49972957a770fadb28e0e3026382976ee8b810cb0eb8666922148dd9e10b20cfb9b477ba802b0c433c31e2b44fbbb341ca2a1a7c86f98b5158b42b073f63efe02d35ea89fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212206af79ca88d1e2b6f561b2fb4ec2050eb7e5656d148a837a2bee800231b5260ce64736f6c63430008040033",
  "bytecodeSha1": "e999b413f75240ddbf6d2c62dca46b98f82d8bb4",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 1
    },
    "version": "0.8.4+commit.c7e474f2"
  },
  "contractName": "BufferBinaryIBFRPoolBinary",
  "coverageMap": {
    "branches": {
      "0": {
        "AccessControl._checkRole": {
          "133": [
            3332,
            3354,
            false
          ]
        },
        "AccessControl._grantRole": {
          "134": [
            6646,
            6668,
            false
          ]
        },
        "AccessControl._revokeRole": {
          "135": [
            6876,
            6898,
            false
          ]
        },
        "AccessControl.renounceRole": {
          "132": [
            5400,
            5423,
            true
          ]
        }
      },
      "1": {},
      "15": {},
      "18": {},
      "19": {},
      "22": {
        "BufferBinaryIBFRPoolBinary._unlock": {
          "124": [
            8017,
            8026,
            true
          ]
        },
        "BufferBinaryIBFRPoolBinary._withdraw": {
          "125": [
            4489,
            4523,
            true
          ],
          "126": [
            4856,
            4894,
            true
          ],
          "127": [
            5052,
            5078,
            true
          ],
          "128": [
            5126,
            5134,
            true
          ],
          "129": [
            5287,
            5294,
            true
          ]
        },
        "BufferBinaryIBFRPoolBinary.changeLock": {
          "108": [
            7312,
            7321,
            true
          ],
          "109": [
            7372,
            7392,
            false
          ]
        },
        "BufferBinaryIBFRPoolBinary.divCeil": {
          "130": [
            10849,
            10854,
            true
          ],
          "131": [
            10896,
            10906,
            false
          ]
        },
        "BufferBinaryIBFRPoolBinary.lock": {
          "121": [
            6350,
            6390,
            true
          ],
          "122": [
            6435,
            6488,
            true
          ],
          "123": [
            6639,
            6646,
            true
          ]
        },
        "BufferBinaryIBFRPoolBinary.provide": {
          "115": [
            3413,
            3451,
            true
          ],
          "116": [
            3531,
            3541,
            false
          ],
          "117": [
            3545,
            3556,
            false
          ],
          "118": [
            3680,
            3695,
            true
          ],
          "119": [
            3747,
            3755,
            true
          ],
          "120": [
            3935,
            3942,
            true
          ]
        },
        "BufferBinaryIBFRPoolBinary.send": {
          "110": [
            9172,
            9181,
            true
          ],
          "111": [
            9242,
            9258,
            true
          ],
          "112": [
            9430,
            9454,
            true
          ],
          "113": [
            9590,
            9597,
            true
          ],
          "114": [
            9660,
            9694,
            false
          ]
        },
        "BufferBinaryIBFRPoolBinary.shareOf": {
          "107": [
            10065,
            10082,
            false
          ]
        }
      },
      "24": {},
      "4": {
        "ERC20._approve": {
          "138": [
            10093,
            10112,
            true
          ],
          "139": [
            10171,
            10192,
            true
          ]
        },
        "ERC20._burn": {
          "144": [
            9046,
            9067,
            true
          ],
          "145": [
            9237,
            9261,
            true
          ]
        },
        "ERC20._mint": {
          "143": [
            8337,
            8358,
            true
          ]
        },
        "ERC20._transfer": {
          "140": [
            7400,
            7420,
            true
          ],
          "141": [
            7480,
            7503,
            true
          ],
          "142": [
            7671,
            7694,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "137": [
            6574,
            6609,
            true
          ]
        },
        "ERC20.transferFrom": {
          "136": [
            5091,
            5117,
            true
          ]
        }
      },
      "5": {},
      "6": {}
    },
    "statements": {
      "0": {
        "AccessControl._checkRole": {
          "90": [
            3370,
            3719
          ]
        },
        "AccessControl._grantRole": {
          "91": [
            6684,
            6720
          ],
          "92": [
            6734,
            6779
          ]
        },
        "AccessControl._revokeRole": {
          "93": [
            6914,
            6951
          ],
          "94": [
            6965,
            7010
          ]
        },
        "AccessControl.getRoleAdmin": {
          "15": [
            4002,
            4031
          ]
        },
        "AccessControl.grantRole": {
          "17": [
            4401,
            4426
          ]
        },
        "AccessControl.hasRole": {
          "41": [
            2928,
            2964
          ]
        },
        "AccessControl.renounceRole": {
          "19": [
            5392,
            5475
          ],
          "20": [
            5486,
            5512
          ]
        },
        "AccessControl.revokeRole": {
          "51": [
            4781,
            4807
          ]
        },
        "AccessControl.supportsInterface": {
          "2": [
            2646,
            2740
          ]
        }
      },
      "1": {},
      "15": {
        "Context._msgSender": {
          "6": [
            659,
            676
          ]
        }
      },
      "18": {
        "ERC165.supportsInterface": {
          "3": [
            864,
            911
          ]
        }
      },
      "19": {},
      "22": {
        "BufferBinaryIBFRPoolBinary._unlock": {
          "71": [
            8009,
            8069
          ],
          "72": [
            8079,
            8096
          ],
          "73": [
            8107,
            8149
          ],
          "74": [
            8159,
            8198
          ],
          "75": [
            8208,
            8228
          ]
        },
        "BufferBinaryIBFRPoolBinary._withdraw": {
          "83": [
            4468,
            4618
          ],
          "84": [
            4970,
            5033
          ],
          "85": [
            5044,
            5108
          ],
          "86": [
            5118,
            5164
          ],
          "87": [
            5175,
            5195
          ],
          "88": [
            5279,
            5337
          ],
          "89": [
            5347,
            5399
          ]
        },
        "BufferBinaryIBFRPoolBinary.adminWithdraw": {
          "22": [
            5993,
            6022
          ]
        },
        "BufferBinaryIBFRPoolBinary.availableBalance": {
          "50": [
            10396,
            10438
          ]
        },
        "BufferBinaryIBFRPoolBinary.changeLock": {
          "23": [
            7304,
            7358
          ],
          "24": [
            7408,
            7457
          ],
          "25": [
            7477,
            7529
          ],
          "26": [
            7539,
            7593
          ],
          "27": [
            7603,
            7623
          ],
          "28": [
            7633,
            7657
          ]
        },
        "BufferBinaryIBFRPoolBinary.decimals": {
          "18": [
            2032,
            2056
          ]
        },
        "BufferBinaryIBFRPoolBinary.divCeil": {
          "99": [
            10841,
            10855
          ],
          "100": [
            10908,
            10917
          ],
          "101": [
            10927,
            10935
          ]
        },
        "BufferBinaryIBFRPoolBinary.lock": {
          "61": [
            6342,
            6403
          ],
          "62": [
            6414,
            6540
          ],
          "63": [
            6631,
            6689
          ],
          "64": [
            6700,
            6800
          ],
          "65": [
            6810,
            6849
          ],
          "66": [
            6859,
            6901
          ]
        },
        "BufferBinaryIBFRPoolBinary.name": {
          "4": [
            1654,
            1666
          ]
        },
        "BufferBinaryIBFRPoolBinary.provide": {
          "53": [
            3392,
            3516
          ],
          "54": [
            3570,
            3612
          ],
          "55": [
            3627,
            3661
          ],
          "56": [
            3672,
            3729
          ],
          "57": [
            3739,
            3785
          ],
          "58": [
            3927,
            3985
          ],
          "59": [
            3996,
            4019
          ],
          "60": [
            4030,
            4074
          ]
        },
        "BufferBinaryIBFRPoolBinary.send": {
          "33": [
            9164,
            9224
          ],
          "34": [
            9234,
            9259
          ],
          "35": [
            9270,
            9287
          ],
          "36": [
            9297,
            9339
          ],
          "37": [
            9349,
            9388
          ],
          "38": [
            9582,
            9645
          ],
          "39": [
            9708,
            9758
          ],
          "40": [
            9773,
            9821
          ]
        },
        "BufferBinaryIBFRPoolBinary.setMaxLiquidity": {
          "31": [
            2624,
            2652
          ],
          "32": [
            2662,
            2700
          ]
        },
        "BufferBinaryIBFRPoolBinary.setProjectOwner": {
          "43": [
            2269,
            2307
          ],
          "44": [
            2317,
            2339
          ],
          "45": [
            2349,
            2381
          ]
        },
        "BufferBinaryIBFRPoolBinary.shareOf": {
          "9": [
            10096,
            10163
          ],
          "10": [
            10178,
            10187
          ]
        },
        "BufferBinaryIBFRPoolBinary.symbol": {
          "42": [
            1867,
            1881
          ]
        },
        "BufferBinaryIBFRPoolBinary.totalTokenXBalance": {
          "52": [
            10693,
            10747
          ]
        },
        "BufferBinaryIBFRPoolBinary.unlock": {
          "29": [
            8475,
            8499
          ]
        },
        "BufferBinaryIBFRPoolBinary.unlockWithoutProfit": {
          "8": [
            8719,
            8730
          ]
        },
        "BufferBinaryIBFRPoolBinary.withdraw": {
          "16": [
            5610,
            5645
          ]
        }
      },
      "24": {},
      "4": {
        "ERC20._approve": {
          "67": [
            10085,
            10153
          ],
          "68": [
            10163,
            10231
          ],
          "69": [
            10242,
            10278
          ],
          "70": [
            10288,
            10325
          ]
        },
        "ERC20._burn": {
          "102": [
            9038,
            9105
          ],
          "103": [
            9229,
            9300
          ],
          "104": [
            9334,
            9378
          ],
          "105": [
            9398,
            9420
          ],
          "106": [
            9431,
            9473
          ]
        },
        "ERC20._mint": {
          "95": [
            8329,
            8394
          ],
          "96": [
            8465,
            8487
          ],
          "97": [
            8497,
            8525
          ],
          "98": [
            8535,
            8577
          ]
        },
        "ERC20._transfer": {
          "76": [
            7392,
            7462
          ],
          "77": [
            7472,
            7543
          ],
          "78": [
            7663,
            7737
          ],
          "79": [
            7771,
            7813
          ],
          "80": [
            7833,
            7863
          ],
          "81": [
            7874,
            7914
          ],
          "82": [
            7925,
            7971
          ]
        },
        "ERC20.allowance": {
          "1": [
            4002,
            4036
          ]
        },
        "ERC20.approve": {
          "5": [
            4280,
            4319
          ],
          "7": [
            4329,
            4340
          ]
        },
        "ERC20.balanceOf": {
          "30": [
            3429,
            3454
          ]
        },
        "ERC20.decreaseAllowance": {
          "46": [
            6566,
            6651
          ],
          "47": [
            6685,
            6752
          ],
          "48": [
            6773,
            6784
          ]
        },
        "ERC20.increaseAllowance": {
          "21": [
            5791,
            5871
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3252,
            3271
          ]
        },
        "ERC20.transfer": {
          "49": [
            3766,
            3808
          ]
        },
        "ERC20.transferFrom": {
          "11": [
            4966,
            5002
          ],
          "12": [
            5083,
            5162
          ],
          "13": [
            5196,
            5253
          ],
          "14": [
            5274,
            5285
          ]
        }
      },
      "5": {},
      "6": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/AccessControl",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IAccessControl",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20Metadata",
    "ILiquidityPool"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101ee5760003560e01c806301ffc9a7146101f357806306fdde031461021b578063095ea7b3146102305780630dbf21b01461024357806316dc165b1461025857806318160ddd1461027857806321e5e2c41461028a57806323b872dd1461029d578063248a9ca3146102b05780632e1a7d4d146102c35780632f2ff15d146102d6578063313ce567146102e957806336568abe146103035780633950935114610316578063401d4482146103295780634dbac7331461033c57806357a5c967146103455780636198e339146103585780636ab28bc81461036b57806370a082311461037457806370c0345c1461038757806371081c8e14610390578063797be55e146103a357806381b34f15146103ac5780638da5cb5b146103bf57806391d14854146103d257806395d89b41146103e5578063a217fddf146103ed578063a2416f74146103f5578063a4475ce414610408578063a457c2d71461041b578063a9059cbb1461042e578063ab2f0e5114610441578063b9cfe34814610449578063be62da0e14610479578063d547741f1461048e578063d9ac10d9146104a1578063dd62ed3e146104a9578063e8c3c54f146104e2578063ec277a66146104f5578063edd0d4211461050a578063fbcd9b051461033c575b600080fd5b6102066102013660046120fd565b61051d565b60405190151581526020015b60405180910390f35b610223610554565b604051610212919061228e565b61020661023e36600461207a565b6105e6565b6102566102513660046120c3565b6105fc565b005b600e5461026b906001600160a01b031681565b604051610212919061223d565b6002545b604051908152602001610212565b61027c610298366004611ff3565b610609565b6102066102ab36600461203f565b61064c565b61027c6102be3660046120c3565b6106fb565b6102566102d13660046120c3565b610710565b6102566102e43660046120db565b61071a565b6102f161073c565b60405160ff9091168152602001610212565b6102566103113660046120db565b6107be565b61020661032436600461207a565b610838565b61025661033736600461207a565b610874565b61027c6103e881565b610256610353366004612182565b61089d565b6102566103663660046120c3565b610a3a565b61027c60085481565b61027c610382366004611ff3565b610a73565b61027c600a5481565b61025661039e3660046120c3565b610a8e565b61027c60095481565b6102566103ba36600461213d565b610adb565b600c5461026b906001600160a01b031681565b6102066103e03660046120db565b610d2f565b610223610d5a565b61027c600081565b610256610403366004611ff3565b610d69565b600b5461026b906001600160a01b031681565b61020661042936600461207a565b610de4565b61020661043c36600461207a565b610e7d565b61027c610e8a565b61045c61045736600461207a565b610ea1565b604080519384526020840192909252151590820152606001610212565b61027c60008051602061247b83398151915281565b61025661049c3660046120db565b610ee6565b61027c610f03565b61027c6104b736600461200d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61027c6104f0366004612161565b610f88565b61027c60008051602061249b83398151915281565b610256610518366004612182565b6111f1565b60006001600160e01b03198216637965db0b60e01b148061054e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060068054610563906123df565b80601f016020809104026020016040519081016040528092919081815260200182805461058f906123df565b80156105dc5780601f106105b1576101008083540402835291602001916105dc565b820191906000526020600020905b8154815290600101906020018083116105bf57829003601f168201915b5050505050905090565b60006105f3338484611421565b50600192915050565b61060581611545565b5050565b60008061061560025490565b11156106435760025461062783610a73565b61062f610f03565b6106399190612366565b61054e9190612352565b5060005b919050565b6000610659848484611604565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156106e35760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6106f08533858403611421565b506001949350505050565b60009081526005602052604090206001015490565b61060581336117c0565b610723826106fb565b61072d8133611a61565b6107378383611ac5565b505050565b600e546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561078157600080fd5b505afa158015610795573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b991906121ad565b905090565b6001600160a01b038116331461082e5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016106da565b6106058282611b4b565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916105f391859061086f90869061233a565b611421565b60008051602061247b83398151915261088d8133611a61565b61089782846117c0565b50505050565b60008051602061249b8339815191526108b68133611a61565b336000908152600d602052604081208054869081106108e557634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201600281015490915060ff1661094c5760405162461bcd60e51b815260206004820181905260248201527f6c6f636b6564416d6f756e7420697320616c726561647920756e6c6f636b656460448201526064016106da565b82816001015411156109f057600e5460018201546001600160a01b039091169063a9059cbb90339061097f908790612385565b6040518363ffffffff1660e01b815260040161099c929190612275565b602060405180830381600087803b1580156109b657600080fd5b505af11580156109ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ee91906120a3565b505b828160010154600954610a039190612385565b610a0d919061233a565b60095580546008548591610a2091612385565b610a2a919061233a565b6008556001810192909255505550565b6000610a4582611545565b90508160008051602061245b83398151915282604051610a6791815260200190565b60405180910390a25050565b6001600160a01b031660009081526020819052604090205490565b60008051602061247b833981519152610aa78133611a61565b600a82905560405182907f2138d5b63f1e1fc5996475c0d8565b0f4ce68622680c894db2bfd3ece685d25790600090a25050565b60008051602061249b833981519152610af48133611a61565b336000908152600d60205260408120805486908110610b2357634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201600281015490915060ff16610b5a5760405162461bcd60e51b81526004016106da906122c1565b6001600160a01b038416610b6d57600080fd5b60028101805460ff191690556001810154600954610b8b9190612385565b6009558054600854610b9d9190612385565b60085580546000908411610bb15783610bb4565b81545b600e5460405163a9059cbb60e01b81529192506000916001600160a01b039091169063a9059cbb90610bec9089908690600401612275565b602060405180830381600087803b158015610c0657600080fd5b505af1158015610c1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3e91906120a3565b905080610ca15760405162461bcd60e51b815260206004820152602b60248201527f506f6f6c3a20546865205061796f7574207472616e73666572206469646e277460448201526a040cede40e8d0e4deeaced60ab1b60648201526084016106da565b82600101548211610ce2578660008051602061245b833981519152838560010154610ccc9190612385565b60405190815260200160405180910390a2610d26565b867f86f83f021a5ecb92d6dcaec11be9da0e65b5401ce748ac3c1f0ddbae029f55ce846001015484610d149190612385565b60405190815260200160405180910390a25b50505050505050565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b606060078054610563906123df565b6000610d758133611a61565b610d8d60008051602061247b8339815191528361071a565b600b80546001600160a01b0319166001600160a01b0384161790556040517fb36db503700bf425dc3b747b57da91cb2e39a0d909ada3206bd18b034d7053ca90610dd890849061223d565b60405180910390a15050565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610e665760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106da565b610e733385858403611421565b5060019392505050565b60006105f3338484611604565b6000600854610e97610f03565b6107b99190612385565b600d6020528160005260406000208181548110610ebd57600080fd5b600091825260209091206003909102018054600182015460029092015490935090915060ff1683565b610eef826106fb565b610ef98133611a61565b6107378383611b4b565b600954600e546040516370a0823160e01b8152600092916001600160a01b0316906370a0823190610f3890309060040161223d565b60206040518083038186803b158015610f5057600080fd5b505afa158015610f64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e979190612125565b600080610f9460025490565b90506000610fa0610f03565b600a54909150610fb0868361233a565b111561100e5760405162461bcd60e51b815260206004820152602760248201527f506f6f6c2068617320616c726561647920726561636865642069742773206d616044820152661e081b1a5b5a5d60ca1b60648201526084016106da565b60008211801561101e5750600081115b1561103f578061102e8387612366565b6110389190612352565b925061104e565b61104b6103e886612366565b92505b8383101561109e5760405162461bcd60e51b815260206004820152601d60248201527f506f6f6c3a204d696e74206c696d697420697320746f6f206c6172676500000060448201526064016106da565b600083116110be5760405162461bcd60e51b81526004016106da90612307565b600e546040516323b872dd60e01b81526000916001600160a01b0316906323b872dd906110f390339030908b90600401612251565b602060405180830381600087803b15801561110d57600080fd5b505af1158015611121573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114591906120a3565b9050806111a35760405162461bcd60e51b815260206004820152602660248201527f5468652050726f76696465207472616e73666572206469646e277420676f20746044820152650d0e4deeaced60d31b60648201526084016106da565b6111ad3385611bb2565b604080518781526020810186905233917f4089141ea5e4c16575f5ebf65f1786497ea07c175846fc7745ef8d8986a4ff65910160405180910390a250505092915050565b60008051602061249b83398151915261120a8133611a61565b336000908152600d602052604090205484146112535760405162461bcd60e51b815260206004820152600860248201526715dc9bdb99c81a5960c21b60448201526064016106da565b61125b610f03565b83600854611269919061233a565b11156112b45760405162461bcd60e51b815260206004820152601a6024820152792837b7b61d1020b6b7bab73a1034b9903a37b7903630b933b29760311b60448201526064016106da565b600e546040516323b872dd60e01b81526000916001600160a01b0316906323b872dd906112e990339030908890600401612251565b602060405180830381600087803b15801561130357600080fd5b505af1158015611317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133b91906120a3565b9050806113995760405162461bcd60e51b815260206004820152602660248201527f546865205072656d69756d207472616e73666572206469646e277420676f20746044820152650d0e4deeaced60d31b60648201526084016106da565b336000908152600d602090815260408083208151606081018352888152808401888152600193820184815283548086018555938752949095209051600390920201908155925190830155516002909101805460ff191691151591909117905560095461140690849061233a565b60095560085461141790859061233a565b6008555050505050565b6001600160a01b0383166114835760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106da565b6001600160a01b0382166114e45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106da565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600060008051602061249b8339815191526115608133611a61565b336000908152600d6020526040812080548590811061158f57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201600281015490915060ff166115c65760405162461bcd60e51b81526004016106da906122c1565b60028101805460ff1916905560018101546009546115e49190612385565b60095580546008546115f69190612385565b600855600101549392505050565b6001600160a01b0383166116685760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106da565b6001600160a01b0382166116ca5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106da565b6001600160a01b038316600090815260208190526040902054818110156117425760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106da565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061177990849061233a565b92505081905550826001600160a01b0316846001600160a01b03166000805160206124bb833981519152846040516117b391815260200190565b60405180910390a3610897565b60006117ca610e8a565b83111561184d5760405162461bcd60e51b815260206004820152604560248201527f506f6f6c3a204e6f7420656e6f7567682066756e6473206f6e2074686520706f60448201527f6f6c20636f6e74726163742e20506c65617365206c6f7765722074686520616d60648201526437bab73a1760d91b608482015260a4016106da565b600061185860025490565b90506000611864610f03565b90506000828261187387610a73565b61187d9190612366565b6118879190612352565b90506000868210611898578661189a565b815b90506118af6118a98583612366565b84611c7f565b94506118ba86610a73565b8511156119055760405162461bcd60e51b8152602060048201526019602482015278506f6f6c3a20416d6f756e7420697320746f6f206c6172676560381b60448201526064016106da565b600085116119255760405162461bcd60e51b81526004016106da90612307565b61192f8686611cbf565b600e5460405163a9059cbb60e01b81526000916001600160a01b03169063a9059cbb90611962908a908690600401612275565b602060405180830381600087803b15801561197c57600080fd5b505af1158015611990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b491906120a3565b905080611a125760405162461bcd60e51b815260206004820152602660248201527f506f6f6c3a20546865205769746864726177616c206469646e277420676f20746044820152650d0e4deeaced60d31b60648201526084016106da565b60408051838152602081018890526001600160a01b038916917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568910160405180910390a2505050505092915050565b611a6b8282610d2f565b61060557611a83816001600160a01b03166014611dfb565b611a8e836020611dfb565b604051602001611a9f9291906121ce565b60408051601f198184030181529082905262461bcd60e51b82526106da9160040161228e565b611acf8282610d2f565b6106055760008281526005602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611b073390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b611b558282610d2f565b156106055760008281526005602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b038216611c085760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106da565b8060026000828254611c1a919061233a565b90915550506001600160a01b03821660009081526020819052604081208054839290611c4790849061233a565b90915550506040518181526001600160a01b038316906000906000805160206124bb8339815191529060200160405180910390a35050565b6000808211611c8d57600080fd5b6000611c998385612352565b9050611ca5838561241a565b15611cb857611cb581600161233a565b90505b9392505050565b6001600160a01b038216611d1f5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106da565b6001600160a01b03821660009081526020819052604090205481811015611d935760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106da565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611dc2908490612385565b90915550506040518281526000906001600160a01b038516906000805160206124bb8339815191529060200160405180910390a3505050565b60606000611e0a836002612366565b611e1590600261233a565b6001600160401b03811115611e3a57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611e64576020820181803683370190505b509050600360fc1b81600081518110611e8d57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611eca57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611eee846002612366565b611ef990600161233a565b90505b6001811115611f8d576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611f3b57634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110611f5f57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93611f86816123c8565b9050611efc565b508315611cb85760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106da565b80356001600160a01b038116811461064757600080fd5b600060208284031215612004578081fd5b611cb882611fdc565b6000806040838503121561201f578081fd5b61202883611fdc565b915061203660208401611fdc565b90509250929050565b600080600060608486031215612053578081fd5b61205c84611fdc565b925061206a60208501611fdc565b9150604084013590509250925092565b6000806040838503121561208c578182fd5b61209583611fdc565b946020939093013593505050565b6000602082840312156120b4578081fd5b81518015158114611cb8578182fd5b6000602082840312156120d4578081fd5b5035919050565b600080604083850312156120ed578182fd5b8235915061203660208401611fdc565b60006020828403121561210e578081fd5b81356001600160e01b031981168114611cb8578182fd5b600060208284031215612136578081fd5b5051919050565b600080600060608486031215612151578283fd5b8335925061206a60208501611fdc565b60008060408385031215612173578182fd5b50508035926020909101359150565b600080600060608486031215612196578283fd5b505081359360208301359350604090920135919050565b6000602082840312156121be578081fd5b815160ff81168114611cb8578182fd5b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b81526000835161220081601785016020880161239c565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161223181602884016020880161239c565b01602801949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60208152600082518060208401526122ad81604085016020870161239c565b601f01601f19169190910160400192915050565b60208082526026908201527f506f6f6c3a206c6f636b6564416d6f756e7420697320616c726561647920756e6040820152651b1bd8dad95960d21b606082015260800190565b602080825260199082015278141bdbdb0e88105b5bdd5b9d081a5cc81d1bdbc81cdb585b1b603a1b604082015260600190565b6000821982111561234d5761234d61242e565b500190565b60008261236157612361612444565b500490565b60008160001904831182151516156123805761238061242e565b500290565b6000828210156123975761239761242e565b500390565b60005b838110156123b757818101518382015260200161239f565b838111156108975750506000910152565b6000816123d7576123d761242e565b506000190190565b600181811c908216806123f357607f821691505b6020821081141561241457634e487b7160e01b600052602260045260246000fd5b50919050565b60008261242957612429612444565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfe9f78baa7a8e3640efadcbedc2d00f5930ade7a7bb66038dbf88684d49972957a770fadb28e0e3026382976ee8b810cb0eb8666922148dd9e10b20cfb9b477ba802b0c433c31e2b44fbbb341ca2a1a7c86f98b5158b42b073f63efe02d35ea89fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212206af79ca88d1e2b6f561b2fb4ec2050eb7e5656d148a837a2bee800231b5260ce64736f6c63430008040033",
  "deployedSourceMap": "363:10581:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2545:202:0;;;;;;:::i;:::-;;:::i;:::-;;;5803:14:48;;5796:22;5778:41;;5766:2;5751:18;2545:202:0;;;;;;;;1575:98:22;;;:::i;:::-;;;;;;;:::i;4181:166:4:-;;;;;;:::i;:::-;;:::i;8650:87:22:-;;;;;;:::i;:::-;;:::i;:::-;;1038:19;;;;;-1:-1:-1;;;;;1038:19:22;;;;;;;;;;:::i;3172:106:4:-;3259:12;;3172:106;;;5976:25:48;;;5964:2;5949:18;3172:106:4;5931:76:48;9979:215:22;;;;;;:::i;:::-;;:::i;4814:478:4:-;;;;;;:::i;:::-;;:::i;3917:121:0:-;;;;;;:::i;:::-;;:::i;5551:101:22:-;;;;;;:::i;:::-;;:::i;4288:145:0:-;;;;;;:::i;:::-;;:::i;1957:106:22:-;;;:::i;:::-;;;17390:4:48;17378:17;;;17360:36;;17348:2;17333:18;1957:106:22;17315:87:48;5305:214:0;;;;;;:::i;:::-;;:::i;5687:212:4:-;;;;;;:::i;:::-;;:::i;5866:163:22:-;;;;;;:::i;:::-;;:::i;582:42::-;;621:3;582:42;;7078:586;;;;;;:::i;:::-;;:::i;8379:127::-;;;;;;:::i;:::-;;:::i;630:27::-;;;;;;3336:125:4;;;;;;:::i;:::-;;:::i;697:27:22:-;;;;;;2508:199;;;;;;:::i;:::-;;:::i;663:28::-;;;;;;8947:881;;;;;;:::i;:::-;;:::i;763:20::-;;;;;-1:-1:-1;;;;;763:20:22;;;2834:137:0;;;;;;:::i;:::-;;:::i;1786:102:22:-;;;:::i;1952:49:0:-;;1997:4;1952:49;;2159:229:22;;;;;;:::i;:::-;;:::i;730:27::-;;;;;-1:-1:-1;;;;;730:27:22;;;6386:405:4;;;;;;:::i;:::-;;:::i;3664:172::-;;;;;;:::i;:::-;;:::i;10320:125:22:-;;;:::i;789:60::-;;;;;;:::i;:::-;;:::i;:::-;;;;17080:25:48;;;17136:2;17121:18;;17114:34;;;;17191:14;17184:22;17164:18;;;17157:50;17068:2;17053:18;789:60:22;17035:178:48;947:84:22;;-1:-1:-1;;;;;;;;;;;947:84:22;;4667:147:0;;;;;;:::i;:::-;;:::i;10570:184:22:-;;;:::i;3894:149:4:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4009:18:4;;;3983:7;4009:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3894:149;3185:896:22;;;;;;:::i;:::-;;:::i;856:84::-;;-1:-1:-1;;;;;;;;;;;856:84:22;;6190:718;;;;;;:::i;:::-;;:::i;2545:202:0:-;2630:4;-1:-1:-1;;;;;;2653:47:0;;-1:-1:-1;;;2653:47:0;;:87;;-1:-1:-1;;;;;;;;;;871:40:18;;;2704:36:0;2646:94;2545:202;-1:-1:-1;;2545:202:0:o;1575:98:22:-;1629:13;1661:5;1654:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1575:98;:::o;4181:166:4:-;4264:4;4280:39;666:10:15;4303:7:4;4312:6;4280:8;:39::i;:::-;-1:-1:-1;4336:4:4;4181:166;;;;:::o;8650:87:22:-;8719:11;8727:2;8719:7;:11::i;:::-;;8650:87;:::o;9979:215::-;10036:13;10081:1;10065:13;3259:12:4;;;3172:106;10065:13:22;:17;10061:126;;;3259:12:4;;10128:18:22;10138:7;10128:9;:18::i;:::-;10105:20;:18;:20::i;:::-;:41;;;;:::i;:::-;10104:59;;;;:::i;10061:126::-;-1:-1:-1;10186:1:22;10061:126;9979:215;;;:::o;4814:478:4:-;4950:4;4966:36;4976:6;4984:9;4995:6;4966:9;:36::i;:::-;-1:-1:-1;;;;;5040:19:4;;5013:24;5040:19;;;:11;:19;;;;;;;;666:10:15;5040:33:4;;;;;;;;5091:26;;;;5083:79;;;;-1:-1:-1;;;5083:79:4;;12254:2:48;5083:79:4;;;12236:21:48;12293:2;12273:18;;;12266:30;12332:34;12312:18;;;12305:62;-1:-1:-1;;;12383:18:48;;;12376:38;12431:19;;5083:79:4;;;;;;;;;5196:57;5205:6;666:10:15;5246:6:4;5227:16;:25;5196:8;:57::i;:::-;-1:-1:-1;5281:4:4;;4814:478;-1:-1:-1;;;;4814:478:4:o;3917:121:0:-;3983:7;4009:12;;;:6;:12;;;;;:22;;;;3917:121::o;5551:101:22:-;5610:35;5620:12;5634:10;5610:9;:35::i;4288:145:0:-;4371:18;4384:4;4371:12;:18::i;:::-;2430:30;2441:4;666:10:15;2430::0;:30::i;:::-;4401:25:::1;4412:4;4418:7;4401:10;:25::i;:::-;4288:145:::0;;;:::o;1957:106:22:-;2039:6;;:17;;;-1:-1:-1;;;2039:17:22;;;;2015:5;;-1:-1:-1;;;;;2039:6:22;;:15;;:17;;;;;;;;;;;;;;:6;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2032:24;;1957:106;:::o;5305:214:0:-;-1:-1:-1;;;;;5400:23:0;;666:10:15;5400:23:0;5392:83;;;;-1:-1:-1;;;5392:83:0;;15875:2:48;5392:83:0;;;15857:21:48;15914:2;15894:18;;;15887:30;15953:34;15933:18;;;15926:62;-1:-1:-1;;;16004:18:48;;;15997:45;16059:19;;5392:83:0;15847:237:48;5392:83:0;5486:26;5498:4;5504:7;5486:11;:26::i;5687:212:4:-;666:10:15;5775:4:4;5823:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5823:34:4;;;;;;;;;;5775:4;;5791:80;;5814:7;;5823:47;;5860:10;;5823:47;:::i;:::-;5791:8;:80::i;5866:163:22:-;-1:-1:-1;;;;;;;;;;;2430:30:0;1000:31:22;666:10:15;2430::0;:30::i;:::-;5993:29:22::1;6003:12;6017:4;5993:9;:29::i;:::-;;5866:163:::0;;;:::o;7078:586::-;-1:-1:-1;;;;;;;;;;;2430:30:0;909:31:22;666:10:15;2430::0;:30::i;:::-;7279:10:22::1;7234:26;7263:27:::0;;;:15:::1;:27;::::0;;;;:31;;7291:2;;7263:31;::::1;;;-1:-1:-1::0;;;7263:31:22::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;7312:9;::::0;::::1;::::0;7263:31;;-1:-1:-1;7312:9:22::1;;7304:54;;;::::0;-1:-1:-1;;;7304:54:22;;10360:2:48;7304:54:22::1;::::0;::::1;10342:21:48::0;;;10379:18;;;10372:30;10438:34;10418:18;;;10411:62;10490:18;;7304:54:22::1;10332:182:48::0;7304:54:22::1;7385:7;7372:2;:10;;;:20;7368:100;;;7408:6;::::0;;7436:10;::::1;::::0;-1:-1:-1;;;;;7408:6:22;;::::1;::::0;:15:::1;::::0;7424:10:::1;::::0;7436:20:::1;::::0;7449:7;;7436:20:::1;:::i;:::-;7408:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7368:100;7522:7;7509:2;:10;;;7493:13;;:26;;;;:::i;:::-;:36;;;;:::i;:::-;7477:13;:52:::0;7569:9;;7554:12:::1;::::0;7581;;7554:24:::1;::::0;::::1;:::i;:::-;:39;;;;:::i;:::-;7539:12;:54:::0;7603:10:::1;::::0;::::1;:20:::0;;;;-1:-1:-1;7633:24:22;-1:-1:-1;7078:586:22:o;8379:127::-;8435:15;8453:11;8461:2;8453:7;:11::i;:::-;8435:29;;8487:2;-1:-1:-1;;;;;;;;;;;8491:7:22;8480:19;;;;5976:25:48;;5964:2;5949:18;;5931:76;8480:19:22;;;;;;;;8379:127;;:::o;3336:125:4:-;-1:-1:-1;;;;;3436:18:4;3410:7;3436:18;;;;;;;;;;;;3336:125::o;2508:199:22:-;-1:-1:-1;;;;;;;;;;;2430:30:0;1000:31:22;666:10:15;2430::0;:30::i;:::-;2624:12:22::1;:28:::0;;;2667:33:::1;::::0;2639:13;;2667:33:::1;::::0;;;::::1;2508:199:::0;;:::o;8947:881::-;-1:-1:-1;;;;;;;;;;;2430:30:0;909:31:22;666:10:15;2430::0;:30::i;:::-;9139:10:22::1;9094:26;9123:27:::0;;;:15:::1;:27;::::0;;;;:31;;9151:2;;9123:31;::::1;;;-1:-1:-1::0;;;9123:31:22::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;9172:9;::::0;::::1;::::0;9123:31;;-1:-1:-1;9172:9:22::1;;9164:60;;;;-1:-1:-1::0;;;9164:60:22::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9242:16:22;::::1;9234:25;;;::::0;::::1;;9270:9;::::0;::::1;:17:::0;;-1:-1:-1;;9270:17:22::1;::::0;;;9329:10;::::1;::::0;9313:13:::1;::::0;:26:::1;::::0;9329:10;9313:26:::1;:::i;:::-;9297:13;:42:::0;9379:9;;9364:12:::1;::::0;:24:::1;::::0;9379:9;9364:24:::1;:::i;:::-;9349:12;:39:::0;9445:9;;9399:28:::1;::::0;9430:24;::::1;:75;;9493:12;9430:75;;;9469:9:::0;;9430:75:::1;9531:6;::::0;:41:::1;::::0;-1:-1:-1;;;9531:41:22;;9399:106;;-1:-1:-1;9516:12:22::1;::::0;-1:-1:-1;;;;;9531:6:22;;::::1;::::0;:15:::1;::::0;:41:::1;::::0;9547:2;;9399:106;;9531:41:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9516:56;;9590:7;9582:63;;;::::0;-1:-1:-1;;;9582:63:22;;11842:2:48;9582:63:22::1;::::0;::::1;11824:21:48::0;11881:2;11861:18;;;11854:30;11920:34;11900:18;;;11893:62;-1:-1:-1;;;11971:18:48;;;11964:41;12022:19;;9582:63:22::1;11814:233:48::0;9582:63:22::1;9684:2;:10;;;9660:20;:34;9656:165;;9720:2;-1:-1:-1::0;;;;;;;;;;;9737:20:22::1;9724:2;:10;;;:33;;;;:::i;:::-;9713:45;::::0;5976:25:48;;;5964:2;5949:18;9713:45:22::1;;;;;;;9656:165;;;9783:2;9778:43;9810:2;:10;;;9787:20;:33;;;;:::i;:::-;9778:43;::::0;5976:25:48;;;5964:2;5949:18;9778:43:22::1;;;;;;;9656:165;2470:1:0;;;8947:881:22::0;;;;:::o;2834:137:0:-;2912:4;2935:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2935:29:0;;;;;;;;;;;;;;;2834:137::o;1786:102:22:-;1842:13;1874:7;1867:14;;;;;:::i;2159:229::-;1997:4:0;2430:30;1997:4;666:10:15;2430::0;:30::i;:::-;2269:38:22::1;-1:-1:-1::0;;;;;;;;;;;2299:7:22::1;2269:9;:38::i;:::-;2317:12;:22:::0;;-1:-1:-1;;;;;;2317:22:22::1;-1:-1:-1::0;;;;;2317:22:22;::::1;;::::0;;2354:27:::1;::::0;::::1;::::0;::::1;::::0;2317:22;;2354:27:::1;:::i;:::-;;;;;;;;2159:229:::0;;:::o;6386:405:4:-;666:10:15;6479:4:4;6522:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6522:34:4;;;;;;;;;;6574:35;;;;6566:85;;;;-1:-1:-1;;;6566:85:4;;15469:2:48;6566:85:4;;;15451:21:48;15508:2;15488:18;;;15481:30;15547:34;15527:18;;;15520:62;-1:-1:-1;;;15598:18:48;;;15591:35;15643:19;;6566:85:4;15441:227:48;6566:85:4;6685:67;666:10:15;6708:7:4;6736:15;6717:16;:34;6685:8;:67::i;:::-;-1:-1:-1;6780:4:4;;6386:405;-1:-1:-1;;;6386:405:4:o;3664:172::-;3750:4;3766:42;666:10:15;3790:9:4;3801:6;3766:9;:42::i;10320:125:22:-;10369:15;10426:12;;10403:20;:18;:20::i;:::-;:35;;;;:::i;789:60::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;789:60:22;;-1:-1:-1;789:60:22;;;:::o;4667:147:0:-;4751:18;4764:4;4751:12;:18::i;:::-;2430:30;2441:4;666:10:15;2430::0;:30::i;:::-;4781:26:::1;4793:4;4799:7;4781:11;:26::i;10570:184:22:-:0;10734:13;;10700:6;;:31;;-1:-1:-1;;;10700:31:22;;10662:15;;10734:13;-1:-1:-1;;;;;10700:6:22;;:16;;:31;;10725:4;;10700:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3185:896::-;3275:12;3303:14;3320:13;3259:12:4;;;3172:106;3320:13:22;3303:30;;3343:15;3361:20;:18;:20::i;:::-;3439:12;;3343:38;;-1:-1:-1;3413:22:22;3423:12;3343:38;3413:22;:::i;:::-;:38;;3392:124;;;;-1:-1:-1;;;3392:124:22;;11434:2:48;3392:124:22;;;11416:21:48;11473:2;11453:18;;;11446:30;11512:34;11492:18;;;11485:62;-1:-1:-1;;;11563:18:48;;;11556:37;11610:19;;3392:124:22;11406:229:48;3392:124:22;3540:1;3531:6;:10;:25;;;;;3555:1;3545:7;:11;3531:25;3527:134;;;3604:7;3578:21;3593:6;3578:12;:21;:::i;:::-;3577:35;;;;:::i;:::-;3570:42;;3527:134;;;3634:27;621:3;3634:12;:27;:::i;:::-;3627:34;;3527:134;3688:7;3680:4;:15;;3672:57;;;;-1:-1:-1;;;3672:57:22;;11076:2:48;3672:57:22;;;11058:21:48;11115:2;11095:18;;;11088:30;11154:31;11134:18;;;11127:59;11203:18;;3672:57:22;11048:179:48;3672:57:22;3754:1;3747:4;:8;3739:46;;;;-1:-1:-1;;;3739:46:22;;;;;;;:::i;:::-;3811:6;;:106;;-1:-1:-1;;;3811:106:22;;3796:12;;-1:-1:-1;;;;;3811:6:22;;:19;;:106;;3844:10;;3876:4;;3895:12;;3811:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3796:121;;3935:7;3927:58;;;;-1:-1:-1;;;3927:58:22;;9953:2:48;3927:58:22;;;9935:21:48;9992:2;9972:18;;;9965:30;10031:34;10011:18;;;10004:62;-1:-1:-1;;;10082:18:48;;;10075:36;10128:19;;3927:58:22;9925:228:48;3927:58:22;3996:23;4002:10;4014:4;3996:5;:23::i;:::-;4035:39;;;16805:25:48;;;16861:2;16846:18;;16839:34;;;4043:10:22;;4035:39;;16778:18:48;4035:39:22;;;;;;;3185:896;;;;;;;:::o;6190:718::-;-1:-1:-1;;;;;;;;;;;2430:30:0;909:31:22;666:10:15;2430::0;:30::i;:::-;6372:10:22::1;6356:27;::::0;;;:15:::1;:27;::::0;;;;:34;6350:40;::::1;6342:61;;;::::0;-1:-1:-1;;;6342:61:22;;9210:2:48;6342:61:22::1;::::0;::::1;9192:21:48::0;9249:1;9229:18;;;9222:29;-1:-1:-1;;;9267:18:48;;;9260:38;9315:18;;6342:61:22::1;9182:157:48::0;6342:61:22::1;6468:20;:18;:20::i;:::-;6451:12;6436;;:27;;;;:::i;:::-;6435:53;;6414:126;;;::::0;-1:-1:-1;;;6414:126:22;;10721:2:48;6414:126:22::1;::::0;::::1;10703:21:48::0;10760:2;10740:18;;;10733:30;-1:-1:-1;;;10779:18:48;;;10772:56;10845:18;;6414:126:22::1;10693:176:48::0;6414:126:22::1;6566:6;::::0;:55:::1;::::0;-1:-1:-1;;;6566:55:22;;6551:12:::1;::::0;-1:-1:-1;;;;;6566:6:22::1;::::0;:19:::1;::::0;:55:::1;::::0;6586:10:::1;::::0;6606:4:::1;::::0;6613:7;;6566:55:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6551:70;;6639:7;6631:58;;;::::0;-1:-1:-1;;;6631:58:22;;14708:2:48;6631:58:22::1;::::0;::::1;14690:21:48::0;14747:2;14727:18;;;14720:30;14786:34;14766:18;;;14759:62;-1:-1:-1;;;14837:18:48;;;14830:36;14883:19;;6631:58:22::1;14680:228:48::0;6631:58:22::1;6716:10;6700:27;::::0;;;:15:::1;:27;::::0;;;;;;;6746:44;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;6785:4:::1;6746:44:::0;;;;;;6700:100;;;;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;;::::0;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;6700:100:22::1;::::0;::::1;;::::0;;;::::1;::::0;;6826:13:::1;::::0;:23:::1;::::0;6746:44;;6826:23:::1;:::i;:::-;6810:13;:39:::0;6874:12:::1;::::0;:27:::1;::::0;6889:12;;6874:27:::1;:::i;:::-;6859:12;:42:::0;-1:-1:-1;;;;;6190:718:22:o;9962:370:4:-;-1:-1:-1;;;;;10093:19:4;;10085:68;;;;-1:-1:-1;;;10085:68:4;;13949:2:48;10085:68:4;;;13931:21:48;13988:2;13968:18;;;13961:30;14027:34;14007:18;;;14000:62;-1:-1:-1;;;14078:18:48;;;14071:34;14122:19;;10085:68:4;13921:226:48;10085:68:4;-1:-1:-1;;;;;10171:21:4;;10163:68;;;;-1:-1:-1;;;10163:68:4;;8400:2:48;10163:68:4;;;8382:21:48;8439:2;8419:18;;;8412:30;8478:34;8458:18;;;8451:62;-1:-1:-1;;;8529:18:48;;;8522:32;8571:19;;10163:68:4;8372:224:48;10163:68:4;-1:-1:-1;;;;;10242:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10293:32;;5976:25:48;;;10293:32:4;;5949:18:48;10293:32:4;;;;;;;9962:370;;;:::o;7808:427:22:-;7908:15;-1:-1:-1;;;;;;;;;;;2430:30:0;909:31:22;666:10:15;2430::0;:30::i;:::-;7984:10:22::1;7939:26;7968:27:::0;;;:15:::1;:27;::::0;;;;:31;;7996:2;;7968:31;::::1;;;-1:-1:-1::0;;;7968:31:22::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;8017:9;::::0;::::1;::::0;7968:31;;-1:-1:-1;8017:9:22::1;;8009:60;;;;-1:-1:-1::0;;;8009:60:22::1;;;;;;;:::i;:::-;8079:9;::::0;::::1;:17:::0;;-1:-1:-1;;8079:17:22::1;::::0;;;8139:10;::::1;::::0;8123:13:::1;::::0;:26:::1;::::0;8139:10;8123:26:::1;:::i;:::-;8107:13;:42:::0;8189:9;;8174:12:::1;::::0;:24:::1;::::0;8189:9;8174:24:::1;:::i;:::-;8159:12;:39:::0;8218:10:::1;;::::0;;7808:427;-1:-1:-1;;;7808:427:22:o;7265:713:4:-;-1:-1:-1;;;;;7400:20:4;;7392:70;;;;-1:-1:-1;;;7392:70:4;;13543:2:48;7392:70:4;;;13525:21:48;13582:2;13562:18;;;13555:30;13621:34;13601:18;;;13594:62;-1:-1:-1;;;13672:18:48;;;13665:35;13717:19;;7392:70:4;13515:227:48;7392:70:4;-1:-1:-1;;;;;7480:23:4;;7472:71;;;;-1:-1:-1;;;7472:71:4;;7186:2:48;7472:71:4;;;7168:21:48;7225:2;7205:18;;;7198:30;7264:34;7244:18;;;7237:62;-1:-1:-1;;;7315:18:48;;;7308:33;7358:19;;7472:71:4;7158:225:48;7472:71:4;-1:-1:-1;;;;;7636:17:4;;7612:21;7636:17;;;;;;;;;;;7671:23;;;;7663:74;;;;-1:-1:-1;;;7663:74:4;;9546:2:48;7663:74:4;;;9528:21:48;9585:2;9565:18;;;9558:30;9624:34;9604:18;;;9597:62;-1:-1:-1;;;9675:18:48;;;9668:36;9721:19;;7663:74:4;9518:228:48;7663:74:4;-1:-1:-1;;;;;7771:17:4;;;:9;:17;;;;;;;;;;;7791:22;;;7771:42;;7833:20;;;;;;;;:30;;7807:6;;7771:9;7833:30;;7807:6;;7833:30;:::i;:::-;;;;;;;;7896:9;-1:-1:-1;;;;;7879:35:4;7888:6;-1:-1:-1;;;;;7879:35:4;-1:-1:-1;;;;;;;;;;;7907:6:4;7879:35;;;;5976:25:48;;5964:2;5949:18;;5931:76;7879:35:4;;;;;;;;7925:46;4288:145:0;4348:1058:22;4440:12;4505:18;:16;:18::i;:::-;4489:12;:34;;4468:150;;;;-1:-1:-1;;;4468:150:22;;13065:2:48;4468:150:22;;;13047:21:48;13104:2;13084:18;;;13077:30;13143:34;13123:18;;;13116:62;13214:34;13194:18;;;13187:62;-1:-1:-1;;;13265:19:48;;;13258:36;13311:19;;4468:150:22;13037:299:48;4468:150:22;4628:19;4650:13;3259:12:4;;;3172:106;4650:13:22;4628:35;;4673:15;4691:20;:18;:20::i;:::-;4673:38;;4722:31;4801:11;4778:7;4757:18;4767:7;4757:9;:18::i;:::-;:28;;;;:::i;:::-;4756:56;;;;:::i;:::-;4722:90;;4823:30;4882:12;4856:23;:38;:103;;4947:12;4856:103;;;4909:23;4856:103;4823:136;-1:-1:-1;4977:56:22;4986:36;5011:11;4823:136;4986:36;:::i;:::-;5025:7;4977;:56::i;:::-;4970:63;;5060:18;5070:7;5060:9;:18::i;:::-;5052:4;:26;;5044:64;;;;-1:-1:-1;;;5044:64:22;;15115:2:48;5044:64:22;;;15097:21:48;15154:2;15134:18;;;15127:30;-1:-1:-1;;;15173:18:48;;;15166:55;15238:18;;5044:64:22;15087:175:48;5044:64:22;5133:1;5126:4;:8;5118:46;;;;-1:-1:-1;;;5118:46:22;;;;;;;:::i;:::-;5175:20;5181:7;5190:4;5175:5;:20::i;:::-;5221:6;;:48;;-1:-1:-1;;;5221:48:22;;5206:12;;-1:-1:-1;;;;;5221:6:22;;:15;;:48;;5237:7;;5246:22;;5221:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5206:63;;5287:7;5279:58;;;;-1:-1:-1;;;5279:58:22;;8803:2:48;5279:58:22;;;8785:21:48;8842:2;8822:18;;;8815:30;8881:34;8861:18;;;8854:62;-1:-1:-1;;;8932:18:48;;;8925:36;8978:19;;5279:58:22;8775:228:48;5279:58:22;5352:47;;;16805:25:48;;;16861:2;16846:18;;16839:34;;;-1:-1:-1;;;;;5352:47:22;;;;;16778:18:48;5352:47:22;;;;;;;4348:1058;;;;;;;;;:::o;3252:484:0:-;3332:22;3340:4;3346:7;3332;:22::i;:::-;3327:403;;3515:41;3543:7;-1:-1:-1;;;;;3515:41:0;3553:2;3515:19;:41::i;:::-;3627:38;3655:4;3662:2;3627:19;:38::i;:::-;3422:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3422:265:0;;;;;;;;;;-1:-1:-1;;;3370:349:0;;;;;;;:::i;6572:224::-;6646:22;6654:4;6660:7;6646;:22::i;:::-;6641:149;;6684:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6684:29:0;;;;;;;;;:36;;-1:-1:-1;;6684:36:0;6716:4;6684:36;;;6766:12;666:10:15;;587:96;6766:12:0;-1:-1:-1;;;;;6739:40:0;6757:7;-1:-1:-1;;;;;6739:40:0;6751:4;6739:40;;;;;;;;;;6572:224;;:::o;6802:225::-;6876:22;6884:4;6890:7;6876;:22::i;:::-;6872:149;;;6946:5;6914:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6914:29:0;;;;;;;;;;:37;;-1:-1:-1;;6914:37:0;;;6970:40;666:10:15;;6914:12:0;;6970:40;;6946:5;6970:40;6802:225;;:::o;8254:389:4:-;-1:-1:-1;;;;;8337:21:4;;8329:65;;;;-1:-1:-1;;;8329:65:4;;16291:2:48;8329:65:4;;;16273:21:48;16330:2;16310:18;;;16303:30;16369:33;16349:18;;;16342:61;16420:18;;8329:65:4;16263:181:48;8329:65:4;8481:6;8465:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8497:18:4;;:9;:18;;;;;;;;;;:28;;8519:6;;8497:9;:28;;8519:6;;8497:28;:::i;:::-;;;;-1:-1:-1;;8540:37:4;;5976:25:48;;;-1:-1:-1;;;;;8540:37:4;;;8557:1;;-1:-1:-1;;;;;;;;;;;8540:37:4;5964:2:48;5949:18;8540:37:4;;;;;;;8719:11:22;8650:87;:::o;10760:182::-;10822:7;10853:1;10849;:5;10841:14;;;;;;10865:9;10877:5;10881:1;10877;:5;:::i;:::-;10865:17;-1:-1:-1;10896:5:22;10900:1;10896;:5;:::i;:::-;:10;10892:25;;10912:5;:1;10916;10912:5;:::i;:::-;10908:9;;10892:25;10934:1;10760:182;-1:-1:-1;;;10760:182:22:o;8963:576:4:-;-1:-1:-1;;;;;9046:21:4;;9038:67;;;;-1:-1:-1;;;9038:67:4;;12663:2:48;9038:67:4;;;12645:21:48;12702:2;12682:18;;;12675:30;12741:34;12721:18;;;12714:62;-1:-1:-1;;;12792:18:48;;;12785:31;12833:19;;9038:67:4;12635:223:48;9038:67:4;-1:-1:-1;;;;;9201:18:4;;9176:22;9201:18;;;;;;;;;;;9237:24;;;;9229:71;;;;-1:-1:-1;;;9229:71:4;;7590:2:48;9229:71:4;;;7572:21:48;7629:2;7609:18;;;7602:30;7668:34;7648:18;;;7641:62;-1:-1:-1;;;7719:18:48;;;7712:32;7761:19;;9229:71:4;7562:224:48;9229:71:4;-1:-1:-1;;;;;9334:18:4;;:9;:18;;;;;;;;;;9355:23;;;9334:44;;9398:12;:22;;9372:6;;9334:9;9398:22;;9372:6;;9398:22;:::i;:::-;;;;-1:-1:-1;;9436:37:4;;5976:25:48;;;9462:1:4;;-1:-1:-1;;;;;9436:37:4;;;-1:-1:-1;;;;;;;;;;;9436:37:4;5964:2:48;5949:18;9436:37:4;;;;;;;4288:145:0;;;:::o;1535:441:17:-;1610:13;1635:19;1667:10;1671:6;1667:1;:10;:::i;:::-;:14;;1680:1;1667:14;:::i;:::-;-1:-1:-1;;;;;1657:25:17;;;;;-1:-1:-1;;;1657:25:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1657:25:17;;1635:47;;-1:-1:-1;;;1692:6:17;1699:1;1692:9;;;;;;-1:-1:-1;;;1692:9:17;;;;;;;;;;;;:15;-1:-1:-1;;;;;1692:15:17;;;;;;;;;-1:-1:-1;;;1717:6:17;1724:1;1717:9;;;;;;-1:-1:-1;;;1717:9:17;;;;;;;;;;;;:15;-1:-1:-1;;;;;1717:15:17;;;;;;;;-1:-1:-1;1747:9:17;1759:10;1763:6;1759:1;:10;:::i;:::-;:14;;1772:1;1759:14;:::i;:::-;1747:26;;1742:132;1779:1;1775;:5;1742:132;;;-1:-1:-1;;;1826:5:17;1834:3;1826:11;1813:25;;;;;-1:-1:-1;;;1813:25:17;;;;;;;;;;;;1801:6;1808:1;1801:9;;;;;;-1:-1:-1;;;1801:9:17;;;;;;;;;;;;:37;-1:-1:-1;;;;;1801:37:17;;;;;;;;-1:-1:-1;1862:1:17;1852:11;;;;;1782:3;;;:::i;:::-;;;1742:132;;;-1:-1:-1;1891:10:17;;1883:55;;;;-1:-1:-1;;;1883:55:17;;6825:2:48;1883:55:17;;;6807:21:48;;;6844:18;;;6837:30;6903:34;6883:18;;;6876:62;6955:18;;1883:55:17;6797:182:48;14:173;82:20;;-1:-1:-1;;;;;131:31:48;;121:42;;111:2;;177:1;174;167:12;192:196;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:270::-;461:6;469;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;745:6;753;761;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;1079:6;1087;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:48:o;1280:297::-;1347:6;1400:2;1388:9;1379:7;1375:23;1371:32;1368:2;;;1421:6;1413;1406:22;1368:2;1458:9;1452:16;1511:5;1504:13;1497:21;1490:5;1487:32;1477:2;;1538:6;1530;1523:22;1582:190;1641:6;1694:2;1682:9;1673:7;1669:23;1665:32;1662:2;;;1715:6;1707;1700:22;1662:2;-1:-1:-1;1743:23:48;;1652:120;-1:-1:-1;1652:120:48:o;1777:264::-;1845:6;1853;1906:2;1894:9;1885:7;1881:23;1877:32;1874:2;;;1927:6;1919;1912:22;1874:2;1968:9;1955:23;1945:33;;1997:38;2031:2;2020:9;2016:18;1997:38;:::i;2046:306::-;2104:6;2157:2;2145:9;2136:7;2132:23;2128:32;2125:2;;;2178:6;2170;2163:22;2125:2;2209:23;;-1:-1:-1;;;;;;2261:32:48;;2251:43;;2241:2;;2313:6;2305;2298:22;2552:194;2622:6;2675:2;2663:9;2654:7;2650:23;2646:32;2643:2;;;2696:6;2688;2681:22;2643:2;-1:-1:-1;2724:16:48;;2633:113;-1:-1:-1;2633:113:48:o;2751:332::-;2828:6;2836;2844;2897:2;2885:9;2876:7;2872:23;2868:32;2865:2;;;2918:6;2910;2903:22;2865:2;2959:9;2946:23;2936:33;;2988:38;3022:2;3011:9;3007:18;2988:38;:::i;3088:258::-;3156:6;3164;3217:2;3205:9;3196:7;3192:23;3188:32;3185:2;;;3238:6;3230;3223:22;3185:2;-1:-1:-1;;3266:23:48;;;3336:2;3321:18;;;3308:32;;-1:-1:-1;3175:171:48:o;3351:326::-;3428:6;3436;3444;3497:2;3485:9;3476:7;3472:23;3468:32;3465:2;;;3518:6;3510;3503:22;3465:2;-1:-1:-1;;3546:23:48;;;3616:2;3601:18;;3588:32;;-1:-1:-1;3667:2:48;3652:18;;;3639:32;;3455:222;-1:-1:-1;3455:222:48:o;3682:293::-;3750:6;3803:2;3791:9;3782:7;3778:23;3774:32;3771:2;;;3824:6;3816;3809:22;3771:2;3861:9;3855:16;3911:4;3904:5;3900:16;3893:5;3890:27;3880:2;;3936:6;3928;3921:22;3980:786;-1:-1:-1;;;4386:3:48;4379:38;4361:3;4446:6;4440:13;4462:62;4517:6;4512:2;4507:3;4503:12;4496:4;4488:6;4484:17;4462:62;:::i;:::-;-1:-1:-1;;;4583:2:48;4543:16;;;4575:11;;;4568:40;4633:13;;4655:63;4633:13;4704:2;4696:11;;4689:4;4677:17;;4655:63;:::i;:::-;4738:17;4757:2;4734:26;;4369:397;-1:-1:-1;;;;4369:397:48:o;4771:203::-;-1:-1:-1;;;;;4935:32:48;;;;4917:51;;4905:2;4890:18;;4872:102::o;4979:375::-;-1:-1:-1;;;;;5237:15:48;;;5219:34;;5289:15;;;;5284:2;5269:18;;5262:43;5336:2;5321:18;;5314:34;;;;5169:2;5154:18;;5136:218::o;5359:274::-;-1:-1:-1;;;;;5551:32:48;;;;5533:51;;5615:2;5600:18;;5593:34;5521:2;5506:18;;5488:145::o;6235:383::-;6384:2;6373:9;6366:21;6347:4;6416:6;6410:13;6459:6;6454:2;6443:9;6439:18;6432:34;6475:66;6534:6;6529:2;6518:9;6514:18;6509:2;6501:6;6497:15;6475:66;:::i;:::-;6602:2;6581:15;-1:-1:-1;;6577:29:48;6562:45;;;;6609:2;6558:54;;6356:262;-1:-1:-1;;6356:262:48:o;7791:402::-;7993:2;7975:21;;;8032:2;8012:18;;;8005:30;8071:34;8066:2;8051:18;;8044:62;-1:-1:-1;;;8137:2:48;8122:18;;8115:36;8183:3;8168:19;;7965:228::o;14152:349::-;14354:2;14336:21;;;14393:2;14373:18;;;14366:30;-1:-1:-1;;;14427:2:48;14412:18;;14405:55;14492:2;14477:18;;14326:175::o;17407:128::-;17447:3;17478:1;17474:6;17471:1;17468:13;17465:2;;;17484:18;;:::i;:::-;-1:-1:-1;17520:9:48;;17455:80::o;17540:120::-;17580:1;17606;17596:2;;17611:18;;:::i;:::-;-1:-1:-1;17645:9:48;;17586:74::o;17665:168::-;17705:7;17771:1;17767;17763:6;17759:14;17756:1;17753:21;17748:1;17741:9;17734:17;17730:45;17727:2;;;17778:18;;:::i;:::-;-1:-1:-1;17818:9:48;;17717:116::o;17838:125::-;17878:4;17906:1;17903;17900:8;17897:2;;;17911:18;;:::i;:::-;-1:-1:-1;17948:9:48;;17887:76::o;17968:258::-;18040:1;18050:113;18064:6;18061:1;18058:13;18050:113;;;18140:11;;;18134:18;18121:11;;;18114:39;18086:2;18079:10;18050:113;;;18181:6;18178:1;18175:13;18172:2;;;-1:-1:-1;;18216:1:48;18198:16;;18191:27;18021:205::o;18231:136::-;18270:3;18298:5;18288:2;;18307:18;;:::i;:::-;-1:-1:-1;;;18343:18:48;;18278:89::o;18372:380::-;18451:1;18447:12;;;;18494;;;18515:2;;18569:4;18561:6;18557:17;18547:27;;18515:2;18622;18614:6;18611:14;18591:18;18588:38;18585:2;;;18668:10;18663:3;18659:20;18656:1;18649:31;18703:4;18700:1;18693:15;18731:4;18728:1;18721:15;18585:2;;18427:325;;;:::o;18757:112::-;18789:1;18815;18805:2;;18820:18;;:::i;:::-;-1:-1:-1;18854:9:48;;18795:74::o;18874:127::-;18935:10;18930:3;18926:20;18923:1;18916:31;18966:4;18963:1;18956:15;18990:4;18987:1;18980:15;19006:127;19067:10;19062:3;19058:20;19055:1;19048:31;19098:4;19095:1;19088:15;19122:4;19119:1;19112:15",
  "language": "Solidity",
  "natspec": {
    "author": "Heisenberg",
    "kind": "dev",
    "methods": {
      "adminWithdraw(address,uint256)": {
        "notice": "allows admin to send back the funds of the depositer",
        "params": {
          "tokenXAmount": "Amount of X to receive",
          "user": "User address for which the withdrawal has to be made"
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "availableBalance()": {
        "notice": "Returns the amount of X available for withdrawals",
        "returns": {
          "balance": "Unlocked amount"
        }
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "changeLock(uint256,uint256,uint256)": {
        "notice": "Called by BufferCallOptions to change the locked funds",
        "params": {
          "tokenXAmount": "Amount of funds that should be locked in an option"
        }
      },
      "decimals()": {
        "details": "Returns the decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "lock(uint256,uint256,uint256)": {
        "notice": "Called by BufferCallOptions to lock the funds",
        "params": {
          "tokenXAmount": "Amount of funds that should be locked in an option"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "provide(uint256,uint256)": {
        "notice": "A provider supplies tokenX to the pool and receives rBFR-X tokens",
        "params": {
          "minMint": "Minimum amount of tokens that should be received by a provider. Calling the provide function will require the minimum amount of tokens to be minted. The actual amount that will be minted could vary but can only be higher (not lower) than the minimum value."
        },
        "returns": {
          "mint": "Amount of tokens to be received"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "send(uint256,address,uint256)": {
        "notice": "Called by BufferCallOptions to send funds to liquidity providers after an option's expiration",
        "params": {
          "to": "Provider",
          "tokenXAmount": "Funds that should be sent"
        }
      },
      "setMaxLiquidity(uint256)": {
        "notice": "Used for adjusting the max limit of the pool",
        "params": {
          "_maxLiquidity": "New limit"
        }
      },
      "setProjectOwner(address)": {
        "notice": "Used for setting owner",
        "params": {
          "account": "owner account"
        }
      },
      "shareOf(address)": {
        "notice": "Returns provider's share in X",
        "params": {
          "account": "Provider's address"
        },
        "returns": {
          "share": "Provider's share in X"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "totalTokenXBalance()": {
        "notice": "Returns the total balance of X provided to the pool",
        "returns": {
          "balance": "Pool balance"
        }
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "unlock(uint256)": {
        "notice": "Called by BufferOptions to unlock the funds",
        "params": {
          "id": "Id of LockedLiquidity that should be unlocked"
        }
      },
      "unlockWithoutProfit(uint256)": {
        "notice": "Called by BufferOptions to unlock the funds",
        "params": {
          "id": "Id of LockedLiquidity that should be unlocked"
        }
      },
      "withdraw(uint256)": {
        "notice": "withdraw burns rBFR-X and receives X from the pool",
        "params": {
          "tokenXAmount": "Amount Amount of X to receive"
        }
      }
    },
    "notice": "Accumulates liquidity in TokenX from LPs and distributes P&L in TokenX",
    "title": "Buffer TokenX Liquidity Pool",
    "version": 1
  },
  "offset": [
    363,
    10944
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0xDBF21B0 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x16DC165B EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x21E5E2C4 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x401D4482 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x4DBAC733 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x57A5C967 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x6198E339 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x6AB28BC8 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x70C0345C EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x71081C8E EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x797BE55E EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x81B34F15 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xA2416F74 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0xA4475CE4 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0xAB2F0E51 EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0xB9CFE348 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xBE62DA0E EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0xD9AC10D9 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0xE8C3C54F EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0xEC277A66 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0xEDD0D421 EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0xFBCD9B05 EQ PUSH2 0x33C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x206 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x20FD JUMP JUMPDEST PUSH2 0x51D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH2 0x554 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH2 0x206 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x207A JUMP JUMPDEST PUSH2 0x5E6 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x20C3 JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST STOP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x26B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x223D JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FF3 JUMP JUMPDEST PUSH2 0x609 JUMP JUMPDEST PUSH2 0x206 PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST PUSH2 0x27C PUSH2 0x2BE CALLDATASIZE PUSH1 0x4 PUSH2 0x20C3 JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x256 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x20C3 JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST PUSH2 0x2F1 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x206 PUSH2 0x324 CALLDATASIZE PUSH1 0x4 PUSH2 0x207A JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0x207A JUMP JUMPDEST PUSH2 0x874 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x2182 JUMP JUMPDEST PUSH2 0x89D JUMP JUMPDEST PUSH2 0x256 PUSH2 0x366 CALLDATASIZE PUSH1 0x4 PUSH2 0x20C3 JUMP JUMPDEST PUSH2 0xA3A JUMP JUMPDEST PUSH2 0x27C PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FF3 JUMP JUMPDEST PUSH2 0xA73 JUMP JUMPDEST PUSH2 0x27C PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0x20C3 JUMP JUMPDEST PUSH2 0xA8E JUMP JUMPDEST PUSH2 0x27C PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x3BA CALLDATASIZE PUSH1 0x4 PUSH2 0x213D JUMP JUMPDEST PUSH2 0xADB JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x26B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x206 PUSH2 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x223 PUSH2 0xD5A JUMP JUMPDEST PUSH2 0x27C PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FF3 JUMP JUMPDEST PUSH2 0xD69 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x26B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x206 PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x207A JUMP JUMPDEST PUSH2 0xDE4 JUMP JUMPDEST PUSH2 0x206 PUSH2 0x43C CALLDATASIZE PUSH1 0x4 PUSH2 0x207A JUMP JUMPDEST PUSH2 0xE7D JUMP JUMPDEST PUSH2 0x27C PUSH2 0xE8A JUMP JUMPDEST PUSH2 0x45C PUSH2 0x457 CALLDATASIZE PUSH1 0x4 PUSH2 0x207A JUMP JUMPDEST PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x27C PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x247B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x49C CALLDATASIZE PUSH1 0x4 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0xEE6 JUMP JUMPDEST PUSH2 0x27C PUSH2 0xF03 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x4B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x200D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x4F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2161 JUMP JUMPDEST PUSH2 0xF88 JUMP JUMPDEST PUSH2 0x27C PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x249B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x518 CALLDATASIZE PUSH1 0x4 PUSH2 0x2182 JUMP JUMPDEST PUSH2 0x11F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x54E JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x563 SWAP1 PUSH2 0x23DF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x58F SWAP1 PUSH2 0x23DF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5DC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5DC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5BF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F3 CALLER DUP5 DUP5 PUSH2 0x1421 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x605 DUP2 PUSH2 0x1545 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x615 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x643 JUMPI PUSH1 0x2 SLOAD PUSH2 0x627 DUP4 PUSH2 0xA73 JUMP JUMPDEST PUSH2 0x62F PUSH2 0xF03 JUMP JUMPDEST PUSH2 0x639 SWAP2 SWAP1 PUSH2 0x2366 JUMP JUMPDEST PUSH2 0x54E SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x659 DUP5 DUP5 DUP5 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x6E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F0 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x1421 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x605 DUP2 CALLER PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x723 DUP3 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x72D DUP2 CALLER PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x737 DUP4 DUP4 PUSH2 0x1AC5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x795 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B9 SWAP2 SWAP1 PUSH2 0x21AD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x82E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x605 DUP3 DUP3 PUSH2 0x1B4B JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x5F3 SWAP2 DUP6 SWAP1 PUSH2 0x86F SWAP1 DUP7 SWAP1 PUSH2 0x233A JUMP JUMPDEST PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x247B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x88D DUP2 CALLER PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x897 DUP3 DUP5 PUSH2 0x17C0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x249B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x8B6 DUP2 CALLER PUSH2 0x1A61 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP1 DUP2 LT PUSH2 0x8E5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x94C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C6F636B6564416D6F756E7420697320616C726561647920756E6C6F636B6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DA JUMP JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x9F0 JUMPI PUSH1 0xE SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 PUSH2 0x97F SWAP1 DUP8 SWAP1 PUSH2 0x2385 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99C SWAP3 SWAP2 SWAP1 PUSH2 0x2275 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9EE SWAP2 SWAP1 PUSH2 0x20A3 JUMP JUMPDEST POP JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0xA03 SWAP2 SWAP1 PUSH2 0x2385 JUMP JUMPDEST PUSH2 0xA0D SWAP2 SWAP1 PUSH2 0x233A JUMP JUMPDEST PUSH1 0x9 SSTORE DUP1 SLOAD PUSH1 0x8 SLOAD DUP6 SWAP2 PUSH2 0xA20 SWAP2 PUSH2 0x2385 JUMP JUMPDEST PUSH2 0xA2A SWAP2 SWAP1 PUSH2 0x233A JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x1 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA45 DUP3 PUSH2 0x1545 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x245B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH1 0x40 MLOAD PUSH2 0xA67 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x247B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xAA7 DUP2 CALLER PUSH2 0x1A61 JUMP JUMPDEST PUSH1 0xA DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0x2138D5B63F1E1FC5996475C0D8565B0F4CE68622680C894DB2BFD3ECE685D257 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x249B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xAF4 DUP2 CALLER PUSH2 0x1A61 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP1 DUP2 LT PUSH2 0xB23 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0xB5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DA SWAP1 PUSH2 0x22C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0x2385 JUMP JUMPDEST PUSH1 0x9 SSTORE DUP1 SLOAD PUSH1 0x8 SLOAD PUSH2 0xB9D SWAP2 SWAP1 PUSH2 0x2385 JUMP JUMPDEST PUSH1 0x8 SSTORE DUP1 SLOAD PUSH1 0x0 SWAP1 DUP5 GT PUSH2 0xBB1 JUMPI DUP4 PUSH2 0xBB4 JUMP JUMPDEST DUP2 SLOAD JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0xBEC SWAP1 DUP10 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2275 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC3E SWAP2 SWAP1 PUSH2 0x20A3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xCA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C3A20546865205061796F7574207472616E73666572206469646E2774 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x40CEDE40E8D0E4DEEACED PUSH1 0xAB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DA JUMP JUMPDEST DUP3 PUSH1 0x1 ADD SLOAD DUP3 GT PUSH2 0xCE2 JUMPI DUP7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x245B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0xCCC SWAP2 SWAP1 PUSH2 0x2385 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xD26 JUMP JUMPDEST DUP7 PUSH32 0x86F83F021A5ECB92D6DCAEC11BE9DA0E65B5401CE748AC3C1F0DDBAE029F55CE DUP5 PUSH1 0x1 ADD SLOAD DUP5 PUSH2 0xD14 SWAP2 SWAP1 PUSH2 0x2385 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x563 SWAP1 PUSH2 0x23DF JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD75 DUP2 CALLER PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0xD8D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x247B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x71A JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xB36DB503700BF425DC3B747B57DA91CB2E39A0D909ADA3206BD18B034D7053CA SWAP1 PUSH2 0xDD8 SWAP1 DUP5 SWAP1 PUSH2 0x223D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xE66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DA JUMP JUMPDEST PUSH2 0xE73 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x1421 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F3 CALLER DUP5 DUP5 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD PUSH2 0xE97 PUSH2 0xF03 JUMP JUMPDEST PUSH2 0x7B9 SWAP2 SWAP1 PUSH2 0x2385 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xEBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP4 POP SWAP1 SWAP2 POP PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH2 0xEEF DUP3 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0xEF9 DUP2 CALLER PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x737 DUP4 DUP4 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xF38 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x223D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE97 SWAP2 SWAP1 PUSH2 0x2125 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF94 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFA0 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 SWAP2 POP PUSH2 0xFB0 DUP7 DUP4 PUSH2 0x233A JUMP JUMPDEST GT ISZERO PUSH2 0x100E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C2068617320616C726561647920726561636865642069742773206D61 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x1E081B1A5B5A5D PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x101E JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x103F JUMPI DUP1 PUSH2 0x102E DUP4 DUP8 PUSH2 0x2366 JUMP JUMPDEST PUSH2 0x1038 SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST SWAP3 POP PUSH2 0x104E JUMP JUMPDEST PUSH2 0x104B PUSH2 0x3E8 DUP7 PUSH2 0x2366 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0x109E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C3A204D696E74206C696D697420697320746F6F206C61726765000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x10BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DA SWAP1 PUSH2 0x2307 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x10F3 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x110D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1121 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1145 SWAP2 SWAP1 PUSH2 0x20A3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x11A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652050726F76696465207472616E73666572206469646E277420676F2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0xD0E4DEEACED PUSH1 0xD3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x11AD CALLER DUP6 PUSH2 0x1BB2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x4089141EA5E4C16575F5EBF65F1786497EA07C175846FC7745EF8D8986A4FF65 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x249B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x120A DUP2 CALLER PUSH2 0x1A61 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 EQ PUSH2 0x1253 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x15DC9BDB99C81A59 PUSH1 0xC2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x125B PUSH2 0xF03 JUMP JUMPDEST DUP4 PUSH1 0x8 SLOAD PUSH2 0x1269 SWAP2 SWAP1 PUSH2 0x233A JUMP JUMPDEST GT ISZERO PUSH2 0x12B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x2837B7B61D1020B6B7BAB73A1034B9903A37B7903630B933B297 PUSH1 0x31 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DA JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x12E9 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1317 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133B SWAP2 SWAP1 PUSH2 0x20A3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1399 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865205072656D69756D207472616E73666572206469646E277420676F2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0xD0E4DEEACED PUSH1 0xD3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP9 DUP2 MSTORE DUP1 DUP5 ADD DUP9 DUP2 MSTORE PUSH1 0x1 SWAP4 DUP3 ADD DUP5 DUP2 MSTORE DUP4 SLOAD DUP1 DUP7 ADD DUP6 SSTORE SWAP4 DUP8 MSTORE SWAP5 SWAP1 SWAP6 KECCAK256 SWAP1 MLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE SWAP3 MLOAD SWAP1 DUP4 ADD SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH2 0x1406 SWAP1 DUP5 SWAP1 PUSH2 0x233A JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x8 SLOAD PUSH2 0x1417 SWAP1 DUP6 SWAP1 PUSH2 0x233A JUMP JUMPDEST PUSH1 0x8 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1483 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x14E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x249B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1560 DUP2 CALLER PUSH2 0x1A61 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP1 DUP2 LT PUSH2 0x158F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x15C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DA SWAP1 PUSH2 0x22C1 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0x15E4 SWAP2 SWAP1 PUSH2 0x2385 JUMP JUMPDEST PUSH1 0x9 SSTORE DUP1 SLOAD PUSH1 0x8 SLOAD PUSH2 0x15F6 SWAP2 SWAP1 PUSH2 0x2385 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x1 ADD SLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1668 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1742 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1779 SWAP1 DUP5 SWAP1 PUSH2 0x233A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24BB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH2 0x17B3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x897 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17CA PUSH2 0xE8A JUMP JUMPDEST DUP4 GT ISZERO PUSH2 0x184D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C3A204E6F7420656E6F7567682066756E6473206F6E2074686520706F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6C20636F6E74726163742E20506C65617365206C6F7765722074686520616D PUSH1 0x64 DUP3 ADD MSTORE PUSH5 0x37BAB73A17 PUSH1 0xD9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1858 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1864 PUSH2 0xF03 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH2 0x1873 DUP8 PUSH2 0xA73 JUMP JUMPDEST PUSH2 0x187D SWAP2 SWAP1 PUSH2 0x2366 JUMP JUMPDEST PUSH2 0x1887 SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP3 LT PUSH2 0x1898 JUMPI DUP7 PUSH2 0x189A JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH2 0x18AF PUSH2 0x18A9 DUP6 DUP4 PUSH2 0x2366 JUMP JUMPDEST DUP5 PUSH2 0x1C7F JUMP JUMPDEST SWAP5 POP PUSH2 0x18BA DUP7 PUSH2 0xA73 JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x1905 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x506F6F6C3A20416D6F756E7420697320746F6F206C61726765 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x0 DUP6 GT PUSH2 0x1925 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DA SWAP1 PUSH2 0x2307 JUMP JUMPDEST PUSH2 0x192F DUP7 DUP7 PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1962 SWAP1 DUP11 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2275 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x197C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1990 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19B4 SWAP2 SWAP1 PUSH2 0x20A3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1A12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C3A20546865205769746864726177616C206469646E277420676F2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0xD0E4DEEACED PUSH1 0xD3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A6B DUP3 DUP3 PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x605 JUMPI PUSH2 0x1A83 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x1DFB JUMP JUMPDEST PUSH2 0x1A8E DUP4 PUSH1 0x20 PUSH2 0x1DFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A9F SWAP3 SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x6DA SWAP2 PUSH1 0x4 ADD PUSH2 0x228E JUMP JUMPDEST PUSH2 0x1ACF DUP3 DUP3 PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x605 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1B07 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1B55 DUP3 DUP3 PUSH2 0xD2F JUMP JUMPDEST ISZERO PUSH2 0x605 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DA JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C1A SWAP2 SWAP1 PUSH2 0x233A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1C47 SWAP1 DUP5 SWAP1 PUSH2 0x233A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24BB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1C8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C99 DUP4 DUP6 PUSH2 0x2352 JUMP JUMPDEST SWAP1 POP PUSH2 0x1CA5 DUP4 DUP6 PUSH2 0x241A JUMP JUMPDEST ISZERO PUSH2 0x1CB8 JUMPI PUSH2 0x1CB5 DUP2 PUSH1 0x1 PUSH2 0x233A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1D1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1D93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1DC2 SWAP1 DUP5 SWAP1 PUSH2 0x2385 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24BB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1E0A DUP4 PUSH1 0x2 PUSH2 0x2366 JUMP JUMPDEST PUSH2 0x1E15 SWAP1 PUSH1 0x2 PUSH2 0x233A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1E3A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1E64 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1E8D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1ECA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1EEE DUP5 PUSH1 0x2 PUSH2 0x2366 JUMP JUMPDEST PUSH2 0x1EF9 SWAP1 PUSH1 0x1 PUSH2 0x233A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1F8D JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1F3B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F5F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1F86 DUP2 PUSH2 0x23C8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EFC JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1CB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DA JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2004 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1CB8 DUP3 PUSH2 0x1FDC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x201F JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2028 DUP4 PUSH2 0x1FDC JUMP JUMPDEST SWAP2 POP PUSH2 0x2036 PUSH1 0x20 DUP5 ADD PUSH2 0x1FDC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2053 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x205C DUP5 PUSH2 0x1FDC JUMP JUMPDEST SWAP3 POP PUSH2 0x206A PUSH1 0x20 DUP6 ADD PUSH2 0x1FDC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x208C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x2095 DUP4 PUSH2 0x1FDC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20B4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1CB8 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D4 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20ED JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2036 PUSH1 0x20 DUP5 ADD PUSH2 0x1FDC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x210E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1CB8 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2136 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2151 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x206A PUSH1 0x20 DUP6 ADD PUSH2 0x1FDC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2173 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2196 JUMPI DUP3 DUP4 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21BE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1CB8 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH23 0x20B1B1B2B9B9A1B7B73A3937B61D1030B1B1B7BAB73A1 PUSH1 0x4D SHL DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x2200 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x239C JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x2231 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x239C JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x22AD DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x239C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x506F6F6C3A206C6F636B6564416D6F756E7420697320616C726561647920756E PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1B1BD8DAD959 PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH25 0x141BDBDB0E88105B5BDD5B9D081A5CC81D1BDBC81CDB585B1B PUSH1 0x3A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x234D JUMPI PUSH2 0x234D PUSH2 0x242E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2361 JUMPI PUSH2 0x2361 PUSH2 0x2444 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2380 JUMPI PUSH2 0x2380 PUSH2 0x242E JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2397 JUMPI PUSH2 0x2397 PUSH2 0x242E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23B7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x239F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x897 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x23D7 JUMPI PUSH2 0x23D7 PUSH2 0x242E JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x23F3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2414 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2429 JUMPI PUSH2 0x2429 PUSH2 0x2444 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID SWAP16 PUSH25 0xBAA7A8E3640EFADCBEDC2D00F5930ADE7A7BB66038DBF88684 0xD4 SWAP10 PUSH19 0x957A770FADB28E0E3026382976EE8B810CB0EB DUP7 PUSH7 0x922148DD9E10B2 0xC 0xFB SWAP12 SELFBALANCE PUSH28 0xA802B0C433C31E2B44FBBB341CA2A1A7C86F98B5158B42B073F63EFE MUL 0xD3 0x5E 0xA8 SWAP16 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xF79CA88D1E2B6F561B2FB4 0xEC KECCAK256 POP 0xEB PUSH31 0x5656D148A837A2BEE800231B5260CE64736F6C634300080400330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        363,
        10944
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "6": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "8": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "12": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "REVERT",
      "path": "22"
    },
    "16": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "17": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "POP",
      "path": "22"
    },
    "18": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "21": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "LT",
      "path": "22"
    },
    "22": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1EE"
    },
    "25": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "26": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "29": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "SHR",
      "path": "22"
    },
    "32": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "33": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x1FFC9A7"
    },
    "38": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "39": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1F3"
    },
    "42": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "43": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "44": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x6FDDE03"
    },
    "49": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "50": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x21B"
    },
    "53": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "54": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "55": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x95EA7B3"
    },
    "60": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "61": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x230"
    },
    "64": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "65": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "66": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xDBF21B0"
    },
    "71": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "72": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x243"
    },
    "75": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "76": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "77": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x16DC165B"
    },
    "82": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "83": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x258"
    },
    "86": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "87": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "88": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x18160DDD"
    },
    "93": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "94": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x278"
    },
    "97": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "98": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "99": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x21E5E2C4"
    },
    "104": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "105": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x28A"
    },
    "108": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "109": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "110": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x23B872DD"
    },
    "115": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "116": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x29D"
    },
    "119": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "120": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "121": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x248A9CA3"
    },
    "126": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "127": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B0"
    },
    "130": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "131": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "132": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x2E1A7D4D"
    },
    "137": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "138": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C3"
    },
    "141": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "142": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "143": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x2F2FF15D"
    },
    "148": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "149": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D6"
    },
    "152": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "153": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "154": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x313CE567"
    },
    "159": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "160": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2E9"
    },
    "163": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "164": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "165": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x36568ABE"
    },
    "170": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "171": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x303"
    },
    "174": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "175": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "176": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x39509351"
    },
    "181": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "182": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x316"
    },
    "185": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "186": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "187": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x401D4482"
    },
    "192": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "193": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x329"
    },
    "196": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "197": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "198": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x4DBAC733"
    },
    "203": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "204": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33C"
    },
    "207": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "208": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "209": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x57A5C967"
    },
    "214": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "215": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x345"
    },
    "218": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "219": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "220": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x6198E339"
    },
    "225": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "226": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x358"
    },
    "229": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "230": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "231": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x6AB28BC8"
    },
    "236": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "237": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x36B"
    },
    "240": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "241": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "242": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70A08231"
    },
    "247": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "248": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x374"
    },
    "251": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "252": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "253": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70C0345C"
    },
    "258": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "259": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x387"
    },
    "262": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "263": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "264": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x71081C8E"
    },
    "269": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "270": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x390"
    },
    "273": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "274": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "275": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x797BE55E"
    },
    "280": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "281": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3A3"
    },
    "284": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "285": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "286": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x81B34F15"
    },
    "291": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "292": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3AC"
    },
    "295": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "296": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "297": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x8DA5CB5B"
    },
    "302": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "303": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3BF"
    },
    "306": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "307": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "308": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x91D14854"
    },
    "313": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "314": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3D2"
    },
    "317": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "318": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "319": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x95D89B41"
    },
    "324": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "325": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3E5"
    },
    "328": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "329": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "330": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA217FDDF"
    },
    "335": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "336": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3ED"
    },
    "339": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "340": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "341": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA2416F74"
    },
    "346": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "347": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3F5"
    },
    "350": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "351": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "352": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA4475CE4"
    },
    "357": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "358": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x408"
    },
    "361": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "362": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "363": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA457C2D7"
    },
    "368": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "369": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x41B"
    },
    "372": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "373": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "374": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA9059CBB"
    },
    "379": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "380": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x42E"
    },
    "383": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "384": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "385": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xAB2F0E51"
    },
    "390": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "391": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x441"
    },
    "394": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "395": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "396": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xB9CFE348"
    },
    "401": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "402": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x449"
    },
    "405": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "406": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "407": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xBE62DA0E"
    },
    "412": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "413": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x479"
    },
    "416": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "417": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "418": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xD547741F"
    },
    "423": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "424": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x48E"
    },
    "427": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "428": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "429": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xD9AC10D9"
    },
    "434": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "435": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4A1"
    },
    "438": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "439": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "440": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xDD62ED3E"
    },
    "445": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "446": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4A9"
    },
    "449": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "450": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "451": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xE8C3C54F"
    },
    "456": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "457": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4E2"
    },
    "460": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "461": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "462": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xEC277A66"
    },
    "467": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "468": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4F5"
    },
    "471": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "472": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "473": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xEDD0D421"
    },
    "478": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "479": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x50A"
    },
    "482": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "483": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "484": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFBCD9B05"
    },
    "489": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "EQ",
      "path": "22"
    },
    "490": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33C"
    },
    "493": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "494": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "495": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "497": {
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "DUP1",
      "path": "22"
    },
    "498": {
      "first_revert": true,
      "fn": null,
      "offset": [
        363,
        10944
      ],
      "op": "REVERT",
      "path": "22"
    },
    "499": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "500": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x206"
    },
    "503": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x201"
    },
    "506": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "507": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "509": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20FD"
    },
    "512": {
      "fn": "AccessControl.supportsInterface",
      "jump": "i",
      "offset": [
        2545,
        2747
      ],
      "op": "JUMP",
      "path": "0"
    },
    "513": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "514": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51D"
    },
    "517": {
      "fn": "AccessControl.supportsInterface",
      "jump": "i",
      "offset": [
        2545,
        2747
      ],
      "op": "JUMP",
      "path": "0"
    },
    "518": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "519": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "521": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "522": {
      "op": "SWAP1"
    },
    "523": {
      "op": "ISZERO"
    },
    "524": {
      "op": "ISZERO"
    },
    "525": {
      "op": "DUP2"
    },
    "526": {
      "op": "MSTORE"
    },
    "527": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "529": {
      "op": "ADD"
    },
    "530": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "531": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "533": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "534": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "DUP1",
      "path": "0"
    },
    "535": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "536": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "SUB",
      "path": "0"
    },
    "537": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "538": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "RETURN",
      "path": "0"
    },
    "539": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1575,
        1673
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "540": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1575,
        1673
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x223"
    },
    "543": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1575,
        1673
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x554"
    },
    "546": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "jump": "i",
      "offset": [
        1575,
        1673
      ],
      "op": "JUMP",
      "path": "22"
    },
    "547": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1575,
        1673
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "548": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1575,
        1673
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "550": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1575,
        1673
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "551": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1575,
        1673
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x212"
    },
    "554": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1575,
        1673
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "555": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1575,
        1673
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "556": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1575,
        1673
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x228E"
    },
    "559": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "jump": "i",
      "offset": [
        1575,
        1673
      ],
      "op": "JUMP",
      "path": "22"
    },
    "560": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "561": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x206"
    },
    "564": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x23E"
    },
    "567": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "568": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "570": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x207A"
    },
    "573": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMP",
      "path": "4"
    },
    "574": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "575": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5E6"
    },
    "578": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMP",
      "path": "4"
    },
    "579": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        8650,
        8737
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "580": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        8650,
        8737
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x256"
    },
    "583": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        8650,
        8737
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x251"
    },
    "586": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        8650,
        8737
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "587": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        8650,
        8737
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "589": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        8650,
        8737
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x20C3"
    },
    "592": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "jump": "i",
      "offset": [
        8650,
        8737
      ],
      "op": "JUMP",
      "path": "22"
    },
    "593": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        8650,
        8737
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "594": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        8650,
        8737
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5FC"
    },
    "597": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "jump": "i",
      "offset": [
        8650,
        8737
      ],
      "op": "JUMP",
      "path": "22"
    },
    "598": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        8650,
        8737
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "599": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        8650,
        8737
      ],
      "op": "STOP",
      "path": "22"
    },
    "600": {
      "offset": [
        1038,
        1057
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "601": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        1038,
        1057
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE"
    },
    "603": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        1038,
        1057
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "604": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        1038,
        1057
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x26B"
    },
    "607": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        1038,
        1057
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "612": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "614": {
      "op": "SHL"
    },
    "615": {
      "op": "SUB"
    },
    "616": {
      "offset": [
        1038,
        1057
      ],
      "op": "AND",
      "path": "22"
    },
    "617": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        1038,
        1057
      ],
      "op": "DUP2",
      "path": "22"
    },
    "618": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        1038,
        1057
      ],
      "op": "JUMP",
      "path": "22"
    },
    "619": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        1038,
        1057
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "620": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        1038,
        1057
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "622": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        1038,
        1057
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "623": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        1038,
        1057
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x212"
    },
    "626": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        1038,
        1057
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "627": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        1038,
        1057
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "628": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        1038,
        1057
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x223D"
    },
    "631": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "jump": "i",
      "offset": [
        1038,
        1057
      ],
      "op": "JUMP",
      "path": "22"
    },
    "632": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "633": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3259,
        3271
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 0,
      "value": "0x2"
    },
    "635": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3259,
        3271
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "636": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "637": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "639": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "640": {
      "op": "SWAP1"
    },
    "641": {
      "op": "DUP2"
    },
    "642": {
      "op": "MSTORE"
    },
    "643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "645": {
      "op": "ADD"
    },
    "646": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x212"
    },
    "649": {
      "op": "JUMP"
    },
    "650": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        9979,
        10194
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "651": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        9979,
        10194
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x27C"
    },
    "654": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        9979,
        10194
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x298"
    },
    "657": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        9979,
        10194
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "658": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        9979,
        10194
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "660": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        9979,
        10194
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1FF3"
    },
    "663": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "jump": "i",
      "offset": [
        9979,
        10194
      ],
      "op": "JUMP",
      "path": "22"
    },
    "664": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        9979,
        10194
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "665": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        9979,
        10194
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x609"
    },
    "668": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "jump": "i",
      "offset": [
        9979,
        10194
      ],
      "op": "JUMP",
      "path": "22"
    },
    "669": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "670": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x206"
    },
    "673": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2AB"
    },
    "676": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "677": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "679": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x203F"
    },
    "682": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMP",
      "path": "4"
    },
    "683": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "684": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x64C"
    },
    "687": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMP",
      "path": "4"
    },
    "688": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "689": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27C"
    },
    "692": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BE"
    },
    "695": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "696": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "698": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20C3"
    },
    "701": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        3917,
        4038
      ],
      "op": "JUMP",
      "path": "0"
    },
    "702": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "703": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FB"
    },
    "706": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        3917,
        4038
      ],
      "op": "JUMP",
      "path": "0"
    },
    "707": {
      "fn": "BufferBinaryIBFRPoolBinary.withdraw",
      "offset": [
        5551,
        5652
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "708": {
      "fn": "BufferBinaryIBFRPoolBinary.withdraw",
      "offset": [
        5551,
        5652
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x256"
    },
    "711": {
      "fn": "BufferBinaryIBFRPoolBinary.withdraw",
      "offset": [
        5551,
        5652
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D1"
    },
    "714": {
      "fn": "BufferBinaryIBFRPoolBinary.withdraw",
      "offset": [
        5551,
        5652
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "715": {
      "fn": "BufferBinaryIBFRPoolBinary.withdraw",
      "offset": [
        5551,
        5652
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "717": {
      "fn": "BufferBinaryIBFRPoolBinary.withdraw",
      "offset": [
        5551,
        5652
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x20C3"
    },
    "720": {
      "fn": "BufferBinaryIBFRPoolBinary.withdraw",
      "jump": "i",
      "offset": [
        5551,
        5652
      ],
      "op": "JUMP",
      "path": "22"
    },
    "721": {
      "fn": "BufferBinaryIBFRPoolBinary.withdraw",
      "offset": [
        5551,
        5652
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "722": {
      "fn": "BufferBinaryIBFRPoolBinary.withdraw",
      "offset": [
        5551,
        5652
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x710"
    },
    "725": {
      "fn": "BufferBinaryIBFRPoolBinary.withdraw",
      "jump": "i",
      "offset": [
        5551,
        5652
      ],
      "op": "JUMP",
      "path": "22"
    },
    "726": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "727": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x256"
    },
    "730": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E4"
    },
    "733": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "734": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "736": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20DB"
    },
    "739": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4288,
        4433
      ],
      "op": "JUMP",
      "path": "0"
    },
    "740": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "741": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71A"
    },
    "744": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4288,
        4433
      ],
      "op": "JUMP",
      "path": "0"
    },
    "745": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        1957,
        2063
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "746": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        1957,
        2063
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2F1"
    },
    "749": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        1957,
        2063
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x73C"
    },
    "752": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "jump": "i",
      "offset": [
        1957,
        2063
      ],
      "op": "JUMP",
      "path": "22"
    },
    "753": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        1957,
        2063
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "754": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        1957,
        2063
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "756": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        1957,
        2063
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "757": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "759": {
      "op": "SWAP1"
    },
    "760": {
      "op": "SWAP2"
    },
    "761": {
      "op": "AND"
    },
    "762": {
      "op": "DUP2"
    },
    "763": {
      "op": "MSTORE"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "766": {
      "op": "ADD"
    },
    "767": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        1957,
        2063
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x212"
    },
    "770": {
      "op": "JUMP"
    },
    "771": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "772": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x256"
    },
    "775": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x311"
    },
    "778": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "779": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "781": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20DB"
    },
    "784": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5305,
        5519
      ],
      "op": "JUMP",
      "path": "0"
    },
    "785": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "786": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7BE"
    },
    "789": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5305,
        5519
      ],
      "op": "JUMP",
      "path": "0"
    },
    "790": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "791": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x206"
    },
    "794": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x324"
    },
    "797": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "798": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "800": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x207A"
    },
    "803": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5687,
        5899
      ],
      "op": "JUMP",
      "path": "4"
    },
    "804": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "805": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x838"
    },
    "808": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5687,
        5899
      ],
      "op": "JUMP",
      "path": "4"
    },
    "809": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "offset": [
        5866,
        6029
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "810": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "offset": [
        5866,
        6029
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x256"
    },
    "813": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "offset": [
        5866,
        6029
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x337"
    },
    "816": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "offset": [
        5866,
        6029
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "817": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "offset": [
        5866,
        6029
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "819": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "offset": [
        5866,
        6029
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x207A"
    },
    "822": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "jump": "i",
      "offset": [
        5866,
        6029
      ],
      "op": "JUMP",
      "path": "22"
    },
    "823": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "offset": [
        5866,
        6029
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "824": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "offset": [
        5866,
        6029
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x874"
    },
    "827": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "jump": "i",
      "offset": [
        5866,
        6029
      ],
      "op": "JUMP",
      "path": "22"
    },
    "828": {
      "offset": [
        582,
        624
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "829": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "offset": [
        582,
        624
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x27C"
    },
    "832": {
      "offset": [
        621,
        624
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3E8"
    },
    "835": {
      "offset": [
        582,
        624
      ],
      "op": "DUP2",
      "path": "22"
    },
    "836": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "offset": [
        582,
        624
      ],
      "op": "JUMP",
      "path": "22"
    },
    "837": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7078,
        7664
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "838": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7078,
        7664
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x256"
    },
    "841": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7078,
        7664
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x353"
    },
    "844": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7078,
        7664
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "845": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7078,
        7664
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "847": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7078,
        7664
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2182"
    },
    "850": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "jump": "i",
      "offset": [
        7078,
        7664
      ],
      "op": "JUMP",
      "path": "22"
    },
    "851": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7078,
        7664
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "852": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7078,
        7664
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x89D"
    },
    "855": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "jump": "i",
      "offset": [
        7078,
        7664
      ],
      "op": "JUMP",
      "path": "22"
    },
    "856": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8379,
        8506
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "857": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8379,
        8506
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x256"
    },
    "860": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8379,
        8506
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x366"
    },
    "863": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8379,
        8506
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "864": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8379,
        8506
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "866": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8379,
        8506
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x20C3"
    },
    "869": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "jump": "i",
      "offset": [
        8379,
        8506
      ],
      "op": "JUMP",
      "path": "22"
    },
    "870": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8379,
        8506
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "871": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8379,
        8506
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA3A"
    },
    "874": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "jump": "i",
      "offset": [
        8379,
        8506
      ],
      "op": "JUMP",
      "path": "22"
    },
    "875": {
      "offset": [
        630,
        657
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "876": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        630,
        657
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x27C"
    },
    "879": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        630,
        657
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "881": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        630,
        657
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "882": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        630,
        657
      ],
      "op": "DUP2",
      "path": "22"
    },
    "883": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        630,
        657
      ],
      "op": "JUMP",
      "path": "22"
    },
    "884": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "885": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x27C"
    },
    "888": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x382"
    },
    "891": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "892": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "894": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FF3"
    },
    "897": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3336,
        3461
      ],
      "op": "JUMP",
      "path": "4"
    },
    "898": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "899": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA73"
    },
    "902": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3336,
        3461
      ],
      "op": "JUMP",
      "path": "4"
    },
    "903": {
      "offset": [
        697,
        724
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "904": {
      "fn": "ERC20.balanceOf",
      "offset": [
        697,
        724
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x27C"
    },
    "907": {
      "fn": "ERC20.balanceOf",
      "offset": [
        697,
        724
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "909": {
      "fn": "ERC20.balanceOf",
      "offset": [
        697,
        724
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "910": {
      "fn": "ERC20.balanceOf",
      "offset": [
        697,
        724
      ],
      "op": "DUP2",
      "path": "22"
    },
    "911": {
      "fn": "ERC20.balanceOf",
      "offset": [
        697,
        724
      ],
      "op": "JUMP",
      "path": "22"
    },
    "912": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2508,
        2707
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "913": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2508,
        2707
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x256"
    },
    "916": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2508,
        2707
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x39E"
    },
    "919": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2508,
        2707
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "920": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2508,
        2707
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "922": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2508,
        2707
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x20C3"
    },
    "925": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "jump": "i",
      "offset": [
        2508,
        2707
      ],
      "op": "JUMP",
      "path": "22"
    },
    "926": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2508,
        2707
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "927": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2508,
        2707
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA8E"
    },
    "930": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "jump": "i",
      "offset": [
        2508,
        2707
      ],
      "op": "JUMP",
      "path": "22"
    },
    "931": {
      "offset": [
        663,
        691
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "932": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        663,
        691
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x27C"
    },
    "935": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        663,
        691
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "937": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        663,
        691
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "938": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        663,
        691
      ],
      "op": "DUP2",
      "path": "22"
    },
    "939": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        663,
        691
      ],
      "op": "JUMP",
      "path": "22"
    },
    "940": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        8947,
        9828
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "941": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        8947,
        9828
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x256"
    },
    "944": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        8947,
        9828
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3BA"
    },
    "947": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        8947,
        9828
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "948": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        8947,
        9828
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "950": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        8947,
        9828
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x213D"
    },
    "953": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "jump": "i",
      "offset": [
        8947,
        9828
      ],
      "op": "JUMP",
      "path": "22"
    },
    "954": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        8947,
        9828
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "955": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        8947,
        9828
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xADB"
    },
    "958": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "jump": "i",
      "offset": [
        8947,
        9828
      ],
      "op": "JUMP",
      "path": "22"
    },
    "959": {
      "offset": [
        763,
        783
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "960": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        763,
        783
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "962": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        763,
        783
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "963": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        763,
        783
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x26B"
    },
    "966": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        763,
        783
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "973": {
      "op": "SHL"
    },
    "974": {
      "op": "SUB"
    },
    "975": {
      "offset": [
        763,
        783
      ],
      "op": "AND",
      "path": "22"
    },
    "976": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        763,
        783
      ],
      "op": "DUP2",
      "path": "22"
    },
    "977": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        763,
        783
      ],
      "op": "JUMP",
      "path": "22"
    },
    "978": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "979": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x206"
    },
    "982": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E0"
    },
    "985": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "986": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "988": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20DB"
    },
    "991": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2834,
        2971
      ],
      "op": "JUMP",
      "path": "0"
    },
    "992": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "993": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD2F"
    },
    "996": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2834,
        2971
      ],
      "op": "JUMP",
      "path": "0"
    },
    "997": {
      "fn": "BufferBinaryIBFRPoolBinary.symbol",
      "offset": [
        1786,
        1888
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "998": {
      "fn": "BufferBinaryIBFRPoolBinary.symbol",
      "offset": [
        1786,
        1888
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x223"
    },
    "1001": {
      "fn": "BufferBinaryIBFRPoolBinary.symbol",
      "offset": [
        1786,
        1888
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD5A"
    },
    "1004": {
      "fn": "BufferBinaryIBFRPoolBinary.symbol",
      "jump": "i",
      "offset": [
        1786,
        1888
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1005": {
      "offset": [
        1952,
        2001
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1006": {
      "fn": "BufferBinaryIBFRPoolBinary.symbol",
      "offset": [
        1952,
        2001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27C"
    },
    "1009": {
      "offset": [
        1997,
        2001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1011": {
      "offset": [
        1952,
        2001
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1012": {
      "fn": "BufferBinaryIBFRPoolBinary.symbol",
      "offset": [
        1952,
        2001
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1013": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2159,
        2388
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1014": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2159,
        2388
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x256"
    },
    "1017": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2159,
        2388
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x403"
    },
    "1020": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2159,
        2388
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1021": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2159,
        2388
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1023": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2159,
        2388
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1FF3"
    },
    "1026": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "jump": "i",
      "offset": [
        2159,
        2388
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1027": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2159,
        2388
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1028": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2159,
        2388
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD69"
    },
    "1031": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "jump": "i",
      "offset": [
        2159,
        2388
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1032": {
      "offset": [
        730,
        757
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1033": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        730,
        757
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "1035": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        730,
        757
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1036": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        730,
        757
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x26B"
    },
    "1039": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        730,
        757
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1046": {
      "op": "SHL"
    },
    "1047": {
      "op": "SUB"
    },
    "1048": {
      "offset": [
        730,
        757
      ],
      "op": "AND",
      "path": "22"
    },
    "1049": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        730,
        757
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1050": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        730,
        757
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1051": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1052": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x206"
    },
    "1055": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x429"
    },
    "1058": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1059": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1061": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x207A"
    },
    "1064": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1065": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1066": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDE4"
    },
    "1069": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1070": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1071": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x206"
    },
    "1074": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x43C"
    },
    "1077": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1078": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1080": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x207A"
    },
    "1083": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3664,
        3836
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1084": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1085": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE7D"
    },
    "1088": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3664,
        3836
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1089": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        10320,
        10445
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1090": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        10320,
        10445
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x27C"
    },
    "1093": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        10320,
        10445
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE8A"
    },
    "1096": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "jump": "i",
      "offset": [
        10320,
        10445
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1097": {
      "offset": [
        789,
        849
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1098": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x45C"
    },
    "1101": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x457"
    },
    "1104": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1105": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1107": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x207A"
    },
    "1110": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "jump": "i",
      "offset": [
        789,
        849
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1111": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1112": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xEA1"
    },
    "1115": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "jump": "i",
      "offset": [
        789,
        849
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1116": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1117": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1119": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1120": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1121": {
      "op": "SWAP4"
    },
    "1122": {
      "op": "DUP5"
    },
    "1123": {
      "op": "MSTORE"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1126": {
      "op": "DUP5"
    },
    "1127": {
      "op": "ADD"
    },
    "1128": {
      "op": "SWAP3"
    },
    "1129": {
      "op": "SWAP1"
    },
    "1130": {
      "op": "SWAP3"
    },
    "1131": {
      "op": "MSTORE"
    },
    "1132": {
      "op": "ISZERO"
    },
    "1133": {
      "op": "ISZERO"
    },
    "1134": {
      "op": "SWAP1"
    },
    "1135": {
      "op": "DUP3"
    },
    "1136": {
      "op": "ADD"
    },
    "1137": {
      "op": "MSTORE"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1140": {
      "op": "ADD"
    },
    "1141": {
      "offset": [
        789,
        849
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x212"
    },
    "1144": {
      "op": "JUMP"
    },
    "1145": {
      "offset": [
        947,
        1031
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1146": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        947,
        1031
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x27C"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1151": {
      "op": "DUP1"
    },
    "1152": {
      "op": "MLOAD"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1155": {
      "op": "PUSH2",
      "value": "0x247B"
    },
    "1158": {
      "op": "DUP4"
    },
    "1159": {
      "op": "CODECOPY"
    },
    "1160": {
      "op": "DUP2"
    },
    "1161": {
      "op": "MLOAD"
    },
    "1162": {
      "op": "SWAP2"
    },
    "1163": {
      "op": "MSTORE"
    },
    "1164": {
      "offset": [
        947,
        1031
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1165": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        947,
        1031
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1166": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1167": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x256"
    },
    "1170": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49C"
    },
    "1173": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1174": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1176": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20DB"
    },
    "1179": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        4667,
        4814
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1180": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1181": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEE6"
    },
    "1184": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        4667,
        4814
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1185": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10570,
        10754
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1186": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10570,
        10754
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x27C"
    },
    "1189": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10570,
        10754
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF03"
    },
    "1192": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "jump": "i",
      "offset": [
        10570,
        10754
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1193": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1194": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x27C"
    },
    "1197": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4B7"
    },
    "1200": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1201": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1203": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x200D"
    },
    "1206": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3894,
        4043
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1207": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1214": {
      "op": "SHL"
    },
    "1215": {
      "op": "SUB"
    },
    "1216": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 1
    },
    "1217": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1218": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "AND",
      "path": "4"
    },
    "1219": {
      "fn": "ERC20.allowance",
      "offset": [
        3983,
        3990
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1221": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1222": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1223": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1224": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4020
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1226": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1228": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1229": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1230": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1231": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1233": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1234": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1235": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1236": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1237": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1238": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1239": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "AND",
      "path": "4"
    },
    "1240": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1241": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1242": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1243": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1244": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1245": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1246": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1247": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1248": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1249": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1250": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3185,
        4081
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1251": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3185,
        4081
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x27C"
    },
    "1254": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3185,
        4081
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4F0"
    },
    "1257": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3185,
        4081
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1258": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3185,
        4081
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1260": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3185,
        4081
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2161"
    },
    "1263": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "jump": "i",
      "offset": [
        3185,
        4081
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1264": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3185,
        4081
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1265": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3185,
        4081
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF88"
    },
    "1268": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "jump": "i",
      "offset": [
        3185,
        4081
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1269": {
      "offset": [
        856,
        940
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1270": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        856,
        940
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x27C"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1275": {
      "op": "DUP1"
    },
    "1276": {
      "op": "MLOAD"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1279": {
      "op": "PUSH2",
      "value": "0x249B"
    },
    "1282": {
      "op": "DUP4"
    },
    "1283": {
      "op": "CODECOPY"
    },
    "1284": {
      "op": "DUP2"
    },
    "1285": {
      "op": "MLOAD"
    },
    "1286": {
      "op": "SWAP2"
    },
    "1287": {
      "op": "MSTORE"
    },
    "1288": {
      "offset": [
        856,
        940
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1289": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        856,
        940
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1290": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6190,
        6908
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1291": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6190,
        6908
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x256"
    },
    "1294": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6190,
        6908
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x518"
    },
    "1297": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6190,
        6908
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1298": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6190,
        6908
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1300": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6190,
        6908
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2182"
    },
    "1303": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "jump": "i",
      "offset": [
        6190,
        6908
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1304": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6190,
        6908
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1305": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6190,
        6908
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x11F1"
    },
    "1308": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "jump": "i",
      "offset": [
        6190,
        6908
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1309": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1310": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2630,
        2634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1318": {
      "op": "SHL"
    },
    "1319": {
      "op": "SUB"
    },
    "1320": {
      "op": "NOT"
    },
    "1321": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2653,
        2700
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 2
    },
    "1322": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2653,
        2700
      ],
      "op": "AND",
      "path": "0"
    },
    "1323": {
      "op": "PUSH4",
      "value": "0x7965DB0B"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1330": {
      "op": "SHL"
    },
    "1331": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2653,
        2700
      ],
      "op": "EQ",
      "path": "0"
    },
    "1332": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2653,
        2700
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1333": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2653,
        2740
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54E"
    },
    "1336": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2653,
        2740
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1337": {
      "op": "POP"
    },
    "1338": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1345": {
      "op": "SHL"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1352": {
      "op": "SHL"
    },
    "1353": {
      "op": "SUB"
    },
    "1354": {
      "op": "NOT"
    },
    "1355": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "18",
      "statement": 3
    },
    "1356": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "18"
    },
    "1357": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "18"
    },
    "1358": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2704,
        2740
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1359": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2646,
        2740
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1360": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1361": {
      "op": "POP"
    },
    "1362": {
      "op": "POP"
    },
    "1363": {
      "fn": "AccessControl.supportsInterface",
      "jump": "o",
      "offset": [
        2545,
        2747
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1364": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1575,
        1673
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1365": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1629,
        1642
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "1367": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1661,
        1666
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 4,
      "value": "0x6"
    },
    "1369": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1370": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1371": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x563"
    },
    "1374": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1375": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23DF"
    },
    "1378": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "jump": "i",
      "offset": [
        1654,
        1666
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1379": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1380": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1381": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "1383": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "ADD",
      "path": "22"
    },
    "1384": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1386": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1387": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1388": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DIV",
      "path": "22"
    },
    "1389": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "MUL",
      "path": "22"
    },
    "1390": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1392": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "ADD",
      "path": "22"
    },
    "1393": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1395": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1396": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1397": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1398": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "ADD",
      "path": "22"
    },
    "1399": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1401": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1402": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1403": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1404": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1405": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1406": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1407": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1408": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1409": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1411": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "ADD",
      "path": "22"
    },
    "1412": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1413": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1414": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1415": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x58F"
    },
    "1418": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1419": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23DF"
    },
    "1422": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "jump": "i",
      "offset": [
        1654,
        1666
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1423": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1424": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1425": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1426": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5DC"
    },
    "1429": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1430": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1431": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "1433": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "LT",
      "path": "22"
    },
    "1434": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5B1"
    },
    "1437": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1438": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "1441": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1442": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1443": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1444": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DIV",
      "path": "22"
    },
    "1445": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "MUL",
      "path": "22"
    },
    "1446": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1447": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1448": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1449": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1451": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "ADD",
      "path": "22"
    },
    "1452": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1453": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5DC"
    },
    "1456": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1457": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1458": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1459": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "ADD",
      "path": "22"
    },
    "1460": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1461": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1462": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1464": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1465": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1467": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1469": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1470": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1471": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1472": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1473": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1474": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1475": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1476": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1477": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "1479": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "ADD",
      "path": "22"
    },
    "1480": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1481": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1483": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "ADD",
      "path": "22"
    },
    "1484": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1485": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1486": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "GT",
      "path": "22"
    },
    "1487": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5BF"
    },
    "1490": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1491": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1492": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1493": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "SUB",
      "path": "22"
    },
    "1494": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "1496": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "AND",
      "path": "22"
    },
    "1497": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1498": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "ADD",
      "path": "22"
    },
    "1499": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1500": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1501": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "POP",
      "path": "22"
    },
    "1502": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "POP",
      "path": "22"
    },
    "1503": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "POP",
      "path": "22"
    },
    "1504": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "POP",
      "path": "22"
    },
    "1505": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "POP",
      "path": "22"
    },
    "1506": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1507": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1654,
        1666
      ],
      "op": "POP",
      "path": "22"
    },
    "1508": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "offset": [
        1575,
        1673
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1509": {
      "fn": "BufferBinaryIBFRPoolBinary.name",
      "jump": "o",
      "offset": [
        1575,
        1673
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1510": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1511": {
      "fn": "ERC20.approve",
      "offset": [
        4264,
        4268
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1513": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4319
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 5,
      "value": "0x5F3"
    },
    "1516": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15",
      "statement": 6
    },
    "1517": {
      "fn": "ERC20.approve",
      "offset": [
        4303,
        4310
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1518": {
      "fn": "ERC20.approve",
      "offset": [
        4312,
        4318
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1519": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4288
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1421"
    },
    "1522": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4280,
        4319
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1523": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4319
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1524": {
      "op": "POP"
    },
    "1525": {
      "fn": "ERC20.approve",
      "offset": [
        4336,
        4340
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 7,
      "value": "0x1"
    },
    "1527": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1528": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1529": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "POP",
      "path": "4"
    },
    "1530": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "POP",
      "path": "4"
    },
    "1531": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1532": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        8650,
        8737
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1533": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        8719,
        8730
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 8,
      "value": "0x605"
    },
    "1536": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        8727,
        8729
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1537": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        8719,
        8726
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1545"
    },
    "1540": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "jump": "i",
      "offset": [
        8719,
        8730
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1541": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        8719,
        8730
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1542": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        8719,
        8730
      ],
      "op": "POP",
      "path": "22"
    },
    "1543": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        8650,
        8737
      ],
      "op": "POP",
      "path": "22"
    },
    "1544": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "jump": "o",
      "offset": [
        8650,
        8737
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1545": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        9979,
        10194
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1546": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10036,
        10049
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1548": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10081,
        10082
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1549": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10065,
        10078
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x615"
    },
    "1552": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3259,
        3271
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1554": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3259,
        3271
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1555": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3259,
        3271
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1556": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1557": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10065,
        10078
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1558": {
      "branch": 107,
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10065,
        10082
      ],
      "op": "GT",
      "path": "22"
    },
    "1559": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10061,
        10187
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1560": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10061,
        10187
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x643"
    },
    "1563": {
      "branch": 107,
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10061,
        10187
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1564": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3259,
        3271
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1566": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3259,
        3271
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1567": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10128,
        10146
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 9,
      "value": "0x627"
    },
    "1570": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10138,
        10145
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1571": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10128,
        10137
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA73"
    },
    "1574": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "jump": "i",
      "offset": [
        10128,
        10146
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1575": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10128,
        10146
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1576": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10105,
        10125
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x62F"
    },
    "1579": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10105,
        10123
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF03"
    },
    "1582": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "jump": "i",
      "offset": [
        10105,
        10125
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1583": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10105,
        10125
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1584": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10105,
        10146
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x639"
    },
    "1587": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10105,
        10146
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1588": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10105,
        10146
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1589": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10105,
        10146
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2366"
    },
    "1592": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "jump": "i",
      "offset": [
        10105,
        10146
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1593": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10105,
        10146
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1594": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10104,
        10163
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x54E"
    },
    "1597": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10104,
        10163
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1598": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10104,
        10163
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1599": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10104,
        10163
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2352"
    },
    "1602": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "jump": "i",
      "offset": [
        10104,
        10163
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1603": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10061,
        10187
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1604": {
      "op": "POP"
    },
    "1605": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10186,
        10187
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 10,
      "value": "0x0"
    },
    "1607": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        10061,
        10187
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1608": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        9979,
        10194
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1609": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        9979,
        10194
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1610": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "offset": [
        9979,
        10194
      ],
      "op": "POP",
      "path": "22"
    },
    "1611": {
      "fn": "BufferBinaryIBFRPoolBinary.shareOf",
      "jump": "o",
      "offset": [
        9979,
        10194
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1612": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1613": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4950,
        4954
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1615": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4966,
        5002
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 11,
      "value": "0x659"
    },
    "1618": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4976,
        4982
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1619": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4984,
        4993
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1620": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4995,
        5001
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1621": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4966,
        4975
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1604"
    },
    "1624": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4966,
        5002
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1625": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4966,
        5002
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1632": {
      "op": "SHL"
    },
    "1633": {
      "op": "SUB"
    },
    "1634": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1635": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "AND",
      "path": "4"
    },
    "1636": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5013,
        5037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1638": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1639": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1640": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1641": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5051
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1643": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1645": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1646": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1647": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1648": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1650": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1651": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1652": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1653": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1654": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1655": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1656": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1657": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1658": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1659": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1660": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1661": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1662": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5091,
        5117
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 12
    },
    "1663": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5091,
        5117
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1664": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5091,
        5117
      ],
      "op": "LT",
      "path": "4"
    },
    "1665": {
      "branch": 136,
      "fn": "ERC20.transferFrom",
      "offset": [
        5091,
        5117
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1666": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E3"
    },
    "1669": {
      "branch": 136,
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1670": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1672": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1673": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1679": {
      "op": "SHL"
    },
    "1680": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1681": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1682": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1684": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1686": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1687": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "ADD",
      "path": "4"
    },
    "1688": {
      "op": "MSTORE"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1693": {
      "op": "DUP3"
    },
    "1694": {
      "op": "ADD"
    },
    "1695": {
      "op": "MSTORE"
    },
    "1696": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "1729": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1731": {
      "op": "DUP3"
    },
    "1732": {
      "op": "ADD"
    },
    "1733": {
      "op": "MSTORE"
    },
    "1734": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1745": {
      "op": "SHL"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1748": {
      "op": "DUP3"
    },
    "1749": {
      "op": "ADD"
    },
    "1750": {
      "op": "MSTORE"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1753": {
      "op": "ADD"
    },
    "1754": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1755": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1757": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1758": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1759": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1760": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "SUB",
      "path": "4"
    },
    "1761": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1762": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "1763": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1764": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5196,
        5253
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 13,
      "value": "0x6F0"
    },
    "1767": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5205,
        5211
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1768": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1769": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5246,
        5252
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1770": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5227,
        5243
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1771": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5227,
        5252
      ],
      "op": "SUB",
      "path": "4"
    },
    "1772": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5196,
        5204
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1421"
    },
    "1775": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5196,
        5253
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1776": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5196,
        5253
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1777": {
      "op": "POP"
    },
    "1778": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5281,
        5285
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 14,
      "value": "0x1"
    },
    "1780": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5281,
        5285
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1781": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1782": {
      "op": "POP"
    },
    "1783": {
      "op": "POP"
    },
    "1784": {
      "op": "POP"
    },
    "1785": {
      "op": "POP"
    },
    "1786": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1787": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1788": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3983,
        3990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1790": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 15
    },
    "1791": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1792": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1793": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4015
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1795": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1797": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1798": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1800": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1801": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1802": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4031
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1804": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4031
      ],
      "op": "ADD",
      "path": "0"
    },
    "1805": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4031
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1806": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4031
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1807": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "o",
      "offset": [
        3917,
        4038
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1808": {
      "fn": "BufferBinaryIBFRPoolBinary.withdraw",
      "offset": [
        5551,
        5652
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1809": {
      "fn": "BufferBinaryIBFRPoolBinary.withdraw",
      "offset": [
        5610,
        5645
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 16,
      "value": "0x605"
    },
    "1812": {
      "fn": "BufferBinaryIBFRPoolBinary.withdraw",
      "offset": [
        5620,
        5632
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1813": {
      "fn": "BufferBinaryIBFRPoolBinary.withdraw",
      "offset": [
        5634,
        5644
      ],
      "op": "CALLER",
      "path": "22"
    },
    "1814": {
      "fn": "BufferBinaryIBFRPoolBinary.withdraw",
      "offset": [
        5610,
        5619
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17C0"
    },
    "1817": {
      "fn": "BufferBinaryIBFRPoolBinary.withdraw",
      "jump": "i",
      "offset": [
        5610,
        5645
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1818": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1819": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4371,
        4389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x723"
    },
    "1822": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4384,
        4388
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1823": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4371,
        4383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FB"
    },
    "1826": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4371,
        4389
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1827": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4371,
        4389
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1828": {
      "offset": [
        2430,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x72D"
    },
    "1831": {
      "offset": [
        2441,
        2445
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1832": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1833": {
      "offset": [
        2430,
        2440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A61"
    },
    "1836": {
      "jump": "i",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1837": {
      "fn": "Context._msgSender",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1838": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4401,
        4426
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 17,
      "value": "0x737"
    },
    "1841": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4412,
        4416
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1842": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4418,
        4425
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1843": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4401,
        4411
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AC5"
    },
    "1846": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4401,
        4426
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1847": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4401,
        4426
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1848": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "POP",
      "path": "0"
    },
    "1849": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "POP",
      "path": "0"
    },
    "1850": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "POP",
      "path": "0"
    },
    "1851": {
      "fn": "AccessControl.grantRole",
      "jump": "o",
      "offset": [
        4288,
        4433
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1852": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        1957,
        2063
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1853": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2045
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 18,
      "value": "0xE"
    },
    "1855": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2045
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1856": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1858": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1859": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1860": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1867": {
      "op": "SHL"
    },
    "1868": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1869": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1870": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1871": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1872": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2015,
        2020
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1874": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2015,
        2020
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1881": {
      "op": "SHL"
    },
    "1882": {
      "op": "SUB"
    },
    "1883": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2045
      ],
      "op": "AND",
      "path": "22"
    },
    "1884": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2045
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1885": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2054
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x313CE567"
    },
    "1890": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2054
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1891": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1893": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1894": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1895": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "ADD",
      "path": "22"
    },
    "1896": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1897": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1899": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1900": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1901": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1902": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1903": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1904": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "SUB",
      "path": "22"
    },
    "1905": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "ADD",
      "path": "22"
    },
    "1906": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1907": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2045
      ],
      "op": "DUP7",
      "path": "22"
    },
    "1908": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1909": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "1910": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1911": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1912": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1913": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x781"
    },
    "1916": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1917": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1919": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1920": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1921": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1922": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "POP",
      "path": "22"
    },
    "1923": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "GAS",
      "path": "22"
    },
    "1924": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "1925": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1926": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1927": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1928": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x795"
    },
    "1931": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1932": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "1933": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1935": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1936": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "1937": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "1938": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1940": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1941": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1942": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "POP",
      "path": "22"
    },
    "1943": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "POP",
      "path": "22"
    },
    "1944": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "POP",
      "path": "22"
    },
    "1945": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "POP",
      "path": "22"
    },
    "1946": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1948": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1949": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "1950": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "1952": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "NOT",
      "path": "22"
    },
    "1953": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "1955": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1956": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "ADD",
      "path": "22"
    },
    "1957": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "AND",
      "path": "22"
    },
    "1958": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1959": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "ADD",
      "path": "22"
    },
    "1960": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1961": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1963": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1964": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "POP",
      "path": "22"
    },
    "1965": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1966": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "ADD",
      "path": "22"
    },
    "1967": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1968": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7B9"
    },
    "1971": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1972": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1973": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x21AD"
    },
    "1976": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "jump": "i",
      "offset": [
        2039,
        2056
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1977": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2039,
        2056
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1978": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2032,
        2056
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1979": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        2032,
        2056
      ],
      "op": "POP",
      "path": "22"
    },
    "1980": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "offset": [
        1957,
        2063
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1981": {
      "fn": "BufferBinaryIBFRPoolBinary.decimals",
      "jump": "o",
      "offset": [
        1957,
        2063
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1982": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1989": {
      "op": "SHL"
    },
    "1990": {
      "op": "SUB"
    },
    "1991": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5400,
        5423
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 19
    },
    "1992": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5400,
        5423
      ],
      "op": "AND",
      "path": "0"
    },
    "1993": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1994": {
      "branch": 132,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5400,
        5423
      ],
      "op": "EQ",
      "path": "0"
    },
    "1995": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82E"
    },
    "1998": {
      "branch": 132,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1999": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2001": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2002": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2008": {
      "op": "SHL"
    },
    "2009": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2010": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2013": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2015": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2016": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "ADD",
      "path": "0"
    },
    "2017": {
      "op": "MSTORE"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2022": {
      "op": "DUP3"
    },
    "2023": {
      "op": "ADD"
    },
    "2024": {
      "op": "MSTORE"
    },
    "2025": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2060": {
      "op": "DUP3"
    },
    "2061": {
      "op": "ADD"
    },
    "2062": {
      "op": "MSTORE"
    },
    "2063": {
      "op": "PUSH15",
      "value": "0x103937B632B9903337B91039B2B633"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "2081": {
      "op": "SHL"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2084": {
      "op": "DUP3"
    },
    "2085": {
      "op": "ADD"
    },
    "2086": {
      "op": "MSTORE"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2089": {
      "op": "ADD"
    },
    "2090": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DA"
    },
    "2093": {
      "op": "JUMP"
    },
    "2094": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2095": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5486,
        5512
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 20,
      "value": "0x605"
    },
    "2098": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5498,
        5502
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2099": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5504,
        5511
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2100": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5486,
        5497
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B4B"
    },
    "2103": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5486,
        5512
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2104": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2105": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2106": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5775,
        5779
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2108": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 21
    },
    "2109": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2110": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2111": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5834
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2113": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2115": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2116": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2117": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2118": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2120": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2121": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2122": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2129": {
      "op": "SHL"
    },
    "2130": {
      "op": "SUB"
    },
    "2131": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2132": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "AND",
      "path": "4"
    },
    "2133": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2134": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2135": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2136": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2137": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2138": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2139": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2140": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2141": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5775,
        5779
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2142": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5775,
        5779
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2143": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5791,
        5871
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5F3"
    },
    "2146": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5791,
        5871
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2147": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5814,
        5821
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2148": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5814,
        5821
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2149": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5870
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x86F"
    },
    "2152": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5870
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2153": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5860,
        5870
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2154": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5860,
        5870
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2155": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5870
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x233A"
    },
    "2158": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5823,
        5870
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2159": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5870
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2160": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5791,
        5799
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1421"
    },
    "2163": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5791,
        5871
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2164": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "offset": [
        5866,
        6029
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2167": {
      "op": "DUP1"
    },
    "2168": {
      "op": "MLOAD"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2171": {
      "op": "PUSH2",
      "value": "0x247B"
    },
    "2174": {
      "op": "DUP4"
    },
    "2175": {
      "op": "CODECOPY"
    },
    "2176": {
      "op": "DUP2"
    },
    "2177": {
      "op": "MLOAD"
    },
    "2178": {
      "op": "SWAP2"
    },
    "2179": {
      "op": "MSTORE"
    },
    "2180": {
      "offset": [
        2430,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88D"
    },
    "2183": {
      "offset": [
        1000,
        1031
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2184": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2185": {
      "offset": [
        2430,
        2440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A61"
    },
    "2188": {
      "jump": "i",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2189": {
      "fn": "Context._msgSender",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2190": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "offset": [
        5993,
        6022
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 22,
      "value": "0x897"
    },
    "2193": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "offset": [
        6003,
        6015
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2194": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "offset": [
        6017,
        6021
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2195": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "offset": [
        5993,
        6002
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17C0"
    },
    "2198": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "jump": "i",
      "offset": [
        5993,
        6022
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2199": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "offset": [
        5993,
        6022
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2200": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "offset": [
        5993,
        6022
      ],
      "op": "POP",
      "path": "22"
    },
    "2201": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "offset": [
        5866,
        6029
      ],
      "op": "POP",
      "path": "22"
    },
    "2202": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "offset": [
        5866,
        6029
      ],
      "op": "POP",
      "path": "22"
    },
    "2203": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "offset": [
        5866,
        6029
      ],
      "op": "POP",
      "path": "22"
    },
    "2204": {
      "fn": "BufferBinaryIBFRPoolBinary.adminWithdraw",
      "jump": "o",
      "offset": [
        5866,
        6029
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2205": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7078,
        7664
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2208": {
      "op": "DUP1"
    },
    "2209": {
      "op": "MLOAD"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2212": {
      "op": "PUSH2",
      "value": "0x249B"
    },
    "2215": {
      "op": "DUP4"
    },
    "2216": {
      "op": "CODECOPY"
    },
    "2217": {
      "op": "DUP2"
    },
    "2218": {
      "op": "MLOAD"
    },
    "2219": {
      "op": "SWAP2"
    },
    "2220": {
      "op": "MSTORE"
    },
    "2221": {
      "offset": [
        2430,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8B6"
    },
    "2224": {
      "offset": [
        909,
        940
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2225": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2226": {
      "offset": [
        2430,
        2440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A61"
    },
    "2229": {
      "jump": "i",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2230": {
      "fn": "Context._msgSender",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2231": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7279,
        7289
      ],
      "op": "CALLER",
      "path": "22"
    },
    "2232": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7234,
        7260
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2234": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7290
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2235": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7290
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2236": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7290
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2237": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7278
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "2239": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7290
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2241": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7290
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2242": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7290
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2244": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7290
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2245": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7290
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2246": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2247": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2248": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7291,
        7293
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2249": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7291,
        7293
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2250": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2251": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "LT",
      "path": "22"
    },
    "2252": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8E5"
    },
    "2255": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2256": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2263": {
      "op": "SHL"
    },
    "2264": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2266": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2267": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x32"
    },
    "2269": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2271": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2272": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "2274": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2276": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2277": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2278": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2280": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2281": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2282": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2283": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2285": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2286": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2287": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2288": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "2290": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2291": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2292": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "MUL",
      "path": "22"
    },
    "2293": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "ADD",
      "path": "22"
    },
    "2294": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7312,
        7321
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 23,
      "value": "0x2"
    },
    "2296": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7312,
        7321
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2297": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7312,
        7321
      ],
      "op": "ADD",
      "path": "22"
    },
    "2298": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7312,
        7321
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2299": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2300": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7263,
        7294
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2301": {
      "op": "POP"
    },
    "2302": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7312,
        7321
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "2304": {
      "branch": 108,
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7312,
        7321
      ],
      "op": "AND",
      "path": "22"
    },
    "2305": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7304,
        7358
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x94C"
    },
    "2308": {
      "branch": 108,
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7304,
        7358
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2309": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7304,
        7358
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2311": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7304,
        7358
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2312": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2318": {
      "op": "SHL"
    },
    "2319": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7304,
        7358
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2320": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7304,
        7358
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2323": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7304,
        7358
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2325": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7304,
        7358
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2326": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7304,
        7358
      ],
      "op": "ADD",
      "path": "22"
    },
    "2327": {
      "op": "DUP2"
    },
    "2328": {
      "op": "SWAP1"
    },
    "2329": {
      "op": "MSTORE"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2332": {
      "op": "DUP3"
    },
    "2333": {
      "op": "ADD"
    },
    "2334": {
      "op": "MSTORE"
    },
    "2335": {
      "op": "PUSH32",
      "value": "0x6C6F636B6564416D6F756E7420697320616C726561647920756E6C6F636B6564"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2370": {
      "op": "DUP3"
    },
    "2371": {
      "op": "ADD"
    },
    "2372": {
      "op": "MSTORE"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2375": {
      "op": "ADD"
    },
    "2376": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7304,
        7358
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6DA"
    },
    "2379": {
      "op": "JUMP"
    },
    "2380": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7304,
        7358
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2381": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7385,
        7392
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2382": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7372,
        7374
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2383": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7372,
        7382
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2385": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7372,
        7382
      ],
      "op": "ADD",
      "path": "22"
    },
    "2386": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7372,
        7382
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2387": {
      "branch": 109,
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7372,
        7392
      ],
      "op": "GT",
      "path": "22"
    },
    "2388": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7368,
        7468
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2389": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7368,
        7468
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9F0"
    },
    "2392": {
      "branch": 109,
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7368,
        7468
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2393": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7414
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 24,
      "value": "0xE"
    },
    "2395": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7414
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2396": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7414
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2398": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7436,
        7446
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2399": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7436,
        7446
      ],
      "op": "ADD",
      "path": "22"
    },
    "2400": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7436,
        7446
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2407": {
      "op": "SHL"
    },
    "2408": {
      "op": "SUB"
    },
    "2409": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7414
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2410": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7414
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2411": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7414
      ],
      "op": "AND",
      "path": "22"
    },
    "2412": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7414
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2413": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7423
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA9059CBB"
    },
    "2418": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7423
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2419": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7424,
        7434
      ],
      "op": "CALLER",
      "path": "22"
    },
    "2420": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7424,
        7434
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2421": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7436,
        7456
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x97F"
    },
    "2424": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7436,
        7456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2425": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7449,
        7456
      ],
      "op": "DUP8",
      "path": "22"
    },
    "2426": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7449,
        7456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2427": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7436,
        7456
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2385"
    },
    "2430": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "jump": "i",
      "offset": [
        7436,
        7456
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2431": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7436,
        7456
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2432": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2434": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2435": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2436": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "2441": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "AND",
      "path": "22"
    },
    "2442": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "2444": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "SHL",
      "path": "22"
    },
    "2445": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2446": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2447": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2449": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "ADD",
      "path": "22"
    },
    "2450": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x99C"
    },
    "2453": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2454": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2455": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2456": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2275"
    },
    "2459": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "jump": "i",
      "offset": [
        7408,
        7457
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2460": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2461": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2463": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2465": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2466": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2467": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2468": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "SUB",
      "path": "22"
    },
    "2469": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2470": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2472": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "DUP8",
      "path": "22"
    },
    "2473": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2474": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "2475": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2476": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2477": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2478": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9B6"
    },
    "2481": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2482": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2484": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2485": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2486": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2487": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "POP",
      "path": "22"
    },
    "2488": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "GAS",
      "path": "22"
    },
    "2489": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "CALL",
      "path": "22"
    },
    "2490": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2491": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2492": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2493": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9CA"
    },
    "2496": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2497": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "2498": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2500": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2501": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "2502": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "2503": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2505": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2506": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2507": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "POP",
      "path": "22"
    },
    "2508": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "POP",
      "path": "22"
    },
    "2509": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "POP",
      "path": "22"
    },
    "2510": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "POP",
      "path": "22"
    },
    "2511": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2513": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2514": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "2515": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "2517": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "NOT",
      "path": "22"
    },
    "2518": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "2520": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2521": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "ADD",
      "path": "22"
    },
    "2522": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "AND",
      "path": "22"
    },
    "2523": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2524": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "ADD",
      "path": "22"
    },
    "2525": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2526": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2528": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2529": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "POP",
      "path": "22"
    },
    "2530": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2531": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "ADD",
      "path": "22"
    },
    "2532": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2533": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9EE"
    },
    "2536": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2537": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2538": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x20A3"
    },
    "2541": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "jump": "i",
      "offset": [
        7408,
        7457
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2542": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2543": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7408,
        7457
      ],
      "op": "POP",
      "path": "22"
    },
    "2544": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7368,
        7468
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2545": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7522,
        7529
      ],
      "op": "DUP3",
      "path": "22",
      "statement": 25
    },
    "2546": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7509,
        7511
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2547": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7509,
        7519
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2549": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7509,
        7519
      ],
      "op": "ADD",
      "path": "22"
    },
    "2550": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7509,
        7519
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2551": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7493,
        7506
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "2553": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7493,
        7506
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2554": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7493,
        7519
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA03"
    },
    "2557": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7493,
        7519
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2558": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7493,
        7519
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2559": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7493,
        7519
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2385"
    },
    "2562": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "jump": "i",
      "offset": [
        7493,
        7519
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2563": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7493,
        7519
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2564": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7493,
        7529
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA0D"
    },
    "2567": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7493,
        7529
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2568": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7493,
        7529
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2569": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7493,
        7529
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x233A"
    },
    "2572": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "jump": "i",
      "offset": [
        7493,
        7529
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2573": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7493,
        7529
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2574": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7477,
        7490
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "2576": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7477,
        7529
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2577": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7569,
        7578
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 26
    },
    "2578": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7569,
        7578
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2579": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7554,
        7566
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "2581": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7554,
        7566
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2582": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7581,
        7593
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2583": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7581,
        7593
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2584": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7554,
        7578
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA20"
    },
    "2587": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7554,
        7578
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2588": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7554,
        7578
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2385"
    },
    "2591": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "jump": "i",
      "offset": [
        7554,
        7578
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2592": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7554,
        7578
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2593": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7554,
        7593
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA2A"
    },
    "2596": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7554,
        7593
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2597": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7554,
        7593
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2598": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7554,
        7593
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x233A"
    },
    "2601": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "jump": "i",
      "offset": [
        7554,
        7593
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2602": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7554,
        7593
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2603": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7539,
        7551
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "2605": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7539,
        7593
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2606": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7603,
        7613
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 27,
      "value": "0x1"
    },
    "2608": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7603,
        7613
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2609": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7603,
        7613
      ],
      "op": "ADD",
      "path": "22"
    },
    "2610": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7603,
        7623
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2611": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7603,
        7623
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2612": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7603,
        7623
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2613": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7603,
        7623
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2614": {
      "op": "POP"
    },
    "2615": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "offset": [
        7633,
        7657
      ],
      "op": "SSTORE",
      "path": "22",
      "statement": 28
    },
    "2616": {
      "op": "POP"
    },
    "2617": {
      "fn": "BufferBinaryIBFRPoolBinary.changeLock",
      "jump": "o",
      "offset": [
        7078,
        7664
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2618": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8379,
        8506
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2619": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8435,
        8450
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2621": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8453,
        8464
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA45"
    },
    "2624": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8461,
        8463
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2625": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8453,
        8460
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1545"
    },
    "2628": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "jump": "i",
      "offset": [
        8453,
        8464
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2629": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8453,
        8464
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2630": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8435,
        8464
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2631": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8435,
        8464
      ],
      "op": "POP",
      "path": "22"
    },
    "2632": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8487,
        8489
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 29
    },
    "2633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2635": {
      "op": "DUP1"
    },
    "2636": {
      "op": "MLOAD"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2639": {
      "op": "PUSH2",
      "value": "0x245B"
    },
    "2642": {
      "op": "DUP4"
    },
    "2643": {
      "op": "CODECOPY"
    },
    "2644": {
      "op": "DUP2"
    },
    "2645": {
      "op": "MLOAD"
    },
    "2646": {
      "op": "SWAP2"
    },
    "2647": {
      "op": "MSTORE"
    },
    "2648": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8491,
        8498
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2649": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8480,
        8499
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2651": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8480,
        8499
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2652": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8480,
        8499
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA67"
    },
    "2655": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8480,
        8499
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2656": {
      "op": "DUP2"
    },
    "2657": {
      "op": "MSTORE"
    },
    "2658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2660": {
      "op": "ADD"
    },
    "2661": {
      "op": "SWAP1"
    },
    "2662": {
      "op": "JUMP"
    },
    "2663": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8480,
        8499
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2664": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8480,
        8499
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2666": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8480,
        8499
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2667": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8480,
        8499
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2668": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8480,
        8499
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2669": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8480,
        8499
      ],
      "op": "SUB",
      "path": "22"
    },
    "2670": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8480,
        8499
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2671": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8480,
        8499
      ],
      "op": "LOG2",
      "path": "22"
    },
    "2672": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8379,
        8506
      ],
      "op": "POP",
      "path": "22"
    },
    "2673": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        8379,
        8506
      ],
      "op": "POP",
      "path": "22"
    },
    "2674": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "jump": "o",
      "offset": [
        8379,
        8506
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2675": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2682": {
      "op": "SHL"
    },
    "2683": {
      "op": "SUB"
    },
    "2684": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "AND",
      "path": "4",
      "statement": 30
    },
    "2685": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3410,
        3417
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2687": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2688": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2689": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2690": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2692": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2693": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2694": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2695": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2697": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2698": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2699": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2700": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2701": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3336,
        3461
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2702": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2508,
        2707
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2705": {
      "op": "DUP1"
    },
    "2706": {
      "op": "MLOAD"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2709": {
      "op": "PUSH2",
      "value": "0x247B"
    },
    "2712": {
      "op": "DUP4"
    },
    "2713": {
      "op": "CODECOPY"
    },
    "2714": {
      "op": "DUP2"
    },
    "2715": {
      "op": "MLOAD"
    },
    "2716": {
      "op": "SWAP2"
    },
    "2717": {
      "op": "MSTORE"
    },
    "2718": {
      "offset": [
        2430,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA7"
    },
    "2721": {
      "offset": [
        1000,
        1031
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2722": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2723": {
      "offset": [
        2430,
        2440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A61"
    },
    "2726": {
      "jump": "i",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2727": {
      "fn": "Context._msgSender",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2728": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2624,
        2636
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 31,
      "value": "0xA"
    },
    "2730": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2624,
        2652
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2731": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2624,
        2652
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2732": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2624,
        2652
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2733": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2667,
        2700
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 32,
      "value": "0x40"
    },
    "2735": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2667,
        2700
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2736": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2639,
        2652
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2737": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2639,
        2652
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2738": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2667,
        2700
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x2138D5B63F1E1FC5996475C0D8565B0F4CE68622680C894DB2BFD3ECE685D257"
    },
    "2771": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2667,
        2700
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2772": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2667,
        2700
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2774": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2667,
        2700
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2775": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2667,
        2700
      ],
      "op": "LOG2",
      "path": "22"
    },
    "2776": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2508,
        2707
      ],
      "op": "POP",
      "path": "22"
    },
    "2777": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "offset": [
        2508,
        2707
      ],
      "op": "POP",
      "path": "22"
    },
    "2778": {
      "fn": "BufferBinaryIBFRPoolBinary.setMaxLiquidity",
      "jump": "o",
      "offset": [
        2508,
        2707
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2779": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        8947,
        9828
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2782": {
      "op": "DUP1"
    },
    "2783": {
      "op": "MLOAD"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2786": {
      "op": "PUSH2",
      "value": "0x249B"
    },
    "2789": {
      "op": "DUP4"
    },
    "2790": {
      "op": "CODECOPY"
    },
    "2791": {
      "op": "DUP2"
    },
    "2792": {
      "op": "MLOAD"
    },
    "2793": {
      "op": "SWAP2"
    },
    "2794": {
      "op": "MSTORE"
    },
    "2795": {
      "offset": [
        2430,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF4"
    },
    "2798": {
      "offset": [
        909,
        940
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2799": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2800": {
      "offset": [
        2430,
        2440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A61"
    },
    "2803": {
      "jump": "i",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2804": {
      "fn": "Context._msgSender",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2805": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9139,
        9149
      ],
      "op": "CALLER",
      "path": "22"
    },
    "2806": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9094,
        9120
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2808": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9150
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2809": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9150
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2810": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9150
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2811": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9138
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "2813": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9150
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2815": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9150
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2816": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9150
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2818": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9150
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2819": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9150
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2820": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2821": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2822": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9151,
        9153
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2823": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9151,
        9153
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2824": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2825": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "LT",
      "path": "22"
    },
    "2826": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB23"
    },
    "2829": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2830": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2837": {
      "op": "SHL"
    },
    "2838": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2840": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2841": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x32"
    },
    "2843": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2845": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2846": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "2848": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2850": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2851": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2852": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2854": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2855": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2856": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2857": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2859": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2860": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2861": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2862": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "2864": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2865": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2866": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "MUL",
      "path": "22"
    },
    "2867": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "ADD",
      "path": "22"
    },
    "2868": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9172,
        9181
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 33,
      "value": "0x2"
    },
    "2870": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9172,
        9181
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2871": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9172,
        9181
      ],
      "op": "ADD",
      "path": "22"
    },
    "2872": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9172,
        9181
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2873": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2874": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9123,
        9154
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2875": {
      "op": "POP"
    },
    "2876": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9172,
        9181
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "2878": {
      "branch": 110,
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9172,
        9181
      ],
      "op": "AND",
      "path": "22"
    },
    "2879": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9164,
        9224
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB5A"
    },
    "2882": {
      "branch": 110,
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9164,
        9224
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2883": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9164,
        9224
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2885": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9164,
        9224
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2886": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2892": {
      "op": "SHL"
    },
    "2893": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9164,
        9224
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2894": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9164,
        9224
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2895": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9164,
        9224
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2897": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9164,
        9224
      ],
      "op": "ADD",
      "path": "22"
    },
    "2898": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9164,
        9224
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6DA"
    },
    "2901": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9164,
        9224
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2902": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9164,
        9224
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x22C1"
    },
    "2905": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "jump": "i",
      "offset": [
        9164,
        9224
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2906": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9164,
        9224
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2913": {
      "op": "SHL"
    },
    "2914": {
      "op": "SUB"
    },
    "2915": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9242,
        9258
      ],
      "op": "DUP5",
      "path": "22",
      "statement": 34
    },
    "2916": {
      "branch": 111,
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9242,
        9258
      ],
      "op": "AND",
      "path": "22"
    },
    "2917": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9234,
        9259
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB6D"
    },
    "2920": {
      "branch": 111,
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9234,
        9259
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2921": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9234,
        9259
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2923": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9234,
        9259
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2924": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9234,
        9259
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2925": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9234,
        9259
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2926": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9270,
        9279
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 35,
      "value": "0x2"
    },
    "2928": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9270,
        9279
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2929": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9270,
        9279
      ],
      "op": "ADD",
      "path": "22"
    },
    "2930": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9270,
        9287
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2931": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9270,
        9287
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2934": {
      "op": "NOT"
    },
    "2935": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9270,
        9287
      ],
      "op": "AND",
      "path": "22"
    },
    "2936": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9270,
        9287
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2937": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9270,
        9287
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2938": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9270,
        9287
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2940": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9329,
        9339
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 36
    },
    "2941": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9329,
        9339
      ],
      "op": "ADD",
      "path": "22"
    },
    "2942": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9329,
        9339
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2943": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9313,
        9326
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "2945": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9313,
        9326
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2946": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9313,
        9339
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB8B"
    },
    "2949": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9313,
        9339
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2950": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9329,
        9339
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2951": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9313,
        9339
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2385"
    },
    "2954": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "jump": "i",
      "offset": [
        9313,
        9339
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2955": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9313,
        9339
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2956": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9297,
        9310
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "2958": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9297,
        9339
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2959": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9379,
        9388
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 37
    },
    "2960": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9379,
        9388
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2961": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9364,
        9376
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "2963": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9364,
        9376
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2964": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9364,
        9388
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB9D"
    },
    "2967": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9364,
        9388
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2968": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9379,
        9388
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2969": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9364,
        9388
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2385"
    },
    "2972": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "jump": "i",
      "offset": [
        9364,
        9388
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2973": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9364,
        9388
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2974": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9349,
        9361
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "2976": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9349,
        9388
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2977": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9445,
        9454
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2978": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9445,
        9454
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2979": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9399,
        9427
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2981": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9399,
        9427
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2982": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9430,
        9454
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2983": {
      "branch": 112,
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9430,
        9454
      ],
      "op": "GT",
      "path": "22"
    },
    "2984": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9430,
        9505
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBB1"
    },
    "2987": {
      "branch": 112,
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9430,
        9505
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2988": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9493,
        9505
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2989": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9430,
        9505
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBB4"
    },
    "2992": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9430,
        9505
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2993": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9430,
        9505
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2994": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9469,
        9478
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2995": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9469,
        9478
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2996": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9430,
        9505
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2997": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9537
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE"
    },
    "2999": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9537
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3000": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3002": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3003": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3008": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3010": {
      "op": "SHL"
    },
    "3011": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3012": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3013": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9399,
        9505
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3014": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9399,
        9505
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3015": {
      "op": "POP"
    },
    "3016": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9516,
        9528
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3018": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9516,
        9528
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3025": {
      "op": "SHL"
    },
    "3026": {
      "op": "SUB"
    },
    "3027": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9537
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3028": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9537
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3029": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9537
      ],
      "op": "AND",
      "path": "22"
    },
    "3030": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9537
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3031": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9546
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA9059CBB"
    },
    "3036": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9546
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3037": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBEC"
    },
    "3040": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3041": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9547,
        9549
      ],
      "op": "DUP10",
      "path": "22"
    },
    "3042": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9547,
        9549
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3043": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9399,
        9505
      ],
      "op": "DUP7",
      "path": "22"
    },
    "3044": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9399,
        9505
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3045": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3047": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "ADD",
      "path": "22"
    },
    "3048": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2275"
    },
    "3051": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "jump": "i",
      "offset": [
        9531,
        9572
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3052": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3053": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3055": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3057": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3058": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3059": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3060": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "SUB",
      "path": "22"
    },
    "3061": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3062": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3064": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "DUP8",
      "path": "22"
    },
    "3065": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3066": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "3067": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3068": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3069": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3070": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC06"
    },
    "3073": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3074": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3076": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3077": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3078": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3079": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "POP",
      "path": "22"
    },
    "3080": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "GAS",
      "path": "22"
    },
    "3081": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "CALL",
      "path": "22"
    },
    "3082": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3083": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3084": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3085": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC1A"
    },
    "3088": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3089": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3090": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3092": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3093": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "3094": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3095": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3097": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3098": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3099": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "POP",
      "path": "22"
    },
    "3100": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "POP",
      "path": "22"
    },
    "3101": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "POP",
      "path": "22"
    },
    "3102": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "POP",
      "path": "22"
    },
    "3103": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3105": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3106": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3107": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "3109": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "NOT",
      "path": "22"
    },
    "3110": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "3112": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3113": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "ADD",
      "path": "22"
    },
    "3114": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "AND",
      "path": "22"
    },
    "3115": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3116": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "ADD",
      "path": "22"
    },
    "3117": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3118": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3120": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3121": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "POP",
      "path": "22"
    },
    "3122": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3123": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "ADD",
      "path": "22"
    },
    "3124": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3125": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC3E"
    },
    "3128": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3129": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3130": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x20A3"
    },
    "3133": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "jump": "i",
      "offset": [
        9531,
        9572
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3134": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9531,
        9572
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3135": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9516,
        9572
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3136": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9516,
        9572
      ],
      "op": "POP",
      "path": "22"
    },
    "3137": {
      "branch": 113,
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9590,
        9597
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 38
    },
    "3138": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9582,
        9645
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCA1"
    },
    "3141": {
      "branch": 113,
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9582,
        9645
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3142": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9582,
        9645
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3144": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9582,
        9645
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3145": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3151": {
      "op": "SHL"
    },
    "3152": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9582,
        9645
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3153": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9582,
        9645
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3156": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9582,
        9645
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3158": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9582,
        9645
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3159": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9582,
        9645
      ],
      "op": "ADD",
      "path": "22"
    },
    "3160": {
      "op": "MSTORE"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3165": {
      "op": "DUP3"
    },
    "3166": {
      "op": "ADD"
    },
    "3167": {
      "op": "MSTORE"
    },
    "3168": {
      "op": "PUSH32",
      "value": "0x506F6F6C3A20546865205061796F7574207472616E73666572206469646E2774"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3203": {
      "op": "DUP3"
    },
    "3204": {
      "op": "ADD"
    },
    "3205": {
      "op": "MSTORE"
    },
    "3206": {
      "op": "PUSH11",
      "value": "0x40CEDE40E8D0E4DEEACED"
    },
    "3218": {
      "op": "PUSH1",
      "value": "0xAB"
    },
    "3220": {
      "op": "SHL"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3223": {
      "op": "DUP3"
    },
    "3224": {
      "op": "ADD"
    },
    "3225": {
      "op": "MSTORE"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3228": {
      "op": "ADD"
    },
    "3229": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9582,
        9645
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6DA"
    },
    "3232": {
      "op": "JUMP"
    },
    "3233": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9582,
        9645
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3234": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9684,
        9686
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3235": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9684,
        9694
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "3237": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9684,
        9694
      ],
      "op": "ADD",
      "path": "22"
    },
    "3238": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9684,
        9694
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3239": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9660,
        9680
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3240": {
      "branch": 114,
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9660,
        9694
      ],
      "op": "GT",
      "path": "22"
    },
    "3241": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9656,
        9821
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCE2"
    },
    "3244": {
      "branch": 114,
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9656,
        9821
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3245": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9720,
        9722
      ],
      "op": "DUP7",
      "path": "22",
      "statement": 39
    },
    "3246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3248": {
      "op": "DUP1"
    },
    "3249": {
      "op": "MLOAD"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3252": {
      "op": "PUSH2",
      "value": "0x245B"
    },
    "3255": {
      "op": "DUP4"
    },
    "3256": {
      "op": "CODECOPY"
    },
    "3257": {
      "op": "DUP2"
    },
    "3258": {
      "op": "MLOAD"
    },
    "3259": {
      "op": "SWAP2"
    },
    "3260": {
      "op": "MSTORE"
    },
    "3261": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9737,
        9757
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3262": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9724,
        9726
      ],
      "op": "DUP6",
      "path": "22"
    },
    "3263": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9724,
        9734
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "3265": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9724,
        9734
      ],
      "op": "ADD",
      "path": "22"
    },
    "3266": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9724,
        9734
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3267": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9724,
        9757
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCCC"
    },
    "3270": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9724,
        9757
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3271": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9724,
        9757
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3272": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9724,
        9757
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2385"
    },
    "3275": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "jump": "i",
      "offset": [
        9724,
        9757
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3276": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9724,
        9757
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3277": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9713,
        9758
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3279": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9713,
        9758
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3280": {
      "op": "SWAP1"
    },
    "3281": {
      "op": "DUP2"
    },
    "3282": {
      "op": "MSTORE"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3285": {
      "op": "ADD"
    },
    "3286": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9713,
        9758
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3288": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9713,
        9758
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3289": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9713,
        9758
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3290": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9713,
        9758
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3291": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9713,
        9758
      ],
      "op": "SUB",
      "path": "22"
    },
    "3292": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9713,
        9758
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3293": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9713,
        9758
      ],
      "op": "LOG2",
      "path": "22"
    },
    "3294": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9656,
        9821
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD26"
    },
    "3297": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9656,
        9821
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3298": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9656,
        9821
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3299": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9783,
        9785
      ],
      "op": "DUP7",
      "path": "22",
      "statement": 40
    },
    "3300": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9778,
        9821
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x86F83F021A5ECB92D6DCAEC11BE9DA0E65B5401CE748AC3C1F0DDBAE029F55CE"
    },
    "3333": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9810,
        9812
      ],
      "op": "DUP5",
      "path": "22"
    },
    "3334": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9810,
        9820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "3336": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9810,
        9820
      ],
      "op": "ADD",
      "path": "22"
    },
    "3337": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9810,
        9820
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3338": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9787,
        9807
      ],
      "op": "DUP5",
      "path": "22"
    },
    "3339": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9787,
        9820
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD14"
    },
    "3342": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9787,
        9820
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3343": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9787,
        9820
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3344": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9787,
        9820
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2385"
    },
    "3347": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "jump": "i",
      "offset": [
        9787,
        9820
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3348": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9787,
        9820
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3349": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9778,
        9821
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3351": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9778,
        9821
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3352": {
      "op": "SWAP1"
    },
    "3353": {
      "op": "DUP2"
    },
    "3354": {
      "op": "MSTORE"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3357": {
      "op": "ADD"
    },
    "3358": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9778,
        9821
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3360": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9778,
        9821
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3361": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9778,
        9821
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3362": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9778,
        9821
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3363": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9778,
        9821
      ],
      "op": "SUB",
      "path": "22"
    },
    "3364": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9778,
        9821
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3365": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9778,
        9821
      ],
      "op": "LOG2",
      "path": "22"
    },
    "3366": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        9656,
        9821
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3367": {
      "offset": [
        2470,
        2471
      ],
      "op": "POP",
      "path": "0"
    },
    "3368": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        2470,
        2471
      ],
      "op": "POP",
      "path": "0"
    },
    "3369": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        2470,
        2471
      ],
      "op": "POP",
      "path": "0"
    },
    "3370": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        8947,
        9828
      ],
      "op": "POP",
      "path": "22"
    },
    "3371": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        8947,
        9828
      ],
      "op": "POP",
      "path": "22"
    },
    "3372": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        8947,
        9828
      ],
      "op": "POP",
      "path": "22"
    },
    "3373": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        8947,
        9828
      ],
      "op": "POP",
      "path": "22"
    },
    "3374": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "jump": "o",
      "offset": [
        8947,
        9828
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3375": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3376": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2912,
        2916
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3378": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 41
    },
    "3379": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3380": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3381": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3383": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3385": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3386": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3387": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3388": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3390": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3391": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3392": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3399": {
      "op": "SHL"
    },
    "3400": {
      "op": "SUB"
    },
    "3401": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3402": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3403": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3404": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "AND",
      "path": "0"
    },
    "3405": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3406": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3407": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3408": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3409": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3410": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3411": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3412": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3413": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3415": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "AND",
      "path": "0"
    },
    "3416": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3417": {
      "fn": "AccessControl.hasRole",
      "jump": "o",
      "offset": [
        2834,
        2971
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3418": {
      "fn": "BufferBinaryIBFRPoolBinary.symbol",
      "offset": [
        1786,
        1888
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3419": {
      "fn": "BufferBinaryIBFRPoolBinary.symbol",
      "offset": [
        1842,
        1855
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "3421": {
      "fn": "BufferBinaryIBFRPoolBinary.symbol",
      "offset": [
        1874,
        1881
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 42,
      "value": "0x7"
    },
    "3423": {
      "fn": "BufferBinaryIBFRPoolBinary.symbol",
      "offset": [
        1867,
        1881
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3424": {
      "fn": "BufferBinaryIBFRPoolBinary.symbol",
      "offset": [
        1867,
        1881
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3425": {
      "fn": "BufferBinaryIBFRPoolBinary.symbol",
      "offset": [
        1867,
        1881
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x563"
    },
    "3428": {
      "fn": "BufferBinaryIBFRPoolBinary.symbol",
      "offset": [
        1867,
        1881
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3429": {
      "fn": "BufferBinaryIBFRPoolBinary.symbol",
      "offset": [
        1867,
        1881
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23DF"
    },
    "3432": {
      "fn": "BufferBinaryIBFRPoolBinary.symbol",
      "jump": "i",
      "offset": [
        1867,
        1881
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3433": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2159,
        2388
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3434": {
      "offset": [
        1997,
        2001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3436": {
      "offset": [
        2430,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD75"
    },
    "3439": {
      "offset": [
        1997,
        2001
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3440": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3441": {
      "offset": [
        2430,
        2440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A61"
    },
    "3444": {
      "jump": "i",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3445": {
      "fn": "Context._msgSender",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3446": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2269,
        2307
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 43,
      "value": "0xD8D"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3451": {
      "op": "DUP1"
    },
    "3452": {
      "op": "MLOAD"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3455": {
      "op": "PUSH2",
      "value": "0x247B"
    },
    "3458": {
      "op": "DUP4"
    },
    "3459": {
      "op": "CODECOPY"
    },
    "3460": {
      "op": "DUP2"
    },
    "3461": {
      "op": "MLOAD"
    },
    "3462": {
      "op": "SWAP2"
    },
    "3463": {
      "op": "MSTORE"
    },
    "3464": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2299,
        2306
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3465": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2269,
        2278
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x71A"
    },
    "3468": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "jump": "i",
      "offset": [
        2269,
        2307
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3469": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2269,
        2307
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3470": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2317,
        2329
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 44,
      "value": "0xB"
    },
    "3472": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2317,
        2339
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3473": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2317,
        2339
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3478": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3480": {
      "op": "SHL"
    },
    "3481": {
      "op": "SUB"
    },
    "3482": {
      "op": "NOT"
    },
    "3483": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2317,
        2339
      ],
      "op": "AND",
      "path": "22"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3490": {
      "op": "SHL"
    },
    "3491": {
      "op": "SUB"
    },
    "3492": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2317,
        2339
      ],
      "op": "DUP5",
      "path": "22"
    },
    "3493": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2317,
        2339
      ],
      "op": "AND",
      "path": "22"
    },
    "3494": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2317,
        2339
      ],
      "op": "OR",
      "path": "22"
    },
    "3495": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2317,
        2339
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3496": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2317,
        2339
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3497": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2354,
        2381
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 45,
      "value": "0x40"
    },
    "3499": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2354,
        2381
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3500": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2354,
        2381
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xB36DB503700BF425DC3B747B57DA91CB2E39A0D909ADA3206BD18B034D7053CA"
    },
    "3533": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2354,
        2381
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3534": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2354,
        2381
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDD8"
    },
    "3537": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2354,
        2381
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3538": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2317,
        2339
      ],
      "op": "DUP5",
      "path": "22"
    },
    "3539": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2317,
        2339
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3540": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2354,
        2381
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x223D"
    },
    "3543": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "jump": "i",
      "offset": [
        2354,
        2381
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3544": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2354,
        2381
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3545": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2354,
        2381
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3547": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2354,
        2381
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3548": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2354,
        2381
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3549": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2354,
        2381
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3550": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2354,
        2381
      ],
      "op": "SUB",
      "path": "22"
    },
    "3551": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2354,
        2381
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3552": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2354,
        2381
      ],
      "op": "LOG1",
      "path": "22"
    },
    "3553": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2159,
        2388
      ],
      "op": "POP",
      "path": "22"
    },
    "3554": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "offset": [
        2159,
        2388
      ],
      "op": "POP",
      "path": "22"
    },
    "3555": {
      "fn": "BufferBinaryIBFRPoolBinary.setProjectOwner",
      "jump": "o",
      "offset": [
        2159,
        2388
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3556": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3557": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3558": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6479,
        6483
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3560": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3561": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3562": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3563": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6533
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3565": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3567": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3568": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3569": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3570": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3572": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3573": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3574": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3581": {
      "op": "SHL"
    },
    "3582": {
      "op": "SUB"
    },
    "3583": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3584": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "AND",
      "path": "4"
    },
    "3585": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3586": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3587": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3588": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3589": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3590": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3591": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3592": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3593": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6574,
        6609
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 46
    },
    "3594": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6574,
        6609
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3595": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6574,
        6609
      ],
      "op": "LT",
      "path": "4"
    },
    "3596": {
      "branch": 137,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6574,
        6609
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3597": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE66"
    },
    "3600": {
      "branch": 137,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3601": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3603": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3604": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3610": {
      "op": "SHL"
    },
    "3611": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3612": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3615": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3617": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3618": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "ADD",
      "path": "4"
    },
    "3619": {
      "op": "MSTORE"
    },
    "3620": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "3622": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3624": {
      "op": "DUP3"
    },
    "3625": {
      "op": "ADD"
    },
    "3626": {
      "op": "MSTORE"
    },
    "3627": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3662": {
      "op": "DUP3"
    },
    "3663": {
      "op": "ADD"
    },
    "3664": {
      "op": "MSTORE"
    },
    "3665": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "3671": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3673": {
      "op": "SHL"
    },
    "3674": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3676": {
      "op": "DUP3"
    },
    "3677": {
      "op": "ADD"
    },
    "3678": {
      "op": "MSTORE"
    },
    "3679": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3681": {
      "op": "ADD"
    },
    "3682": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6DA"
    },
    "3685": {
      "op": "JUMP"
    },
    "3686": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3687": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6752
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 47,
      "value": "0xE73"
    },
    "3690": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3691": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6708,
        6715
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3692": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6736,
        6751
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3693": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6717,
        6733
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3694": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6717,
        6751
      ],
      "op": "SUB",
      "path": "4"
    },
    "3695": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6693
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1421"
    },
    "3698": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6685,
        6752
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3699": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6752
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3700": {
      "op": "POP"
    },
    "3701": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6780,
        6784
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 48,
      "value": "0x1"
    },
    "3703": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6780,
        6784
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "3704": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3705": {
      "op": "POP"
    },
    "3706": {
      "op": "POP"
    },
    "3707": {
      "op": "POP"
    },
    "3708": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3709": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3710": {
      "fn": "ERC20.transfer",
      "offset": [
        3750,
        3754
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3712": {
      "fn": "ERC20.transfer",
      "offset": [
        3766,
        3808
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 49,
      "value": "0x5F3"
    },
    "3715": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3716": {
      "fn": "ERC20.transfer",
      "offset": [
        3790,
        3799
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3717": {
      "fn": "ERC20.transfer",
      "offset": [
        3801,
        3807
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3718": {
      "fn": "ERC20.transfer",
      "offset": [
        3766,
        3775
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1604"
    },
    "3721": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3766,
        3808
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3722": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        10320,
        10445
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3723": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        10369,
        10384
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3725": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        10426,
        10438
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 50,
      "value": "0x8"
    },
    "3727": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        10426,
        10438
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3728": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        10403,
        10423
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE97"
    },
    "3731": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF03"
    },
    "3734": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "jump": "i",
      "offset": [
        10403,
        10423
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3735": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        10403,
        10423
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3736": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        10403,
        10438
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7B9"
    },
    "3739": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        10403,
        10438
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3740": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        10403,
        10438
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3741": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        10403,
        10438
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2385"
    },
    "3744": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "jump": "i",
      "offset": [
        10403,
        10438
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3745": {
      "offset": [
        789,
        849
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3746": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "3748": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3750": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3751": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3752": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3754": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3755": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3757": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3759": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "3760": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3761": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3762": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3763": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3764": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "LT",
      "path": "22"
    },
    "3765": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xEBD"
    },
    "3768": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3769": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3771": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3772": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3773": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3774": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3776": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3777": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3778": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3779": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3781": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3782": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3783": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "3784": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "3786": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3787": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3788": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "MUL",
      "path": "22"
    },
    "3789": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "ADD",
      "path": "22"
    },
    "3790": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3791": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3792": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "3794": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3795": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "ADD",
      "path": "22"
    },
    "3796": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3797": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3799": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3800": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3801": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "ADD",
      "path": "22"
    },
    "3802": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3803": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3804": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "3805": {
      "op": "POP"
    },
    "3806": {
      "offset": [
        789,
        849
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3807": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3808": {
      "op": "POP"
    },
    "3809": {
      "offset": [
        789,
        849
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "3811": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "AND",
      "path": "22"
    },
    "3812": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "offset": [
        789,
        849
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3813": {
      "fn": "BufferBinaryIBFRPoolBinary.availableBalance",
      "jump": "o",
      "offset": [
        789,
        849
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3814": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3815": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4751,
        4769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEEF"
    },
    "3818": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4764,
        4768
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3819": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4751,
        4763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FB"
    },
    "3822": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        4751,
        4769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3823": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4751,
        4769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3824": {
      "offset": [
        2430,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEF9"
    },
    "3827": {
      "offset": [
        2441,
        2445
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3828": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3829": {
      "offset": [
        2430,
        2440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A61"
    },
    "3832": {
      "jump": "i",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3833": {
      "fn": "Context._msgSender",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3834": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4781,
        4807
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 51,
      "value": "0x737"
    },
    "3837": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4793,
        4797
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3838": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4799,
        4806
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3839": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4781,
        4792
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B4B"
    },
    "3842": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        4781,
        4807
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3843": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10570,
        10754
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3844": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10734,
        10747
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 52,
      "value": "0x9"
    },
    "3846": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10734,
        10747
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3847": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10706
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE"
    },
    "3849": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10706
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3850": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3852": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3853": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3860": {
      "op": "SHL"
    },
    "3861": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3862": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3863": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10662,
        10677
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3865": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10662,
        10677
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3866": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10734,
        10747
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3873": {
      "op": "SHL"
    },
    "3874": {
      "op": "SUB"
    },
    "3875": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10706
      ],
      "op": "AND",
      "path": "22"
    },
    "3876": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10706
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3877": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10716
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70A08231"
    },
    "3882": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10716
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3883": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF38"
    },
    "3886": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3887": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10725,
        10729
      ],
      "op": "ADDRESS",
      "path": "22"
    },
    "3888": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10725,
        10729
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3889": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3891": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "ADD",
      "path": "22"
    },
    "3892": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x223D"
    },
    "3895": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "jump": "i",
      "offset": [
        10700,
        10731
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3896": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3897": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3899": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3901": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3902": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3903": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3904": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "SUB",
      "path": "22"
    },
    "3905": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3906": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "DUP7",
      "path": "22"
    },
    "3907": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3908": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "3909": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3910": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3911": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3912": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF50"
    },
    "3915": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3916": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3918": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3919": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3920": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3921": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "POP",
      "path": "22"
    },
    "3922": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "GAS",
      "path": "22"
    },
    "3923": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "3924": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3925": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3926": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3927": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF64"
    },
    "3930": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3931": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3932": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3934": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3935": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "3936": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3937": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3939": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3940": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3941": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "POP",
      "path": "22"
    },
    "3942": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "POP",
      "path": "22"
    },
    "3943": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "POP",
      "path": "22"
    },
    "3944": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "POP",
      "path": "22"
    },
    "3945": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3947": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3948": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3949": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "3951": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "NOT",
      "path": "22"
    },
    "3952": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "3954": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3955": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "ADD",
      "path": "22"
    },
    "3956": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "AND",
      "path": "22"
    },
    "3957": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3958": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "ADD",
      "path": "22"
    },
    "3959": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3960": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3962": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3963": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "POP",
      "path": "22"
    },
    "3964": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3965": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "ADD",
      "path": "22"
    },
    "3966": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3967": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE97"
    },
    "3970": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3971": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3972": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "offset": [
        10700,
        10731
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2125"
    },
    "3975": {
      "fn": "BufferBinaryIBFRPoolBinary.totalTokenXBalance",
      "jump": "i",
      "offset": [
        10700,
        10731
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3976": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3185,
        4081
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3977": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3275,
        3287
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3979": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3303,
        3317
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3980": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3320,
        3333
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF94"
    },
    "3983": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3259,
        3271
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "3985": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3259,
        3271
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3986": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3259,
        3271
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3987": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3988": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3320,
        3333
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3989": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3303,
        3333
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3990": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3303,
        3333
      ],
      "op": "POP",
      "path": "22"
    },
    "3991": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3343,
        3358
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3993": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3361,
        3381
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFA0"
    },
    "3996": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3361,
        3379
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF03"
    },
    "3999": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "jump": "i",
      "offset": [
        3361,
        3381
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4000": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3361,
        3381
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4001": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3439,
        3451
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 53,
      "value": "0xA"
    },
    "4003": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3439,
        3451
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4004": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3343,
        3381
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4005": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3343,
        3381
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4006": {
      "op": "POP"
    },
    "4007": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3413,
        3435
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFB0"
    },
    "4010": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3423,
        3435
      ],
      "op": "DUP7",
      "path": "22"
    },
    "4011": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3343,
        3381
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4012": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3413,
        3435
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x233A"
    },
    "4015": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "jump": "i",
      "offset": [
        3413,
        3435
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4016": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3413,
        3435
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4017": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3413,
        3451
      ],
      "op": "GT",
      "path": "22"
    },
    "4018": {
      "branch": 115,
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3413,
        3451
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4019": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3392,
        3516
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100E"
    },
    "4022": {
      "branch": 115,
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3392,
        3516
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4023": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3392,
        3516
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4025": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3392,
        3516
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4026": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4032": {
      "op": "SHL"
    },
    "4033": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3392,
        3516
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4034": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3392,
        3516
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4037": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3392,
        3516
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4039": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3392,
        3516
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4040": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3392,
        3516
      ],
      "op": "ADD",
      "path": "22"
    },
    "4041": {
      "op": "MSTORE"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4046": {
      "op": "DUP3"
    },
    "4047": {
      "op": "ADD"
    },
    "4048": {
      "op": "MSTORE"
    },
    "4049": {
      "op": "PUSH32",
      "value": "0x506F6F6C2068617320616C726561647920726561636865642069742773206D61"
    },
    "4082": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4084": {
      "op": "DUP3"
    },
    "4085": {
      "op": "ADD"
    },
    "4086": {
      "op": "MSTORE"
    },
    "4087": {
      "op": "PUSH7",
      "value": "0x1E081B1A5B5A5D"
    },
    "4095": {
      "op": "PUSH1",
      "value": "0xCA"
    },
    "4097": {
      "op": "SHL"
    },
    "4098": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4100": {
      "op": "DUP3"
    },
    "4101": {
      "op": "ADD"
    },
    "4102": {
      "op": "MSTORE"
    },
    "4103": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4105": {
      "op": "ADD"
    },
    "4106": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3392,
        3516
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6DA"
    },
    "4109": {
      "op": "JUMP"
    },
    "4110": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3392,
        3516
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4111": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3540,
        3541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4113": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3531,
        3537
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4114": {
      "branch": 116,
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3531,
        3541
      ],
      "op": "GT",
      "path": "22"
    },
    "4115": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3531,
        3556
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4116": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3531,
        3556
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4117": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3531,
        3556
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x101E"
    },
    "4120": {
      "branch": 116,
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3531,
        3556
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4121": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3531,
        3556
      ],
      "op": "POP",
      "path": "22"
    },
    "4122": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3555,
        3556
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4124": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3545,
        3552
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4125": {
      "branch": 117,
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3545,
        3556
      ],
      "op": "GT",
      "path": "22"
    },
    "4126": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3531,
        3556
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4127": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3527,
        3661
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4128": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3527,
        3661
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x103F"
    },
    "4131": {
      "branch": 117,
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3527,
        3661
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4132": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3604,
        3611
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 54
    },
    "4133": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3578,
        3599
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x102E"
    },
    "4136": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3593,
        3599
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4137": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3578,
        3590
      ],
      "op": "DUP8",
      "path": "22"
    },
    "4138": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3578,
        3599
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2366"
    },
    "4141": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "jump": "i",
      "offset": [
        3578,
        3599
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4142": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3578,
        3599
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4143": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3577,
        3612
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1038"
    },
    "4146": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3577,
        3612
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4147": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3577,
        3612
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4148": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3577,
        3612
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2352"
    },
    "4151": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "jump": "i",
      "offset": [
        3577,
        3612
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4152": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3577,
        3612
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4153": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3570,
        3612
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4154": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3570,
        3612
      ],
      "op": "POP",
      "path": "22"
    },
    "4155": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3527,
        3661
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x104E"
    },
    "4158": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3527,
        3661
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4159": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3527,
        3661
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4160": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3634,
        3661
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 55,
      "value": "0x104B"
    },
    "4163": {
      "offset": [
        621,
        624
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3E8"
    },
    "4166": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3634,
        3646
      ],
      "op": "DUP7",
      "path": "22"
    },
    "4167": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3634,
        3661
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2366"
    },
    "4170": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "jump": "i",
      "offset": [
        3634,
        3661
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4171": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3634,
        3661
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4172": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3627,
        3661
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4173": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3627,
        3661
      ],
      "op": "POP",
      "path": "22"
    },
    "4174": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3527,
        3661
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4175": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3688,
        3695
      ],
      "op": "DUP4",
      "path": "22",
      "statement": 56
    },
    "4176": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4177": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3680,
        3695
      ],
      "op": "LT",
      "path": "22"
    },
    "4178": {
      "branch": 118,
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3680,
        3695
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4179": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3672,
        3729
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x109E"
    },
    "4182": {
      "branch": 118,
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3672,
        3729
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4183": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3672,
        3729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4185": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3672,
        3729
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4186": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4192": {
      "op": "SHL"
    },
    "4193": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3672,
        3729
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4194": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3672,
        3729
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4195": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4197": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3672,
        3729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4199": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3672,
        3729
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4200": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3672,
        3729
      ],
      "op": "ADD",
      "path": "22"
    },
    "4201": {
      "op": "MSTORE"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4204": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4206": {
      "op": "DUP3"
    },
    "4207": {
      "op": "ADD"
    },
    "4208": {
      "op": "MSTORE"
    },
    "4209": {
      "op": "PUSH32",
      "value": "0x506F6F6C3A204D696E74206C696D697420697320746F6F206C61726765000000"
    },
    "4242": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4244": {
      "op": "DUP3"
    },
    "4245": {
      "op": "ADD"
    },
    "4246": {
      "op": "MSTORE"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4249": {
      "op": "ADD"
    },
    "4250": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3672,
        3729
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6DA"
    },
    "4253": {
      "op": "JUMP"
    },
    "4254": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3672,
        3729
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4255": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3754,
        3755
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 57,
      "value": "0x0"
    },
    "4257": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3747,
        3751
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4258": {
      "branch": 119,
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3747,
        3755
      ],
      "op": "GT",
      "path": "22"
    },
    "4259": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3739,
        3785
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10BE"
    },
    "4262": {
      "branch": 119,
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3739,
        3785
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4263": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3739,
        3785
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4265": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3739,
        3785
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4266": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4270": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4272": {
      "op": "SHL"
    },
    "4273": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3739,
        3785
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4274": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3739,
        3785
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4275": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3739,
        3785
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4277": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3739,
        3785
      ],
      "op": "ADD",
      "path": "22"
    },
    "4278": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3739,
        3785
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6DA"
    },
    "4281": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3739,
        3785
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4282": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3739,
        3785
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2307"
    },
    "4285": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "jump": "i",
      "offset": [
        3739,
        3785
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4286": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3739,
        3785
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4287": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3817
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE"
    },
    "4289": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3817
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4290": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4292": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4293": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4300": {
      "op": "SHL"
    },
    "4301": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4302": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4303": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3796,
        3808
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4305": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3796,
        3808
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4312": {
      "op": "SHL"
    },
    "4313": {
      "op": "SUB"
    },
    "4314": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3817
      ],
      "op": "AND",
      "path": "22"
    },
    "4315": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3817
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4316": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3830
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x23B872DD"
    },
    "4321": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3830
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4322": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10F3"
    },
    "4325": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4326": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3844,
        3854
      ],
      "op": "CALLER",
      "path": "22"
    },
    "4327": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3844,
        3854
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4328": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3876,
        3880
      ],
      "op": "ADDRESS",
      "path": "22"
    },
    "4329": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3876,
        3880
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4330": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3895,
        3907
      ],
      "op": "DUP12",
      "path": "22"
    },
    "4331": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3895,
        3907
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4332": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4334": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "ADD",
      "path": "22"
    },
    "4335": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2251"
    },
    "4338": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "jump": "i",
      "offset": [
        3811,
        3917
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4339": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4340": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4342": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4344": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4345": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4346": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4347": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "SUB",
      "path": "22"
    },
    "4348": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4349": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4351": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "DUP8",
      "path": "22"
    },
    "4352": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4353": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "4354": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4355": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4356": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4357": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x110D"
    },
    "4360": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4361": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4363": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4364": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "REVERT",
      "path": "22"
    },
    "4365": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4366": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "POP",
      "path": "22"
    },
    "4367": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "GAS",
      "path": "22"
    },
    "4368": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "CALL",
      "path": "22"
    },
    "4369": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4370": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4371": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4372": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1121"
    },
    "4375": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4376": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "4377": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4379": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4380": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "4381": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "4382": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4384": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "REVERT",
      "path": "22"
    },
    "4385": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4386": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "POP",
      "path": "22"
    },
    "4387": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "POP",
      "path": "22"
    },
    "4388": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "POP",
      "path": "22"
    },
    "4389": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "POP",
      "path": "22"
    },
    "4390": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4392": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4393": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "4394": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "4396": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "NOT",
      "path": "22"
    },
    "4397": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "4399": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4400": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "ADD",
      "path": "22"
    },
    "4401": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "AND",
      "path": "22"
    },
    "4402": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4403": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "ADD",
      "path": "22"
    },
    "4404": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4405": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4407": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4408": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "POP",
      "path": "22"
    },
    "4409": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4410": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "ADD",
      "path": "22"
    },
    "4411": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4412": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1145"
    },
    "4415": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4416": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4417": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x20A3"
    },
    "4420": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "jump": "i",
      "offset": [
        3811,
        3917
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4421": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3811,
        3917
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4422": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3796,
        3917
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4423": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3796,
        3917
      ],
      "op": "POP",
      "path": "22"
    },
    "4424": {
      "branch": 120,
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3935,
        3942
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 58
    },
    "4425": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3927,
        3985
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x11A3"
    },
    "4428": {
      "branch": 120,
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3927,
        3985
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4429": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3927,
        3985
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4431": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3927,
        3985
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4432": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4438": {
      "op": "SHL"
    },
    "4439": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3927,
        3985
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4440": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3927,
        3985
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4443": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3927,
        3985
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4445": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3927,
        3985
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4446": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3927,
        3985
      ],
      "op": "ADD",
      "path": "22"
    },
    "4447": {
      "op": "MSTORE"
    },
    "4448": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4450": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4452": {
      "op": "DUP3"
    },
    "4453": {
      "op": "ADD"
    },
    "4454": {
      "op": "MSTORE"
    },
    "4455": {
      "op": "PUSH32",
      "value": "0x5468652050726F76696465207472616E73666572206469646E277420676F2074"
    },
    "4488": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4490": {
      "op": "DUP3"
    },
    "4491": {
      "op": "ADD"
    },
    "4492": {
      "op": "MSTORE"
    },
    "4493": {
      "op": "PUSH6",
      "value": "0xD0E4DEEACED"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0xD3"
    },
    "4502": {
      "op": "SHL"
    },
    "4503": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4505": {
      "op": "DUP3"
    },
    "4506": {
      "op": "ADD"
    },
    "4507": {
      "op": "MSTORE"
    },
    "4508": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4510": {
      "op": "ADD"
    },
    "4511": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3927,
        3985
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6DA"
    },
    "4514": {
      "op": "JUMP"
    },
    "4515": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3927,
        3985
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4516": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3996,
        4019
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 59,
      "value": "0x11AD"
    },
    "4519": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        4002,
        4012
      ],
      "op": "CALLER",
      "path": "22"
    },
    "4520": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        4014,
        4018
      ],
      "op": "DUP6",
      "path": "22"
    },
    "4521": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3996,
        4001
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1BB2"
    },
    "4524": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "jump": "i",
      "offset": [
        3996,
        4019
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4525": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3996,
        4019
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4526": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        4035,
        4074
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 60,
      "value": "0x40"
    },
    "4528": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        4035,
        4074
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4529": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        4035,
        4074
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4530": {
      "op": "DUP8"
    },
    "4531": {
      "op": "DUP2"
    },
    "4532": {
      "op": "MSTORE"
    },
    "4533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4535": {
      "op": "DUP2"
    },
    "4536": {
      "op": "ADD"
    },
    "4537": {
      "op": "DUP7"
    },
    "4538": {
      "op": "SWAP1"
    },
    "4539": {
      "op": "MSTORE"
    },
    "4540": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        4043,
        4053
      ],
      "op": "CALLER",
      "path": "22"
    },
    "4541": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        4043,
        4053
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4542": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        4035,
        4074
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x4089141EA5E4C16575F5EBF65F1786497EA07C175846FC7745EF8D8986A4FF65"
    },
    "4575": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        4035,
        4074
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4576": {
      "op": "ADD"
    },
    "4577": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        4035,
        4074
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4579": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        4035,
        4074
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4580": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        4035,
        4074
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4581": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        4035,
        4074
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4582": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        4035,
        4074
      ],
      "op": "SUB",
      "path": "22"
    },
    "4583": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        4035,
        4074
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4584": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        4035,
        4074
      ],
      "op": "LOG2",
      "path": "22"
    },
    "4585": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3185,
        4081
      ],
      "op": "POP",
      "path": "22"
    },
    "4586": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3185,
        4081
      ],
      "op": "POP",
      "path": "22"
    },
    "4587": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3185,
        4081
      ],
      "op": "POP",
      "path": "22"
    },
    "4588": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3185,
        4081
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4589": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3185,
        4081
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4590": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3185,
        4081
      ],
      "op": "POP",
      "path": "22"
    },
    "4591": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "offset": [
        3185,
        4081
      ],
      "op": "POP",
      "path": "22"
    },
    "4592": {
      "fn": "BufferBinaryIBFRPoolBinary.provide",
      "jump": "o",
      "offset": [
        3185,
        4081
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4593": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6190,
        6908
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4596": {
      "op": "DUP1"
    },
    "4597": {
      "op": "MLOAD"
    },
    "4598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4600": {
      "op": "PUSH2",
      "value": "0x249B"
    },
    "4603": {
      "op": "DUP4"
    },
    "4604": {
      "op": "CODECOPY"
    },
    "4605": {
      "op": "DUP2"
    },
    "4606": {
      "op": "MLOAD"
    },
    "4607": {
      "op": "SWAP2"
    },
    "4608": {
      "op": "MSTORE"
    },
    "4609": {
      "offset": [
        2430,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120A"
    },
    "4612": {
      "offset": [
        909,
        940
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4613": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "4614": {
      "offset": [
        2430,
        2440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A61"
    },
    "4617": {
      "jump": "i",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4618": {
      "fn": "Context._msgSender",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4619": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6372,
        6382
      ],
      "op": "CALLER",
      "path": "22",
      "statement": 61
    },
    "4620": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6356,
        6383
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4622": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6356,
        6383
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4623": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6356,
        6383
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4624": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6356,
        6383
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4625": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6356,
        6371
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "4627": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6356,
        6383
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4629": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6356,
        6383
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4630": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6356,
        6383
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4632": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6356,
        6383
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4633": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6356,
        6383
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4634": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6356,
        6390
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4635": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6350,
        6390
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4636": {
      "branch": 121,
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6350,
        6390
      ],
      "op": "EQ",
      "path": "22"
    },
    "4637": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6342,
        6403
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1253"
    },
    "4640": {
      "branch": 121,
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6342,
        6403
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4641": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6342,
        6403
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4643": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6342,
        6403
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4644": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4648": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4650": {
      "op": "SHL"
    },
    "4651": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6342,
        6403
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4652": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6342,
        6403
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4655": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6342,
        6403
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4657": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6342,
        6403
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4658": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6342,
        6403
      ],
      "op": "ADD",
      "path": "22"
    },
    "4659": {
      "op": "MSTORE"
    },
    "4660": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4664": {
      "op": "DUP3"
    },
    "4665": {
      "op": "ADD"
    },
    "4666": {
      "op": "MSTORE"
    },
    "4667": {
      "op": "PUSH8",
      "value": "0x15DC9BDB99C81A59"
    },
    "4676": {
      "op": "PUSH1",
      "value": "0xC2"
    },
    "4678": {
      "op": "SHL"
    },
    "4679": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4681": {
      "op": "DUP3"
    },
    "4682": {
      "op": "ADD"
    },
    "4683": {
      "op": "MSTORE"
    },
    "4684": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4686": {
      "op": "ADD"
    },
    "4687": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6342,
        6403
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6DA"
    },
    "4690": {
      "op": "JUMP"
    },
    "4691": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6342,
        6403
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4692": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6468,
        6488
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 62,
      "value": "0x125B"
    },
    "4695": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6468,
        6486
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF03"
    },
    "4698": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "jump": "i",
      "offset": [
        6468,
        6488
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4699": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6468,
        6488
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4700": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6451,
        6463
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4701": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6436,
        6448
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "4703": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6436,
        6448
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4704": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6436,
        6463
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1269"
    },
    "4707": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6436,
        6463
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4708": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6436,
        6463
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4709": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6436,
        6463
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x233A"
    },
    "4712": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "jump": "i",
      "offset": [
        6436,
        6463
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4713": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6436,
        6463
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4714": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6435,
        6488
      ],
      "op": "GT",
      "path": "22"
    },
    "4715": {
      "branch": 122,
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6435,
        6488
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4716": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6414,
        6540
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x12B4"
    },
    "4719": {
      "branch": 122,
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6414,
        6540
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4720": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6414,
        6540
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4722": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6414,
        6540
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4723": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4727": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4729": {
      "op": "SHL"
    },
    "4730": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6414,
        6540
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4731": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6414,
        6540
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4734": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6414,
        6540
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4736": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6414,
        6540
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4737": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6414,
        6540
      ],
      "op": "ADD",
      "path": "22"
    },
    "4738": {
      "op": "MSTORE"
    },
    "4739": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "4741": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4743": {
      "op": "DUP3"
    },
    "4744": {
      "op": "ADD"
    },
    "4745": {
      "op": "MSTORE"
    },
    "4746": {
      "op": "PUSH26",
      "value": "0x2837B7B61D1020B6B7BAB73A1034B9903A37B7903630B933B297"
    },
    "4773": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "4775": {
      "op": "SHL"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4778": {
      "op": "DUP3"
    },
    "4779": {
      "op": "ADD"
    },
    "4780": {
      "op": "MSTORE"
    },
    "4781": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4783": {
      "op": "ADD"
    },
    "4784": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6414,
        6540
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6DA"
    },
    "4787": {
      "op": "JUMP"
    },
    "4788": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6414,
        6540
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4789": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6572
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE"
    },
    "4791": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6572
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4792": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4794": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4795": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "4800": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4802": {
      "op": "SHL"
    },
    "4803": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4804": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4805": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6551,
        6563
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4807": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6551,
        6563
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4812": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4814": {
      "op": "SHL"
    },
    "4815": {
      "op": "SUB"
    },
    "4816": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6572
      ],
      "op": "AND",
      "path": "22"
    },
    "4817": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6572
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4818": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6585
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x23B872DD"
    },
    "4823": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6585
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4824": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x12E9"
    },
    "4827": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4828": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6586,
        6596
      ],
      "op": "CALLER",
      "path": "22"
    },
    "4829": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6586,
        6596
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4830": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6606,
        6610
      ],
      "op": "ADDRESS",
      "path": "22"
    },
    "4831": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6606,
        6610
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4832": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6613,
        6620
      ],
      "op": "DUP9",
      "path": "22"
    },
    "4833": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6613,
        6620
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4834": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4836": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "ADD",
      "path": "22"
    },
    "4837": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2251"
    },
    "4840": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "jump": "i",
      "offset": [
        6566,
        6621
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4841": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4842": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4844": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4846": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4847": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4848": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4849": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "SUB",
      "path": "22"
    },
    "4850": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4851": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4853": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "DUP8",
      "path": "22"
    },
    "4854": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4855": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "4856": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4857": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4858": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4859": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1303"
    },
    "4862": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4863": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4865": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4866": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "REVERT",
      "path": "22"
    },
    "4867": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4868": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "POP",
      "path": "22"
    },
    "4869": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "GAS",
      "path": "22"
    },
    "4870": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "CALL",
      "path": "22"
    },
    "4871": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4872": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4873": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4874": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1317"
    },
    "4877": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4878": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "4879": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4881": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4882": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "4883": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "4884": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4886": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "REVERT",
      "path": "22"
    },
    "4887": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4888": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "POP",
      "path": "22"
    },
    "4889": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "POP",
      "path": "22"
    },
    "4890": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "POP",
      "path": "22"
    },
    "4891": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "POP",
      "path": "22"
    },
    "4892": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4894": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4895": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "4896": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "4898": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "NOT",
      "path": "22"
    },
    "4899": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "4901": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4902": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "ADD",
      "path": "22"
    },
    "4903": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "AND",
      "path": "22"
    },
    "4904": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4905": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "ADD",
      "path": "22"
    },
    "4906": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4907": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4909": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4910": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "POP",
      "path": "22"
    },
    "4911": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4912": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "ADD",
      "path": "22"
    },
    "4913": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4914": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x133B"
    },
    "4917": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4918": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4919": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x20A3"
    },
    "4922": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "jump": "i",
      "offset": [
        6566,
        6621
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4923": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6566,
        6621
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4924": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6551,
        6621
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4925": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6551,
        6621
      ],
      "op": "POP",
      "path": "22"
    },
    "4926": {
      "branch": 123,
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6639,
        6646
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 63
    },
    "4927": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6631,
        6689
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1399"
    },
    "4930": {
      "branch": 123,
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6631,
        6689
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4931": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6631,
        6689
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4933": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6631,
        6689
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4934": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4938": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4940": {
      "op": "SHL"
    },
    "4941": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6631,
        6689
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4942": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6631,
        6689
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4945": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6631,
        6689
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4947": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6631,
        6689
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4948": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6631,
        6689
      ],
      "op": "ADD",
      "path": "22"
    },
    "4949": {
      "op": "MSTORE"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4954": {
      "op": "DUP3"
    },
    "4955": {
      "op": "ADD"
    },
    "4956": {
      "op": "MSTORE"
    },
    "4957": {
      "op": "PUSH32",
      "value": "0x546865205072656D69756D207472616E73666572206469646E277420676F2074"
    },
    "4990": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4992": {
      "op": "DUP3"
    },
    "4993": {
      "op": "ADD"
    },
    "4994": {
      "op": "MSTORE"
    },
    "4995": {
      "op": "PUSH6",
      "value": "0xD0E4DEEACED"
    },
    "5002": {
      "op": "PUSH1",
      "value": "0xD3"
    },
    "5004": {
      "op": "SHL"
    },
    "5005": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5007": {
      "op": "DUP3"
    },
    "5008": {
      "op": "ADD"
    },
    "5009": {
      "op": "MSTORE"
    },
    "5010": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5012": {
      "op": "ADD"
    },
    "5013": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6631,
        6689
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6DA"
    },
    "5016": {
      "op": "JUMP"
    },
    "5017": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6631,
        6689
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5018": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6716,
        6726
      ],
      "op": "CALLER",
      "path": "22",
      "statement": 64
    },
    "5019": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6727
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5021": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6727
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5022": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6727
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5023": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6727
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5024": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6715
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "5026": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6727
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5028": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6727
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5029": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6727
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5030": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6727
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5031": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6727
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5033": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6727
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5034": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6727
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5035": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6727
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "5036": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5037": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5038": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "5040": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5041": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "ADD",
      "path": "22"
    },
    "5042": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5043": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5044": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "DUP9",
      "path": "22"
    },
    "5045": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5046": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5047": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5048": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5049": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "ADD",
      "path": "22"
    },
    "5050": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "DUP9",
      "path": "22"
    },
    "5051": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5052": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5053": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6785,
        6789
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "5055": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "5056": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5057": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "ADD",
      "path": "22"
    },
    "5058": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5059": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5060": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5061": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5062": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5063": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5064": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "DUP7",
      "path": "22"
    },
    "5065": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "ADD",
      "path": "22"
    },
    "5066": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "DUP6",
      "path": "22"
    },
    "5067": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5068": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "5069": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "DUP8",
      "path": "22"
    },
    "5070": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5071": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "5072": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5073": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "5074": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "5075": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5076": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5077": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "5079": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5080": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5081": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "MUL",
      "path": "22"
    },
    "5082": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "ADD",
      "path": "22"
    },
    "5083": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5084": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5085": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5086": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5087": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5088": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5089": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5090": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "ADD",
      "path": "22"
    },
    "5091": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5092": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5093": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "5095": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5096": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5097": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "ADD",
      "path": "22"
    },
    "5098": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5099": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5100": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5102": {
      "op": "NOT"
    },
    "5103": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "AND",
      "path": "22"
    },
    "5104": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5105": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5106": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5107": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5108": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5109": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5110": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "OR",
      "path": "22"
    },
    "5111": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5112": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6700,
        6800
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5113": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6826,
        6839
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 65,
      "value": "0x9"
    },
    "5115": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6826,
        6839
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5116": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6826,
        6849
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1406"
    },
    "5119": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6826,
        6849
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5120": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5121": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6746,
        6790
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5122": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6826,
        6849
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x233A"
    },
    "5125": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "jump": "i",
      "offset": [
        6826,
        6849
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5126": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6826,
        6849
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5127": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6810,
        6823
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "5129": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6810,
        6849
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5130": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6874,
        6886
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 66,
      "value": "0x8"
    },
    "5132": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6874,
        6886
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5133": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6874,
        6901
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1417"
    },
    "5136": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6874,
        6901
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5137": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6889,
        6901
      ],
      "op": "DUP6",
      "path": "22"
    },
    "5138": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6889,
        6901
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5139": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6874,
        6901
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x233A"
    },
    "5142": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "jump": "i",
      "offset": [
        6874,
        6901
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5143": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6874,
        6901
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5144": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6859,
        6871
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "5146": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        6859,
        6901
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5147": {
      "op": "POP"
    },
    "5148": {
      "op": "POP"
    },
    "5149": {
      "op": "POP"
    },
    "5150": {
      "op": "POP"
    },
    "5151": {
      "op": "POP"
    },
    "5152": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "jump": "o",
      "offset": [
        6190,
        6908
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5153": {
      "fn": "ERC20._approve",
      "offset": [
        9962,
        10332
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5160": {
      "op": "SHL"
    },
    "5161": {
      "op": "SUB"
    },
    "5162": {
      "fn": "ERC20._approve",
      "offset": [
        10093,
        10112
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 67
    },
    "5163": {
      "branch": 138,
      "fn": "ERC20._approve",
      "offset": [
        10093,
        10112
      ],
      "op": "AND",
      "path": "4"
    },
    "5164": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1483"
    },
    "5167": {
      "branch": 138,
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5168": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5170": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5171": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5175": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5177": {
      "op": "SHL"
    },
    "5178": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5179": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5182": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5184": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5185": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "ADD",
      "path": "4"
    },
    "5186": {
      "op": "MSTORE"
    },
    "5187": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5189": {
      "op": "DUP1"
    },
    "5190": {
      "op": "DUP3"
    },
    "5191": {
      "op": "ADD"
    },
    "5192": {
      "op": "MSTORE"
    },
    "5193": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "5226": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5228": {
      "op": "DUP3"
    },
    "5229": {
      "op": "ADD"
    },
    "5230": {
      "op": "MSTORE"
    },
    "5231": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "5236": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5238": {
      "op": "SHL"
    },
    "5239": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5241": {
      "op": "DUP3"
    },
    "5242": {
      "op": "ADD"
    },
    "5243": {
      "op": "MSTORE"
    },
    "5244": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5246": {
      "op": "ADD"
    },
    "5247": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6DA"
    },
    "5250": {
      "op": "JUMP"
    },
    "5251": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5258": {
      "op": "SHL"
    },
    "5259": {
      "op": "SUB"
    },
    "5260": {
      "fn": "ERC20._approve",
      "offset": [
        10171,
        10192
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 68
    },
    "5261": {
      "branch": 139,
      "fn": "ERC20._approve",
      "offset": [
        10171,
        10192
      ],
      "op": "AND",
      "path": "4"
    },
    "5262": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14E4"
    },
    "5265": {
      "branch": 139,
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5266": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5268": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5269": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5273": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5275": {
      "op": "SHL"
    },
    "5276": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5277": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5278": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5280": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5282": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5283": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "ADD",
      "path": "4"
    },
    "5284": {
      "op": "MSTORE"
    },
    "5285": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5287": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5289": {
      "op": "DUP3"
    },
    "5290": {
      "op": "ADD"
    },
    "5291": {
      "op": "MSTORE"
    },
    "5292": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "5325": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5327": {
      "op": "DUP3"
    },
    "5328": {
      "op": "ADD"
    },
    "5329": {
      "op": "MSTORE"
    },
    "5330": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "5333": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "5335": {
      "op": "SHL"
    },
    "5336": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5338": {
      "op": "DUP3"
    },
    "5339": {
      "op": "ADD"
    },
    "5340": {
      "op": "MSTORE"
    },
    "5341": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5343": {
      "op": "ADD"
    },
    "5344": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6DA"
    },
    "5347": {
      "op": "JUMP"
    },
    "5348": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5355": {
      "op": "SHL"
    },
    "5356": {
      "op": "SUB"
    },
    "5357": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 69
    },
    "5358": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5359": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "AND",
      "path": "4"
    },
    "5360": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5362": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5363": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5364": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5365": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10253
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "5367": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5369": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5370": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5371": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5372": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5374": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5375": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5376": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5377": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "5378": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "DUP8",
      "path": "4"
    },
    "5379": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "AND",
      "path": "4"
    },
    "5380": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5381": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5382": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5383": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "5384": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5385": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5386": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5387": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5388": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5389": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5390": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10278
      ],
      "op": "DUP6",
      "path": "4"
    },
    "5391": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10278
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5392": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10278
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "5393": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 70
    },
    "5394": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5395": {
      "op": "DUP5"
    },
    "5396": {
      "op": "DUP2"
    },
    "5397": {
      "op": "MSTORE"
    },
    "5398": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "5431": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5432": {
      "op": "ADD"
    },
    "5433": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5435": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5436": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5437": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5438": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "SUB",
      "path": "4"
    },
    "5439": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5440": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "LOG3",
      "path": "4"
    },
    "5441": {
      "fn": "ERC20._approve",
      "offset": [
        9962,
        10332
      ],
      "op": "POP",
      "path": "4"
    },
    "5442": {
      "fn": "ERC20._approve",
      "offset": [
        9962,
        10332
      ],
      "op": "POP",
      "path": "4"
    },
    "5443": {
      "fn": "ERC20._approve",
      "offset": [
        9962,
        10332
      ],
      "op": "POP",
      "path": "4"
    },
    "5444": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9962,
        10332
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5445": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7808,
        8235
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5446": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7908,
        7923
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5450": {
      "op": "DUP1"
    },
    "5451": {
      "op": "MLOAD"
    },
    "5452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5454": {
      "op": "PUSH2",
      "value": "0x249B"
    },
    "5457": {
      "op": "DUP4"
    },
    "5458": {
      "op": "CODECOPY"
    },
    "5459": {
      "op": "DUP2"
    },
    "5460": {
      "op": "MLOAD"
    },
    "5461": {
      "op": "SWAP2"
    },
    "5462": {
      "op": "MSTORE"
    },
    "5463": {
      "offset": [
        2430,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1560"
    },
    "5466": {
      "offset": [
        909,
        940
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5467": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "5468": {
      "offset": [
        2430,
        2440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A61"
    },
    "5471": {
      "jump": "i",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5472": {
      "fn": "Context._msgSender",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5473": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7984,
        7994
      ],
      "op": "CALLER",
      "path": "22"
    },
    "5474": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7939,
        7965
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5476": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7995
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5477": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7995
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5478": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7995
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5479": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7983
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "5481": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7995
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5483": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7995
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5484": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7995
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5486": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7995
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5487": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7995
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "5488": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5489": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5490": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7996,
        7998
      ],
      "op": "DUP6",
      "path": "22"
    },
    "5491": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7996,
        7998
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5492": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5493": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "LT",
      "path": "22"
    },
    "5494": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x158F"
    },
    "5497": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5498": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5503": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5505": {
      "op": "SHL"
    },
    "5506": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5508": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5509": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x32"
    },
    "5511": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5513": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5514": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "5516": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5518": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "REVERT",
      "path": "22"
    },
    "5519": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5520": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5522": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5523": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5524": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5525": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5527": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5528": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5529": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "5530": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "5532": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5533": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5534": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "MUL",
      "path": "22"
    },
    "5535": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "ADD",
      "path": "22"
    },
    "5536": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8017,
        8026
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 71,
      "value": "0x2"
    },
    "5538": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8017,
        8026
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5539": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8017,
        8026
      ],
      "op": "ADD",
      "path": "22"
    },
    "5540": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8017,
        8026
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5541": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5542": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7968,
        7999
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5543": {
      "op": "POP"
    },
    "5544": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8017,
        8026
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "5546": {
      "branch": 124,
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8017,
        8026
      ],
      "op": "AND",
      "path": "22"
    },
    "5547": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8009,
        8069
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15C6"
    },
    "5550": {
      "branch": 124,
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8009,
        8069
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5551": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8009,
        8069
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5553": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8009,
        8069
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5554": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5558": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5560": {
      "op": "SHL"
    },
    "5561": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8009,
        8069
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5562": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8009,
        8069
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5563": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8009,
        8069
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5565": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8009,
        8069
      ],
      "op": "ADD",
      "path": "22"
    },
    "5566": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8009,
        8069
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6DA"
    },
    "5569": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8009,
        8069
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5570": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8009,
        8069
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x22C1"
    },
    "5573": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "jump": "i",
      "offset": [
        8009,
        8069
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5574": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8009,
        8069
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5575": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8079,
        8088
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 72,
      "value": "0x2"
    },
    "5577": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8079,
        8088
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5578": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8079,
        8088
      ],
      "op": "ADD",
      "path": "22"
    },
    "5579": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8079,
        8096
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5580": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8079,
        8096
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5581": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5583": {
      "op": "NOT"
    },
    "5584": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8079,
        8096
      ],
      "op": "AND",
      "path": "22"
    },
    "5585": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8079,
        8096
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5586": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8079,
        8096
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5587": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8079,
        8096
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "5589": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8139,
        8149
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 73
    },
    "5590": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8139,
        8149
      ],
      "op": "ADD",
      "path": "22"
    },
    "5591": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8139,
        8149
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5592": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8123,
        8136
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "5594": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8123,
        8136
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5595": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8123,
        8149
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15E4"
    },
    "5598": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8123,
        8149
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5599": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8139,
        8149
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5600": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8123,
        8149
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2385"
    },
    "5603": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "jump": "i",
      "offset": [
        8123,
        8149
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5604": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8123,
        8149
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5605": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8107,
        8120
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "5607": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8107,
        8149
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5608": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8189,
        8198
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 74
    },
    "5609": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8189,
        8198
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5610": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8174,
        8186
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "5612": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8174,
        8186
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5613": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8174,
        8198
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15F6"
    },
    "5616": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8174,
        8198
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5617": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8189,
        8198
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5618": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8174,
        8198
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2385"
    },
    "5621": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "jump": "i",
      "offset": [
        8174,
        8198
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5622": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8174,
        8198
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5623": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8159,
        8171
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "5625": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8159,
        8198
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5626": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8218,
        8228
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 75,
      "value": "0x1"
    },
    "5628": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8218,
        8228
      ],
      "op": "ADD",
      "path": "22"
    },
    "5629": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8218,
        8228
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5630": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        8218,
        8228
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "5631": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        7808,
        8235
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5632": {
      "op": "POP"
    },
    "5633": {
      "op": "POP"
    },
    "5634": {
      "op": "POP"
    },
    "5635": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "jump": "o",
      "offset": [
        7808,
        8235
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5636": {
      "fn": "ERC20._transfer",
      "offset": [
        7265,
        7978
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5643": {
      "op": "SHL"
    },
    "5644": {
      "op": "SUB"
    },
    "5645": {
      "fn": "ERC20._transfer",
      "offset": [
        7400,
        7420
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 76
    },
    "5646": {
      "branch": 140,
      "fn": "ERC20._transfer",
      "offset": [
        7400,
        7420
      ],
      "op": "AND",
      "path": "4"
    },
    "5647": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1668"
    },
    "5650": {
      "branch": 140,
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5651": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5653": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5654": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5658": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5660": {
      "op": "SHL"
    },
    "5661": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5662": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5665": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5667": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5668": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "ADD",
      "path": "4"
    },
    "5669": {
      "op": "MSTORE"
    },
    "5670": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "5672": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5674": {
      "op": "DUP3"
    },
    "5675": {
      "op": "ADD"
    },
    "5676": {
      "op": "MSTORE"
    },
    "5677": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "5710": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5712": {
      "op": "DUP3"
    },
    "5713": {
      "op": "ADD"
    },
    "5714": {
      "op": "MSTORE"
    },
    "5715": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "5721": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "5723": {
      "op": "SHL"
    },
    "5724": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5726": {
      "op": "DUP3"
    },
    "5727": {
      "op": "ADD"
    },
    "5728": {
      "op": "MSTORE"
    },
    "5729": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5731": {
      "op": "ADD"
    },
    "5732": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6DA"
    },
    "5735": {
      "op": "JUMP"
    },
    "5736": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5743": {
      "op": "SHL"
    },
    "5744": {
      "op": "SUB"
    },
    "5745": {
      "fn": "ERC20._transfer",
      "offset": [
        7480,
        7503
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 77
    },
    "5746": {
      "branch": 141,
      "fn": "ERC20._transfer",
      "offset": [
        7480,
        7503
      ],
      "op": "AND",
      "path": "4"
    },
    "5747": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16CA"
    },
    "5750": {
      "branch": 141,
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5751": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5753": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5754": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5758": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5760": {
      "op": "SHL"
    },
    "5761": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5762": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5763": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5765": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5767": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5768": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "ADD",
      "path": "4"
    },
    "5769": {
      "op": "MSTORE"
    },
    "5770": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5774": {
      "op": "DUP3"
    },
    "5775": {
      "op": "ADD"
    },
    "5776": {
      "op": "MSTORE"
    },
    "5777": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "5810": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5812": {
      "op": "DUP3"
    },
    "5813": {
      "op": "ADD"
    },
    "5814": {
      "op": "MSTORE"
    },
    "5815": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "5819": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "5821": {
      "op": "SHL"
    },
    "5822": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5824": {
      "op": "DUP3"
    },
    "5825": {
      "op": "ADD"
    },
    "5826": {
      "op": "MSTORE"
    },
    "5827": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5829": {
      "op": "ADD"
    },
    "5830": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6DA"
    },
    "5833": {
      "op": "JUMP"
    },
    "5834": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5841": {
      "op": "SHL"
    },
    "5842": {
      "op": "SUB"
    },
    "5843": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5844": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "AND",
      "path": "4"
    },
    "5845": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7633
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5847": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5848": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5849": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5850": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5852": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5853": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5854": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5855": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5857": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5858": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5859": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5860": {
      "fn": "ERC20._transfer",
      "offset": [
        7671,
        7694
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 78
    },
    "5861": {
      "fn": "ERC20._transfer",
      "offset": [
        7671,
        7694
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5862": {
      "fn": "ERC20._transfer",
      "offset": [
        7671,
        7694
      ],
      "op": "LT",
      "path": "4"
    },
    "5863": {
      "branch": 142,
      "fn": "ERC20._transfer",
      "offset": [
        7671,
        7694
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5864": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1742"
    },
    "5867": {
      "branch": 142,
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5868": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5870": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5871": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5875": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5877": {
      "op": "SHL"
    },
    "5878": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5879": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5880": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5882": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5884": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5885": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "ADD",
      "path": "4"
    },
    "5886": {
      "op": "MSTORE"
    },
    "5887": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5889": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5891": {
      "op": "DUP3"
    },
    "5892": {
      "op": "ADD"
    },
    "5893": {
      "op": "MSTORE"
    },
    "5894": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "5927": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5929": {
      "op": "DUP3"
    },
    "5930": {
      "op": "ADD"
    },
    "5931": {
      "op": "MSTORE"
    },
    "5932": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "5939": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5941": {
      "op": "SHL"
    },
    "5942": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5944": {
      "op": "DUP3"
    },
    "5945": {
      "op": "ADD"
    },
    "5946": {
      "op": "MSTORE"
    },
    "5947": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5949": {
      "op": "ADD"
    },
    "5950": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6DA"
    },
    "5953": {
      "op": "JUMP"
    },
    "5954": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5961": {
      "op": "SHL"
    },
    "5962": {
      "op": "SUB"
    },
    "5963": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 79
    },
    "5964": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP6",
      "path": "4"
    },
    "5965": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "AND",
      "path": "4"
    },
    "5966": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7780
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5968": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5969": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5970": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5971": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5973": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5974": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5975": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5976": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5978": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5979": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5980": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5981": {
      "fn": "ERC20._transfer",
      "offset": [
        7791,
        7813
      ],
      "op": "DUP6",
      "path": "4"
    },
    "5982": {
      "fn": "ERC20._transfer",
      "offset": [
        7791,
        7813
      ],
      "op": "DUP6",
      "path": "4"
    },
    "5983": {
      "fn": "ERC20._transfer",
      "offset": [
        7791,
        7813
      ],
      "op": "SUB",
      "path": "4"
    },
    "5984": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7813
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5985": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7813
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "5986": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 80
    },
    "5987": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "DUP6",
      "path": "4"
    },
    "5988": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "AND",
      "path": "4"
    },
    "5989": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5990": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5991": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5992": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5993": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5994": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5995": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5996": {
      "fn": "ERC20._transfer",
      "offset": [
        7807,
        7813
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5997": {
      "fn": "ERC20._transfer",
      "offset": [
        7807,
        7813
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5998": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7780
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5999": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1779"
    },
    "6002": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6003": {
      "fn": "ERC20._transfer",
      "offset": [
        7807,
        7813
      ],
      "op": "DUP5",
      "path": "4"
    },
    "6004": {
      "fn": "ERC20._transfer",
      "offset": [
        7807,
        7813
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6005": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x233A"
    },
    "6008": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7833,
        7863
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6009": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6010": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "6011": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "POP",
      "path": "4"
    },
    "6012": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "POP",
      "path": "4"
    },
    "6013": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6014": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6015": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "6016": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "POP",
      "path": "4"
    },
    "6017": {
      "fn": "ERC20._transfer",
      "offset": [
        7896,
        7905
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 81
    },
    "6018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6024": {
      "op": "SHL"
    },
    "6025": {
      "op": "SUB"
    },
    "6026": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "AND",
      "path": "4"
    },
    "6027": {
      "fn": "ERC20._transfer",
      "offset": [
        7888,
        7894
      ],
      "op": "DUP5",
      "path": "4"
    },
    "6028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6032": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6034": {
      "op": "SHL"
    },
    "6035": {
      "op": "SUB"
    },
    "6036": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "AND",
      "path": "4"
    },
    "6037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6039": {
      "op": "DUP1"
    },
    "6040": {
      "op": "MLOAD"
    },
    "6041": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6043": {
      "op": "PUSH2",
      "value": "0x24BB"
    },
    "6046": {
      "op": "DUP4"
    },
    "6047": {
      "op": "CODECOPY"
    },
    "6048": {
      "op": "DUP2"
    },
    "6049": {
      "op": "MLOAD"
    },
    "6050": {
      "op": "SWAP2"
    },
    "6051": {
      "op": "MSTORE"
    },
    "6052": {
      "fn": "ERC20._transfer",
      "offset": [
        7907,
        7913
      ],
      "op": "DUP5",
      "path": "4"
    },
    "6053": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6055": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6056": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17B3"
    },
    "6059": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6060": {
      "op": "DUP2"
    },
    "6061": {
      "op": "MSTORE"
    },
    "6062": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6064": {
      "op": "ADD"
    },
    "6065": {
      "op": "SWAP1"
    },
    "6066": {
      "op": "JUMP"
    },
    "6067": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6068": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6070": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6071": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6072": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6073": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "SUB",
      "path": "4"
    },
    "6074": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6075": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "LOG3",
      "path": "4"
    },
    "6076": {
      "fn": "ERC20._transfer",
      "offset": [
        7925,
        7971
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 82,
      "value": "0x897"
    },
    "6079": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6080": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4348,
        5406
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6081": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4440,
        4452
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6083": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4505,
        4523
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 83,
      "value": "0x17CA"
    },
    "6086": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4505,
        4521
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE8A"
    },
    "6089": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "jump": "i",
      "offset": [
        4505,
        4523
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6090": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4505,
        4523
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6091": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4489,
        4501
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6092": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4489,
        4523
      ],
      "op": "GT",
      "path": "22"
    },
    "6093": {
      "branch": 125,
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4489,
        4523
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6094": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4468,
        4618
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x184D"
    },
    "6097": {
      "branch": 125,
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4468,
        4618
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6098": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4468,
        4618
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6100": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4468,
        4618
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6101": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6105": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6107": {
      "op": "SHL"
    },
    "6108": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4468,
        4618
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6109": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4468,
        4618
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6110": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6112": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4468,
        4618
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "6114": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4468,
        4618
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6115": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4468,
        4618
      ],
      "op": "ADD",
      "path": "22"
    },
    "6116": {
      "op": "MSTORE"
    },
    "6117": {
      "op": "PUSH1",
      "value": "0x45"
    },
    "6119": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6121": {
      "op": "DUP3"
    },
    "6122": {
      "op": "ADD"
    },
    "6123": {
      "op": "MSTORE"
    },
    "6124": {
      "op": "PUSH32",
      "value": "0x506F6F6C3A204E6F7420656E6F7567682066756E6473206F6E2074686520706F"
    },
    "6157": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6159": {
      "op": "DUP3"
    },
    "6160": {
      "op": "ADD"
    },
    "6161": {
      "op": "MSTORE"
    },
    "6162": {
      "op": "PUSH32",
      "value": "0x6F6C20636F6E74726163742E20506C65617365206C6F7765722074686520616D"
    },
    "6195": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6197": {
      "op": "DUP3"
    },
    "6198": {
      "op": "ADD"
    },
    "6199": {
      "op": "MSTORE"
    },
    "6200": {
      "op": "PUSH5",
      "value": "0x37BAB73A17"
    },
    "6206": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "6208": {
      "op": "SHL"
    },
    "6209": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6211": {
      "op": "DUP3"
    },
    "6212": {
      "op": "ADD"
    },
    "6213": {
      "op": "MSTORE"
    },
    "6214": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "6216": {
      "op": "ADD"
    },
    "6217": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4468,
        4618
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6DA"
    },
    "6220": {
      "op": "JUMP"
    },
    "6221": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4468,
        4618
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6222": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4628,
        4647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6224": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4650,
        4663
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1858"
    },
    "6227": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3259,
        3271
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "6229": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3259,
        3271
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "6230": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3259,
        3271
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6231": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6232": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4650,
        4663
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6233": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4628,
        4663
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6234": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4628,
        4663
      ],
      "op": "POP",
      "path": "22"
    },
    "6235": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4673,
        4688
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6237": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4691,
        4711
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1864"
    },
    "6240": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4691,
        4709
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF03"
    },
    "6243": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "jump": "i",
      "offset": [
        4691,
        4711
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6244": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4691,
        4711
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6245": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4673,
        4711
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6246": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4673,
        4711
      ],
      "op": "POP",
      "path": "22"
    },
    "6247": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4722,
        4753
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6249": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4801,
        4812
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6250": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4778,
        4785
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6251": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4757,
        4775
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1873"
    },
    "6254": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4767,
        4774
      ],
      "op": "DUP8",
      "path": "22"
    },
    "6255": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4757,
        4766
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA73"
    },
    "6258": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "jump": "i",
      "offset": [
        4757,
        4775
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6259": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4757,
        4775
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6260": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4757,
        4785
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x187D"
    },
    "6263": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4757,
        4785
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6264": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4757,
        4785
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6265": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4757,
        4785
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2366"
    },
    "6268": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "jump": "i",
      "offset": [
        4757,
        4785
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6269": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4757,
        4785
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6270": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4756,
        4812
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1887"
    },
    "6273": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4756,
        4812
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6274": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4756,
        4812
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6275": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4756,
        4812
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2352"
    },
    "6278": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "jump": "i",
      "offset": [
        4756,
        4812
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6279": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4756,
        4812
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6280": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4722,
        4812
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6281": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4722,
        4812
      ],
      "op": "POP",
      "path": "22"
    },
    "6282": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4823,
        4853
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6284": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4882,
        4894
      ],
      "op": "DUP7",
      "path": "22"
    },
    "6285": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4856,
        4879
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6286": {
      "branch": 126,
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4856,
        4894
      ],
      "op": "LT",
      "path": "22"
    },
    "6287": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4856,
        4959
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1898"
    },
    "6290": {
      "branch": 126,
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4856,
        4959
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6291": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4947,
        4959
      ],
      "op": "DUP7",
      "path": "22"
    },
    "6292": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4856,
        4959
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x189A"
    },
    "6295": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4856,
        4959
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6296": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4856,
        4959
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6297": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4909,
        4932
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6298": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4856,
        4959
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6299": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4823,
        4959
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6300": {
      "op": "POP"
    },
    "6301": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4977,
        5033
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 84,
      "value": "0x18AF"
    },
    "6304": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4986,
        5022
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x18A9"
    },
    "6307": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5011,
        5022
      ],
      "op": "DUP6",
      "path": "22"
    },
    "6308": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4823,
        4959
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6309": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4986,
        5022
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2366"
    },
    "6312": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "jump": "i",
      "offset": [
        4986,
        5022
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6313": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4986,
        5022
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6314": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5025,
        5032
      ],
      "op": "DUP5",
      "path": "22"
    },
    "6315": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4977,
        4984
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C7F"
    },
    "6318": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "jump": "i",
      "offset": [
        4977,
        5033
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6319": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4977,
        5033
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6320": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4970,
        5033
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "6321": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4970,
        5033
      ],
      "op": "POP",
      "path": "22"
    },
    "6322": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5060,
        5078
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 85,
      "value": "0x18BA"
    },
    "6325": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5070,
        5077
      ],
      "op": "DUP7",
      "path": "22"
    },
    "6326": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5060,
        5069
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA73"
    },
    "6329": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "jump": "i",
      "offset": [
        5060,
        5078
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6330": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5060,
        5078
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6331": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5052,
        5056
      ],
      "op": "DUP6",
      "path": "22"
    },
    "6332": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5052,
        5078
      ],
      "op": "GT",
      "path": "22"
    },
    "6333": {
      "branch": 127,
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5052,
        5078
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6334": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5044,
        5108
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1905"
    },
    "6337": {
      "branch": 127,
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5044,
        5108
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6338": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5044,
        5108
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6340": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5044,
        5108
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6341": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6345": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6347": {
      "op": "SHL"
    },
    "6348": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5044,
        5108
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6349": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5044,
        5108
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6352": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5044,
        5108
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "6354": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5044,
        5108
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6355": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5044,
        5108
      ],
      "op": "ADD",
      "path": "22"
    },
    "6356": {
      "op": "MSTORE"
    },
    "6357": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6359": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6361": {
      "op": "DUP3"
    },
    "6362": {
      "op": "ADD"
    },
    "6363": {
      "op": "MSTORE"
    },
    "6364": {
      "op": "PUSH25",
      "value": "0x506F6F6C3A20416D6F756E7420697320746F6F206C61726765"
    },
    "6390": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "6392": {
      "op": "SHL"
    },
    "6393": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6395": {
      "op": "DUP3"
    },
    "6396": {
      "op": "ADD"
    },
    "6397": {
      "op": "MSTORE"
    },
    "6398": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6400": {
      "op": "ADD"
    },
    "6401": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5044,
        5108
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6DA"
    },
    "6404": {
      "op": "JUMP"
    },
    "6405": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5044,
        5108
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6406": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5133,
        5134
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 86,
      "value": "0x0"
    },
    "6408": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5126,
        5130
      ],
      "op": "DUP6",
      "path": "22"
    },
    "6409": {
      "branch": 128,
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5126,
        5134
      ],
      "op": "GT",
      "path": "22"
    },
    "6410": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5118,
        5164
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1925"
    },
    "6413": {
      "branch": 128,
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5118,
        5164
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6414": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5118,
        5164
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6416": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5118,
        5164
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6417": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6421": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6423": {
      "op": "SHL"
    },
    "6424": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5118,
        5164
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6425": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5118,
        5164
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6426": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5118,
        5164
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "6428": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5118,
        5164
      ],
      "op": "ADD",
      "path": "22"
    },
    "6429": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5118,
        5164
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6DA"
    },
    "6432": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5118,
        5164
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6433": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5118,
        5164
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2307"
    },
    "6436": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "jump": "i",
      "offset": [
        5118,
        5164
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6437": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5118,
        5164
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6438": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5175,
        5195
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 87,
      "value": "0x192F"
    },
    "6441": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5181,
        5188
      ],
      "op": "DUP7",
      "path": "22"
    },
    "6442": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5190,
        5194
      ],
      "op": "DUP7",
      "path": "22"
    },
    "6443": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5175,
        5180
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1CBF"
    },
    "6446": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "jump": "i",
      "offset": [
        5175,
        5195
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6447": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5175,
        5195
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6448": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5227
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE"
    },
    "6450": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5227
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6451": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6453": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6454": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "6459": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6461": {
      "op": "SHL"
    },
    "6462": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6463": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6464": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5206,
        5218
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6466": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5206,
        5218
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6473": {
      "op": "SHL"
    },
    "6474": {
      "op": "SUB"
    },
    "6475": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5227
      ],
      "op": "AND",
      "path": "22"
    },
    "6476": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5227
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6477": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5236
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA9059CBB"
    },
    "6482": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5236
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6483": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1962"
    },
    "6486": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6487": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5237,
        5244
      ],
      "op": "DUP11",
      "path": "22"
    },
    "6488": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5237,
        5244
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6489": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5246,
        5268
      ],
      "op": "DUP7",
      "path": "22"
    },
    "6490": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5246,
        5268
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6491": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "6493": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "ADD",
      "path": "22"
    },
    "6494": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2275"
    },
    "6497": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "jump": "i",
      "offset": [
        5221,
        5269
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6498": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6499": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6501": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6503": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6504": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6505": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6506": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "SUB",
      "path": "22"
    },
    "6507": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6508": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6510": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "DUP8",
      "path": "22"
    },
    "6511": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6512": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "6513": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6514": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6515": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6516": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x197C"
    },
    "6519": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6520": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6522": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6523": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "REVERT",
      "path": "22"
    },
    "6524": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6525": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "POP",
      "path": "22"
    },
    "6526": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "GAS",
      "path": "22"
    },
    "6527": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "CALL",
      "path": "22"
    },
    "6528": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6529": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6530": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6531": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1990"
    },
    "6534": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6535": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "6536": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6538": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6539": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "6540": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "6541": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6543": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "REVERT",
      "path": "22"
    },
    "6544": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6545": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "POP",
      "path": "22"
    },
    "6546": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "POP",
      "path": "22"
    },
    "6547": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "POP",
      "path": "22"
    },
    "6548": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "POP",
      "path": "22"
    },
    "6549": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6551": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6552": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "6553": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "6555": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "NOT",
      "path": "22"
    },
    "6556": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "6558": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6559": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "ADD",
      "path": "22"
    },
    "6560": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "AND",
      "path": "22"
    },
    "6561": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6562": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "ADD",
      "path": "22"
    },
    "6563": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6564": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6566": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6567": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "POP",
      "path": "22"
    },
    "6568": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6569": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "ADD",
      "path": "22"
    },
    "6570": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6571": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x19B4"
    },
    "6574": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6575": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6576": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x20A3"
    },
    "6579": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "jump": "i",
      "offset": [
        5221,
        5269
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6580": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5221,
        5269
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6581": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5206,
        5269
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6582": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5206,
        5269
      ],
      "op": "POP",
      "path": "22"
    },
    "6583": {
      "branch": 129,
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5287,
        5294
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 88
    },
    "6584": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5279,
        5337
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A12"
    },
    "6587": {
      "branch": 129,
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5279,
        5337
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6588": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5279,
        5337
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6590": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5279,
        5337
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6591": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6595": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6597": {
      "op": "SHL"
    },
    "6598": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5279,
        5337
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6599": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5279,
        5337
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6600": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6602": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5279,
        5337
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "6604": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5279,
        5337
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6605": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5279,
        5337
      ],
      "op": "ADD",
      "path": "22"
    },
    "6606": {
      "op": "MSTORE"
    },
    "6607": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "6609": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6611": {
      "op": "DUP3"
    },
    "6612": {
      "op": "ADD"
    },
    "6613": {
      "op": "MSTORE"
    },
    "6614": {
      "op": "PUSH32",
      "value": "0x506F6F6C3A20546865205769746864726177616C206469646E277420676F2074"
    },
    "6647": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6649": {
      "op": "DUP3"
    },
    "6650": {
      "op": "ADD"
    },
    "6651": {
      "op": "MSTORE"
    },
    "6652": {
      "op": "PUSH6",
      "value": "0xD0E4DEEACED"
    },
    "6659": {
      "op": "PUSH1",
      "value": "0xD3"
    },
    "6661": {
      "op": "SHL"
    },
    "6662": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6664": {
      "op": "DUP3"
    },
    "6665": {
      "op": "ADD"
    },
    "6666": {
      "op": "MSTORE"
    },
    "6667": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6669": {
      "op": "ADD"
    },
    "6670": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5279,
        5337
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6DA"
    },
    "6673": {
      "op": "JUMP"
    },
    "6674": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5279,
        5337
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6675": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5352,
        5399
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 89,
      "value": "0x40"
    },
    "6677": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5352,
        5399
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6678": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5352,
        5399
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6679": {
      "op": "DUP4"
    },
    "6680": {
      "op": "DUP2"
    },
    "6681": {
      "op": "MSTORE"
    },
    "6682": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6684": {
      "op": "DUP2"
    },
    "6685": {
      "op": "ADD"
    },
    "6686": {
      "op": "DUP9"
    },
    "6687": {
      "op": "SWAP1"
    },
    "6688": {
      "op": "MSTORE"
    },
    "6689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6693": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6695": {
      "op": "SHL"
    },
    "6696": {
      "op": "SUB"
    },
    "6697": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5352,
        5399
      ],
      "op": "DUP10",
      "path": "22"
    },
    "6698": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5352,
        5399
      ],
      "op": "AND",
      "path": "22"
    },
    "6699": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5352,
        5399
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6700": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5352,
        5399
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
    },
    "6733": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5352,
        5399
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6734": {
      "op": "ADD"
    },
    "6735": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5352,
        5399
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6737": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5352,
        5399
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6738": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5352,
        5399
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6739": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5352,
        5399
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6740": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5352,
        5399
      ],
      "op": "SUB",
      "path": "22"
    },
    "6741": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5352,
        5399
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6742": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        5352,
        5399
      ],
      "op": "LOG2",
      "path": "22"
    },
    "6743": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4348,
        5406
      ],
      "op": "POP",
      "path": "22"
    },
    "6744": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4348,
        5406
      ],
      "op": "POP",
      "path": "22"
    },
    "6745": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4348,
        5406
      ],
      "op": "POP",
      "path": "22"
    },
    "6746": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4348,
        5406
      ],
      "op": "POP",
      "path": "22"
    },
    "6747": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4348,
        5406
      ],
      "op": "POP",
      "path": "22"
    },
    "6748": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4348,
        5406
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "6749": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4348,
        5406
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6750": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4348,
        5406
      ],
      "op": "POP",
      "path": "22"
    },
    "6751": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "offset": [
        4348,
        5406
      ],
      "op": "POP",
      "path": "22"
    },
    "6752": {
      "fn": "BufferBinaryIBFRPoolBinary._withdraw",
      "jump": "o",
      "offset": [
        4348,
        5406
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6753": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3252,
        3736
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6754": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3332,
        3354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6B"
    },
    "6757": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3340,
        3344
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6758": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3346,
        3353
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6759": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3332,
        3339
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD2F"
    },
    "6762": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3332,
        3354
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6763": {
      "branch": 133,
      "fn": "AccessControl._checkRole",
      "offset": [
        3332,
        3354
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6764": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3327,
        3730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x605"
    },
    "6767": {
      "branch": 133,
      "fn": "AccessControl._checkRole",
      "offset": [
        3327,
        3730
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6768": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3515,
        3556
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 90,
      "value": "0x1A83"
    },
    "6771": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3543,
        3550
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6778": {
      "op": "SHL"
    },
    "6779": {
      "op": "SUB"
    },
    "6780": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3515,
        3556
      ],
      "op": "AND",
      "path": "0"
    },
    "6781": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3553,
        3555
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "6783": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3515,
        3534
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DFB"
    },
    "6786": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3515,
        3556
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6787": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3515,
        3556
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6788": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3627,
        3665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A8E"
    },
    "6791": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3655,
        3659
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6792": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3662,
        3664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6794": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3627,
        3646
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DFB"
    },
    "6797": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3627,
        3665
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6798": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3627,
        3665
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6799": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6801": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6802": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6804": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "ADD",
      "path": "0"
    },
    "6805": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A9F"
    },
    "6808": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6809": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6810": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6811": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21CE"
    },
    "6814": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3422,
        3687
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6815": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6816": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6818": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6819": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6820": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6822": {
      "op": "NOT"
    },
    "6823": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6824": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6825": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "SUB",
      "path": "0"
    },
    "6826": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "ADD",
      "path": "0"
    },
    "6827": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6828": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6829": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6830": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6831": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6832": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6833": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6837": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6839": {
      "op": "SHL"
    },
    "6840": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3370,
        3719
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6841": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3370,
        3719
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6842": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3370,
        3719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DA"
    },
    "6845": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3370,
        3719
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6846": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3370,
        3719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6848": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3370,
        3719
      ],
      "op": "ADD",
      "path": "0"
    },
    "6849": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3370,
        3719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x228E"
    },
    "6852": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3370,
        3719
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6853": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6572,
        6796
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6854": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6646,
        6668
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1ACF"
    },
    "6857": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6654,
        6658
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6858": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6660,
        6667
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6859": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6646,
        6653
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD2F"
    },
    "6862": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        6646,
        6668
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6863": {
      "branch": 134,
      "fn": "AccessControl._grantRole",
      "offset": [
        6646,
        6668
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6864": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6641,
        6790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x605"
    },
    "6867": {
      "branch": 134,
      "fn": "AccessControl._grantRole",
      "offset": [
        6641,
        6790
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6868": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 91,
      "value": "0x0"
    },
    "6870": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6871": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6872": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6873": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "6875": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6877": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6878": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6879": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6880": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6882": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6883": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6884": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6891": {
      "op": "SHL"
    },
    "6892": {
      "op": "SUB"
    },
    "6893": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6894": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "AND",
      "path": "0"
    },
    "6895": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6896": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6897": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6898": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6899": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6900": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6901": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6902": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6903": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6720
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6904": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6906": {
      "op": "NOT"
    },
    "6907": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6720
      ],
      "op": "AND",
      "path": "0"
    },
    "6908": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6716,
        6720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6910": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6720
      ],
      "op": "OR",
      "path": "0"
    },
    "6911": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6720
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6912": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6720
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6913": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6766,
        6778
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 92,
      "value": "0x1B07"
    },
    "6916": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "6917": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6918": {
      "fn": "Context._msgSender",
      "offset": [
        587,
        683
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6919": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6766,
        6778
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6926": {
      "op": "SHL"
    },
    "6927": {
      "op": "SUB"
    },
    "6928": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "AND",
      "path": "0"
    },
    "6929": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6757,
        6764
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6934": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6936": {
      "op": "SHL"
    },
    "6937": {
      "op": "SUB"
    },
    "6938": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "AND",
      "path": "0"
    },
    "6939": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6751,
        6755
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6940": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
    },
    "6973": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6975": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6976": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6978": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6979": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6980": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6981": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "SUB",
      "path": "0"
    },
    "6982": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6983": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "LOG4",
      "path": "0"
    },
    "6984": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6572,
        6796
      ],
      "op": "POP",
      "path": "0"
    },
    "6985": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6572,
        6796
      ],
      "op": "POP",
      "path": "0"
    },
    "6986": {
      "fn": "AccessControl._grantRole",
      "jump": "o",
      "offset": [
        6572,
        6796
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6987": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6802,
        7027
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6988": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6876,
        6898
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B55"
    },
    "6991": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6884,
        6888
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6992": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6890,
        6897
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6993": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6876,
        6883
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD2F"
    },
    "6996": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        6876,
        6898
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6997": {
      "branch": 135,
      "fn": "AccessControl._revokeRole",
      "offset": [
        6876,
        6898
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6998": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6872,
        7021
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6999": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6872,
        7021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x605"
    },
    "7002": {
      "branch": 135,
      "fn": "AccessControl._revokeRole",
      "offset": [
        6872,
        7021
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7003": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6946,
        6951
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 93,
      "value": "0x0"
    },
    "7005": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7006": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7007": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7008": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "7010": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7012": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7013": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7014": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7015": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7017": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7018": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7019": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7024": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7026": {
      "op": "SHL"
    },
    "7027": {
      "op": "SUB"
    },
    "7028": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7029": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "AND",
      "path": "0"
    },
    "7030": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7031": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7032": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7033": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7034": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7035": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7036": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7037": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7038": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6951
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7039": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6951
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7040": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7042": {
      "op": "NOT"
    },
    "7043": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6951
      ],
      "op": "AND",
      "path": "0"
    },
    "7044": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6951
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7045": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6951
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "7046": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6970,
        7010
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 94
    },
    "7047": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "7048": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7049": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7050": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7051": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6970,
        7010
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
    },
    "7084": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6970,
        7010
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7085": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6946,
        6951
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7086": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6970,
        7010
      ],
      "op": "LOG4",
      "path": "0"
    },
    "7087": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6802,
        7027
      ],
      "op": "POP",
      "path": "0"
    },
    "7088": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6802,
        7027
      ],
      "op": "POP",
      "path": "0"
    },
    "7089": {
      "fn": "AccessControl._revokeRole",
      "jump": "o",
      "offset": [
        6802,
        7027
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7090": {
      "fn": "ERC20._mint",
      "offset": [
        8254,
        8643
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7095": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7097": {
      "op": "SHL"
    },
    "7098": {
      "op": "SUB"
    },
    "7099": {
      "fn": "ERC20._mint",
      "offset": [
        8337,
        8358
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 95
    },
    "7100": {
      "branch": 143,
      "fn": "ERC20._mint",
      "offset": [
        8337,
        8358
      ],
      "op": "AND",
      "path": "4"
    },
    "7101": {
      "fn": "ERC20._mint",
      "offset": [
        8329,
        8394
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C08"
    },
    "7104": {
      "branch": 143,
      "fn": "ERC20._mint",
      "offset": [
        8329,
        8394
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "7105": {
      "fn": "ERC20._mint",
      "offset": [
        8329,
        8394
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7107": {
      "fn": "ERC20._mint",
      "offset": [
        8329,
        8394
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7108": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7112": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7114": {
      "op": "SHL"
    },
    "7115": {
      "fn": "ERC20._mint",
      "offset": [
        8329,
        8394
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7116": {
      "fn": "ERC20._mint",
      "offset": [
        8329,
        8394
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7119": {
      "fn": "ERC20._mint",
      "offset": [
        8329,
        8394
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "7121": {
      "fn": "ERC20._mint",
      "offset": [
        8329,
        8394
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7122": {
      "fn": "ERC20._mint",
      "offset": [
        8329,
        8394
      ],
      "op": "ADD",
      "path": "4"
    },
    "7123": {
      "op": "MSTORE"
    },
    "7124": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7126": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7128": {
      "op": "DUP3"
    },
    "7129": {
      "op": "ADD"
    },
    "7130": {
      "op": "MSTORE"
    },
    "7131": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "7164": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7166": {
      "op": "DUP3"
    },
    "7167": {
      "op": "ADD"
    },
    "7168": {
      "op": "MSTORE"
    },
    "7169": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7171": {
      "op": "ADD"
    },
    "7172": {
      "fn": "ERC20._mint",
      "offset": [
        8329,
        8394
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6DA"
    },
    "7175": {
      "op": "JUMP"
    },
    "7176": {
      "fn": "ERC20._mint",
      "offset": [
        8329,
        8394
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7177": {
      "fn": "ERC20._mint",
      "offset": [
        8481,
        8487
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 96
    },
    "7178": {
      "fn": "ERC20._mint",
      "offset": [
        8465,
        8477
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "7180": {
      "fn": "ERC20._mint",
      "offset": [
        8465,
        8477
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7182": {
      "fn": "ERC20._mint",
      "offset": [
        8465,
        8487
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7183": {
      "fn": "ERC20._mint",
      "offset": [
        8465,
        8487
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7184": {
      "fn": "ERC20._mint",
      "offset": [
        8465,
        8487
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7185": {
      "fn": "ERC20._mint",
      "offset": [
        8465,
        8487
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C1A"
    },
    "7188": {
      "fn": "ERC20._mint",
      "offset": [
        8465,
        8487
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7189": {
      "fn": "ERC20._mint",
      "offset": [
        8465,
        8487
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7190": {
      "fn": "ERC20._mint",
      "offset": [
        8465,
        8487
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x233A"
    },
    "7193": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8465,
        8487
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7194": {
      "fn": "ERC20._mint",
      "offset": [
        8465,
        8487
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7195": {
      "fn": "ERC20._mint",
      "offset": [
        8465,
        8487
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7196": {
      "fn": "ERC20._mint",
      "offset": [
        8465,
        8487
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7197": {
      "fn": "ERC20._mint",
      "offset": [
        8465,
        8487
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7198": {
      "op": "POP"
    },
    "7199": {
      "op": "POP"
    },
    "7200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7206": {
      "op": "SHL"
    },
    "7207": {
      "op": "SUB"
    },
    "7208": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8515
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 97
    },
    "7209": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8515
      ],
      "op": "AND",
      "path": "4"
    },
    "7210": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8506
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7212": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8515
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7213": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8515
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7214": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8515
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7215": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8515
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7217": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8515
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7218": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8515
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7219": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8515
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7220": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8515
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7222": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8515
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7223": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8515
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7224": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8525
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7225": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8525
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7226": {
      "fn": "ERC20._mint",
      "offset": [
        8519,
        8525
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7227": {
      "fn": "ERC20._mint",
      "offset": [
        8519,
        8525
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "7228": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8506
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7229": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8525
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C47"
    },
    "7232": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8525
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7233": {
      "fn": "ERC20._mint",
      "offset": [
        8519,
        8525
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7234": {
      "fn": "ERC20._mint",
      "offset": [
        8519,
        8525
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7235": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8525
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x233A"
    },
    "7238": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8497,
        8525
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7239": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8525
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7240": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8525
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7241": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8525
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7242": {
      "fn": "ERC20._mint",
      "offset": [
        8497,
        8525
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7243": {
      "op": "POP"
    },
    "7244": {
      "op": "POP"
    },
    "7245": {
      "fn": "ERC20._mint",
      "offset": [
        8540,
        8577
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 98,
      "value": "0x40"
    },
    "7247": {
      "fn": "ERC20._mint",
      "offset": [
        8540,
        8577
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7248": {
      "op": "DUP2"
    },
    "7249": {
      "op": "DUP2"
    },
    "7250": {
      "op": "MSTORE"
    },
    "7251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7255": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7257": {
      "op": "SHL"
    },
    "7258": {
      "op": "SUB"
    },
    "7259": {
      "fn": "ERC20._mint",
      "offset": [
        8540,
        8577
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7260": {
      "fn": "ERC20._mint",
      "offset": [
        8540,
        8577
      ],
      "op": "AND",
      "path": "4"
    },
    "7261": {
      "fn": "ERC20._mint",
      "offset": [
        8540,
        8577
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7262": {
      "fn": "ERC20._mint",
      "offset": [
        8557,
        8558
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7264": {
      "fn": "ERC20._mint",
      "offset": [
        8557,
        8558
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7267": {
      "op": "DUP1"
    },
    "7268": {
      "op": "MLOAD"
    },
    "7269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7271": {
      "op": "PUSH2",
      "value": "0x24BB"
    },
    "7274": {
      "op": "DUP4"
    },
    "7275": {
      "op": "CODECOPY"
    },
    "7276": {
      "op": "DUP2"
    },
    "7277": {
      "op": "MLOAD"
    },
    "7278": {
      "op": "SWAP2"
    },
    "7279": {
      "op": "MSTORE"
    },
    "7280": {
      "fn": "ERC20._mint",
      "offset": [
        8540,
        8577
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7283": {
      "op": "ADD"
    },
    "7284": {
      "fn": "ERC20._mint",
      "offset": [
        8540,
        8577
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7286": {
      "fn": "ERC20._mint",
      "offset": [
        8540,
        8577
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7287": {
      "fn": "ERC20._mint",
      "offset": [
        8540,
        8577
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7288": {
      "fn": "ERC20._mint",
      "offset": [
        8540,
        8577
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7289": {
      "fn": "ERC20._mint",
      "offset": [
        8540,
        8577
      ],
      "op": "SUB",
      "path": "4"
    },
    "7290": {
      "fn": "ERC20._mint",
      "offset": [
        8540,
        8577
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7291": {
      "fn": "ERC20._mint",
      "offset": [
        8540,
        8577
      ],
      "op": "LOG3",
      "path": "4"
    },
    "7292": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        8719,
        8730
      ],
      "op": "POP",
      "path": "22"
    },
    "7293": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        8650,
        8737
      ],
      "op": "POP",
      "path": "22"
    },
    "7294": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "jump": "o",
      "offset": [
        8650,
        8737
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7295": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10760,
        10942
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7296": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10822,
        10829
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "7298": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10853,
        10854
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 99
    },
    "7299": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10849,
        10850
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7300": {
      "branch": 130,
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10849,
        10854
      ],
      "op": "GT",
      "path": "22"
    },
    "7301": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10841,
        10855
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C8D"
    },
    "7304": {
      "branch": 130,
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10841,
        10855
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "7305": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10841,
        10855
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "7307": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10841,
        10855
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7308": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10841,
        10855
      ],
      "op": "REVERT",
      "path": "22"
    },
    "7309": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10841,
        10855
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7310": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10865,
        10874
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "7312": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10877,
        10882
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C99"
    },
    "7315": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10881,
        10882
      ],
      "op": "DUP4",
      "path": "22"
    },
    "7316": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10877,
        10878
      ],
      "op": "DUP6",
      "path": "22"
    },
    "7317": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10877,
        10882
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2352"
    },
    "7320": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "jump": "i",
      "offset": [
        10877,
        10882
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7321": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10877,
        10882
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7322": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10865,
        10882
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7323": {
      "op": "POP"
    },
    "7324": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10896,
        10901
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1CA5"
    },
    "7327": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10900,
        10901
      ],
      "op": "DUP4",
      "path": "22"
    },
    "7328": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10896,
        10897
      ],
      "op": "DUP6",
      "path": "22"
    },
    "7329": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10896,
        10901
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x241A"
    },
    "7332": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "jump": "i",
      "offset": [
        10896,
        10901
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7333": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10896,
        10901
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7334": {
      "branch": 131,
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10896,
        10906
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "7335": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10892,
        10917
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1CB8"
    },
    "7338": {
      "branch": 131,
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10892,
        10917
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "7339": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10912,
        10917
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 100,
      "value": "0x1CB5"
    },
    "7342": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10912,
        10913
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7343": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10916,
        10917
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "7345": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10912,
        10917
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x233A"
    },
    "7348": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "jump": "i",
      "offset": [
        10912,
        10917
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7349": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10912,
        10917
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7350": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10908,
        10917
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7351": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10908,
        10917
      ],
      "op": "POP",
      "path": "22"
    },
    "7352": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10892,
        10917
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7353": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10934,
        10935
      ],
      "op": "SWAP4",
      "path": "22",
      "statement": 101
    },
    "7354": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "offset": [
        10760,
        10942
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "7355": {
      "op": "POP"
    },
    "7356": {
      "op": "POP"
    },
    "7357": {
      "op": "POP"
    },
    "7358": {
      "fn": "BufferBinaryIBFRPoolBinary.divCeil",
      "jump": "o",
      "offset": [
        10760,
        10942
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7359": {
      "fn": "ERC20._burn",
      "offset": [
        8963,
        9539
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7364": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7366": {
      "op": "SHL"
    },
    "7367": {
      "op": "SUB"
    },
    "7368": {
      "fn": "ERC20._burn",
      "offset": [
        9046,
        9067
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 102
    },
    "7369": {
      "branch": 144,
      "fn": "ERC20._burn",
      "offset": [
        9046,
        9067
      ],
      "op": "AND",
      "path": "4"
    },
    "7370": {
      "fn": "ERC20._burn",
      "offset": [
        9038,
        9105
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D1F"
    },
    "7373": {
      "branch": 144,
      "fn": "ERC20._burn",
      "offset": [
        9038,
        9105
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "7374": {
      "fn": "ERC20._burn",
      "offset": [
        9038,
        9105
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7376": {
      "fn": "ERC20._burn",
      "offset": [
        9038,
        9105
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7377": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7381": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7383": {
      "op": "SHL"
    },
    "7384": {
      "fn": "ERC20._burn",
      "offset": [
        9038,
        9105
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7385": {
      "fn": "ERC20._burn",
      "offset": [
        9038,
        9105
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7388": {
      "fn": "ERC20._burn",
      "offset": [
        9038,
        9105
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "7390": {
      "fn": "ERC20._burn",
      "offset": [
        9038,
        9105
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7391": {
      "fn": "ERC20._burn",
      "offset": [
        9038,
        9105
      ],
      "op": "ADD",
      "path": "4"
    },
    "7392": {
      "op": "MSTORE"
    },
    "7393": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "7395": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7397": {
      "op": "DUP3"
    },
    "7398": {
      "op": "ADD"
    },
    "7399": {
      "op": "MSTORE"
    },
    "7400": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "7433": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7435": {
      "op": "DUP3"
    },
    "7436": {
      "op": "ADD"
    },
    "7437": {
      "op": "MSTORE"
    },
    "7438": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "7440": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "7442": {
      "op": "SHL"
    },
    "7443": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7445": {
      "op": "DUP3"
    },
    "7446": {
      "op": "ADD"
    },
    "7447": {
      "op": "MSTORE"
    },
    "7448": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7450": {
      "op": "ADD"
    },
    "7451": {
      "fn": "ERC20._burn",
      "offset": [
        9038,
        9105
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6DA"
    },
    "7454": {
      "op": "JUMP"
    },
    "7455": {
      "fn": "ERC20._burn",
      "offset": [
        9038,
        9105
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7462": {
      "op": "SHL"
    },
    "7463": {
      "op": "SUB"
    },
    "7464": {
      "fn": "ERC20._burn",
      "offset": [
        9201,
        9219
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7465": {
      "fn": "ERC20._burn",
      "offset": [
        9201,
        9219
      ],
      "op": "AND",
      "path": "4"
    },
    "7466": {
      "fn": "ERC20._burn",
      "offset": [
        9176,
        9198
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7468": {
      "fn": "ERC20._burn",
      "offset": [
        9201,
        9219
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7469": {
      "fn": "ERC20._burn",
      "offset": [
        9201,
        9219
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7470": {
      "fn": "ERC20._burn",
      "offset": [
        9201,
        9219
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7471": {
      "fn": "ERC20._burn",
      "offset": [
        9201,
        9219
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7473": {
      "fn": "ERC20._burn",
      "offset": [
        9201,
        9219
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7474": {
      "fn": "ERC20._burn",
      "offset": [
        9201,
        9219
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7475": {
      "fn": "ERC20._burn",
      "offset": [
        9201,
        9219
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7476": {
      "fn": "ERC20._burn",
      "offset": [
        9201,
        9219
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7478": {
      "fn": "ERC20._burn",
      "offset": [
        9201,
        9219
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7479": {
      "fn": "ERC20._burn",
      "offset": [
        9201,
        9219
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7480": {
      "fn": "ERC20._burn",
      "offset": [
        9201,
        9219
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7481": {
      "fn": "ERC20._burn",
      "offset": [
        9237,
        9261
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 103
    },
    "7482": {
      "fn": "ERC20._burn",
      "offset": [
        9237,
        9261
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7483": {
      "fn": "ERC20._burn",
      "offset": [
        9237,
        9261
      ],
      "op": "LT",
      "path": "4"
    },
    "7484": {
      "branch": 145,
      "fn": "ERC20._burn",
      "offset": [
        9237,
        9261
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "7485": {
      "fn": "ERC20._burn",
      "offset": [
        9229,
        9300
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D93"
    },
    "7488": {
      "branch": 145,
      "fn": "ERC20._burn",
      "offset": [
        9229,
        9300
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "7489": {
      "fn": "ERC20._burn",
      "offset": [
        9229,
        9300
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7491": {
      "fn": "ERC20._burn",
      "offset": [
        9229,
        9300
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7492": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7496": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7498": {
      "op": "SHL"
    },
    "7499": {
      "fn": "ERC20._burn",
      "offset": [
        9229,
        9300
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7500": {
      "fn": "ERC20._burn",
      "offset": [
        9229,
        9300
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7503": {
      "fn": "ERC20._burn",
      "offset": [
        9229,
        9300
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "7505": {
      "fn": "ERC20._burn",
      "offset": [
        9229,
        9300
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7506": {
      "fn": "ERC20._burn",
      "offset": [
        9229,
        9300
      ],
      "op": "ADD",
      "path": "4"
    },
    "7507": {
      "op": "MSTORE"
    },
    "7508": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7510": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7512": {
      "op": "DUP3"
    },
    "7513": {
      "op": "ADD"
    },
    "7514": {
      "op": "MSTORE"
    },
    "7515": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "7548": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7550": {
      "op": "DUP3"
    },
    "7551": {
      "op": "ADD"
    },
    "7552": {
      "op": "MSTORE"
    },
    "7553": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "7556": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7558": {
      "op": "SHL"
    },
    "7559": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7561": {
      "op": "DUP3"
    },
    "7562": {
      "op": "ADD"
    },
    "7563": {
      "op": "MSTORE"
    },
    "7564": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7566": {
      "op": "ADD"
    },
    "7567": {
      "fn": "ERC20._burn",
      "offset": [
        9229,
        9300
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6DA"
    },
    "7570": {
      "op": "JUMP"
    },
    "7571": {
      "fn": "ERC20._burn",
      "offset": [
        9229,
        9300
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7576": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7578": {
      "op": "SHL"
    },
    "7579": {
      "op": "SUB"
    },
    "7580": {
      "fn": "ERC20._burn",
      "offset": [
        9334,
        9352
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 104
    },
    "7581": {
      "fn": "ERC20._burn",
      "offset": [
        9334,
        9352
      ],
      "op": "AND",
      "path": "4"
    },
    "7582": {
      "fn": "ERC20._burn",
      "offset": [
        9334,
        9343
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7584": {
      "fn": "ERC20._burn",
      "offset": [
        9334,
        9352
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7585": {
      "fn": "ERC20._burn",
      "offset": [
        9334,
        9352
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7586": {
      "fn": "ERC20._burn",
      "offset": [
        9334,
        9352
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7587": {
      "fn": "ERC20._burn",
      "offset": [
        9334,
        9352
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7589": {
      "fn": "ERC20._burn",
      "offset": [
        9334,
        9352
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7590": {
      "fn": "ERC20._burn",
      "offset": [
        9334,
        9352
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7591": {
      "fn": "ERC20._burn",
      "offset": [
        9334,
        9352
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7592": {
      "fn": "ERC20._burn",
      "offset": [
        9334,
        9352
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7594": {
      "fn": "ERC20._burn",
      "offset": [
        9334,
        9352
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7595": {
      "fn": "ERC20._burn",
      "offset": [
        9334,
        9352
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7596": {
      "fn": "ERC20._burn",
      "offset": [
        9355,
        9378
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7597": {
      "fn": "ERC20._burn",
      "offset": [
        9355,
        9378
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7598": {
      "fn": "ERC20._burn",
      "offset": [
        9355,
        9378
      ],
      "op": "SUB",
      "path": "4"
    },
    "7599": {
      "fn": "ERC20._burn",
      "offset": [
        9334,
        9378
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7600": {
      "fn": "ERC20._burn",
      "offset": [
        9334,
        9378
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7601": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9410
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 105,
      "value": "0x2"
    },
    "7603": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9420
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7604": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9420
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7605": {
      "fn": "ERC20._burn",
      "offset": [
        9372,
        9378
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7606": {
      "fn": "ERC20._burn",
      "offset": [
        9372,
        9378
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "7607": {
      "fn": "ERC20._burn",
      "offset": [
        9334,
        9343
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7608": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9420
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DC2"
    },
    "7611": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9420
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7612": {
      "fn": "ERC20._burn",
      "offset": [
        9372,
        9378
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7613": {
      "fn": "ERC20._burn",
      "offset": [
        9372,
        9378
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7614": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9420
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2385"
    },
    "7617": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9398,
        9420
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7618": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9420
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7619": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9420
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7620": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9420
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7621": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9420
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7622": {
      "op": "POP"
    },
    "7623": {
      "op": "POP"
    },
    "7624": {
      "fn": "ERC20._burn",
      "offset": [
        9436,
        9473
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 106,
      "value": "0x40"
    },
    "7626": {
      "fn": "ERC20._burn",
      "offset": [
        9436,
        9473
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7627": {
      "op": "DUP3"
    },
    "7628": {
      "op": "DUP2"
    },
    "7629": {
      "op": "MSTORE"
    },
    "7630": {
      "fn": "ERC20._burn",
      "offset": [
        9462,
        9463
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7632": {
      "fn": "ERC20._burn",
      "offset": [
        9462,
        9463
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7639": {
      "op": "SHL"
    },
    "7640": {
      "op": "SUB"
    },
    "7641": {
      "fn": "ERC20._burn",
      "offset": [
        9436,
        9473
      ],
      "op": "DUP6",
      "path": "4"
    },
    "7642": {
      "fn": "ERC20._burn",
      "offset": [
        9436,
        9473
      ],
      "op": "AND",
      "path": "4"
    },
    "7643": {
      "fn": "ERC20._burn",
      "offset": [
        9436,
        9473
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7646": {
      "op": "DUP1"
    },
    "7647": {
      "op": "MLOAD"
    },
    "7648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7650": {
      "op": "PUSH2",
      "value": "0x24BB"
    },
    "7653": {
      "op": "DUP4"
    },
    "7654": {
      "op": "CODECOPY"
    },
    "7655": {
      "op": "DUP2"
    },
    "7656": {
      "op": "MLOAD"
    },
    "7657": {
      "op": "SWAP2"
    },
    "7658": {
      "op": "MSTORE"
    },
    "7659": {
      "fn": "ERC20._burn",
      "offset": [
        9436,
        9473
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7660": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7662": {
      "op": "ADD"
    },
    "7663": {
      "fn": "ERC20._burn",
      "offset": [
        9436,
        9473
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7665": {
      "fn": "ERC20._burn",
      "offset": [
        9436,
        9473
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7666": {
      "fn": "ERC20._burn",
      "offset": [
        9436,
        9473
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7667": {
      "fn": "ERC20._burn",
      "offset": [
        9436,
        9473
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7668": {
      "fn": "ERC20._burn",
      "offset": [
        9436,
        9473
      ],
      "op": "SUB",
      "path": "4"
    },
    "7669": {
      "fn": "ERC20._burn",
      "offset": [
        9436,
        9473
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7670": {
      "fn": "ERC20._burn",
      "offset": [
        9436,
        9473
      ],
      "op": "LOG3",
      "path": "4"
    },
    "7671": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "POP",
      "path": "0"
    },
    "7672": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "POP",
      "path": "0"
    },
    "7673": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "POP",
      "path": "0"
    },
    "7674": {
      "fn": "AccessControl.grantRole",
      "jump": "o",
      "offset": [
        4288,
        4433
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7675": {
      "op": "JUMPDEST"
    },
    "7676": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7680": {
      "op": "PUSH2",
      "value": "0x1E0A"
    },
    "7683": {
      "op": "DUP4"
    },
    "7684": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "7686": {
      "op": "PUSH2",
      "value": "0x2366"
    },
    "7689": {
      "jump": "i",
      "op": "JUMP"
    },
    "7690": {
      "op": "JUMPDEST"
    },
    "7691": {
      "op": "PUSH2",
      "value": "0x1E15"
    },
    "7694": {
      "op": "SWAP1"
    },
    "7695": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "7697": {
      "op": "PUSH2",
      "value": "0x233A"
    },
    "7700": {
      "jump": "i",
      "op": "JUMP"
    },
    "7701": {
      "op": "JUMPDEST"
    },
    "7702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7706": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7708": {
      "op": "SHL"
    },
    "7709": {
      "op": "SUB"
    },
    "7710": {
      "op": "DUP2"
    },
    "7711": {
      "op": "GT"
    },
    "7712": {
      "op": "ISZERO"
    },
    "7713": {
      "op": "PUSH2",
      "value": "0x1E3A"
    },
    "7716": {
      "op": "JUMPI"
    },
    "7717": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7722": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7724": {
      "op": "SHL"
    },
    "7725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7727": {
      "op": "MSTORE"
    },
    "7728": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "7730": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7732": {
      "op": "MSTORE"
    },
    "7733": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7737": {
      "op": "REVERT"
    },
    "7738": {
      "op": "JUMPDEST"
    },
    "7739": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7741": {
      "op": "MLOAD"
    },
    "7742": {
      "op": "SWAP1"
    },
    "7743": {
      "op": "DUP1"
    },
    "7744": {
      "op": "DUP3"
    },
    "7745": {
      "op": "MSTORE"
    },
    "7746": {
      "op": "DUP1"
    },
    "7747": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7749": {
      "op": "ADD"
    },
    "7750": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7752": {
      "op": "NOT"
    },
    "7753": {
      "op": "AND"
    },
    "7754": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7756": {
      "op": "ADD"
    },
    "7757": {
      "op": "DUP3"
    },
    "7758": {
      "op": "ADD"
    },
    "7759": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7761": {
      "op": "MSTORE"
    },
    "7762": {
      "op": "DUP1"
    },
    "7763": {
      "op": "ISZERO"
    },
    "7764": {
      "op": "PUSH2",
      "value": "0x1E64"
    },
    "7767": {
      "op": "JUMPI"
    },
    "7768": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7770": {
      "op": "DUP3"
    },
    "7771": {
      "op": "ADD"
    },
    "7772": {
      "op": "DUP2"
    },
    "7773": {
      "op": "DUP1"
    },
    "7774": {
      "op": "CALLDATASIZE"
    },
    "7775": {
      "op": "DUP4"
    },
    "7776": {
      "op": "CALLDATACOPY"
    },
    "7777": {
      "op": "ADD"
    },
    "7778": {
      "op": "SWAP1"
    },
    "7779": {
      "op": "POP"
    },
    "7780": {
      "op": "JUMPDEST"
    },
    "7781": {
      "op": "POP"
    },
    "7782": {
      "op": "SWAP1"
    },
    "7783": {
      "op": "POP"
    },
    "7784": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "7786": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "7788": {
      "op": "SHL"
    },
    "7789": {
      "op": "DUP2"
    },
    "7790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7792": {
      "op": "DUP2"
    },
    "7793": {
      "op": "MLOAD"
    },
    "7794": {
      "op": "DUP2"
    },
    "7795": {
      "op": "LT"
    },
    "7796": {
      "op": "PUSH2",
      "value": "0x1E8D"
    },
    "7799": {
      "op": "JUMPI"
    },
    "7800": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7805": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7807": {
      "op": "SHL"
    },
    "7808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7810": {
      "op": "MSTORE"
    },
    "7811": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "7813": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7815": {
      "op": "MSTORE"
    },
    "7816": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7820": {
      "op": "REVERT"
    },
    "7821": {
      "op": "JUMPDEST"
    },
    "7822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7824": {
      "op": "ADD"
    },
    "7825": {
      "op": "ADD"
    },
    "7826": {
      "op": "SWAP1"
    },
    "7827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7831": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "7833": {
      "op": "SHL"
    },
    "7834": {
      "op": "SUB"
    },
    "7835": {
      "op": "NOT"
    },
    "7836": {
      "op": "AND"
    },
    "7837": {
      "op": "SWAP1"
    },
    "7838": {
      "op": "DUP2"
    },
    "7839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7841": {
      "op": "BYTE"
    },
    "7842": {
      "op": "SWAP1"
    },
    "7843": {
      "op": "MSTORE8"
    },
    "7844": {
      "op": "POP"
    },
    "7845": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "7847": {
      "op": "PUSH1",
      "value": "0xFB"
    },
    "7849": {
      "op": "SHL"
    },
    "7850": {
      "op": "DUP2"
    },
    "7851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7853": {
      "op": "DUP2"
    },
    "7854": {
      "op": "MLOAD"
    },
    "7855": {
      "op": "DUP2"
    },
    "7856": {
      "op": "LT"
    },
    "7857": {
      "op": "PUSH2",
      "value": "0x1ECA"
    },
    "7860": {
      "op": "JUMPI"
    },
    "7861": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7866": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7868": {
      "op": "SHL"
    },
    "7869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7871": {
      "op": "MSTORE"
    },
    "7872": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "7874": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7876": {
      "op": "MSTORE"
    },
    "7877": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7881": {
      "op": "REVERT"
    },
    "7882": {
      "op": "JUMPDEST"
    },
    "7883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7885": {
      "op": "ADD"
    },
    "7886": {
      "op": "ADD"
    },
    "7887": {
      "op": "SWAP1"
    },
    "7888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7892": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "7894": {
      "op": "SHL"
    },
    "7895": {
      "op": "SUB"
    },
    "7896": {
      "op": "NOT"
    },
    "7897": {
      "op": "AND"
    },
    "7898": {
      "op": "SWAP1"
    },
    "7899": {
      "op": "DUP2"
    },
    "7900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7902": {
      "op": "BYTE"
    },
    "7903": {
      "op": "SWAP1"
    },
    "7904": {
      "op": "MSTORE8"
    },
    "7905": {
      "op": "POP"
    },
    "7906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7908": {
      "op": "PUSH2",
      "value": "0x1EEE"
    },
    "7911": {
      "op": "DUP5"
    },
    "7912": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "7914": {
      "op": "PUSH2",
      "value": "0x2366"
    },
    "7917": {
      "jump": "i",
      "op": "JUMP"
    },
    "7918": {
      "op": "JUMPDEST"
    },
    "7919": {
      "op": "PUSH2",
      "value": "0x1EF9"
    },
    "7922": {
      "op": "SWAP1"
    },
    "7923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7925": {
      "op": "PUSH2",
      "value": "0x233A"
    },
    "7928": {
      "jump": "i",
      "op": "JUMP"
    },
    "7929": {
      "op": "JUMPDEST"
    },
    "7930": {
      "op": "SWAP1"
    },
    "7931": {
      "op": "POP"
    },
    "7932": {
      "op": "JUMPDEST"
    },
    "7933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7935": {
      "op": "DUP2"
    },
    "7936": {
      "op": "GT"
    },
    "7937": {
      "op": "ISZERO"
    },
    "7938": {
      "op": "PUSH2",
      "value": "0x1F8D"
    },
    "7941": {
      "op": "JUMPI"
    },
    "7942": {
      "op": "PUSH16",
      "value": "0x181899199A1A9B1B9C1CB0B131B232B3"
    },
    "7959": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "7961": {
      "op": "SHL"
    },
    "7962": {
      "op": "DUP6"
    },
    "7963": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "7965": {
      "op": "AND"
    },
    "7966": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "7968": {
      "op": "DUP2"
    },
    "7969": {
      "op": "LT"
    },
    "7970": {
      "op": "PUSH2",
      "value": "0x1F3B"
    },
    "7973": {
      "op": "JUMPI"
    },
    "7974": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7979": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7981": {
      "op": "SHL"
    },
    "7982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7984": {
      "op": "MSTORE"
    },
    "7985": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "7987": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7989": {
      "op": "MSTORE"
    },
    "7990": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7994": {
      "op": "REVERT"
    },
    "7995": {
      "op": "JUMPDEST"
    },
    "7996": {
      "op": "BYTE"
    },
    "7997": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "7999": {
      "op": "SHL"
    },
    "8000": {
      "op": "DUP3"
    },
    "8001": {
      "op": "DUP3"
    },
    "8002": {
      "op": "DUP2"
    },
    "8003": {
      "op": "MLOAD"
    },
    "8004": {
      "op": "DUP2"
    },
    "8005": {
      "op": "LT"
    },
    "8006": {
      "op": "PUSH2",
      "value": "0x1F5F"
    },
    "8009": {
      "op": "JUMPI"
    },
    "8010": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8015": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8017": {
      "op": "SHL"
    },
    "8018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8020": {
      "op": "MSTORE"
    },
    "8021": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "8023": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8025": {
      "op": "MSTORE"
    },
    "8026": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8030": {
      "op": "REVERT"
    },
    "8031": {
      "op": "JUMPDEST"
    },
    "8032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8034": {
      "op": "ADD"
    },
    "8035": {
      "op": "ADD"
    },
    "8036": {
      "op": "SWAP1"
    },
    "8037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8041": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8043": {
      "op": "SHL"
    },
    "8044": {
      "op": "SUB"
    },
    "8045": {
      "op": "NOT"
    },
    "8046": {
      "op": "AND"
    },
    "8047": {
      "op": "SWAP1"
    },
    "8048": {
      "op": "DUP2"
    },
    "8049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8051": {
      "op": "BYTE"
    },
    "8052": {
      "op": "SWAP1"
    },
    "8053": {
      "op": "MSTORE8"
    },
    "8054": {
      "op": "POP"
    },
    "8055": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8057": {
      "op": "SWAP5"
    },
    "8058": {
      "op": "SWAP1"
    },
    "8059": {
      "op": "SWAP5"
    },
    "8060": {
      "op": "SHR"
    },
    "8061": {
      "op": "SWAP4"
    },
    "8062": {
      "op": "PUSH2",
      "value": "0x1F86"
    },
    "8065": {
      "op": "DUP2"
    },
    "8066": {
      "op": "PUSH2",
      "value": "0x23C8"
    },
    "8069": {
      "jump": "i",
      "op": "JUMP"
    },
    "8070": {
      "op": "JUMPDEST"
    },
    "8071": {
      "op": "SWAP1"
    },
    "8072": {
      "op": "POP"
    },
    "8073": {
      "op": "PUSH2",
      "value": "0x1EFC"
    },
    "8076": {
      "op": "JUMP"
    },
    "8077": {
      "op": "JUMPDEST"
    },
    "8078": {
      "op": "POP"
    },
    "8079": {
      "op": "DUP4"
    },
    "8080": {
      "op": "ISZERO"
    },
    "8081": {
      "op": "PUSH2",
      "value": "0x1CB8"
    },
    "8084": {
      "op": "JUMPI"
    },
    "8085": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8087": {
      "op": "MLOAD"
    },
    "8088": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8092": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8094": {
      "op": "SHL"
    },
    "8095": {
      "op": "DUP2"
    },
    "8096": {
      "op": "MSTORE"
    },
    "8097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8099": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8101": {
      "op": "DUP3"
    },
    "8102": {
      "op": "ADD"
    },
    "8103": {
      "op": "DUP2"
    },
    "8104": {
      "op": "SWAP1"
    },
    "8105": {
      "op": "MSTORE"
    },
    "8106": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8108": {
      "op": "DUP3"
    },
    "8109": {
      "op": "ADD"
    },
    "8110": {
      "op": "MSTORE"
    },
    "8111": {
      "op": "PUSH32",
      "value": "0x537472696E67733A20686578206C656E67746820696E73756666696369656E74"
    },
    "8144": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8146": {
      "op": "DUP3"
    },
    "8147": {
      "op": "ADD"
    },
    "8148": {
      "op": "MSTORE"
    },
    "8149": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8151": {
      "op": "ADD"
    },
    "8152": {
      "op": "PUSH2",
      "value": "0x6DA"
    },
    "8155": {
      "op": "JUMP"
    },
    "8156": {
      "op": "JUMPDEST"
    },
    "8157": {
      "op": "DUP1"
    },
    "8158": {
      "op": "CALLDATALOAD"
    },
    "8159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8165": {
      "op": "SHL"
    },
    "8166": {
      "op": "SUB"
    },
    "8167": {
      "op": "DUP2"
    },
    "8168": {
      "op": "AND"
    },
    "8169": {
      "op": "DUP2"
    },
    "8170": {
      "op": "EQ"
    },
    "8171": {
      "op": "PUSH2",
      "value": "0x647"
    },
    "8174": {
      "op": "JUMPI"
    },
    "8175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8177": {
      "op": "DUP1"
    },
    "8178": {
      "op": "REVERT"
    },
    "8179": {
      "op": "JUMPDEST"
    },
    "8180": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8184": {
      "op": "DUP3"
    },
    "8185": {
      "op": "DUP5"
    },
    "8186": {
      "op": "SUB"
    },
    "8187": {
      "op": "SLT"
    },
    "8188": {
      "op": "ISZERO"
    },
    "8189": {
      "op": "PUSH2",
      "value": "0x2004"
    },
    "8192": {
      "op": "JUMPI"
    },
    "8193": {
      "op": "DUP1"
    },
    "8194": {
      "op": "DUP2"
    },
    "8195": {
      "op": "REVERT"
    },
    "8196": {
      "op": "JUMPDEST"
    },
    "8197": {
      "op": "PUSH2",
      "value": "0x1CB8"
    },
    "8200": {
      "op": "DUP3"
    },
    "8201": {
      "op": "PUSH2",
      "value": "0x1FDC"
    },
    "8204": {
      "jump": "i",
      "op": "JUMP"
    },
    "8205": {
      "op": "JUMPDEST"
    },
    "8206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8208": {
      "op": "DUP1"
    },
    "8209": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8211": {
      "op": "DUP4"
    },
    "8212": {
      "op": "DUP6"
    },
    "8213": {
      "op": "SUB"
    },
    "8214": {
      "op": "SLT"
    },
    "8215": {
      "op": "ISZERO"
    },
    "8216": {
      "op": "PUSH2",
      "value": "0x201F"
    },
    "8219": {
      "op": "JUMPI"
    },
    "8220": {
      "op": "DUP1"
    },
    "8221": {
      "op": "DUP2"
    },
    "8222": {
      "op": "REVERT"
    },
    "8223": {
      "op": "JUMPDEST"
    },
    "8224": {
      "op": "PUSH2",
      "value": "0x2028"
    },
    "8227": {
      "op": "DUP4"
    },
    "8228": {
      "op": "PUSH2",
      "value": "0x1FDC"
    },
    "8231": {
      "jump": "i",
      "op": "JUMP"
    },
    "8232": {
      "op": "JUMPDEST"
    },
    "8233": {
      "op": "SWAP2"
    },
    "8234": {
      "op": "POP"
    },
    "8235": {
      "op": "PUSH2",
      "value": "0x2036"
    },
    "8238": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8240": {
      "op": "DUP5"
    },
    "8241": {
      "op": "ADD"
    },
    "8242": {
      "op": "PUSH2",
      "value": "0x1FDC"
    },
    "8245": {
      "jump": "i",
      "op": "JUMP"
    },
    "8246": {
      "op": "JUMPDEST"
    },
    "8247": {
      "op": "SWAP1"
    },
    "8248": {
      "op": "POP"
    },
    "8249": {
      "op": "SWAP3"
    },
    "8250": {
      "op": "POP"
    },
    "8251": {
      "op": "SWAP3"
    },
    "8252": {
      "op": "SWAP1"
    },
    "8253": {
      "op": "POP"
    },
    "8254": {
      "jump": "o",
      "op": "JUMP"
    },
    "8255": {
      "op": "JUMPDEST"
    },
    "8256": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8258": {
      "op": "DUP1"
    },
    "8259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8261": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8263": {
      "op": "DUP5"
    },
    "8264": {
      "op": "DUP7"
    },
    "8265": {
      "op": "SUB"
    },
    "8266": {
      "op": "SLT"
    },
    "8267": {
      "op": "ISZERO"
    },
    "8268": {
      "op": "PUSH2",
      "value": "0x2053"
    },
    "8271": {
      "op": "JUMPI"
    },
    "8272": {
      "op": "DUP1"
    },
    "8273": {
      "op": "DUP2"
    },
    "8274": {
      "op": "REVERT"
    },
    "8275": {
      "op": "JUMPDEST"
    },
    "8276": {
      "op": "PUSH2",
      "value": "0x205C"
    },
    "8279": {
      "op": "DUP5"
    },
    "8280": {
      "op": "PUSH2",
      "value": "0x1FDC"
    },
    "8283": {
      "jump": "i",
      "op": "JUMP"
    },
    "8284": {
      "op": "JUMPDEST"
    },
    "8285": {
      "op": "SWAP3"
    },
    "8286": {
      "op": "POP"
    },
    "8287": {
      "op": "PUSH2",
      "value": "0x206A"
    },
    "8290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8292": {
      "op": "DUP6"
    },
    "8293": {
      "op": "ADD"
    },
    "8294": {
      "op": "PUSH2",
      "value": "0x1FDC"
    },
    "8297": {
      "jump": "i",
      "op": "JUMP"
    },
    "8298": {
      "op": "JUMPDEST"
    },
    "8299": {
      "op": "SWAP2"
    },
    "8300": {
      "op": "POP"
    },
    "8301": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8303": {
      "op": "DUP5"
    },
    "8304": {
      "op": "ADD"
    },
    "8305": {
      "op": "CALLDATALOAD"
    },
    "8306": {
      "op": "SWAP1"
    },
    "8307": {
      "op": "POP"
    },
    "8308": {
      "op": "SWAP3"
    },
    "8309": {
      "op": "POP"
    },
    "8310": {
      "op": "SWAP3"
    },
    "8311": {
      "op": "POP"
    },
    "8312": {
      "op": "SWAP3"
    },
    "8313": {
      "jump": "o",
      "op": "JUMP"
    },
    "8314": {
      "op": "JUMPDEST"
    },
    "8315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8317": {
      "op": "DUP1"
    },
    "8318": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8320": {
      "op": "DUP4"
    },
    "8321": {
      "op": "DUP6"
    },
    "8322": {
      "op": "SUB"
    },
    "8323": {
      "op": "SLT"
    },
    "8324": {
      "op": "ISZERO"
    },
    "8325": {
      "op": "PUSH2",
      "value": "0x208C"
    },
    "8328": {
      "op": "JUMPI"
    },
    "8329": {
      "op": "DUP2"
    },
    "8330": {
      "op": "DUP3"
    },
    "8331": {
      "op": "REVERT"
    },
    "8332": {
      "op": "JUMPDEST"
    },
    "8333": {
      "op": "PUSH2",
      "value": "0x2095"
    },
    "8336": {
      "op": "DUP4"
    },
    "8337": {
      "op": "PUSH2",
      "value": "0x1FDC"
    },
    "8340": {
      "jump": "i",
      "op": "JUMP"
    },
    "8341": {
      "op": "JUMPDEST"
    },
    "8342": {
      "op": "SWAP5"
    },
    "8343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8345": {
      "op": "SWAP4"
    },
    "8346": {
      "op": "SWAP1"
    },
    "8347": {
      "op": "SWAP4"
    },
    "8348": {
      "op": "ADD"
    },
    "8349": {
      "op": "CALLDATALOAD"
    },
    "8350": {
      "op": "SWAP4"
    },
    "8351": {
      "op": "POP"
    },
    "8352": {
      "op": "POP"
    },
    "8353": {
      "op": "POP"
    },
    "8354": {
      "jump": "o",
      "op": "JUMP"
    },
    "8355": {
      "op": "JUMPDEST"
    },
    "8356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8360": {
      "op": "DUP3"
    },
    "8361": {
      "op": "DUP5"
    },
    "8362": {
      "op": "SUB"
    },
    "8363": {
      "op": "SLT"
    },
    "8364": {
      "op": "ISZERO"
    },
    "8365": {
      "op": "PUSH2",
      "value": "0x20B4"
    },
    "8368": {
      "op": "JUMPI"
    },
    "8369": {
      "op": "DUP1"
    },
    "8370": {
      "op": "DUP2"
    },
    "8371": {
      "op": "REVERT"
    },
    "8372": {
      "op": "JUMPDEST"
    },
    "8373": {
      "op": "DUP2"
    },
    "8374": {
      "op": "MLOAD"
    },
    "8375": {
      "op": "DUP1"
    },
    "8376": {
      "op": "ISZERO"
    },
    "8377": {
      "op": "ISZERO"
    },
    "8378": {
      "op": "DUP2"
    },
    "8379": {
      "op": "EQ"
    },
    "8380": {
      "op": "PUSH2",
      "value": "0x1CB8"
    },
    "8383": {
      "op": "JUMPI"
    },
    "8384": {
      "op": "DUP2"
    },
    "8385": {
      "op": "DUP3"
    },
    "8386": {
      "op": "REVERT"
    },
    "8387": {
      "op": "JUMPDEST"
    },
    "8388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8390": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8392": {
      "op": "DUP3"
    },
    "8393": {
      "op": "DUP5"
    },
    "8394": {
      "op": "SUB"
    },
    "8395": {
      "op": "SLT"
    },
    "8396": {
      "op": "ISZERO"
    },
    "8397": {
      "op": "PUSH2",
      "value": "0x20D4"
    },
    "8400": {
      "op": "JUMPI"
    },
    "8401": {
      "op": "DUP1"
    },
    "8402": {
      "op": "DUP2"
    },
    "8403": {
      "op": "REVERT"
    },
    "8404": {
      "op": "JUMPDEST"
    },
    "8405": {
      "op": "POP"
    },
    "8406": {
      "op": "CALLDATALOAD"
    },
    "8407": {
      "op": "SWAP2"
    },
    "8408": {
      "op": "SWAP1"
    },
    "8409": {
      "op": "POP"
    },
    "8410": {
      "jump": "o",
      "op": "JUMP"
    },
    "8411": {
      "op": "JUMPDEST"
    },
    "8412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8414": {
      "op": "DUP1"
    },
    "8415": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8417": {
      "op": "DUP4"
    },
    "8418": {
      "op": "DUP6"
    },
    "8419": {
      "op": "SUB"
    },
    "8420": {
      "op": "SLT"
    },
    "8421": {
      "op": "ISZERO"
    },
    "8422": {
      "op": "PUSH2",
      "value": "0x20ED"
    },
    "8425": {
      "op": "JUMPI"
    },
    "8426": {
      "op": "DUP2"
    },
    "8427": {
      "op": "DUP3"
    },
    "8428": {
      "op": "REVERT"
    },
    "8429": {
      "op": "JUMPDEST"
    },
    "8430": {
      "op": "DUP3"
    },
    "8431": {
      "op": "CALLDATALOAD"
    },
    "8432": {
      "op": "SWAP2"
    },
    "8433": {
      "op": "POP"
    },
    "8434": {
      "op": "PUSH2",
      "value": "0x2036"
    },
    "8437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8439": {
      "op": "DUP5"
    },
    "8440": {
      "op": "ADD"
    },
    "8441": {
      "op": "PUSH2",
      "value": "0x1FDC"
    },
    "8444": {
      "jump": "i",
      "op": "JUMP"
    },
    "8445": {
      "op": "JUMPDEST"
    },
    "8446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8448": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8450": {
      "op": "DUP3"
    },
    "8451": {
      "op": "DUP5"
    },
    "8452": {
      "op": "SUB"
    },
    "8453": {
      "op": "SLT"
    },
    "8454": {
      "op": "ISZERO"
    },
    "8455": {
      "op": "PUSH2",
      "value": "0x210E"
    },
    "8458": {
      "op": "JUMPI"
    },
    "8459": {
      "op": "DUP1"
    },
    "8460": {
      "op": "DUP2"
    },
    "8461": {
      "op": "REVERT"
    },
    "8462": {
      "op": "JUMPDEST"
    },
    "8463": {
      "op": "DUP2"
    },
    "8464": {
      "op": "CALLDATALOAD"
    },
    "8465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8469": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8471": {
      "op": "SHL"
    },
    "8472": {
      "op": "SUB"
    },
    "8473": {
      "op": "NOT"
    },
    "8474": {
      "op": "DUP2"
    },
    "8475": {
      "op": "AND"
    },
    "8476": {
      "op": "DUP2"
    },
    "8477": {
      "op": "EQ"
    },
    "8478": {
      "op": "PUSH2",
      "value": "0x1CB8"
    },
    "8481": {
      "op": "JUMPI"
    },
    "8482": {
      "op": "DUP2"
    },
    "8483": {
      "op": "DUP3"
    },
    "8484": {
      "op": "REVERT"
    },
    "8485": {
      "op": "JUMPDEST"
    },
    "8486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8488": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8490": {
      "op": "DUP3"
    },
    "8491": {
      "op": "DUP5"
    },
    "8492": {
      "op": "SUB"
    },
    "8493": {
      "op": "SLT"
    },
    "8494": {
      "op": "ISZERO"
    },
    "8495": {
      "op": "PUSH2",
      "value": "0x2136"
    },
    "8498": {
      "op": "JUMPI"
    },
    "8499": {
      "op": "DUP1"
    },
    "8500": {
      "op": "DUP2"
    },
    "8501": {
      "op": "REVERT"
    },
    "8502": {
      "op": "JUMPDEST"
    },
    "8503": {
      "op": "POP"
    },
    "8504": {
      "op": "MLOAD"
    },
    "8505": {
      "op": "SWAP2"
    },
    "8506": {
      "op": "SWAP1"
    },
    "8507": {
      "op": "POP"
    },
    "8508": {
      "jump": "o",
      "op": "JUMP"
    },
    "8509": {
      "op": "JUMPDEST"
    },
    "8510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8512": {
      "op": "DUP1"
    },
    "8513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8515": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8517": {
      "op": "DUP5"
    },
    "8518": {
      "op": "DUP7"
    },
    "8519": {
      "op": "SUB"
    },
    "8520": {
      "op": "SLT"
    },
    "8521": {
      "op": "ISZERO"
    },
    "8522": {
      "op": "PUSH2",
      "value": "0x2151"
    },
    "8525": {
      "op": "JUMPI"
    },
    "8526": {
      "op": "DUP3"
    },
    "8527": {
      "op": "DUP4"
    },
    "8528": {
      "op": "REVERT"
    },
    "8529": {
      "op": "JUMPDEST"
    },
    "8530": {
      "op": "DUP4"
    },
    "8531": {
      "op": "CALLDATALOAD"
    },
    "8532": {
      "op": "SWAP3"
    },
    "8533": {
      "op": "POP"
    },
    "8534": {
      "op": "PUSH2",
      "value": "0x206A"
    },
    "8537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8539": {
      "op": "DUP6"
    },
    "8540": {
      "op": "ADD"
    },
    "8541": {
      "op": "PUSH2",
      "value": "0x1FDC"
    },
    "8544": {
      "jump": "i",
      "op": "JUMP"
    },
    "8545": {
      "op": "JUMPDEST"
    },
    "8546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8548": {
      "op": "DUP1"
    },
    "8549": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8551": {
      "op": "DUP4"
    },
    "8552": {
      "op": "DUP6"
    },
    "8553": {
      "op": "SUB"
    },
    "8554": {
      "op": "SLT"
    },
    "8555": {
      "op": "ISZERO"
    },
    "8556": {
      "op": "PUSH2",
      "value": "0x2173"
    },
    "8559": {
      "op": "JUMPI"
    },
    "8560": {
      "op": "DUP2"
    },
    "8561": {
      "op": "DUP3"
    },
    "8562": {
      "op": "REVERT"
    },
    "8563": {
      "op": "JUMPDEST"
    },
    "8564": {
      "op": "POP"
    },
    "8565": {
      "op": "POP"
    },
    "8566": {
      "op": "DUP1"
    },
    "8567": {
      "op": "CALLDATALOAD"
    },
    "8568": {
      "op": "SWAP3"
    },
    "8569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8571": {
      "op": "SWAP1"
    },
    "8572": {
      "op": "SWAP2"
    },
    "8573": {
      "op": "ADD"
    },
    "8574": {
      "op": "CALLDATALOAD"
    },
    "8575": {
      "op": "SWAP2"
    },
    "8576": {
      "op": "POP"
    },
    "8577": {
      "jump": "o",
      "op": "JUMP"
    },
    "8578": {
      "op": "JUMPDEST"
    },
    "8579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8581": {
      "op": "DUP1"
    },
    "8582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8584": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8586": {
      "op": "DUP5"
    },
    "8587": {
      "op": "DUP7"
    },
    "8588": {
      "op": "SUB"
    },
    "8589": {
      "op": "SLT"
    },
    "8590": {
      "op": "ISZERO"
    },
    "8591": {
      "op": "PUSH2",
      "value": "0x2196"
    },
    "8594": {
      "op": "JUMPI"
    },
    "8595": {
      "op": "DUP3"
    },
    "8596": {
      "op": "DUP4"
    },
    "8597": {
      "op": "REVERT"
    },
    "8598": {
      "op": "JUMPDEST"
    },
    "8599": {
      "op": "POP"
    },
    "8600": {
      "op": "POP"
    },
    "8601": {
      "op": "DUP2"
    },
    "8602": {
      "op": "CALLDATALOAD"
    },
    "8603": {
      "op": "SWAP4"
    },
    "8604": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8606": {
      "op": "DUP4"
    },
    "8607": {
      "op": "ADD"
    },
    "8608": {
      "op": "CALLDATALOAD"
    },
    "8609": {
      "op": "SWAP4"
    },
    "8610": {
      "op": "POP"
    },
    "8611": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8613": {
      "op": "SWAP1"
    },
    "8614": {
      "op": "SWAP3"
    },
    "8615": {
      "op": "ADD"
    },
    "8616": {
      "op": "CALLDATALOAD"
    },
    "8617": {
      "op": "SWAP2"
    },
    "8618": {
      "op": "SWAP1"
    },
    "8619": {
      "op": "POP"
    },
    "8620": {
      "jump": "o",
      "op": "JUMP"
    },
    "8621": {
      "op": "JUMPDEST"
    },
    "8622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8624": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8626": {
      "op": "DUP3"
    },
    "8627": {
      "op": "DUP5"
    },
    "8628": {
      "op": "SUB"
    },
    "8629": {
      "op": "SLT"
    },
    "8630": {
      "op": "ISZERO"
    },
    "8631": {
      "op": "PUSH2",
      "value": "0x21BE"
    },
    "8634": {
      "op": "JUMPI"
    },
    "8635": {
      "op": "DUP1"
    },
    "8636": {
      "op": "DUP2"
    },
    "8637": {
      "op": "REVERT"
    },
    "8638": {
      "op": "JUMPDEST"
    },
    "8639": {
      "op": "DUP2"
    },
    "8640": {
      "op": "MLOAD"
    },
    "8641": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8643": {
      "op": "DUP2"
    },
    "8644": {
      "op": "AND"
    },
    "8645": {
      "op": "DUP2"
    },
    "8646": {
      "op": "EQ"
    },
    "8647": {
      "op": "PUSH2",
      "value": "0x1CB8"
    },
    "8650": {
      "op": "JUMPI"
    },
    "8651": {
      "op": "DUP2"
    },
    "8652": {
      "op": "DUP3"
    },
    "8653": {
      "op": "REVERT"
    },
    "8654": {
      "op": "JUMPDEST"
    },
    "8655": {
      "op": "PUSH23",
      "value": "0x20B1B1B2B9B9A1B7B73A3937B61D1030B1B1B7BAB73A1"
    },
    "8679": {
      "op": "PUSH1",
      "value": "0x4D"
    },
    "8681": {
      "op": "SHL"
    },
    "8682": {
      "op": "DUP2"
    },
    "8683": {
      "op": "MSTORE"
    },
    "8684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8686": {
      "op": "DUP4"
    },
    "8687": {
      "op": "MLOAD"
    },
    "8688": {
      "op": "PUSH2",
      "value": "0x2200"
    },
    "8691": {
      "op": "DUP2"
    },
    "8692": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "8694": {
      "op": "DUP6"
    },
    "8695": {
      "op": "ADD"
    },
    "8696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8698": {
      "op": "DUP9"
    },
    "8699": {
      "op": "ADD"
    },
    "8700": {
      "op": "PUSH2",
      "value": "0x239C"
    },
    "8703": {
      "jump": "i",
      "op": "JUMP"
    },
    "8704": {
      "op": "JUMPDEST"
    },
    "8705": {
      "op": "PUSH17",
      "value": "0x1034B99036B4B9B9B4B733903937B6329"
    },
    "8723": {
      "op": "PUSH1",
      "value": "0x7D"
    },
    "8725": {
      "op": "SHL"
    },
    "8726": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "8728": {
      "op": "SWAP2"
    },
    "8729": {
      "op": "DUP5"
    },
    "8730": {
      "op": "ADD"
    },
    "8731": {
      "op": "SWAP2"
    },
    "8732": {
      "op": "DUP3"
    },
    "8733": {
      "op": "ADD"
    },
    "8734": {
      "op": "MSTORE"
    },
    "8735": {
      "op": "DUP4"
    },
    "8736": {
      "op": "MLOAD"
    },
    "8737": {
      "op": "PUSH2",
      "value": "0x2231"
    },
    "8740": {
      "op": "DUP2"
    },
    "8741": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "8743": {
      "op": "DUP5"
    },
    "8744": {
      "op": "ADD"
    },
    "8745": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8747": {
      "op": "DUP9"
    },
    "8748": {
      "op": "ADD"
    },
    "8749": {
      "op": "PUSH2",
      "value": "0x239C"
    },
    "8752": {
      "jump": "i",
      "op": "JUMP"
    },
    "8753": {
      "op": "JUMPDEST"
    },
    "8754": {
      "op": "ADD"
    },
    "8755": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "8757": {
      "op": "ADD"
    },
    "8758": {
      "op": "SWAP5"
    },
    "8759": {
      "op": "SWAP4"
    },
    "8760": {
      "op": "POP"
    },
    "8761": {
      "op": "POP"
    },
    "8762": {
      "op": "POP"
    },
    "8763": {
      "op": "POP"
    },
    "8764": {
      "jump": "o",
      "op": "JUMP"
    },
    "8765": {
      "op": "JUMPDEST"
    },
    "8766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8772": {
      "op": "SHL"
    },
    "8773": {
      "op": "SUB"
    },
    "8774": {
      "op": "SWAP2"
    },
    "8775": {
      "op": "SWAP1"
    },
    "8776": {
      "op": "SWAP2"
    },
    "8777": {
      "op": "AND"
    },
    "8778": {
      "op": "DUP2"
    },
    "8779": {
      "op": "MSTORE"
    },
    "8780": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8782": {
      "op": "ADD"
    },
    "8783": {
      "op": "SWAP1"
    },
    "8784": {
      "jump": "o",
      "op": "JUMP"
    },
    "8785": {
      "op": "JUMPDEST"
    },
    "8786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8792": {
      "op": "SHL"
    },
    "8793": {
      "op": "SUB"
    },
    "8794": {
      "op": "SWAP4"
    },
    "8795": {
      "op": "DUP5"
    },
    "8796": {
      "op": "AND"
    },
    "8797": {
      "op": "DUP2"
    },
    "8798": {
      "op": "MSTORE"
    },
    "8799": {
      "op": "SWAP2"
    },
    "8800": {
      "op": "SWAP1"
    },
    "8801": {
      "op": "SWAP3"
    },
    "8802": {
      "op": "AND"
    },
    "8803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8805": {
      "op": "DUP3"
    },
    "8806": {
      "op": "ADD"
    },
    "8807": {
      "op": "MSTORE"
    },
    "8808": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8810": {
      "op": "DUP2"
    },
    "8811": {
      "op": "ADD"
    },
    "8812": {
      "op": "SWAP2"
    },
    "8813": {
      "op": "SWAP1"
    },
    "8814": {
      "op": "SWAP2"
    },
    "8815": {
      "op": "MSTORE"
    },
    "8816": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8818": {
      "op": "ADD"
    },
    "8819": {
      "op": "SWAP1"
    },
    "8820": {
      "jump": "o",
      "op": "JUMP"
    },
    "8821": {
      "op": "JUMPDEST"
    },
    "8822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8828": {
      "op": "SHL"
    },
    "8829": {
      "op": "SUB"
    },
    "8830": {
      "op": "SWAP3"
    },
    "8831": {
      "op": "SWAP1"
    },
    "8832": {
      "op": "SWAP3"
    },
    "8833": {
      "op": "AND"
    },
    "8834": {
      "op": "DUP3"
    },
    "8835": {
      "op": "MSTORE"
    },
    "8836": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8838": {
      "op": "DUP3"
    },
    "8839": {
      "op": "ADD"
    },
    "8840": {
      "op": "MSTORE"
    },
    "8841": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8843": {
      "op": "ADD"
    },
    "8844": {
      "op": "SWAP1"
    },
    "8845": {
      "jump": "o",
      "op": "JUMP"
    },
    "8846": {
      "op": "JUMPDEST"
    },
    "8847": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8849": {
      "op": "DUP2"
    },
    "8850": {
      "op": "MSTORE"
    },
    "8851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8853": {
      "op": "DUP3"
    },
    "8854": {
      "op": "MLOAD"
    },
    "8855": {
      "op": "DUP1"
    },
    "8856": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8858": {
      "op": "DUP5"
    },
    "8859": {
      "op": "ADD"
    },
    "8860": {
      "op": "MSTORE"
    },
    "8861": {
      "op": "PUSH2",
      "value": "0x22AD"
    },
    "8864": {
      "op": "DUP2"
    },
    "8865": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8867": {
      "op": "DUP6"
    },
    "8868": {
      "op": "ADD"
    },
    "8869": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8871": {
      "op": "DUP8"
    },
    "8872": {
      "op": "ADD"
    },
    "8873": {
      "op": "PUSH2",
      "value": "0x239C"
    },
    "8876": {
      "jump": "i",
      "op": "JUMP"
    },
    "8877": {
      "op": "JUMPDEST"
    },
    "8878": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8880": {
      "op": "ADD"
    },
    "8881": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8883": {
      "op": "NOT"
    },
    "8884": {
      "op": "AND"
    },
    "8885": {
      "op": "SWAP2"
    },
    "8886": {
      "op": "SWAP1"
    },
    "8887": {
      "op": "SWAP2"
    },
    "8888": {
      "op": "ADD"
    },
    "8889": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8891": {
      "op": "ADD"
    },
    "8892": {
      "op": "SWAP3"
    },
    "8893": {
      "op": "SWAP2"
    },
    "8894": {
      "op": "POP"
    },
    "8895": {
      "op": "POP"
    },
    "8896": {
      "jump": "o",
      "op": "JUMP"
    },
    "8897": {
      "op": "JUMPDEST"
    },
    "8898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8900": {
      "op": "DUP1"
    },
    "8901": {
      "op": "DUP3"
    },
    "8902": {
      "op": "MSTORE"
    },
    "8903": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8905": {
      "op": "SWAP1"
    },
    "8906": {
      "op": "DUP3"
    },
    "8907": {
      "op": "ADD"
    },
    "8908": {
      "op": "MSTORE"
    },
    "8909": {
      "op": "PUSH32",
      "value": "0x506F6F6C3A206C6F636B6564416D6F756E7420697320616C726561647920756E"
    },
    "8942": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8944": {
      "op": "DUP3"
    },
    "8945": {
      "op": "ADD"
    },
    "8946": {
      "op": "MSTORE"
    },
    "8947": {
      "op": "PUSH6",
      "value": "0x1B1BD8DAD959"
    },
    "8954": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "8956": {
      "op": "SHL"
    },
    "8957": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8959": {
      "op": "DUP3"
    },
    "8960": {
      "op": "ADD"
    },
    "8961": {
      "op": "MSTORE"
    },
    "8962": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8964": {
      "op": "ADD"
    },
    "8965": {
      "op": "SWAP1"
    },
    "8966": {
      "jump": "o",
      "op": "JUMP"
    },
    "8967": {
      "op": "JUMPDEST"
    },
    "8968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8970": {
      "op": "DUP1"
    },
    "8971": {
      "op": "DUP3"
    },
    "8972": {
      "op": "MSTORE"
    },
    "8973": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "8975": {
      "op": "SWAP1"
    },
    "8976": {
      "op": "DUP3"
    },
    "8977": {
      "op": "ADD"
    },
    "8978": {
      "op": "MSTORE"
    },
    "8979": {
      "op": "PUSH25",
      "value": "0x141BDBDB0E88105B5BDD5B9D081A5CC81D1BDBC81CDB585B1B"
    },
    "9005": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "9007": {
      "op": "SHL"
    },
    "9008": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9010": {
      "op": "DUP3"
    },
    "9011": {
      "op": "ADD"
    },
    "9012": {
      "op": "MSTORE"
    },
    "9013": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9015": {
      "op": "ADD"
    },
    "9016": {
      "op": "SWAP1"
    },
    "9017": {
      "jump": "o",
      "op": "JUMP"
    },
    "9018": {
      "op": "JUMPDEST"
    },
    "9019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9021": {
      "op": "DUP3"
    },
    "9022": {
      "op": "NOT"
    },
    "9023": {
      "op": "DUP3"
    },
    "9024": {
      "op": "GT"
    },
    "9025": {
      "op": "ISZERO"
    },
    "9026": {
      "op": "PUSH2",
      "value": "0x234D"
    },
    "9029": {
      "op": "JUMPI"
    },
    "9030": {
      "op": "PUSH2",
      "value": "0x234D"
    },
    "9033": {
      "op": "PUSH2",
      "value": "0x242E"
    },
    "9036": {
      "jump": "i",
      "op": "JUMP"
    },
    "9037": {
      "op": "JUMPDEST"
    },
    "9038": {
      "op": "POP"
    },
    "9039": {
      "op": "ADD"
    },
    "9040": {
      "op": "SWAP1"
    },
    "9041": {
      "jump": "o",
      "op": "JUMP"
    },
    "9042": {
      "op": "JUMPDEST"
    },
    "9043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9045": {
      "op": "DUP3"
    },
    "9046": {
      "op": "PUSH2",
      "value": "0x2361"
    },
    "9049": {
      "op": "JUMPI"
    },
    "9050": {
      "op": "PUSH2",
      "value": "0x2361"
    },
    "9053": {
      "op": "PUSH2",
      "value": "0x2444"
    },
    "9056": {
      "jump": "i",
      "op": "JUMP"
    },
    "9057": {
      "op": "JUMPDEST"
    },
    "9058": {
      "op": "POP"
    },
    "9059": {
      "op": "DIV"
    },
    "9060": {
      "op": "SWAP1"
    },
    "9061": {
      "jump": "o",
      "op": "JUMP"
    },
    "9062": {
      "op": "JUMPDEST"
    },
    "9063": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9065": {
      "op": "DUP2"
    },
    "9066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9068": {
      "op": "NOT"
    },
    "9069": {
      "op": "DIV"
    },
    "9070": {
      "op": "DUP4"
    },
    "9071": {
      "op": "GT"
    },
    "9072": {
      "op": "DUP3"
    },
    "9073": {
      "op": "ISZERO"
    },
    "9074": {
      "op": "ISZERO"
    },
    "9075": {
      "op": "AND"
    },
    "9076": {
      "op": "ISZERO"
    },
    "9077": {
      "op": "PUSH2",
      "value": "0x2380"
    },
    "9080": {
      "op": "JUMPI"
    },
    "9081": {
      "op": "PUSH2",
      "value": "0x2380"
    },
    "9084": {
      "op": "PUSH2",
      "value": "0x242E"
    },
    "9087": {
      "jump": "i",
      "op": "JUMP"
    },
    "9088": {
      "op": "JUMPDEST"
    },
    "9089": {
      "op": "POP"
    },
    "9090": {
      "op": "MUL"
    },
    "9091": {
      "op": "SWAP1"
    },
    "9092": {
      "jump": "o",
      "op": "JUMP"
    },
    "9093": {
      "op": "JUMPDEST"
    },
    "9094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9096": {
      "op": "DUP3"
    },
    "9097": {
      "op": "DUP3"
    },
    "9098": {
      "op": "LT"
    },
    "9099": {
      "op": "ISZERO"
    },
    "9100": {
      "op": "PUSH2",
      "value": "0x2397"
    },
    "9103": {
      "op": "JUMPI"
    },
    "9104": {
      "op": "PUSH2",
      "value": "0x2397"
    },
    "9107": {
      "op": "PUSH2",
      "value": "0x242E"
    },
    "9110": {
      "jump": "i",
      "op": "JUMP"
    },
    "9111": {
      "op": "JUMPDEST"
    },
    "9112": {
      "op": "POP"
    },
    "9113": {
      "op": "SUB"
    },
    "9114": {
      "op": "SWAP1"
    },
    "9115": {
      "jump": "o",
      "op": "JUMP"
    },
    "9116": {
      "op": "JUMPDEST"
    },
    "9117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9119": {
      "op": "JUMPDEST"
    },
    "9120": {
      "op": "DUP4"
    },
    "9121": {
      "op": "DUP2"
    },
    "9122": {
      "op": "LT"
    },
    "9123": {
      "op": "ISZERO"
    },
    "9124": {
      "op": "PUSH2",
      "value": "0x23B7"
    },
    "9127": {
      "op": "JUMPI"
    },
    "9128": {
      "op": "DUP2"
    },
    "9129": {
      "op": "DUP2"
    },
    "9130": {
      "op": "ADD"
    },
    "9131": {
      "op": "MLOAD"
    },
    "9132": {
      "op": "DUP4"
    },
    "9133": {
      "op": "DUP3"
    },
    "9134": {
      "op": "ADD"
    },
    "9135": {
      "op": "MSTORE"
    },
    "9136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9138": {
      "op": "ADD"
    },
    "9139": {
      "op": "PUSH2",
      "value": "0x239F"
    },
    "9142": {
      "op": "JUMP"
    },
    "9143": {
      "op": "JUMPDEST"
    },
    "9144": {
      "op": "DUP4"
    },
    "9145": {
      "op": "DUP2"
    },
    "9146": {
      "op": "GT"
    },
    "9147": {
      "op": "ISZERO"
    },
    "9148": {
      "op": "PUSH2",
      "value": "0x897"
    },
    "9151": {
      "op": "JUMPI"
    },
    "9152": {
      "op": "POP"
    },
    "9153": {
      "op": "POP"
    },
    "9154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9156": {
      "op": "SWAP2"
    },
    "9157": {
      "op": "ADD"
    },
    "9158": {
      "op": "MSTORE"
    },
    "9159": {
      "jump": "o",
      "op": "JUMP"
    },
    "9160": {
      "op": "JUMPDEST"
    },
    "9161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9163": {
      "op": "DUP2"
    },
    "9164": {
      "op": "PUSH2",
      "value": "0x23D7"
    },
    "9167": {
      "op": "JUMPI"
    },
    "9168": {
      "op": "PUSH2",
      "value": "0x23D7"
    },
    "9171": {
      "op": "PUSH2",
      "value": "0x242E"
    },
    "9174": {
      "jump": "i",
      "op": "JUMP"
    },
    "9175": {
      "op": "JUMPDEST"
    },
    "9176": {
      "op": "POP"
    },
    "9177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9179": {
      "op": "NOT"
    },
    "9180": {
      "op": "ADD"
    },
    "9181": {
      "op": "SWAP1"
    },
    "9182": {
      "jump": "o",
      "op": "JUMP"
    },
    "9183": {
      "op": "JUMPDEST"
    },
    "9184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9186": {
      "op": "DUP2"
    },
    "9187": {
      "op": "DUP2"
    },
    "9188": {
      "op": "SHR"
    },
    "9189": {
      "op": "SWAP1"
    },
    "9190": {
      "op": "DUP3"
    },
    "9191": {
      "op": "AND"
    },
    "9192": {
      "op": "DUP1"
    },
    "9193": {
      "op": "PUSH2",
      "value": "0x23F3"
    },
    "9196": {
      "op": "JUMPI"
    },
    "9197": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "9199": {
      "op": "DUP3"
    },
    "9200": {
      "op": "AND"
    },
    "9201": {
      "op": "SWAP2"
    },
    "9202": {
      "op": "POP"
    },
    "9203": {
      "op": "JUMPDEST"
    },
    "9204": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9206": {
      "op": "DUP3"
    },
    "9207": {
      "op": "LT"
    },
    "9208": {
      "op": "DUP2"
    },
    "9209": {
      "op": "EQ"
    },
    "9210": {
      "op": "ISZERO"
    },
    "9211": {
      "op": "PUSH2",
      "value": "0x2414"
    },
    "9214": {
      "op": "JUMPI"
    },
    "9215": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9220": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9222": {
      "op": "SHL"
    },
    "9223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9225": {
      "op": "MSTORE"
    },
    "9226": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "9228": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9230": {
      "op": "MSTORE"
    },
    "9231": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9235": {
      "op": "REVERT"
    },
    "9236": {
      "op": "JUMPDEST"
    },
    "9237": {
      "op": "POP"
    },
    "9238": {
      "op": "SWAP2"
    },
    "9239": {
      "op": "SWAP1"
    },
    "9240": {
      "op": "POP"
    },
    "9241": {
      "jump": "o",
      "op": "JUMP"
    },
    "9242": {
      "op": "JUMPDEST"
    },
    "9243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9245": {
      "op": "DUP3"
    },
    "9246": {
      "op": "PUSH2",
      "value": "0x2429"
    },
    "9249": {
      "op": "JUMPI"
    },
    "9250": {
      "op": "PUSH2",
      "value": "0x2429"
    },
    "9253": {
      "op": "PUSH2",
      "value": "0x2444"
    },
    "9256": {
      "jump": "i",
      "op": "JUMP"
    },
    "9257": {
      "op": "JUMPDEST"
    },
    "9258": {
      "op": "POP"
    },
    "9259": {
      "op": "MOD"
    },
    "9260": {
      "op": "SWAP1"
    },
    "9261": {
      "jump": "o",
      "op": "JUMP"
    },
    "9262": {
      "op": "JUMPDEST"
    },
    "9263": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9268": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9270": {
      "op": "SHL"
    },
    "9271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9273": {
      "op": "MSTORE"
    },
    "9274": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "9276": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9278": {
      "op": "MSTORE"
    },
    "9279": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9283": {
      "op": "REVERT"
    },
    "9284": {
      "op": "JUMPDEST"
    },
    "9285": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9290": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9292": {
      "op": "SHL"
    },
    "9293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9295": {
      "op": "MSTORE"
    },
    "9296": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "9298": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9300": {
      "op": "MSTORE"
    },
    "9301": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9305": {
      "op": "REVERT"
    }
  },
  "sha1": "7fa95c3440d91762a54ca7f444a6728631be4da1",
  "source": "pragma solidity ^0.8.0;\n\n// SPDX-License-Identifier: BUSL-1.1\n\nimport \"./InterfacesBinary.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n/**\n * @author Heisenberg\n * @title Buffer TokenX Liquidity Pool\n * @notice Accumulates liquidity in TokenX from LPs and distributes P&L in TokenX\n */\ncontract BufferBinaryIBFRPoolBinary is\n    ERC20(\"Buffer LP Token\", \"rBFR\"),\n    AccessControl,\n    ILiquidityPool\n{\n    string private _name;\n    string private _symbol;\n    uint256 public constant ACCURACY = 1e3;\n    uint256 public constant INITIAL_RATE = 1e3;\n    uint256 public lockedAmount;\n    uint256 public lockedPremium;\n    uint256 public maxLiquidity;\n    address public projectOwner;\n    address public owner;\n    mapping(address => LockedLiquidity[]) public lockedLiquidity;\n\n    bytes32 public constant OPTION_ISSUER_ROLE =\n        keccak256(\"OPTION_ISSUER_ROLE\");\n\n    bytes32 public constant PROJECT_OWNER_ROLE =\n        keccak256(\"PROJECT_OWNER_ROLE\");\n\n    ERC20 public tokenX;\n\n    constructor(ERC20 _tokenX) {\n        _name = string(\n            bytes.concat(\n                \"Buffer Generic \",\n                bytes(_tokenX.symbol()),\n                \" LP Token\"\n            )\n        );\n        _symbol = string(bytes.concat(\"r\", bytes(_tokenX.symbol())));\n        tokenX = _tokenX;\n        owner = msg.sender;\n        maxLiquidity = 5000000 * 10**_tokenX.decimals();\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the decimals of the token.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return tokenX.decimals();\n    }\n\n    /**\n     * @notice Used for setting owner\n     * @param account owner account\n     */\n    function setProjectOwner(address account)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        grantRole(PROJECT_OWNER_ROLE, account);\n        projectOwner = account;\n        emit UpdateProjectOwner(account);\n    }\n\n    /**\n     * @notice Used for adjusting the max limit of the pool\n     * @param _maxLiquidity New limit\n     */\n    function setMaxLiquidity(uint256 _maxLiquidity)\n        external\n        onlyRole(PROJECT_OWNER_ROLE)\n    {\n        maxLiquidity = _maxLiquidity;\n        emit UpdateMaxLiquidity(_maxLiquidity);\n    }\n\n    /**\n     * @notice A provider supplies tokenX to the pool and receives rBFR-X tokens\n     * @param minMint Minimum amount of tokens that should be received by a provider.\n                      Calling the provide function will require the minimum amount of tokens to be minted.\n                      The actual amount that will be minted could vary but can only be higher (not lower) than the minimum value.\n     * @return mint Amount of tokens to be received\n     */\n    function provide(uint256 tokenXAmount, uint256 minMint)\n        external\n        returns (uint256 mint)\n    {\n        uint256 supply = totalSupply();\n        uint256 balance = totalTokenXBalance();\n\n        require(\n            balance + tokenXAmount <= maxLiquidity,\n            \"Pool has already reached it's max limit\"\n        );\n\n        if (supply > 0 && balance > 0)\n            mint = (tokenXAmount * supply) / (balance);\n        else mint = tokenXAmount * INITIAL_RATE;\n\n        require(mint >= minMint, \"Pool: Mint limit is too large\");\n        require(mint > 0, \"Pool: Amount is too small\");\n\n        bool success = tokenX.transferFrom(\n            msg.sender,\n            address(this),\n            tokenXAmount\n        );\n        require(success, \"The Provide transfer didn't go through\");\n\n        _mint(msg.sender, mint);\n\n        emit Provide(msg.sender, tokenXAmount, mint);\n    }\n\n    /**\n     * @notice Provider burns rBFR-X and receives X from the pool\n     * @param tokenXAmount Amount of X to receive\n     * @param account User address for which the withdrawal has to be initiated\n     * @return burn Amount of tokens to be burnt\n     */\n    function _withdraw(uint256 tokenXAmount, address account)\n        internal\n        returns (uint256 burn)\n    {\n        require(\n            tokenXAmount <= availableBalance(),\n            \"Pool: Not enough funds on the pool contract. Please lower the amount.\"\n        );\n        uint256 totalSupply = totalSupply();\n        uint256 balance = totalTokenXBalance();\n\n        uint256 maxUserTokenXWithdrawal = (balanceOf(account) * balance) /\n            totalSupply;\n\n        uint256 tokenXAmountToWithdraw = maxUserTokenXWithdrawal < tokenXAmount\n            ? maxUserTokenXWithdrawal\n            : tokenXAmount;\n\n        burn = divCeil((tokenXAmountToWithdraw * totalSupply), balance);\n\n        require(burn <= balanceOf(account), \"Pool: Amount is too large\");\n        require(burn > 0, \"Pool: Amount is too small\");\n\n        _burn(account, burn);\n\n        bool success = tokenX.transfer(account, tokenXAmountToWithdraw);\n        require(success, \"Pool: The Withdrawal didn't go through\");\n        emit Withdraw(account, tokenXAmountToWithdraw, burn);\n    }\n\n    /**\n     * @notice withdraw burns rBFR-X and receives X from the pool\n     * @param tokenXAmount Amount Amount of X to receive\n     */\n    function withdraw(uint256 tokenXAmount) external {\n        _withdraw(tokenXAmount, msg.sender);\n    }\n\n    /**\n     * @notice allows admin to send back the funds of the depositer\n     * @param user  User address for which the withdrawal has to be made\n     * @param tokenXAmount  Amount of X to receive\n     */\n    function adminWithdraw(address user, uint256 tokenXAmount)\n        external\n        onlyRole(PROJECT_OWNER_ROLE)\n    {\n        _withdraw(tokenXAmount, user);\n    }\n\n    /**\n     * @notice Called by BufferCallOptions to lock the funds\n     * @param tokenXAmount Amount of funds that should be locked in an option\n     */\n    function lock(\n        uint256 id,\n        uint256 tokenXAmount,\n        uint256 premium\n    ) external override onlyRole(OPTION_ISSUER_ROLE) {\n        require(id == lockedLiquidity[msg.sender].length, \"Wrong id\");\n\n        require(\n            (lockedAmount + tokenXAmount) <= totalTokenXBalance(),\n            \"Pool: Amount is too large.\"\n        );\n\n        bool success = tokenX.transferFrom(msg.sender, address(this), premium);\n        require(success, \"The Premium transfer didn't go through\");\n\n        lockedLiquidity[msg.sender].push(\n            LockedLiquidity(tokenXAmount, premium, true)\n        );\n        lockedPremium = lockedPremium + premium;\n        lockedAmount = lockedAmount + tokenXAmount;\n    }\n\n    /**\n     * @notice Called by BufferCallOptions to change the locked funds\n     * @param tokenXAmount Amount of funds that should be locked in an option\n     */\n    function changeLock(\n        uint256 id,\n        uint256 tokenXAmount,\n        uint256 premium\n    ) public override onlyRole(OPTION_ISSUER_ROLE) {\n        LockedLiquidity storage ll = lockedLiquidity[msg.sender][id];\n        require(ll.locked, \"lockedAmount is already unlocked\");\n        if (ll.premium > premium) {\n            tokenX.transfer(msg.sender, ll.premium - premium);\n        }\n        lockedPremium = lockedPremium - ll.premium + premium;\n        lockedAmount = lockedAmount - ll.amount + tokenXAmount;\n        ll.premium = premium;\n        ll.amount = tokenXAmount;\n    }\n\n    /**\n     * @notice Called by BufferOptions to unlock the funds\n     * @param id Id of LockedLiquidity that should be unlocked\n     */\n    function _unlock(uint256 id)\n        internal\n        onlyRole(OPTION_ISSUER_ROLE)\n        returns (uint256 premium)\n    {\n        LockedLiquidity storage ll = lockedLiquidity[msg.sender][id];\n        require(ll.locked, \"Pool: lockedAmount is already unlocked\");\n        ll.locked = false;\n\n        lockedPremium = lockedPremium - ll.premium;\n        lockedAmount = lockedAmount - ll.amount;\n        premium = ll.premium;\n    }\n\n    /**\n     * @notice Called by BufferOptions to unlock the funds\n     * @param id Id of LockedLiquidity that should be unlocked\n     */\n    function unlock(uint256 id) external override {\n        uint256 premium = _unlock(id);\n\n        emit Profit(id, premium);\n    }\n\n    /**\n     * @notice Called by BufferOptions to unlock the funds\n     * @param id Id of LockedLiquidity that should be unlocked\n     */\n    function unlockWithoutProfit(uint256 id) external override {\n        _unlock(id);\n    }\n\n    /**\n     * @notice Called by BufferCallOptions to send funds to liquidity providers after an option's expiration\n     * @param to Provider\n     * @param tokenXAmount Funds that should be sent\n     */\n    function send(\n        uint256 id,\n        address to,\n        uint256 tokenXAmount\n    ) external override onlyRole(OPTION_ISSUER_ROLE) {\n        LockedLiquidity storage ll = lockedLiquidity[msg.sender][id];\n        require(ll.locked, \"Pool: lockedAmount is already unlocked\");\n        require(to != address(0));\n\n        ll.locked = false;\n        lockedPremium = lockedPremium - ll.premium;\n        lockedAmount = lockedAmount - ll.amount;\n\n        uint256 transferTokenXAmount = tokenXAmount > ll.amount\n            ? ll.amount\n            : tokenXAmount;\n\n        bool success = tokenX.transfer(to, transferTokenXAmount);\n        require(success, \"Pool: The Payout transfer didn't go through\");\n\n        if (transferTokenXAmount <= ll.premium)\n            emit Profit(id, ll.premium - transferTokenXAmount);\n        else emit Loss(id, transferTokenXAmount - ll.premium);\n    }\n\n    /**\n     * @notice Returns provider's share in X\n     * @param account Provider's address\n     * @return share Provider's share in X\n     */\n    function shareOf(address account) external view returns (uint256 share) {\n        if (totalSupply() > 0)\n            share = (totalTokenXBalance() * balanceOf(account)) / totalSupply();\n        else share = 0;\n    }\n\n    /**\n     * @notice Returns the amount of X available for withdrawals\n     * @return balance Unlocked amount\n     */\n    function availableBalance() public view returns (uint256 balance) {\n        return totalTokenXBalance() - lockedAmount;\n    }\n\n    /**\n     * @notice Returns the total balance of X provided to the pool\n     * @return balance Pool balance\n     */\n    function totalTokenXBalance()\n        public\n        view\n        override\n        returns (uint256 balance)\n    {\n        return tokenX.balanceOf(address(this)) - lockedPremium;\n    }\n\n    function divCeil(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0);\n        uint256 c = a / b;\n        if (a % b != 0) c = c + 1;\n        return c;\n    }\n}\n",
  "sourceMap": "363:10581:22:-:0;;;1064:446;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1906:113:4;;;;;;;;;;;-1:-1:-1;;;1906:113:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1906:113:4;;;;1972:13;;1906:113;;;1972:13;;:5;;:13;:::i;:::-;-1:-1:-1;1995:17:4;;;;:7;;:17;;;;;:::i;:::-;;1906:113;;1200:7:22;-1:-1:-1;;;;;1200:14:22;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1200:16:22;;;;;;;;;;;;:::i;:::-;1129:131;;;;;;;;:::i;:::-;;;;;;;;;;;;;1101:5;:169;;;;;;;;;;;;:::i;:::-;;1321:7;-1:-1:-1;;;;;1321:14:22;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1321:16:22;;;;;;;;;;;;:::i;:::-;1297:42;;;;;;;;:::i;:::-;;;;;;;;;;;;;1280:7;:60;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1350:6:22;:16;;-1:-1:-1;;;;;1350:16:22;;-1:-1:-1;;;;;;1350:16:22;;;;;;;;1376:5;:18;;;;;1384:10;1376:18;;;1433;;;-1:-1:-1;;;1433:18:22;;;;:16;;:18;;;;;;;;;;;;;;;1350:16;1433:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1429:22;;:2;:22;:::i;:::-;1419:32;;:7;:32;:::i;:::-;1404:12;:47;1461:42;1997:4:0;1492:10:22;1461;:42::i;:::-;1064:446;363:10581;;6084:110:0;6162:25;6173:4;6179:7;6162:10;:25::i;:::-;6084:110;;:::o;6572:224::-;6646:22;6654:4;6660:7;6646;:22::i;:::-;6641:149;;6684:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6684:29:0;;;;;;;;;:36;;-1:-1:-1;;6684:36:0;6716:4;6684:36;;;6766:12;666:10:15;;587:96;6766:12:0;-1:-1:-1;;;;;6739:40:0;6757:7;-1:-1:-1;;;;;6739:40:0;6751:4;6739:40;;;;;;;;;;6572:224;;:::o;2834:137::-;2912:4;2935:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2935:29:0;;;;;;;;;;;;2834:137;;;;;:::o;363:10581:22:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;363:10581:22;;;-1:-1:-1;363:10581:22;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:325:48;99:6;152:2;140:9;131:7;127:23;123:32;120:2;;;173:6;165;158:22;120:2;204:16;;-1:-1:-1;;;;;249:31:48;;239:42;;229:2;;300:6;292;285:22;229:2;328:5;110:229;-1:-1:-1;;;110:229:48:o;344:924::-;424:6;477:2;465:9;456:7;452:23;448:32;445:2;;;498:6;490;483:22;445:2;530:16;;-1:-1:-1;;;;;595:14:48;;;592:2;;;627:6;619;612:22;592:2;670:6;659:9;655:22;645:32;;715:7;708:4;704:2;700:13;696:27;686:2;;742:6;734;727:22;686:2;776;770:9;798:2;794;791:10;788:2;;;804:18;;:::i;:::-;879:2;873:9;847:2;933:13;;-1:-1:-1;;929:22:48;;;953:2;925:31;921:40;909:53;;;977:18;;;997:22;;;974:46;971:2;;;1023:18;;:::i;:::-;1063:10;1059:2;1052:22;1098:2;1090:6;1083:18;1138:7;1133:2;1128;1124;1120:11;1116:20;1113:33;1110:2;;;1164:6;1156;1149:22;1110:2;1182:55;1234:2;1229;1221:6;1217:15;1212:2;1208;1204:11;1182:55;:::i;:::-;1256:6;435:833;-1:-1:-1;;;;;;;435:833:48:o;1273:293::-;1341:6;1394:2;1382:9;1373:7;1369:23;1365:32;1362:2;;;1415:6;1407;1400:22;1362:2;1452:9;1446:16;1502:4;1495:5;1491:16;1484:5;1481:27;1471:2;;1527:6;1519;1512:22;1571:405;-1:-1:-1;;;1815:3:48;1808:16;1790:3;1853:6;1847:13;1869:61;1923:6;1919:1;1914:3;1910:11;1903:4;1895:6;1891:17;1869:61;:::i;:::-;1950:16;;;;1968:1;1946:24;;1798:178;-1:-1:-1;;1798:178:48:o;1981:574::-;-1:-1:-1;;;2316:3:48;2309:30;2291:3;2368:6;2362:13;2384:62;2439:6;2434:2;2429:3;2425:12;2418:4;2410:6;2406:17;2384:62;:::i;:::-;-1:-1:-1;;;2505:2:48;2465:16;;;;2497:11;;;2490:32;-1:-1:-1;2546:2:48;2538:11;;2299:256;-1:-1:-1;2299:256:48:o;2560:422::-;2649:1;2692:5;2649:1;2706:270;2727:7;2717:8;2714:21;2706:270;;;2786:4;2782:1;2778:6;2774:17;2768:4;2765:27;2762:2;;;2795:18;;:::i;:::-;2845:7;2835:8;2831:22;2828:2;;;2865:16;;;;2828:2;2944:22;;;;2904:15;;;;2706:270;;;2710:3;2624:358;;;;;:::o;2987:140::-;3045:5;3074:47;3115:4;3105:8;3101:19;3095:4;3181:5;3211:8;3201:2;;-1:-1:-1;3252:1:48;3266:5;;3201:2;3300:4;3290:2;;-1:-1:-1;3337:1:48;3351:5;;3290:2;3382:4;3400:1;3395:59;;;;3468:1;3463:130;;;;3375:218;;3395:59;3425:1;3416:10;;3439:5;;;3463:130;3500:3;3490:8;3487:17;3484:2;;;3507:18;;:::i;:::-;-1:-1:-1;;3563:1:48;3549:16;;3578:5;;3375:218;;3677:2;3667:8;3664:16;3658:3;3652:4;3649:13;3645:36;3639:2;3629:8;3626:16;3621:2;3615:4;3612:12;3608:35;3605:77;3602:2;;;-1:-1:-1;3714:19:48;;;3746:5;;3602:2;3793:34;3818:8;3812:4;3793:34;:::i;:::-;3863:6;3859:1;3855:6;3851:19;3842:7;3839:32;3836:2;;;3874:18;;:::i;:::-;3912:20;;3191:747;-1:-1:-1;;;3191:747:48:o;3943:168::-;3983:7;4049:1;4045;4041:6;4037:14;4034:1;4031:21;4026:1;4019:9;4012:17;4008:45;4005:2;;;4056:18;;:::i;:::-;-1:-1:-1;4096:9:48;;3995:116::o;4116:258::-;4188:1;4198:113;4212:6;4209:1;4206:13;4198:113;;;4288:11;;;4282:18;4269:11;;;4262:39;4234:2;4227:10;4198:113;;;4329:6;4326:1;4323:13;4320:2;;;4364:1;4355:6;4350:3;4346:16;4339:27;4320:2;;4169:205;;;:::o;4379:380::-;4458:1;4454:12;;;;4501;;;4522:2;;4576:4;4568:6;4564:17;4554:27;;4522:2;4629;4621:6;4618:14;4598:18;4595:38;4592:2;;;4675:10;4670:3;4666:20;4663:1;4656:31;4710:4;4707:1;4700:15;4738:4;4735:1;4728:15;4592:2;;4434:325;;;:::o;4764:127::-;4825:10;4820:3;4816:20;4813:1;4806:31;4856:4;4853:1;4846:15;4880:4;4877:1;4870:15;4896:127;4957:10;4952:3;4948:20;4945:1;4938:31;4988:4;4985:1;4978:15;5012:4;5009:1;5002:15;4928:95;363:10581:22;;;;;;",
  "sourcePath": "contracts/Binary ATM Options/BufferBinaryIBFRPoolBinary.sol",
  "type": "contract"
}