{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staking",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialImpliedVolRate",
          "type": "uint256"
        },
        {
          "internalType": "contract BufferIBFRPoolV2",
          "name": "_pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "approval",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        }
      ],
      "name": "ApprovalUnits",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "AutoExerciseStatusChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "settlementFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadata",
          "type": "string"
        }
      ],
      "name": "Create",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        }
      ],
      "name": "Exercise",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "premium",
          "type": "uint256"
        }
      ],
      "name": "Expire",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "targetTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mergeUnits",
          "type": "uint256"
        }
      ],
      "name": "Merge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PayAdminFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PayReferralFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "splitUnits",
          "type": "uint256"
        }
      ],
      "name": "Split",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "targetTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "transferUnits",
          "type": "uint256"
        }
      ],
      "name": "TransferUnits",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateImpliedVolatility",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateMaxPeriod",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateNFTSaleRoyaltyPercentage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateOptionCollaterizationRatio",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startHour",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startMinute",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endHour",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endMinute",
          "type": "uint256"
        }
      ],
      "name": "UpdateOptionCreationWindow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateOptionSizePerBlockLimitPercent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateReferralRewardPercentage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateSettlementFeePercentage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "UpdateSettlementFeeRecipient",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateStakingFeePercentage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateStrike",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IOptionsConfig.PermittedTradingType",
          "name": "permissionType",
          "type": "uint8"
        }
      ],
      "name": "UpdateTradingPermission",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateUnits",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "enum IBufferOptions.OptionType",
          "name": "optionType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "strikeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "msgValue",
          "type": "uint256"
        }
      ],
      "name": "checkParams",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "impliedVolRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftSaleRoyaltyPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "optionCollateralizationRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "optionSizePerBlockLimitPercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permittedTradingType",
      "outputs": [
        {
          "internalType": "enum IOptionsConfig.PermittedTradingType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract BufferIBFRPoolV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "referralRewardPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setImpliedVolRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setMaxPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setNFTSaleRoyaltyPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setOptionCollaterizationRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setOptionSizePerBlockLimitPercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setReferralRewardPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setSettlementFeePercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "setSettlementFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setStakingFeePercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IOptionsConfig.PermittedTradingType",
          "name": "permissionType",
          "type": "uint8"
        }
      ],
      "name": "setTradingPermission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setUtilizationRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settlementFeePercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settlementFeeRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingFeePercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "utilizationRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "15": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
    "2": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/Ownable.sol",
    "26": "contracts/Interfaces/Interfaces.sol",
    "38": "contracts/Options/OptionConfigBinary.sol",
    "4": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol",
    "41": "contracts/Pool/BufferIBFRPoolV2.sol",
    "5": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
    "6": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/extensions/IERC20Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/Options/OptionConfigBinary.sol",
    "exportedSymbols": {
      "AccessControl": [
        19540
      ],
      "AggregatorV3Interface": [
        4525
      ],
      "BufferIBFRPoolV2": [
        17217
      ],
      "Context": [
        27611
      ],
      "ERC165": [
        28014
      ],
      "ERC20": [
        18824
      ],
      "IAccessControl": [
        27787
      ],
      "IBufferOptions": [
        4383
      ],
      "IERC165": [
        32292
      ],
      "IERC20": [
        27689
      ],
      "IERC20Metadata": [
        27714
      ],
      "ILiquidityPool": [
        4227
      ],
      "INFTCore": [
        4625
      ],
      "INFTReceiver": [
        4399
      ],
      "IOptionWindowCreator": [
        4474
      ],
      "IOptionsConfig": [
        4454
      ],
      "IPancakePair": [
        4111
      ],
      "IPriceProvider": [
        4564
      ],
      "ISlidingWindowOracle": [
        4644
      ],
      "OptionConfigBinary": [
        15127
      ],
      "Ownable": [
        18238
      ],
      "Strings": [
        27990
      ]
    },
    "id": 15128,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14738,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:38"
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 14739,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15128,
        "sourceUnit": 18239,
        "src": "63:52:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Pool/BufferIBFRPoolV2.sol",
        "file": "../Pool/BufferIBFRPoolV2.sol",
        "id": 14740,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15128,
        "sourceUnit": 17218,
        "src": "116:38:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14742,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18238,
              "src": "314:7:38"
            },
            "id": 14743,
            "nodeType": "InheritanceSpecifier",
            "src": "314:7:38"
          },
          {
            "baseName": {
              "id": 14744,
              "name": "IBufferOptions",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4383,
              "src": "323:14:38"
            },
            "id": 14745,
            "nodeType": "InheritanceSpecifier",
            "src": "323:14:38"
          },
          {
            "baseName": {
              "id": 14746,
              "name": "IOptionsConfig",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4454,
              "src": "339:14:38"
            },
            "id": 14747,
            "nodeType": "InheritanceSpecifier",
            "src": "339:14:38"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 14741,
          "nodeType": "StructuredDocumentation",
          "src": "156:126:38",
          "text": " @author Heisenberg\n @title Buffer BNB Bidirectional (Call and Put) Options\n @notice Buffer BNB Options Contract"
        },
        "fullyImplemented": true,
        "id": 15127,
        "linearizedBaseContracts": [
          15127,
          4454,
          4383,
          18238,
          27611
        ],
        "name": "OptionConfigBinary",
        "nameLocation": "292:18:38",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "18f88e5b",
            "id": 14749,
            "mutability": "mutable",
            "name": "impliedVolRate",
            "nameLocation": "375:14:38",
            "nodeType": "VariableDeclaration",
            "scope": 15127,
            "src": "360:29:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14748,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "360:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "302ce651",
            "id": 14752,
            "mutability": "mutable",
            "name": "optionCollateralizationRatio",
            "nameLocation": "410:28:38",
            "nodeType": "VariableDeclaration",
            "scope": 15127,
            "src": "395:49:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14750,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "395:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030",
              "id": 14751,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "441:3:38",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f3fa3495",
            "id": 14755,
            "mutability": "mutable",
            "name": "settlementFeePercentage",
            "nameLocation": "465:23:38",
            "nodeType": "VariableDeclaration",
            "scope": 15127,
            "src": "450:44:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14753,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "450:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "356532",
              "id": 14754,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "491:3:38",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500_by_1",
                "typeString": "int_const 500"
              },
              "value": "5e2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ca535c3b",
            "id": 14758,
            "mutability": "mutable",
            "name": "stakingFeePercentage",
            "nameLocation": "515:20:38",
            "nodeType": "VariableDeclaration",
            "scope": 15127,
            "src": "500:40:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14756,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "500:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530",
              "id": 14757,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "538:2:38",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "920a253e",
            "id": 14761,
            "mutability": "mutable",
            "name": "referralRewardPercentage",
            "nameLocation": "561:24:38",
            "nodeType": "VariableDeclaration",
            "scope": 15127,
            "src": "546:43:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14759,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "546:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 14760,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "588:1:38",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ed0974c7",
            "id": 14764,
            "mutability": "mutable",
            "name": "nftSaleRoyaltyPercentage",
            "nameLocation": "610:24:38",
            "nodeType": "VariableDeclaration",
            "scope": 15127,
            "src": "595:43:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14762,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "595:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 14763,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "637:1:38",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 14767,
            "mutability": "constant",
            "name": "PRICE_DECIMALS",
            "nameLocation": "670:14:38",
            "nodeType": "VariableDeclaration",
            "scope": 15127,
            "src": "644:46:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14765,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "644:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "316538",
              "id": 14766,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "687:3:38",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000_by_1",
                "typeString": "int_const 100000000"
              },
              "value": "1e8"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "181731dc",
            "id": 14769,
            "mutability": "mutable",
            "name": "settlementFeeRecipient",
            "nameLocation": "711:22:38",
            "nodeType": "VariableDeclaration",
            "scope": 15127,
            "src": "696:37:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14768,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "696:7:38",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6c321c8a",
            "id": 14772,
            "mutability": "mutable",
            "name": "utilizationRate",
            "nameLocation": "754:15:38",
            "nodeType": "VariableDeclaration",
            "scope": 15127,
            "src": "739:37:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14770,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "739:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "36306538",
              "id": 14771,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "772:4:38",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_6000000000_by_1",
                "typeString": "int_const 6000000000"
              },
              "value": "60e8"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "71bf7e25",
            "id": 14775,
            "mutability": "mutable",
            "name": "optionSizePerBlockLimitPercent",
            "nameLocation": "797:30:38",
            "nodeType": "VariableDeclaration",
            "scope": 15127,
            "src": "782:49:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14773,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "782:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 14774,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "830:1:38",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "49b9a67f",
            "id": 14778,
            "mutability": "mutable",
            "name": "maxPeriod",
            "nameLocation": "852:9:38",
            "nodeType": "VariableDeclaration",
            "scope": 15127,
            "src": "837:35:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14776,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "837:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3234",
              "id": 14777,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "864:8:38",
              "subdenomination": "hours",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "24"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 14781,
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "902:4:38",
            "nodeType": "VariableDeclaration",
            "scope": 15127,
            "src": "878:28:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BufferIBFRPoolV2_$17217",
              "typeString": "contract BufferIBFRPoolV2"
            },
            "typeName": {
              "id": 14780,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14779,
                "name": "BufferIBFRPoolV2",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 17217,
                "src": "878:16:38"
              },
              "referencedDeclaration": 17217,
              "src": "878:16:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BufferIBFRPoolV2_$17217",
                "typeString": "contract BufferIBFRPoolV2"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f12a0466",
            "id": 14784,
            "mutability": "mutable",
            "name": "permittedTradingType",
            "nameLocation": "940:20:38",
            "nodeType": "VariableDeclaration",
            "scope": 15127,
            "src": "912:48:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_PermittedTradingType_$4404",
              "typeString": "enum IOptionsConfig.PermittedTradingType"
            },
            "typeName": {
              "id": 14783,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14782,
                "name": "PermittedTradingType",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4404,
                "src": "912:20:38"
              },
              "referencedDeclaration": 4404,
              "src": "912:20:38",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_PermittedTradingType_$4404",
                "typeString": "enum IOptionsConfig.PermittedTradingType"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 14806,
              "nodeType": "Block",
              "src": "1081:119:38",
              "statements": [
                {
                  "expression": {
                    "id": 14796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14794,
                      "name": "settlementFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14769,
                      "src": "1091:22:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14795,
                      "name": "staking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14786,
                      "src": "1116:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1091:32:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14797,
                  "nodeType": "ExpressionStatement",
                  "src": "1091:32:38"
                },
                {
                  "expression": {
                    "id": 14800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14798,
                      "name": "impliedVolRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14749,
                      "src": "1133:14:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14799,
                      "name": "initialImpliedVolRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14788,
                      "src": "1150:21:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1133:38:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14801,
                  "nodeType": "ExpressionStatement",
                  "src": "1133:38:38"
                },
                {
                  "expression": {
                    "id": 14804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14802,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14781,
                      "src": "1181:4:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BufferIBFRPoolV2_$17217",
                        "typeString": "contract BufferIBFRPoolV2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14803,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14791,
                      "src": "1188:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BufferIBFRPoolV2_$17217",
                        "typeString": "contract BufferIBFRPoolV2"
                      }
                    },
                    "src": "1181:12:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BufferIBFRPoolV2_$17217",
                      "typeString": "contract BufferIBFRPoolV2"
                    }
                  },
                  "id": 14805,
                  "nodeType": "ExpressionStatement",
                  "src": "1181:12:38"
                }
              ]
            },
            "id": 14807,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14786,
                  "mutability": "mutable",
                  "name": "staking",
                  "nameLocation": "996:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 14807,
                  "src": "988:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "988:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14788,
                  "mutability": "mutable",
                  "name": "initialImpliedVolRate",
                  "nameLocation": "1021:21:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 14807,
                  "src": "1013:29:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14791,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "1069:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 14807,
                  "src": "1052:22:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BufferIBFRPoolV2_$17217",
                    "typeString": "contract BufferIBFRPoolV2"
                  },
                  "typeName": {
                    "id": 14790,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14789,
                      "name": "BufferIBFRPoolV2",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17217,
                      "src": "1052:16:38"
                    },
                    "referencedDeclaration": 17217,
                    "src": "1052:16:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BufferIBFRPoolV2_$17217",
                      "typeString": "contract BufferIBFRPoolV2"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "978:102:38"
            },
            "returnParameters": {
              "id": 14793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1081:0:38"
            },
            "scope": 15127,
            "src": "967:233:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14867,
              "nodeType": "Block",
              "src": "1814:428:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_OptionType_$4278",
                            "typeString": "enum IBufferOptions.OptionType"
                          },
                          "id": 14829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 14825,
                            "name": "optionType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14811,
                            "src": "1845:10:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OptionType_$4278",
                              "typeString": "enum IBufferOptions.OptionType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 14826,
                                "name": "IBufferOptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4383,
                                "src": "1859:14:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBufferOptions_$4383_$",
                                  "typeString": "type(contract IBufferOptions)"
                                }
                              },
                              "id": 14827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "OptionType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4278,
                              "src": "1859:25:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_OptionType_$4278_$",
                                "typeString": "type(enum IBufferOptions.OptionType)"
                              }
                            },
                            "id": 14828,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Call",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4277,
                            "src": "1859:30:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OptionType_$4278",
                              "typeString": "enum IBufferOptions.OptionType"
                            }
                          },
                          "src": "1845:44:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_OptionType_$4278",
                            "typeString": "enum IBufferOptions.OptionType"
                          },
                          "id": 14834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 14830,
                            "name": "optionType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14811,
                            "src": "1909:10:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OptionType_$4278",
                              "typeString": "enum IBufferOptions.OptionType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 14831,
                                "name": "IBufferOptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4383,
                                "src": "1923:14:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBufferOptions_$4383_$",
                                  "typeString": "type(contract IBufferOptions)"
                                }
                              },
                              "id": 14832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "OptionType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4278,
                              "src": "1923:25:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_OptionType_$4278_$",
                                "typeString": "type(enum IBufferOptions.OptionType)"
                              }
                            },
                            "id": 14833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Put",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4276,
                            "src": "1923:29:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OptionType_$4278",
                              "typeString": "enum IBufferOptions.OptionType"
                            }
                          },
                          "src": "1909:43:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1845:107:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e67206f7074696f6e2074797065",
                        "id": 14836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1966:19:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54c6d7b3567b4aa572694196d0aa6f3545a359ec90d2faa0c8d71a6ae3c59f25",
                          "typeString": "literal_string \"Wrong option type\""
                        },
                        "value": "Wrong option type"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_54c6d7b3567b4aa572694196d0aa6f3545a359ec90d2faa0c8d71a6ae3c59f25",
                          "typeString": "literal_string \"Wrong option type\""
                        }
                      ],
                      "id": 14824,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1824:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1824:171:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14838,
                  "nodeType": "ExpressionStatement",
                  "src": "1824:171:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14840,
                          "name": "period",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14813,
                          "src": "2013:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 14841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2023:6:38",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_86400_by_1",
                            "typeString": "int_const 86400"
                          },
                          "value": "1"
                        },
                        "src": "2013:16:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506572696f6420697320746f6f2073686f7274",
                        "id": 14843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2031:21:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef12607801969f67fe110ca83b8902a26a045a1f9bef1d9222f346a7abc94b7c",
                          "typeString": "literal_string \"Period is too short\""
                        },
                        "value": "Period is too short"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef12607801969f67fe110ca83b8902a26a045a1f9bef1d9222f346a7abc94b7c",
                          "typeString": "literal_string \"Period is too short\""
                        }
                      ],
                      "id": 14839,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2005:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2005:48:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14845,
                  "nodeType": "ExpressionStatement",
                  "src": "2005:48:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14847,
                          "name": "period",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14813,
                          "src": "2071:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3930",
                          "id": 14848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2081:7:38",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_7776000_by_1",
                            "typeString": "int_const 7776000"
                          },
                          "value": "90"
                        },
                        "src": "2071:17:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506572696f6420697320746f6f206c6f6e67",
                        "id": 14850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2090:20:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0d0d796e04e21a6508ff63f144e63f12f3cdee3716a307900aa89bff18d1c95",
                          "typeString": "literal_string \"Period is too long\""
                        },
                        "value": "Period is too long"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0d0d796e04e21a6508ff63f144e63f12f3cdee3716a307900aa89bff18d1c95",
                          "typeString": "literal_string \"Period is too long\""
                        }
                      ],
                      "id": 14846,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2063:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2063:48:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14852,
                  "nodeType": "ExpressionStatement",
                  "src": "2063:48:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14854,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14815,
                          "src": "2129:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 14855,
                          "name": "strikeFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14817,
                          "src": "2138:9:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2129:18:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "507269636520646966666572656e636520697320746f6f206c61726765",
                        "id": 14857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2149:31:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc771e12755e2f49f15fa1abfd870776036de6c5df236568dccc6993fa26244f",
                          "typeString": "literal_string \"Price difference is too large\""
                        },
                        "value": "Price difference is too large"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc771e12755e2f49f15fa1abfd870776036de6c5df236568dccc6993fa26244f",
                          "typeString": "literal_string \"Price difference is too large\""
                        }
                      ],
                      "id": 14853,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2121:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2121:60:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14859,
                  "nodeType": "ExpressionStatement",
                  "src": "2121:60:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14861,
                          "name": "msgValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14821,
                          "src": "2199:8:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 14862,
                          "name": "totalFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14819,
                          "src": "2211:8:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2199:20:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e672076616c7565",
                        "id": 14864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2221:13:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d94e4fbd8d2c1b23ec50c4a02f6f2af5dd0b11b96fc805d23c3a42bbf84f62d",
                          "typeString": "literal_string \"Wrong value\""
                        },
                        "value": "Wrong value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d94e4fbd8d2c1b23ec50c4a02f6f2af5dd0b11b96fc805d23c3a42bbf84f62d",
                          "typeString": "literal_string \"Wrong value\""
                        }
                      ],
                      "id": 14860,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2191:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2191:44:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14866,
                  "nodeType": "ExpressionStatement",
                  "src": "2191:44:38"
                }
              ]
            },
            "documentation": {
              "id": 14808,
              "nodeType": "StructuredDocumentation",
              "src": "1206:389:38",
              "text": " @notice Check the validity of the input params\n @param optionType Call or Put option type\n @param period Option period in seconds (1 days <= period <= 90 days)\n @param amount Option amount\n @param strikeFee strike fee for the option\n @param totalFee total fee for the option\n @param msgValue the msg.value given to the Create function"
            },
            "functionSelector": "64ac2655",
            "id": 14868,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkParams",
            "nameLocation": "1609:11:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14811,
                  "mutability": "mutable",
                  "name": "optionType",
                  "nameLocation": "1656:10:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 14868,
                  "src": "1630:36:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OptionType_$4278",
                    "typeString": "enum IBufferOptions.OptionType"
                  },
                  "typeName": {
                    "id": 14810,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14809,
                      "name": "IBufferOptions.OptionType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4278,
                      "src": "1630:25:38"
                    },
                    "referencedDeclaration": 4278,
                    "src": "1630:25:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OptionType_$4278",
                      "typeString": "enum IBufferOptions.OptionType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14813,
                  "mutability": "mutable",
                  "name": "period",
                  "nameLocation": "1684:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 14868,
                  "src": "1676:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1676:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14815,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1708:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 14868,
                  "src": "1700:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1700:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14817,
                  "mutability": "mutable",
                  "name": "strikeFee",
                  "nameLocation": "1732:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 14868,
                  "src": "1724:17:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14816,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1724:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14819,
                  "mutability": "mutable",
                  "name": "totalFee",
                  "nameLocation": "1759:8:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 14868,
                  "src": "1751:16:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14818,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1751:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14821,
                  "mutability": "mutable",
                  "name": "msgValue",
                  "nameLocation": "1785:8:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 14868,
                  "src": "1777:16:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1777:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1620:179:38"
            },
            "returnParameters": {
              "id": 14823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1814:0:38"
            },
            "scope": 15127,
            "src": "1600:642:38",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14891,
              "nodeType": "Block",
              "src": "2402:190:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14877,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14871,
                          "src": "2433:5:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 14878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2442:9:38",
                          "subdenomination": "minutes",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_300_by_1",
                            "typeString": "int_const 300"
                          },
                          "value": "5"
                        },
                        "src": "2433:18:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178506572696f64206e6565647320746f2062652067726561746572207468616e2035206d696e75746573",
                        "id": 14880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2465:46:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f27ee8eb57e19a7140ed11c234d489e275e21256425de73098381b81d1120547",
                          "typeString": "literal_string \"MaxPeriod needs to be greater than 5 minutes\""
                        },
                        "value": "MaxPeriod needs to be greater than 5 minutes"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f27ee8eb57e19a7140ed11c234d489e275e21256425de73098381b81d1120547",
                          "typeString": "literal_string \"MaxPeriod needs to be greater than 5 minutes\""
                        }
                      ],
                      "id": 14876,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2412:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2412:109:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14882,
                  "nodeType": "ExpressionStatement",
                  "src": "2412:109:38"
                },
                {
                  "expression": {
                    "id": 14885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14883,
                      "name": "maxPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14778,
                      "src": "2531:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14884,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14871,
                      "src": "2543:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2531:17:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14886,
                  "nodeType": "ExpressionStatement",
                  "src": "2531:17:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14888,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14871,
                        "src": "2579:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14887,
                      "name": "UpdateMaxPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4449,
                      "src": "2563:15:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 14889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2563:22:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14890,
                  "nodeType": "EmitStatement",
                  "src": "2558:27:38"
                }
              ]
            },
            "documentation": {
              "id": 14869,
              "nodeType": "StructuredDocumentation",
              "src": "2248:93:38",
              "text": " @notice Used for adjusting the maxPeriod\n @param value New maxPeriod"
            },
            "functionSelector": "ae1c9fc1",
            "id": 14892,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14874,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14873,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "2392:9:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "2392:9:38"
              }
            ],
            "name": "setMaxPeriod",
            "nameLocation": "2355:12:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14871,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2376:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 14892,
                  "src": "2368:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2368:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2367:15:38"
            },
            "returnParameters": {
              "id": 14875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2402:0:38"
            },
            "scope": 15127,
            "src": "2346:246:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14915,
              "nodeType": "Block",
              "src": "2851:237:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14901,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14895,
                          "src": "2882:5:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 14902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2890:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "2882:11:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696f6e53697a65506572426c6f636b4c696d697450657263656e74206e6565647320746f206265206c657373207468616e20313030",
                        "id": 14904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2907:58:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe6ce251bc14d66db6f43c934048772722e53f6f178a188d214d672078a02684",
                          "typeString": "literal_string \"OptionSizePerBlockLimitPercent needs to be less than 100\""
                        },
                        "value": "OptionSizePerBlockLimitPercent needs to be less than 100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe6ce251bc14d66db6f43c934048772722e53f6f178a188d214d672078a02684",
                          "typeString": "literal_string \"OptionSizePerBlockLimitPercent needs to be less than 100\""
                        }
                      ],
                      "id": 14900,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2861:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2861:114:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14906,
                  "nodeType": "ExpressionStatement",
                  "src": "2861:114:38"
                },
                {
                  "expression": {
                    "id": 14909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14907,
                      "name": "optionSizePerBlockLimitPercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14775,
                      "src": "2985:30:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14908,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14895,
                      "src": "3018:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2985:38:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14910,
                  "nodeType": "ExpressionStatement",
                  "src": "2985:38:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14912,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14895,
                        "src": "3075:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14911,
                      "name": "UpdateOptionSizePerBlockLimitPercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4453,
                      "src": "3038:36:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 14913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3038:43:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14914,
                  "nodeType": "EmitStatement",
                  "src": "3033:48:38"
                }
              ]
            },
            "documentation": {
              "id": 14893,
              "nodeType": "StructuredDocumentation",
              "src": "2598:151:38",
              "text": " @notice Used for adjusting the option size per block limit percent\n @param value New option size per block limit percent value"
            },
            "functionSelector": "e97b86e7",
            "id": 14916,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14898,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14897,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "2837:9:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "2837:9:38"
              }
            ],
            "name": "setOptionSizePerBlockLimitPercent",
            "nameLocation": "2763:33:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14895,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2805:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 14916,
                  "src": "2797:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14894,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2797:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2796:15:38"
            },
            "returnParameters": {
              "id": 14899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2851:0:38"
            },
            "scope": 15127,
            "src": "2754:334:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14939,
              "nodeType": "Block",
              "src": "3309:152:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14925,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14919,
                          "src": "3327:5:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 14926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3336:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "3327:12:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496d706c696564566f6c52617465206c696d697420697320746f6f20736d616c6c",
                        "id": 14928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3341:35:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e57454b21ce65a63b8011f369bea0d36d60a55f04baa91c83795124af1ef1101",
                          "typeString": "literal_string \"ImpliedVolRate limit is too small\""
                        },
                        "value": "ImpliedVolRate limit is too small"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e57454b21ce65a63b8011f369bea0d36d60a55f04baa91c83795124af1ef1101",
                          "typeString": "literal_string \"ImpliedVolRate limit is too small\""
                        }
                      ],
                      "id": 14924,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3319:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3319:58:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14930,
                  "nodeType": "ExpressionStatement",
                  "src": "3319:58:38"
                },
                {
                  "expression": {
                    "id": 14933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14931,
                      "name": "impliedVolRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14749,
                      "src": "3387:14:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14932,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14919,
                      "src": "3404:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3387:22:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14934,
                  "nodeType": "ExpressionStatement",
                  "src": "3387:22:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14936,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14919,
                        "src": "3448:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14935,
                      "name": "UpdateImpliedVolatility",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4408,
                      "src": "3424:23:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 14937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3424:30:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14938,
                  "nodeType": "EmitStatement",
                  "src": "3419:35:38"
                }
              ]
            },
            "documentation": {
              "id": 14917,
              "nodeType": "StructuredDocumentation",
              "src": "3094:149:38",
              "text": " @notice Used for adjusting the options prices while balancing asset's implied volatility rate\n @param value New IVRate value"
            },
            "functionSelector": "ceaeeba9",
            "id": 14940,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14922,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14921,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "3299:9:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "3299:9:38"
              }
            ],
            "name": "setImpliedVolRate",
            "nameLocation": "3257:17:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14919,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "3283:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 14940,
                  "src": "3275:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3275:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3274:15:38"
            },
            "returnParameters": {
              "id": 14923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3309:0:38"
            },
            "scope": 15127,
            "src": "3248:213:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14956,
              "nodeType": "Block",
              "src": "3573:108:38",
              "statements": [
                {
                  "expression": {
                    "id": 14950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14948,
                      "name": "permittedTradingType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14784,
                      "src": "3583:20:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PermittedTradingType_$4404",
                        "typeString": "enum IOptionsConfig.PermittedTradingType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14949,
                      "name": "permissionType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14943,
                      "src": "3606:14:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PermittedTradingType_$4404",
                        "typeString": "enum IOptionsConfig.PermittedTradingType"
                      }
                    },
                    "src": "3583:37:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermittedTradingType_$4404",
                      "typeString": "enum IOptionsConfig.PermittedTradingType"
                    }
                  },
                  "id": 14951,
                  "nodeType": "ExpressionStatement",
                  "src": "3583:37:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14953,
                        "name": "permissionType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14943,
                        "src": "3659:14:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermittedTradingType_$4404",
                          "typeString": "enum IOptionsConfig.PermittedTradingType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_PermittedTradingType_$4404",
                          "typeString": "enum IOptionsConfig.PermittedTradingType"
                        }
                      ],
                      "id": 14952,
                      "name": "UpdateTradingPermission",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4437,
                      "src": "3635:23:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_PermittedTradingType_$4404_$returns$__$",
                        "typeString": "function (enum IOptionsConfig.PermittedTradingType)"
                      }
                    },
                    "id": 14954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3635:39:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14955,
                  "nodeType": "EmitStatement",
                  "src": "3630:44:38"
                }
              ]
            },
            "functionSelector": "ff0b025d",
            "id": 14957,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14946,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14945,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "3559:9:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "3559:9:38"
              }
            ],
            "name": "setTradingPermission",
            "nameLocation": "3476:20:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14943,
                  "mutability": "mutable",
                  "name": "permissionType",
                  "nameLocation": "3518:14:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 14957,
                  "src": "3497:35:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PermittedTradingType_$4404",
                    "typeString": "enum IOptionsConfig.PermittedTradingType"
                  },
                  "typeName": {
                    "id": 14942,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14941,
                      "name": "PermittedTradingType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4404,
                      "src": "3497:20:38"
                    },
                    "referencedDeclaration": 4404,
                    "src": "3497:20:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermittedTradingType_$4404",
                      "typeString": "enum IOptionsConfig.PermittedTradingType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3496:37:38"
            },
            "returnParameters": {
              "id": 14947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3573:0:38"
            },
            "scope": 15127,
            "src": "3467:214:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14980,
              "nodeType": "Block",
              "src": "3908:169:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14966,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14960,
                          "src": "3926:5:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "32306532",
                          "id": 14967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3934:4:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2000_by_1",
                            "typeString": "int_const 2000"
                          },
                          "value": "20e2"
                        },
                        "src": "3926:12:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536574746c656d656e7446656550657263656e7461676520697320746f6f2068696768",
                        "id": 14969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3940:37:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68db5f560e1121556839568ce23c996485a908c1b279b9f62286871b1d48ff48",
                          "typeString": "literal_string \"SettlementFeePercentage is too high\""
                        },
                        "value": "SettlementFeePercentage is too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68db5f560e1121556839568ce23c996485a908c1b279b9f62286871b1d48ff48",
                          "typeString": "literal_string \"SettlementFeePercentage is too high\""
                        }
                      ],
                      "id": 14965,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3918:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3918:60:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14971,
                  "nodeType": "ExpressionStatement",
                  "src": "3918:60:38"
                },
                {
                  "expression": {
                    "id": 14974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14972,
                      "name": "settlementFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14755,
                      "src": "3988:23:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14973,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14960,
                      "src": "4014:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3988:31:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14975,
                  "nodeType": "ExpressionStatement",
                  "src": "3988:31:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14977,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14960,
                        "src": "4064:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14976,
                      "name": "UpdateSettlementFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4412,
                      "src": "4034:29:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 14978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4034:36:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14979,
                  "nodeType": "EmitStatement",
                  "src": "4029:41:38"
                }
              ]
            },
            "documentation": {
              "id": 14958,
              "nodeType": "StructuredDocumentation",
              "src": "3687:146:38",
              "text": " @notice Used for adjusting the settlement fee percentage with a factor of 100\n @param value New Settlement Fee Percentage"
            },
            "functionSelector": "1ec3ad1d",
            "id": 14981,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14963,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14962,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "3898:9:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "3898:9:38"
              }
            ],
            "name": "setSettlementFeePercentage",
            "nameLocation": "3847:26:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14960,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "3882:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 14981,
                  "src": "3874:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14959,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3874:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3873:15:38"
            },
            "returnParameters": {
              "id": 14964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3908:0:38"
            },
            "scope": 15127,
            "src": "3838:239:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15012,
              "nodeType": "Block",
              "src": "4288:165:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 14992,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14984,
                              "src": "4314:9:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4306:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14990,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4306:7:38",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4306:18:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4336:1:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4328:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14994,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4328:7:38",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4328:10:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4306:32:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14989,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4298:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4298:41:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15000,
                  "nodeType": "ExpressionStatement",
                  "src": "4298:41:38"
                },
                {
                  "expression": {
                    "id": 15003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15001,
                      "name": "settlementFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14769,
                      "src": "4349:22:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15002,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14984,
                      "src": "4374:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4349:34:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 15004,
                  "nodeType": "ExpressionStatement",
                  "src": "4349:34:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 15008,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14984,
                            "src": "4435:9:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4427:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15006,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4427:7:38",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4427:18:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15005,
                      "name": "UpdateSettlementFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4416,
                      "src": "4398:28:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4398:48:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15011,
                  "nodeType": "EmitStatement",
                  "src": "4393:53:38"
                }
              ]
            },
            "documentation": {
              "id": 14982,
              "nodeType": "StructuredDocumentation",
              "src": "4083:127:38",
              "text": " @notice Used for changing settlementFeeRecipient\n @param recipient New settlementFee recipient address"
            },
            "functionSelector": "96350a85",
            "id": 15013,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14987,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14986,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "4278:9:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "4278:9:38"
              }
            ],
            "name": "setSettlementFeeRecipient",
            "nameLocation": "4224:25:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14984,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4258:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15013,
                  "src": "4250:17:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4250:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4249:19:38"
            },
            "returnParameters": {
              "id": 14988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4288:0:38"
            },
            "scope": 15127,
            "src": "4215:238:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15036,
              "nodeType": "Block",
              "src": "4650:160:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 15022,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15016,
                          "src": "4668:5:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 15023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4677:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "4668:12:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e6746656550657263656e7461676520697320746f6f2068696768",
                        "id": 15025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4682:34:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4b1c7901206557d81400f1c220be507688798c0917d45d32e4c87834d6ce2686",
                          "typeString": "literal_string \"StakingFeePercentage is too high\""
                        },
                        "value": "StakingFeePercentage is too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4b1c7901206557d81400f1c220be507688798c0917d45d32e4c87834d6ce2686",
                          "typeString": "literal_string \"StakingFeePercentage is too high\""
                        }
                      ],
                      "id": 15021,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4660:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4660:57:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15027,
                  "nodeType": "ExpressionStatement",
                  "src": "4660:57:38"
                },
                {
                  "expression": {
                    "id": 15030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15028,
                      "name": "stakingFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14758,
                      "src": "4727:20:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15029,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15016,
                      "src": "4750:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4727:28:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15031,
                  "nodeType": "ExpressionStatement",
                  "src": "4727:28:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 15033,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15016,
                        "src": "4797:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15032,
                      "name": "UpdateStakingFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4420,
                      "src": "4770:26:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 15034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4770:33:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15035,
                  "nodeType": "EmitStatement",
                  "src": "4765:38:38"
                }
              ]
            },
            "documentation": {
              "id": 15014,
              "nodeType": "StructuredDocumentation",
              "src": "4459:119:38",
              "text": " @notice Used for adjusting the staking fee percentage\n @param value New Staking Fee Percentage"
            },
            "functionSelector": "180acf6e",
            "id": 15037,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15019,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15018,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "4640:9:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "4640:9:38"
              }
            ],
            "name": "setStakingFeePercentage",
            "nameLocation": "4592:23:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15016,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "4624:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15037,
                  "src": "4616:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4616:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4615:15:38"
            },
            "returnParameters": {
              "id": 15020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4650:0:38"
            },
            "scope": 15127,
            "src": "4583:227:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15060,
              "nodeType": "Block",
              "src": "5019:172:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 15046,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15040,
                          "src": "5037:5:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 15047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5046:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "5037:12:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566657272616c52657761726450657263656e7461676520697320746f6f2068696768",
                        "id": 15049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5051:38:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1da31f3e92683ccf307f76a6e644c62e20ad864159c618e57b4cedda250113b",
                          "typeString": "literal_string \"ReferralRewardPercentage is too high\""
                        },
                        "value": "ReferralRewardPercentage is too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1da31f3e92683ccf307f76a6e644c62e20ad864159c618e57b4cedda250113b",
                          "typeString": "literal_string \"ReferralRewardPercentage is too high\""
                        }
                      ],
                      "id": 15045,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5029:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5029:61:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15051,
                  "nodeType": "ExpressionStatement",
                  "src": "5029:61:38"
                },
                {
                  "expression": {
                    "id": 15054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15052,
                      "name": "referralRewardPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14761,
                      "src": "5100:24:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15053,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15040,
                      "src": "5127:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5100:32:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15055,
                  "nodeType": "ExpressionStatement",
                  "src": "5100:32:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 15057,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15040,
                        "src": "5178:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15056,
                      "name": "UpdateReferralRewardPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4424,
                      "src": "5147:30:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 15058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5147:37:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15059,
                  "nodeType": "EmitStatement",
                  "src": "5142:42:38"
                }
              ]
            },
            "documentation": {
              "id": 15038,
              "nodeType": "StructuredDocumentation",
              "src": "4816:127:38",
              "text": " @notice Used for adjusting the referral reward percentage\n @param value New Referral Reward Percentage"
            },
            "functionSelector": "cedcc6da",
            "id": 15061,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15043,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15042,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "5009:9:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "5009:9:38"
              }
            ],
            "name": "setReferralRewardPercentage",
            "nameLocation": "4957:27:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15040,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "4993:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15061,
                  "src": "4985:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4985:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4984:15:38"
            },
            "returnParameters": {
              "id": 15044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5019:0:38"
            },
            "scope": 15127,
            "src": "4948:243:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15088,
              "nodeType": "Block",
              "src": "5409:168:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 15076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 15072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3530",
                            "id": 15070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5427:2:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            },
                            "value": "50"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 15071,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15064,
                            "src": "5433:5:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5427:11:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 15075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 15073,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15064,
                            "src": "5442:5:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 15074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5451:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "5442:12:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5427:27:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77726f6e672076616c7565",
                        "id": 15077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5456:13:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7de3d80ebd6048d4e9c1f046c51b626b3a2eba87a2525845afff65fe89a8b494",
                          "typeString": "literal_string \"wrong value\""
                        },
                        "value": "wrong value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7de3d80ebd6048d4e9c1f046c51b626b3a2eba87a2525845afff65fe89a8b494",
                          "typeString": "literal_string \"wrong value\""
                        }
                      ],
                      "id": 15069,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5419:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5419:51:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15079,
                  "nodeType": "ExpressionStatement",
                  "src": "5419:51:38"
                },
                {
                  "expression": {
                    "id": 15082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15080,
                      "name": "optionCollateralizationRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14752,
                      "src": "5480:28:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15081,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15064,
                      "src": "5511:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5480:36:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15083,
                  "nodeType": "ExpressionStatement",
                  "src": "5480:36:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 15085,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15064,
                        "src": "5564:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15084,
                      "name": "UpdateOptionCollaterizationRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4428,
                      "src": "5531:32:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 15086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5531:39:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15087,
                  "nodeType": "EmitStatement",
                  "src": "5526:44:38"
                }
              ]
            },
            "documentation": {
              "id": 15062,
              "nodeType": "StructuredDocumentation",
              "src": "5197:134:38",
              "text": " @notice Used for changing option collateralization ratio\n @param value New optionCollateralizationRatio value"
            },
            "functionSelector": "e2bef754",
            "id": 15089,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15067,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15066,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "5399:9:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "5399:9:38"
              }
            ],
            "name": "setOptionCollaterizationRatio",
            "nameLocation": "5345:29:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15064,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "5383:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15089,
                  "src": "5375:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15063,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5375:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5374:15:38"
            },
            "returnParameters": {
              "id": 15068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5409:0:38"
            },
            "scope": 15127,
            "src": "5336:241:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15112,
              "nodeType": "Block",
              "src": "5783:146:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 15098,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15092,
                          "src": "5801:5:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 15099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5810:2:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "5801:11:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77726f6e672076616c7565",
                        "id": 15101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5814:13:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7de3d80ebd6048d4e9c1f046c51b626b3a2eba87a2525845afff65fe89a8b494",
                          "typeString": "literal_string \"wrong value\""
                        },
                        "value": "wrong value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7de3d80ebd6048d4e9c1f046c51b626b3a2eba87a2525845afff65fe89a8b494",
                          "typeString": "literal_string \"wrong value\""
                        }
                      ],
                      "id": 15097,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5793:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5793:35:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15103,
                  "nodeType": "ExpressionStatement",
                  "src": "5793:35:38"
                },
                {
                  "expression": {
                    "id": 15106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15104,
                      "name": "nftSaleRoyaltyPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14764,
                      "src": "5838:24:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15105,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15092,
                      "src": "5865:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5838:32:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15107,
                  "nodeType": "ExpressionStatement",
                  "src": "5838:32:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 15109,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15092,
                        "src": "5916:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15108,
                      "name": "UpdateNFTSaleRoyaltyPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4432,
                      "src": "5885:30:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 15110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5885:37:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15111,
                  "nodeType": "EmitStatement",
                  "src": "5880:42:38"
                }
              ]
            },
            "documentation": {
              "id": 15090,
              "nodeType": "StructuredDocumentation",
              "src": "5583:124:38",
              "text": " @notice Used for changing nftSaleRoyaltyPercentage\n @param value New nftSaleRoyaltyPercentage value"
            },
            "functionSelector": "5cb6bc81",
            "id": 15113,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15095,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15094,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "5773:9:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "5773:9:38"
              }
            ],
            "name": "setNFTSaleRoyaltyPercentage",
            "nameLocation": "5721:27:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15092,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "5757:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15113,
                  "src": "5749:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5749:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5748:15:38"
            },
            "returnParameters": {
              "id": 15096,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5783:0:38"
            },
            "scope": 15127,
            "src": "5712:217:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15125,
              "nodeType": "Block",
              "src": "6115:40:38",
              "statements": [
                {
                  "expression": {
                    "id": 15123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15121,
                      "name": "utilizationRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14772,
                      "src": "6125:15:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15122,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15116,
                      "src": "6143:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6125:23:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15124,
                  "nodeType": "ExpressionStatement",
                  "src": "6125:23:38"
                }
              ]
            },
            "documentation": {
              "id": 15114,
              "nodeType": "StructuredDocumentation",
              "src": "5935:113:38",
              "text": " @notice Used for updating utilizationRate value\n @param value New utilizationRate value*"
            },
            "functionSelector": "40774ff6",
            "id": 15126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15119,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15118,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18181,
                  "src": "6105:9:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "6105:9:38"
              }
            ],
            "name": "setUtilizationRate",
            "nameLocation": "6062:18:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15116,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "6089:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15126,
                  "src": "6081:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6081:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6080:15:38"
            },
            "returnParameters": {
              "id": 15120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6115:0:38"
            },
            "scope": 15127,
            "src": "6053:102:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 15128,
        "src": "283:5874:38",
        "usedErrors": []
      }
    ],
    "src": "0:6158:38"
  },
  "bytecode": "",
  "bytecodeSha1": "55a5614afe8f80d180e1ae961cde9d8639ee1c53",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 1
    },
    "version": "0.8.4+commit.c7e474f2"
  },
  "contractName": "OptionConfigBinary",
  "coverageMap": {
    "branches": {
      "15": {},
      "2": {
        "Context._msgSender": {
          "59": [
            1185,
            1208,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "58": [
            1934,
            1956,
            true
          ]
        }
      },
      "26": {},
      "38": {
        "OptionConfigBinary.checkParams": {
          "45": [
            1845,
            1889,
            true
          ],
          "46": [
            1909,
            1952,
            true
          ],
          "47": [
            2013,
            2029,
            true
          ],
          "48": [
            2071,
            2088,
            true
          ],
          "49": [
            2129,
            2147,
            true
          ],
          "50": [
            2199,
            2219,
            true
          ]
        },
        "OptionConfigBinary.setImpliedVolRate": {
          "53": [
            3327,
            3339,
            true
          ]
        },
        "OptionConfigBinary.setMaxPeriod": {
          "52": [
            2433,
            2451,
            true
          ]
        },
        "OptionConfigBinary.setNFTSaleRoyaltyPercentage": {
          "44": [
            5801,
            5812,
            true
          ]
        },
        "OptionConfigBinary.setOptionCollaterizationRatio": {
          "55": [
            5427,
            5438,
            false
          ],
          "56": [
            5442,
            5454,
            true
          ]
        },
        "OptionConfigBinary.setOptionSizePerBlockLimitPercent": {
          "57": [
            2882,
            2893,
            true
          ]
        },
        "OptionConfigBinary.setReferralRewardPercentage": {
          "54": [
            5037,
            5049,
            true
          ]
        },
        "OptionConfigBinary.setSettlementFeePercentage": {
          "43": [
            3926,
            3938,
            true
          ]
        },
        "OptionConfigBinary.setSettlementFeeRecipient": {
          "51": [
            4306,
            4338,
            true
          ]
        },
        "OptionConfigBinary.setStakingFeePercentage": {
          "42": [
            4668,
            4680,
            true
          ]
        }
      },
      "4": {},
      "41": {},
      "5": {},
      "6": {}
    },
    "statements": {
      "15": {
        "Context._msgSender": {
          "0": [
            659,
            676
          ]
        }
      },
      "2": {
        "Ownable._setOwner": {
          "40": [
            2131,
            2148
          ],
          "41": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "17": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "16": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "36": [
            1926,
            1999
          ],
          "37": [
            2009,
            2028
          ]
        }
      },
      "26": {},
      "38": {
        "OptionConfigBinary.checkParams": {
          "11": [
            1824,
            1995
          ],
          "12": [
            2005,
            2053
          ],
          "13": [
            2063,
            2111
          ],
          "14": [
            2121,
            2181
          ],
          "15": [
            2191,
            2235
          ]
        },
        "OptionConfigBinary.setImpliedVolRate": {
          "24": [
            3319,
            3377
          ],
          "25": [
            3387,
            3409
          ],
          "26": [
            3419,
            3454
          ]
        },
        "OptionConfigBinary.setMaxPeriod": {
          "21": [
            2412,
            2521
          ],
          "22": [
            2531,
            2548
          ],
          "23": [
            2558,
            2585
          ]
        },
        "OptionConfigBinary.setNFTSaleRoyaltyPercentage": {
          "8": [
            5793,
            5828
          ],
          "9": [
            5838,
            5870
          ],
          "10": [
            5880,
            5922
          ]
        },
        "OptionConfigBinary.setOptionCollaterizationRatio": {
          "30": [
            5419,
            5470
          ],
          "31": [
            5480,
            5516
          ],
          "32": [
            5526,
            5570
          ]
        },
        "OptionConfigBinary.setOptionSizePerBlockLimitPercent": {
          "33": [
            2861,
            2975
          ],
          "34": [
            2985,
            3023
          ],
          "35": [
            3033,
            3081
          ]
        },
        "OptionConfigBinary.setReferralRewardPercentage": {
          "27": [
            5029,
            5090
          ],
          "28": [
            5100,
            5132
          ],
          "29": [
            5142,
            5184
          ]
        },
        "OptionConfigBinary.setSettlementFeePercentage": {
          "4": [
            3918,
            3978
          ],
          "5": [
            3988,
            4019
          ],
          "6": [
            4029,
            4070
          ]
        },
        "OptionConfigBinary.setSettlementFeeRecipient": {
          "18": [
            4298,
            4339
          ],
          "19": [
            4349,
            4383
          ],
          "20": [
            4393,
            4446
          ]
        },
        "OptionConfigBinary.setStakingFeePercentage": {
          "1": [
            4660,
            4717
          ],
          "2": [
            4727,
            4755
          ],
          "3": [
            4765,
            4803
          ]
        },
        "OptionConfigBinary.setTradingPermission": {
          "38": [
            3583,
            3620
          ],
          "39": [
            3630,
            3674
          ]
        },
        "OptionConfigBinary.setUtilizationRate": {
          "7": [
            6125,
            6148
          ]
        }
      },
      "4": {},
      "41": {},
      "5": {},
      "6": {}
    }
  },
  "dependencies": [
    "BufferIBFRPoolV2",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC20",
    "IBufferOptions",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20Metadata",
    "IOptionsConfig",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101495760003560e01c806316f0115b1461014e578063180acf6e14610177578063181731dc1461018c57806318f88e5b1461019f5780631ec3ad1d146101b6578063302ce651146101c957806340774ff6146101d257806349b9a67f146101e55780635cb6bc81146101ee57806364ac2655146102015780636c321c8a14610214578063715018a61461021d57806371bf7e25146102255780638da5cb5b1461022e578063920a253e1461023657806396350a851461023f578063ae1c9fc114610252578063ca535c3b14610265578063ceaeeba91461026e578063cedcc6da14610281578063e2bef75414610294578063e97b86e7146102a7578063ed0974c7146102ba578063f12a0466146102c3578063f2fde38b146102e4578063f3fa3495146102f7578063ff0b025d14610300575b600080fd5b600b54610161906001600160a01b031681565b60405161016e9190610dc7565b60405180910390f35b61018a610185366004610daf565b610313565b005b600754610161906001600160a01b031681565b6101a860015481565b60405190815260200161016e565b61018a6101c4366004610daf565b6103d8565b6101a860025481565b61018a6101e0366004610daf565b610499565b6101a8600a5481565b61018a6101fc366004610daf565b6104cd565b61018a61020f366004610d42565b610552565b6101a860085481565b61018a610705565b6101a860095481565b610161610740565b6101a860055481565b61018a61024d366004610d14565b61074f565b61018a610260366004610daf565b6107dc565b6101a860045481565b61018a61027c366004610daf565b6108a7565b61018a61028f366004610daf565b610966565b61018a6102a2366004610daf565b610a27565b61018a6102b5366004610daf565b610ab9565b6101a860065481565b600b546102d790600160a01b900460ff1681565b60405161016e9190610ddb565b61018a6102f2366004610d14565b610b8e565b6101a860035481565b61018a61030e366004610d90565b610c2e565b3361031c610740565b6001600160a01b03161461034b5760405162461bcd60e51b815260040161034290610e28565b60405180910390fd5b606481111561039c5760405162461bcd60e51b815260206004820181905260248201527f5374616b696e6746656550657263656e7461676520697320746f6f20686967686044820152606401610342565b60048190556040518181527f7ab3467fb06d3d8716698bece5f22a665374115bd3d0a43d6e11b76fcec1dfbb906020015b60405180910390a150565b336103e1610740565b6001600160a01b0316146104075760405162461bcd60e51b815260040161034290610e28565b6107d081106104645760405162461bcd60e51b815260206004820152602360248201527f536574746c656d656e7446656550657263656e7461676520697320746f6f20686044820152620d2ced60eb1b6064820152608401610342565b60038190556040518181527f803e7bbaebadbda418ec6dd788e57c29c1cf3faeb7e139d21247e624c9e6d119906020016103cd565b336104a2610740565b6001600160a01b0316146104c85760405162461bcd60e51b815260040161034290610e28565b600855565b336104d6610740565b6001600160a01b0316146104fc5760405162461bcd60e51b815260040161034290610e28565b600a81111561051d5760405162461bcd60e51b815260040161034290610e03565b60068190556040518181527f8fb679aa627958fc7143b0829745d581e0f5e98599847e7097749ce89d8c88e0906020016103cd565b600286600281111561057457634e487b7160e01b600052602160045260246000fd5b148061059f5750600186600281111561059d57634e487b7160e01b600052602160045260246000fd5b145b6105df5760405162461bcd60e51b815260206004820152601160248201527057726f6e67206f7074696f6e207479706560781b6044820152606401610342565b620151808510156106285760405162461bcd60e51b815260206004820152601360248201527214195c9a5bd9081a5cc81d1bdbc81cda1bdc9d606a1b6044820152606401610342565b6276a7008511156106705760405162461bcd60e51b8152602060048201526012602482015271506572696f6420697320746f6f206c6f6e6760701b6044820152606401610342565b8284116106bf5760405162461bcd60e51b815260206004820152601d60248201527f507269636520646966666572656e636520697320746f6f206c617267650000006044820152606401610342565b818110156106fd5760405162461bcd60e51b815260206004820152600b60248201526a57726f6e672076616c756560a81b6044820152606401610342565b505050505050565b3361070e610740565b6001600160a01b0316146107345760405162461bcd60e51b815260040161034290610e28565b61073e6000610cc4565b565b6000546001600160a01b031690565b33610758610740565b6001600160a01b03161461077e5760405162461bcd60e51b815260040161034290610e28565b6001600160a01b03811661079157600080fd5b600780546001600160a01b0319166001600160a01b0383161790556040517f92f6c1e8df34c666f737a2407b4e63d3a77f133b69fdf70f01b5e3b8072551f6906103cd908390610dc7565b336107e5610740565b6001600160a01b03161461080b5760405162461bcd60e51b815260040161034290610e28565b61012c8110156108725760405162461bcd60e51b815260206004820152602c60248201527f4d6178506572696f64206e6565647320746f206265206772656174657220746860448201526b616e2035206d696e7574657360a01b6064820152608401610342565b600a8190556040518181527f0967eeac7ccaa5705556859408ddb017bac37afa817dd8ff3d27cf4ea1171a66906020016103cd565b336108b0610740565b6001600160a01b0316146108d65760405162461bcd60e51b815260040161034290610e28565b60648110156109315760405162461bcd60e51b815260206004820152602160248201527f496d706c696564566f6c52617465206c696d697420697320746f6f20736d616c6044820152601b60fa1b6064820152608401610342565b60018190556040518181527f3e0c59249d1a9c5f08383bdbdfbc45517a71b76e72223ae649c576e4d1258696906020016103cd565b3361096f610740565b6001600160a01b0316146109955760405162461bcd60e51b815260040161034290610e28565b60648111156109f25760405162461bcd60e51b8152602060048201526024808201527f526566657272616c52657761726450657263656e7461676520697320746f6f206044820152630d0d2ced60e31b6064820152608401610342565b60058190556040518181527f0c089466003b94ffb5787d1d1affe1c743f8ca63f949d2296cfa4d7986601ade906020016103cd565b33610a30610740565b6001600160a01b031614610a565760405162461bcd60e51b815260040161034290610e28565b80603211158015610a68575060648111155b610a845760405162461bcd60e51b815260040161034290610e03565b60028190556040518181527f66b26a0dfaa5fc9f5c7432381208aa4bd7f13f4489299b52f09f1af7669bb93b906020016103cd565b33610ac2610740565b6001600160a01b031614610ae85760405162461bcd60e51b815260040161034290610e28565b60648110610b595760405162461bcd60e51b815260206004820152603860248201527f4f7074696f6e53697a65506572426c6f636b4c696d697450657263656e74206e60448201527706565647320746f206265206c657373207468616e203130360441b6064820152608401610342565b60098190556040518181527f5ca84f51f1b091675330abc6e5665566a97744b04121dabc6bda4b3d3503945f906020016103cd565b33610b97610740565b6001600160a01b031614610bbd5760405162461bcd60e51b815260040161034290610e28565b6001600160a01b038116610c225760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610342565b610c2b81610cc4565b50565b33610c37610740565b6001600160a01b031614610c5d5760405162461bcd60e51b815260040161034290610e28565b600b805482919060ff60a01b1916600160a01b836003811115610c9057634e487b7160e01b600052602160045260246000fd5b02179055507f75e98309d621801fc34e8ce7fa6eaa10b82599a58639171fe865e39bb4728d48816040516103cd9190610ddb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610d25578081fd5b81356001600160a01b0381168114610d3b578182fd5b9392505050565b60008060008060008060c08789031215610d5a578182fd5b863560038110610d68578283fd5b9860208801359850604088013597606081013597506080810135965060a00135945092505050565b600060208284031215610da1578081fd5b813560048110610d3b578182fd5b600060208284031215610dc0578081fd5b5035919050565b6001600160a01b0391909116815260200190565b6020810160048310610dfd57634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252600b908201526a77726f6e672076616c756560a81b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212200b57da3b4bf81bb66f48e9bb090d25276648c3a1ff81e57b418dd72439374e3264736f6c63430008040033",
  "deployedSourceMap": "283:5874:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;878:28;;;;;-1:-1:-1;;;;;878:28:38;;;;;;;;;;:::i;:::-;;;;;;;;4583:227;;;;;;:::i;:::-;;:::i;:::-;;696:37;;;;;-1:-1:-1;;;;;696:37:38;;;360:29;;;;;;;;;7668:25:48;;;7656:2;7641:18;360:29:38;7623:76:48;3838:239:38;;;;;;:::i;:::-;;:::i;395:49::-;;;;;;6053:102;;;;;;:::i;:::-;;:::i;837:35::-;;;;;;5712:217;;;;;;:::i;:::-;;:::i;1600:642::-;;;;;;:::i;:::-;;:::i;739:37::-;;;;;;1605:92:2;;;:::i;782:49:38:-;;;;;;973:85:2;;;:::i;546:43:38:-;;;;;;4215:238;;;;;;:::i;:::-;;:::i;2346:246::-;;;;;;:::i;:::-;;:::i;500:40::-;;;;;;3248:213;;;;;;:::i;:::-;;:::i;4948:243::-;;;;;;:::i;:::-;;:::i;5336:241::-;;;;;;:::i;:::-;;:::i;2754:334::-;;;;;;:::i;:::-;;:::i;595:43::-;;;;;;912:48;;;;;-1:-1:-1;;;912:48:38;;;;;;;;;;;;;:::i;1846:189:2:-;;;;;;:::i;:::-;;:::i;450:44:38:-;;;;;;3467:214;;;;;;:::i;:::-;;:::i;4583:227::-;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;;;;;;;;;4677:3:38::1;4668:5;:12;;4660:57;;;::::0;-1:-1:-1;;;4660:57:38;;2874:2:48;4660:57:38::1;::::0;::::1;2856:21:48::0;;;2893:18;;;2886:30;2952:34;2932:18;;;2925:62;3004:18;;4660:57:38::1;2846:182:48::0;4660:57:38::1;4727:20;:28:::0;;;4770:33:::1;::::0;7668:25:48;;;4770:33:38::1;::::0;7656:2:48;7641:18;4770:33:38::1;;;;;;;;4583:227:::0;:::o;3838:239::-;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;3934:4:38::1;3926:5;:12;3918:60;;;::::0;-1:-1:-1;;;3918:60:38;;3921:2:48;3918:60:38::1;::::0;::::1;3903:21:48::0;3960:2;3940:18;;;3933:30;3999:34;3979:18;;;3972:62;-1:-1:-1;;;4050:18:48;;;4043:33;4093:19;;3918:60:38::1;3893:225:48::0;3918:60:38::1;3988:23;:31:::0;;;4034:36:::1;::::0;7668:25:48;;;4034:36:38::1;::::0;7656:2:48;7641:18;4034:36:38::1;7623:76:48::0;6053:102:38;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;6125:15:38::1;:23:::0;6053:102::o;5712:217::-;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;5810:2:38::1;5801:5;:11;;5793:35;;;;-1:-1:-1::0;;;5793:35:38::1;;;;;;;:::i;:::-;5838:24;:32:::0;;;5885:37:::1;::::0;7668:25:48;;;5885:37:38::1;::::0;7656:2:48;7641:18;5885:37:38::1;7623:76:48::0;1600:642:38;1859:30;1845:10;:44;;;;;;-1:-1:-1;;;1845:44:38;;;;;;;;;;:107;;;-1:-1:-1;1923:29:38;1909:10;:43;;;;;;-1:-1:-1;;;1909:43:38;;;;;;;;;;1845:107;1824:171;;;;-1:-1:-1;;;1824:171:38;;3575:2:48;1824:171:38;;;3557:21:48;3614:2;3594:18;;;3587:30;-1:-1:-1;;;3633:18:48;;;3626:47;3690:18;;1824:171:38;3547:167:48;1824:171:38;2023:6;2013;:16;;2005:48;;;;-1:-1:-1;;;2005:48:38;;6191:2:48;2005:48:38;;;6173:21:48;6230:2;6210:18;;;6203:30;-1:-1:-1;;;6249:18:48;;;6242:49;6308:18;;2005:48:38;6163:169:48;2005:48:38;2081:7;2071:6;:17;;2063:48;;;;-1:-1:-1;;;2063:48:38;;6539:2:48;2063:48:38;;;6521:21:48;6578:2;6558:18;;;6551:30;-1:-1:-1;;;6597:18:48;;;6590:48;6655:18;;2063:48:38;6511:168:48;2063:48:38;2138:9;2129:6;:18;2121:60;;;;-1:-1:-1;;;2121:60:38;;5026:2:48;2121:60:38;;;5008:21:48;5065:2;5045:18;;;5038:30;5104:31;5084:18;;;5077:59;5153:18;;2121:60:38;4998:179:48;2121:60:38;2211:8;2199;:20;;2191:44;;;;-1:-1:-1;;;2191:44:38;;3235:2:48;2191:44:38;;;3217:21:48;3274:2;3254:18;;;3247:30;-1:-1:-1;;;3293:18:48;;;3286:41;3344:18;;2191:44:38;3207:161:48;2191:44:38;1600:642;;;;;;:::o;1605:92:2:-;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;973:85::-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:2;;973:85::o;4215:238:38:-;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;4306:32:38;::::1;4298:41;;;::::0;::::1;;4349:22;:34:::0;;-1:-1:-1;;;;;;4349:34:38::1;-1:-1:-1::0;;;;;4349:34:38;::::1;;::::0;;4398:48:::1;::::0;::::1;::::0;::::1;::::0;4349:34;;4398:48:::1;:::i;2346:246::-:0;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;2442:9:38::1;2433:5;:18;;2412:109;;;::::0;-1:-1:-1;;;2412:109:38;;6886:2:48;2412:109:38::1;::::0;::::1;6868:21:48::0;6925:2;6905:18;;;6898:30;6964:34;6944:18;;;6937:62;-1:-1:-1;;;7015:18:48;;;7008:42;7067:19;;2412:109:38::1;6858:234:48::0;2412:109:38::1;2531:9;:17:::0;;;2563:22:::1;::::0;7668:25:48;;;2563:22:38::1;::::0;7656:2:48;7641:18;2563:22:38::1;7623:76:48::0;3248:213:38;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;3336:3:38::1;3327:5;:12;;3319:58;;;::::0;-1:-1:-1;;;3319:58:38;;5789:2:48;3319:58:38::1;::::0;::::1;5771:21:48::0;5828:2;5808:18;;;5801:30;5867:34;5847:18;;;5840:62;-1:-1:-1;;;5918:18:48;;;5911:31;5959:19;;3319:58:38::1;5761:223:48::0;3319:58:38::1;3387:14;:22:::0;;;3424:30:::1;::::0;7668:25:48;;;3424:30:38::1;::::0;7656:2:48;7641:18;3424:30:38::1;7623:76:48::0;4948:243:38;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;5046:3:38::1;5037:5;:12;;5029:61;;;::::0;-1:-1:-1;;;5029:61:38;;5384:2:48;5029:61:38::1;::::0;::::1;5366:21:48::0;5423:2;5403:18;;;5396:30;5462:34;5442:18;;;5435:62;-1:-1:-1;;;5513:18:48;;;5506:34;5557:19;;5029:61:38::1;5356:226:48::0;5029:61:38::1;5100:24;:32:::0;;;5147:37:::1;::::0;7668:25:48;;;5147:37:38::1;::::0;7656:2:48;7641:18;5147:37:38::1;7623:76:48::0;5336:241:38;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;5433:5:38::1;5427:2;:11;;:27;;;;;5451:3;5442:5;:12;;5427:27;5419:51;;;;-1:-1:-1::0;;;5419:51:38::1;;;;;;;:::i;:::-;5480:28;:36:::0;;;5531:39:::1;::::0;7668:25:48;;;5531:39:38::1;::::0;7656:2:48;7641:18;5531:39:38::1;7623:76:48::0;2754:334:38;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;2890:3:38::1;2882:5;:11;2861:114;;;::::0;-1:-1:-1;;;2861:114:38;;7299:2:48;2861:114:38::1;::::0;::::1;7281:21:48::0;7338:2;7318:18;;;7311:30;7377:34;7357:18;;;7350:62;-1:-1:-1;;;7428:18:48;;;7421:54;7492:19;;2861:114:38::1;7271:246:48::0;2861:114:38::1;2985:30;:38:::0;;;3038:43:::1;::::0;7668:25:48;;;3038:43:38::1;::::0;7656:2:48;7641:18;3038:43:38::1;7623:76:48::0;1846:189:2;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:2;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:2;;2467:2:48;1926:73:2::1;::::0;::::1;2449:21:48::0;2506:2;2486:18;;;2479:30;2545:34;2525:18;;;2518:62;-1:-1:-1;;;2596:18:48;;;2589:36;2642:19;;1926:73:2::1;2439:228:48::0;1926:73:2::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;3467:214:38:-;666:10:15;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;3583:20:38::1;:37:::0;;3606:14;;3583:20;-1:-1:-1;;;;3583:37:38::1;-1:-1:-1::0;;;3606:14:38;3583:37:::1;::::0;::::1;;;;-1:-1:-1::0;;;3583:37:38::1;;;;;;;;;;;;;;3635:39;3659:14;3635:39;;;;;;:::i;2041:169:2:-:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;14:306:48:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:48;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:48:o;325:634::-;444:6;452;460;468;476;484;537:3;525:9;516:7;512:23;508:33;505:2;;;559:6;551;544:22;505:2;603:9;590:23;642:1;635:5;632:12;622:2;;663:6;655;648:22;622:2;691:5;743:2;728:18;;715:32;;-1:-1:-1;794:2:48;779:18;;766:32;;845:2;830:18;;817:32;;-1:-1:-1;896:3:48;881:19;;868:33;;-1:-1:-1;948:3:48;933:19;920:33;;-1:-1:-1;495:464:48;-1:-1:-1;;;495:464:48:o;964:301::-;1048:6;1101:2;1089:9;1080:7;1076:23;1072:32;1069:2;;;1122:6;1114;1107:22;1069:2;1166:9;1153:23;1205:1;1198:5;1195:12;1185:2;;1226:6;1218;1211:22;1270:190;1329:6;1382:2;1370:9;1361:7;1357:23;1353:32;1350:2;;;1403:6;1395;1388:22;1350:2;-1:-1:-1;1431:23:48;;1340:120;-1:-1:-1;1340:120:48:o;1465:203::-;-1:-1:-1;;;;;1629:32:48;;;;1611:51;;1599:2;1584:18;;1566:102::o;1907:353::-;2064:2;2049:18;;2097:1;2086:13;;2076:2;;2142:10;2137:3;2133:20;2130:1;2123:31;2177:4;2174:1;2167:15;2205:4;2202:1;2195:15;2076:2;2229:25;;;2031:229;:::o;4123:335::-;4325:2;4307:21;;;4364:2;4344:18;;;4337:30;-1:-1:-1;;;4398:2:48;4383:18;;4376:41;4449:2;4434:18;;4297:161::o;4463:356::-;4665:2;4647:21;;;4684:18;;;4677:30;4743:34;4738:2;4723:18;;4716:62;4810:2;4795:18;;4637:182::o",
  "language": "Solidity",
  "natspec": {
    "author": "Heisenberg",
    "kind": "dev",
    "methods": {
      "checkParams(uint8,uint256,uint256,uint256,uint256,uint256)": {
        "notice": "Check the validity of the input params",
        "params": {
          "amount": "Option amount",
          "msgValue": "the msg.value given to the Create function",
          "optionType": "Call or Put option type",
          "period": "Option period in seconds (1 days <= period <= 90 days)",
          "strikeFee": "strike fee for the option",
          "totalFee": "total fee for the option"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setImpliedVolRate(uint256)": {
        "notice": "Used for adjusting the options prices while balancing asset's implied volatility rate",
        "params": {
          "value": "New IVRate value"
        }
      },
      "setMaxPeriod(uint256)": {
        "notice": "Used for adjusting the maxPeriod",
        "params": {
          "value": "New maxPeriod"
        }
      },
      "setNFTSaleRoyaltyPercentage(uint256)": {
        "notice": "Used for changing nftSaleRoyaltyPercentage",
        "params": {
          "value": "New nftSaleRoyaltyPercentage value"
        }
      },
      "setOptionCollaterizationRatio(uint256)": {
        "notice": "Used for changing option collateralization ratio",
        "params": {
          "value": "New optionCollateralizationRatio value"
        }
      },
      "setOptionSizePerBlockLimitPercent(uint256)": {
        "notice": "Used for adjusting the option size per block limit percent",
        "params": {
          "value": "New option size per block limit percent value"
        }
      },
      "setReferralRewardPercentage(uint256)": {
        "notice": "Used for adjusting the referral reward percentage",
        "params": {
          "value": "New Referral Reward Percentage"
        }
      },
      "setSettlementFeePercentage(uint256)": {
        "notice": "Used for adjusting the settlement fee percentage with a factor of 100",
        "params": {
          "value": "New Settlement Fee Percentage"
        }
      },
      "setSettlementFeeRecipient(address)": {
        "notice": "Used for changing settlementFeeRecipient",
        "params": {
          "recipient": "New settlementFee recipient address"
        }
      },
      "setStakingFeePercentage(uint256)": {
        "notice": "Used for adjusting the staking fee percentage",
        "params": {
          "value": "New Staking Fee Percentage"
        }
      },
      "setUtilizationRate(uint256)": {
        "notice": "Used for updating utilizationRate value",
        "params": {
          "value": "New utilizationRate value*"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "notice": "Buffer BNB Options Contract",
    "title": "Buffer BNB Bidirectional (Call and Put) Options",
    "version": 1
  },
  "offset": [
    283,
    6157
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x149 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16F0115B EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x180ACF6E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x181731DC EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x18F88E5B EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x1EC3AD1D EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x302CE651 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x40774FF6 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x49B9A67F EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x5CB6BC81 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x64AC2655 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x6C321C8A EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x71BF7E25 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x920A253E EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x96350A85 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xAE1C9FC1 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xCA535C3B EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xCEAEEBA9 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xCEDCC6DA EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xE2BEF754 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xE97B86E7 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xED0974C7 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xF12A0466 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xF3FA3495 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xFF0B025D EQ PUSH2 0x300 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0x161 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x313 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x161 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1A8 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16E JUMP JUMPDEST PUSH2 0x18A PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x3D8 JUMP JUMPDEST PUSH2 0x1A8 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH2 0x1A8 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x4CD JUMP JUMPDEST PUSH2 0x18A PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0xD42 JUMP JUMPDEST PUSH2 0x552 JUMP JUMPDEST PUSH2 0x1A8 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x705 JUMP JUMPDEST PUSH2 0x1A8 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x740 JUMP JUMPDEST PUSH2 0x1A8 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0xD14 JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST PUSH2 0x18A PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST PUSH2 0x1A8 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x966 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0xA27 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0xAB9 JUMP JUMPDEST PUSH2 0x1A8 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x2D7 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0x18A PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD14 JUMP JUMPDEST PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x1A8 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0xD90 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST CALLER PUSH2 0x31C PUSH2 0x740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x34B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x39C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E6746656550657263656E7461676520697320746F6F2068696768 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x342 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x7AB3467FB06D3D8716698BECE5F22A665374115BD3D0A43D6E11B76FCEC1DFBB SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH2 0x3E1 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x407 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH2 0x7D0 DUP2 LT PUSH2 0x464 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536574746C656D656E7446656550657263656E7461676520697320746F6F2068 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0xD2CED PUSH1 0xEB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x803E7BBAEBADBDA418EC6DD788E57C29C1CF3FAEB7E139D21247E624C9E6D119 SWAP1 PUSH1 0x20 ADD PUSH2 0x3CD JUMP JUMPDEST CALLER PUSH2 0x4A2 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST CALLER PUSH2 0x4D6 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x8FB679AA627958FC7143B0829745D581E0F5E98599847E7097749CE89D8C88E0 SWAP1 PUSH1 0x20 ADD PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x2 DUP7 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x574 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ DUP1 PUSH2 0x59F JUMPI POP PUSH1 0x1 DUP7 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x59D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ JUMPDEST PUSH2 0x5DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x57726F6E67206F7074696F6E2074797065 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x342 JUMP JUMPDEST PUSH3 0x15180 DUP6 LT ISZERO PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x14195C9A5BD9081A5CC81D1BDBC81CDA1BDC9D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x342 JUMP JUMPDEST PUSH3 0x76A700 DUP6 GT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x506572696F6420697320746F6F206C6F6E67 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x342 JUMP JUMPDEST DUP3 DUP5 GT PUSH2 0x6BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x507269636520646966666572656E636520697320746F6F206C61726765000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x342 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x57726F6E672076616C7565 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x342 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x70E PUSH2 0x740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x734 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH2 0x73E PUSH1 0x0 PUSH2 0xCC4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH2 0x758 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x92F6C1E8DF34C666F737A2407B4E63D3A77F133B69FDF70F01B5E3B8072551F6 SWAP1 PUSH2 0x3CD SWAP1 DUP4 SWAP1 PUSH2 0xDC7 JUMP JUMPDEST CALLER PUSH2 0x7E5 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x80B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH2 0x12C DUP2 LT ISZERO PUSH2 0x872 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178506572696F64206E6565647320746F2062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x616E2035206D696E75746573 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x967EEAC7CCAA5705556859408DDB017BAC37AFA817DD8FF3D27CF4EA1171A66 SWAP1 PUSH1 0x20 ADD PUSH2 0x3CD JUMP JUMPDEST CALLER PUSH2 0x8B0 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0x931 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496D706C696564566F6C52617465206C696D697420697320746F6F20736D616C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x3E0C59249D1A9C5F08383BDBDFBC45517A71B76E72223AE649C576E4D1258696 SWAP1 PUSH1 0x20 ADD PUSH2 0x3CD JUMP JUMPDEST CALLER PUSH2 0x96F PUSH2 0x740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x9F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x526566657272616C52657761726450657263656E7461676520697320746F6F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0xD0D2CED PUSH1 0xE3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xC089466003B94FFB5787D1D1AFFE1C743F8CA63F949D2296CFA4D7986601ADE SWAP1 PUSH1 0x20 ADD PUSH2 0x3CD JUMP JUMPDEST CALLER PUSH2 0xA30 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0xE28 JUMP JUMPDEST DUP1 PUSH1 0x32 GT ISZERO DUP1 ISZERO PUSH2 0xA68 JUMPI POP PUSH1 0x64 DUP2 GT ISZERO JUMPDEST PUSH2 0xA84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x66B26A0DFAA5FC9F5C7432381208AA4BD7F13F4489299B52F09F1AF7669BB93B SWAP1 PUSH1 0x20 ADD PUSH2 0x3CD JUMP JUMPDEST CALLER PUSH2 0xAC2 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xAE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x64 DUP2 LT PUSH2 0xB59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7074696F6E53697A65506572426C6F636B4C696D697450657263656E74206E PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x6565647320746F206265206C657373207468616E2031303 PUSH1 0x44 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x5CA84F51F1B091675330ABC6E5665566A97744B04121DABC6BDA4B3D3503945F SWAP1 PUSH1 0x20 ADD PUSH2 0x3CD JUMP JUMPDEST CALLER PUSH2 0xB97 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST PUSH2 0xC2B DUP2 PUSH2 0xCC4 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 0xC37 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC90 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x75E98309D621801FC34E8CE7FA6EAA10B82599A58639171FE865E39BB4728D48 DUP2 PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD25 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD3B JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xD5A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0xD68 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP9 PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP9 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP8 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP8 POP PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH1 0xA0 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDA1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0xD3B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDC0 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x4 DUP4 LT PUSH2 0xDFD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x77726F6E672076616C7565 PUSH1 0xA8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND JUMPI 0xDA EXTCODESIZE 0x4B 0xF8 SHL 0xB6 PUSH16 0x48E9BB090D25276648C3A1FF81E57B41 DUP14 0xD7 0x24 CODECOPY CALLDATACOPY 0x4E ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        283,
        6157
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "5": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "CALLVALUE",
      "path": "38"
    },
    "6": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "7": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "8": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "12": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "REVERT",
      "path": "38"
    },
    "16": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "17": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "POP",
      "path": "38"
    },
    "18": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "21": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "LT",
      "path": "38"
    },
    "22": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x149"
    },
    "25": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "26": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "CALLDATALOAD",
      "path": "38"
    },
    "29": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "SHR",
      "path": "38"
    },
    "32": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "33": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x16F0115B"
    },
    "38": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "39": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x14E"
    },
    "42": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "43": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "44": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x180ACF6E"
    },
    "49": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "50": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x177"
    },
    "53": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "54": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "55": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x181731DC"
    },
    "60": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "61": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x18C"
    },
    "64": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "65": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "66": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x18F88E5B"
    },
    "71": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "72": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x19F"
    },
    "75": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "76": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "77": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x1EC3AD1D"
    },
    "82": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "83": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1B6"
    },
    "86": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "87": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "88": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x302CE651"
    },
    "93": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "94": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1C9"
    },
    "97": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "98": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "99": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x40774FF6"
    },
    "104": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "105": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1D2"
    },
    "108": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "109": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "110": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x49B9A67F"
    },
    "115": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "116": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1E5"
    },
    "119": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "120": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "121": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x5CB6BC81"
    },
    "126": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "127": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1EE"
    },
    "130": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "131": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "132": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x64AC2655"
    },
    "137": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "138": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x201"
    },
    "141": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "142": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "143": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x6C321C8A"
    },
    "148": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "149": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x214"
    },
    "152": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "153": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "154": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x715018A6"
    },
    "159": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "160": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x21D"
    },
    "163": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "164": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "165": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x71BF7E25"
    },
    "170": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "171": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x225"
    },
    "174": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "175": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "176": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x8DA5CB5B"
    },
    "181": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "182": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x22E"
    },
    "185": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "186": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "187": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x920A253E"
    },
    "192": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "193": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x236"
    },
    "196": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "197": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "198": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x96350A85"
    },
    "203": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "204": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x23F"
    },
    "207": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "208": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "209": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xAE1C9FC1"
    },
    "214": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "215": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x252"
    },
    "218": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "219": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "220": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xCA535C3B"
    },
    "225": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "226": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x265"
    },
    "229": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "230": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "231": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xCEAEEBA9"
    },
    "236": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "237": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x26E"
    },
    "240": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "241": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "242": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xCEDCC6DA"
    },
    "247": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "248": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x281"
    },
    "251": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "252": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "253": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xE2BEF754"
    },
    "258": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "259": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x294"
    },
    "262": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "263": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "264": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xE97B86E7"
    },
    "269": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "270": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2A7"
    },
    "273": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "274": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "275": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xED0974C7"
    },
    "280": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "281": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2BA"
    },
    "284": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "285": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "286": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xF12A0466"
    },
    "291": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "292": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2C3"
    },
    "295": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "296": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "297": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xF2FDE38B"
    },
    "302": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "303": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2E4"
    },
    "306": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "307": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "308": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xF3FA3495"
    },
    "313": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "314": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2F7"
    },
    "317": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "318": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "319": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xFF0B025D"
    },
    "324": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "EQ",
      "path": "38"
    },
    "325": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x300"
    },
    "328": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "329": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "330": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "332": {
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "DUP1",
      "path": "38"
    },
    "333": {
      "first_revert": true,
      "fn": null,
      "offset": [
        283,
        6157
      ],
      "op": "REVERT",
      "path": "38"
    },
    "334": {
      "offset": [
        878,
        906
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "335": {
      "fn": null,
      "offset": [
        878,
        906
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xB"
    },
    "337": {
      "fn": null,
      "offset": [
        878,
        906
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "338": {
      "fn": null,
      "offset": [
        878,
        906
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x161"
    },
    "341": {
      "fn": null,
      "offset": [
        878,
        906
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "348": {
      "op": "SHL"
    },
    "349": {
      "op": "SUB"
    },
    "350": {
      "offset": [
        878,
        906
      ],
      "op": "AND",
      "path": "38"
    },
    "351": {
      "fn": null,
      "offset": [
        878,
        906
      ],
      "op": "DUP2",
      "path": "38"
    },
    "352": {
      "fn": null,
      "offset": [
        878,
        906
      ],
      "op": "JUMP",
      "path": "38"
    },
    "353": {
      "fn": null,
      "offset": [
        878,
        906
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "354": {
      "fn": null,
      "offset": [
        878,
        906
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "356": {
      "fn": null,
      "offset": [
        878,
        906
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "357": {
      "fn": null,
      "offset": [
        878,
        906
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x16E"
    },
    "360": {
      "fn": null,
      "offset": [
        878,
        906
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "361": {
      "fn": null,
      "offset": [
        878,
        906
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "362": {
      "fn": null,
      "offset": [
        878,
        906
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xDC7"
    },
    "365": {
      "fn": null,
      "jump": "i",
      "offset": [
        878,
        906
      ],
      "op": "JUMP",
      "path": "38"
    },
    "366": {
      "fn": null,
      "offset": [
        878,
        906
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "367": {
      "fn": null,
      "offset": [
        878,
        906
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "369": {
      "fn": null,
      "offset": [
        878,
        906
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "370": {
      "fn": null,
      "offset": [
        878,
        906
      ],
      "op": "DUP1",
      "path": "38"
    },
    "371": {
      "fn": null,
      "offset": [
        878,
        906
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "372": {
      "fn": null,
      "offset": [
        878,
        906
      ],
      "op": "SUB",
      "path": "38"
    },
    "373": {
      "fn": null,
      "offset": [
        878,
        906
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "374": {
      "fn": null,
      "offset": [
        878,
        906
      ],
      "op": "RETURN",
      "path": "38"
    },
    "375": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4583,
        4810
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "376": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4583,
        4810
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x18A"
    },
    "379": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4583,
        4810
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x185"
    },
    "382": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4583,
        4810
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "383": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4583,
        4810
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "385": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4583,
        4810
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xDAF"
    },
    "388": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "jump": "i",
      "offset": [
        4583,
        4810
      ],
      "op": "JUMP",
      "path": "38"
    },
    "389": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4583,
        4810
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "390": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4583,
        4810
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x313"
    },
    "393": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "jump": "i",
      "offset": [
        4583,
        4810
      ],
      "op": "JUMP",
      "path": "38"
    },
    "394": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4583,
        4810
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "395": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4583,
        4810
      ],
      "op": "STOP",
      "path": "38"
    },
    "396": {
      "offset": [
        696,
        733
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "397": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        696,
        733
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x7"
    },
    "399": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        696,
        733
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "400": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        696,
        733
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x161"
    },
    "403": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        696,
        733
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "408": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "410": {
      "op": "SHL"
    },
    "411": {
      "op": "SUB"
    },
    "412": {
      "offset": [
        696,
        733
      ],
      "op": "AND",
      "path": "38"
    },
    "413": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        696,
        733
      ],
      "op": "DUP2",
      "path": "38"
    },
    "414": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        696,
        733
      ],
      "op": "JUMP",
      "path": "38"
    },
    "415": {
      "offset": [
        360,
        389
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "416": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        360,
        389
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1A8"
    },
    "419": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        360,
        389
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1"
    },
    "421": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        360,
        389
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "422": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        360,
        389
      ],
      "op": "DUP2",
      "path": "38"
    },
    "423": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        360,
        389
      ],
      "op": "JUMP",
      "path": "38"
    },
    "424": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        360,
        389
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "425": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        360,
        389
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "427": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        360,
        389
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "428": {
      "op": "SWAP1"
    },
    "429": {
      "op": "DUP2"
    },
    "430": {
      "op": "MSTORE"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "433": {
      "op": "ADD"
    },
    "434": {
      "offset": [
        360,
        389
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x16E"
    },
    "437": {
      "op": "JUMP"
    },
    "438": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3838,
        4077
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "439": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3838,
        4077
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x18A"
    },
    "442": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3838,
        4077
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1C4"
    },
    "445": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3838,
        4077
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "446": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3838,
        4077
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "448": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3838,
        4077
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xDAF"
    },
    "451": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "jump": "i",
      "offset": [
        3838,
        4077
      ],
      "op": "JUMP",
      "path": "38"
    },
    "452": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3838,
        4077
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "453": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3838,
        4077
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x3D8"
    },
    "456": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "jump": "i",
      "offset": [
        3838,
        4077
      ],
      "op": "JUMP",
      "path": "38"
    },
    "457": {
      "offset": [
        395,
        444
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "458": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        395,
        444
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1A8"
    },
    "461": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        395,
        444
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x2"
    },
    "463": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        395,
        444
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "464": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        395,
        444
      ],
      "op": "DUP2",
      "path": "38"
    },
    "465": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        395,
        444
      ],
      "op": "JUMP",
      "path": "38"
    },
    "466": {
      "fn": "OptionConfigBinary.setUtilizationRate",
      "offset": [
        6053,
        6155
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "467": {
      "fn": "OptionConfigBinary.setUtilizationRate",
      "offset": [
        6053,
        6155
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x18A"
    },
    "470": {
      "fn": "OptionConfigBinary.setUtilizationRate",
      "offset": [
        6053,
        6155
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1E0"
    },
    "473": {
      "fn": "OptionConfigBinary.setUtilizationRate",
      "offset": [
        6053,
        6155
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "474": {
      "fn": "OptionConfigBinary.setUtilizationRate",
      "offset": [
        6053,
        6155
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "476": {
      "fn": "OptionConfigBinary.setUtilizationRate",
      "offset": [
        6053,
        6155
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xDAF"
    },
    "479": {
      "fn": "OptionConfigBinary.setUtilizationRate",
      "jump": "i",
      "offset": [
        6053,
        6155
      ],
      "op": "JUMP",
      "path": "38"
    },
    "480": {
      "fn": "OptionConfigBinary.setUtilizationRate",
      "offset": [
        6053,
        6155
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "481": {
      "fn": "OptionConfigBinary.setUtilizationRate",
      "offset": [
        6053,
        6155
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x499"
    },
    "484": {
      "fn": "OptionConfigBinary.setUtilizationRate",
      "jump": "i",
      "offset": [
        6053,
        6155
      ],
      "op": "JUMP",
      "path": "38"
    },
    "485": {
      "offset": [
        837,
        872
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "486": {
      "fn": "OptionConfigBinary.setUtilizationRate",
      "offset": [
        837,
        872
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1A8"
    },
    "489": {
      "fn": "OptionConfigBinary.setUtilizationRate",
      "offset": [
        837,
        872
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xA"
    },
    "491": {
      "fn": "OptionConfigBinary.setUtilizationRate",
      "offset": [
        837,
        872
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "492": {
      "fn": "OptionConfigBinary.setUtilizationRate",
      "offset": [
        837,
        872
      ],
      "op": "DUP2",
      "path": "38"
    },
    "493": {
      "fn": "OptionConfigBinary.setUtilizationRate",
      "offset": [
        837,
        872
      ],
      "op": "JUMP",
      "path": "38"
    },
    "494": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5712,
        5929
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "495": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5712,
        5929
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x18A"
    },
    "498": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5712,
        5929
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1FC"
    },
    "501": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5712,
        5929
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "502": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5712,
        5929
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "504": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5712,
        5929
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xDAF"
    },
    "507": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "jump": "i",
      "offset": [
        5712,
        5929
      ],
      "op": "JUMP",
      "path": "38"
    },
    "508": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5712,
        5929
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "509": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5712,
        5929
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x4CD"
    },
    "512": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "jump": "i",
      "offset": [
        5712,
        5929
      ],
      "op": "JUMP",
      "path": "38"
    },
    "513": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1600,
        2242
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "514": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1600,
        2242
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x18A"
    },
    "517": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1600,
        2242
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x20F"
    },
    "520": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1600,
        2242
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "521": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1600,
        2242
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "523": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1600,
        2242
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xD42"
    },
    "526": {
      "fn": "OptionConfigBinary.checkParams",
      "jump": "i",
      "offset": [
        1600,
        2242
      ],
      "op": "JUMP",
      "path": "38"
    },
    "527": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1600,
        2242
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "528": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1600,
        2242
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x552"
    },
    "531": {
      "fn": "OptionConfigBinary.checkParams",
      "jump": "i",
      "offset": [
        1600,
        2242
      ],
      "op": "JUMP",
      "path": "38"
    },
    "532": {
      "offset": [
        739,
        776
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "533": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        739,
        776
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1A8"
    },
    "536": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        739,
        776
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x8"
    },
    "538": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        739,
        776
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "539": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        739,
        776
      ],
      "op": "DUP2",
      "path": "38"
    },
    "540": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        739,
        776
      ],
      "op": "JUMP",
      "path": "38"
    },
    "541": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "542": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18A"
    },
    "545": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x705"
    },
    "548": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "2"
    },
    "549": {
      "offset": [
        782,
        831
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "550": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        782,
        831
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1A8"
    },
    "553": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        782,
        831
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x9"
    },
    "555": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        782,
        831
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "556": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        782,
        831
      ],
      "op": "DUP2",
      "path": "38"
    },
    "557": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        782,
        831
      ],
      "op": "JUMP",
      "path": "38"
    },
    "558": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "559": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x161"
    },
    "562": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x740"
    },
    "565": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "2"
    },
    "566": {
      "offset": [
        546,
        589
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "567": {
      "fn": "Ownable.owner",
      "offset": [
        546,
        589
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1A8"
    },
    "570": {
      "fn": "Ownable.owner",
      "offset": [
        546,
        589
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x5"
    },
    "572": {
      "fn": "Ownable.owner",
      "offset": [
        546,
        589
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "573": {
      "fn": "Ownable.owner",
      "offset": [
        546,
        589
      ],
      "op": "DUP2",
      "path": "38"
    },
    "574": {
      "fn": "Ownable.owner",
      "offset": [
        546,
        589
      ],
      "op": "JUMP",
      "path": "38"
    },
    "575": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4215,
        4453
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "576": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4215,
        4453
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x18A"
    },
    "579": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4215,
        4453
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x24D"
    },
    "582": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4215,
        4453
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "583": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4215,
        4453
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "585": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4215,
        4453
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xD14"
    },
    "588": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "jump": "i",
      "offset": [
        4215,
        4453
      ],
      "op": "JUMP",
      "path": "38"
    },
    "589": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4215,
        4453
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "590": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4215,
        4453
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x74F"
    },
    "593": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "jump": "i",
      "offset": [
        4215,
        4453
      ],
      "op": "JUMP",
      "path": "38"
    },
    "594": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2346,
        2592
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "595": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2346,
        2592
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x18A"
    },
    "598": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2346,
        2592
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x260"
    },
    "601": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2346,
        2592
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "602": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2346,
        2592
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "604": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2346,
        2592
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xDAF"
    },
    "607": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "jump": "i",
      "offset": [
        2346,
        2592
      ],
      "op": "JUMP",
      "path": "38"
    },
    "608": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2346,
        2592
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "609": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2346,
        2592
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x7DC"
    },
    "612": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "jump": "i",
      "offset": [
        2346,
        2592
      ],
      "op": "JUMP",
      "path": "38"
    },
    "613": {
      "offset": [
        500,
        540
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "614": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        500,
        540
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1A8"
    },
    "617": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        500,
        540
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "619": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        500,
        540
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "620": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        500,
        540
      ],
      "op": "DUP2",
      "path": "38"
    },
    "621": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        500,
        540
      ],
      "op": "JUMP",
      "path": "38"
    },
    "622": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3248,
        3461
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "623": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3248,
        3461
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x18A"
    },
    "626": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3248,
        3461
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x27C"
    },
    "629": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3248,
        3461
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "630": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3248,
        3461
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "632": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3248,
        3461
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xDAF"
    },
    "635": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "jump": "i",
      "offset": [
        3248,
        3461
      ],
      "op": "JUMP",
      "path": "38"
    },
    "636": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3248,
        3461
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "637": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3248,
        3461
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x8A7"
    },
    "640": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "jump": "i",
      "offset": [
        3248,
        3461
      ],
      "op": "JUMP",
      "path": "38"
    },
    "641": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        4948,
        5191
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "642": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        4948,
        5191
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x18A"
    },
    "645": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        4948,
        5191
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x28F"
    },
    "648": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        4948,
        5191
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "649": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        4948,
        5191
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "651": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        4948,
        5191
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xDAF"
    },
    "654": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "jump": "i",
      "offset": [
        4948,
        5191
      ],
      "op": "JUMP",
      "path": "38"
    },
    "655": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        4948,
        5191
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "656": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        4948,
        5191
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x966"
    },
    "659": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "jump": "i",
      "offset": [
        4948,
        5191
      ],
      "op": "JUMP",
      "path": "38"
    },
    "660": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5336,
        5577
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "661": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5336,
        5577
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x18A"
    },
    "664": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5336,
        5577
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2A2"
    },
    "667": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5336,
        5577
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "668": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5336,
        5577
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "670": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5336,
        5577
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xDAF"
    },
    "673": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "jump": "i",
      "offset": [
        5336,
        5577
      ],
      "op": "JUMP",
      "path": "38"
    },
    "674": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5336,
        5577
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "675": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5336,
        5577
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA27"
    },
    "678": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "jump": "i",
      "offset": [
        5336,
        5577
      ],
      "op": "JUMP",
      "path": "38"
    },
    "679": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2754,
        3088
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "680": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2754,
        3088
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x18A"
    },
    "683": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2754,
        3088
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2B5"
    },
    "686": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2754,
        3088
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "687": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2754,
        3088
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "689": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2754,
        3088
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xDAF"
    },
    "692": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "jump": "i",
      "offset": [
        2754,
        3088
      ],
      "op": "JUMP",
      "path": "38"
    },
    "693": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2754,
        3088
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "694": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2754,
        3088
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xAB9"
    },
    "697": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "jump": "i",
      "offset": [
        2754,
        3088
      ],
      "op": "JUMP",
      "path": "38"
    },
    "698": {
      "offset": [
        595,
        638
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "699": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        595,
        638
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1A8"
    },
    "702": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        595,
        638
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x6"
    },
    "704": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        595,
        638
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "705": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        595,
        638
      ],
      "op": "DUP2",
      "path": "38"
    },
    "706": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        595,
        638
      ],
      "op": "JUMP",
      "path": "38"
    },
    "707": {
      "offset": [
        912,
        960
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "708": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        912,
        960
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xB"
    },
    "710": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        912,
        960
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "711": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        912,
        960
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2D7"
    },
    "714": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        912,
        960
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "719": {
      "op": "SHL"
    },
    "720": {
      "offset": [
        912,
        960
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "721": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        912,
        960
      ],
      "op": "DIV",
      "path": "38"
    },
    "722": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        912,
        960
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xFF"
    },
    "724": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        912,
        960
      ],
      "op": "AND",
      "path": "38"
    },
    "725": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        912,
        960
      ],
      "op": "DUP2",
      "path": "38"
    },
    "726": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        912,
        960
      ],
      "op": "JUMP",
      "path": "38"
    },
    "727": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        912,
        960
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "728": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        912,
        960
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "730": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        912,
        960
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "731": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        912,
        960
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x16E"
    },
    "734": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        912,
        960
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "735": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        912,
        960
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "736": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        912,
        960
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xDDB"
    },
    "739": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "jump": "i",
      "offset": [
        912,
        960
      ],
      "op": "JUMP",
      "path": "38"
    },
    "740": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "741": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18A"
    },
    "744": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F2"
    },
    "747": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "748": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "750": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD14"
    },
    "753": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "754": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "755": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB8E"
    },
    "758": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "759": {
      "offset": [
        450,
        494
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "760": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        450,
        494
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1A8"
    },
    "763": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        450,
        494
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x3"
    },
    "765": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        450,
        494
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "766": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        450,
        494
      ],
      "op": "DUP2",
      "path": "38"
    },
    "767": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        450,
        494
      ],
      "op": "JUMP",
      "path": "38"
    },
    "768": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3467,
        3681
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "769": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3467,
        3681
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x18A"
    },
    "772": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3467,
        3681
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x30E"
    },
    "775": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3467,
        3681
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "776": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3467,
        3681
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "778": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3467,
        3681
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xD90"
    },
    "781": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "jump": "i",
      "offset": [
        3467,
        3681
      ],
      "op": "JUMP",
      "path": "38"
    },
    "782": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3467,
        3681
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "783": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3467,
        3681
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xC2E"
    },
    "786": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "jump": "i",
      "offset": [
        3467,
        3681
      ],
      "op": "JUMP",
      "path": "38"
    },
    "787": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4583,
        4810
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "788": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15",
      "statement": 0
    },
    "789": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31C"
    },
    "792": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x740"
    },
    "795": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "796": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "801": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "803": {
      "op": "SHL"
    },
    "804": {
      "op": "SUB"
    },
    "805": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "806": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "807": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34B"
    },
    "810": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "811": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "813": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "814": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "818": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "820": {
      "op": "SHL"
    },
    "821": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "822": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "823": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "825": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "826": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x342"
    },
    "829": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "830": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE28"
    },
    "833": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "834": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "835": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "837": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "838": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "839": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "840": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "2"
    },
    "841": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "842": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "843": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "844": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4677,
        4680
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 1,
      "value": "0x64"
    },
    "846": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4668,
        4673
      ],
      "op": "DUP2",
      "path": "38"
    },
    "847": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4668,
        4680
      ],
      "op": "GT",
      "path": "38"
    },
    "848": {
      "branch": 42,
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4668,
        4680
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "849": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4660,
        4717
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x39C"
    },
    "852": {
      "branch": 42,
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4660,
        4717
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "853": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4660,
        4717
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "855": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4660,
        4717
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "856": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "860": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "862": {
      "op": "SHL"
    },
    "863": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4660,
        4717
      ],
      "op": "DUP2",
      "path": "38"
    },
    "864": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4660,
        4717
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "865": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "867": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4660,
        4717
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "869": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4660,
        4717
      ],
      "op": "DUP3",
      "path": "38"
    },
    "870": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4660,
        4717
      ],
      "op": "ADD",
      "path": "38"
    },
    "871": {
      "op": "DUP2"
    },
    "872": {
      "op": "SWAP1"
    },
    "873": {
      "op": "MSTORE"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "876": {
      "op": "DUP3"
    },
    "877": {
      "op": "ADD"
    },
    "878": {
      "op": "MSTORE"
    },
    "879": {
      "op": "PUSH32",
      "value": "0x5374616B696E6746656550657263656E7461676520697320746F6F2068696768"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "914": {
      "op": "DUP3"
    },
    "915": {
      "op": "ADD"
    },
    "916": {
      "op": "MSTORE"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "919": {
      "op": "ADD"
    },
    "920": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4660,
        4717
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x342"
    },
    "923": {
      "op": "JUMP"
    },
    "924": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4660,
        4717
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "925": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4727,
        4747
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 2,
      "value": "0x4"
    },
    "927": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4727,
        4755
      ],
      "op": "DUP2",
      "path": "38"
    },
    "928": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4727,
        4755
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "929": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4727,
        4755
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "930": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4770,
        4803
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 3,
      "value": "0x40"
    },
    "932": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4770,
        4803
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "933": {
      "op": "DUP2"
    },
    "934": {
      "op": "DUP2"
    },
    "935": {
      "op": "MSTORE"
    },
    "936": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4770,
        4803
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x7AB3467FB06D3D8716698BECE5F22A665374115BD3D0A43D6E11B76FCEC1DFBB"
    },
    "969": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4770,
        4803
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "972": {
      "op": "ADD"
    },
    "973": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4770,
        4803
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "974": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4770,
        4803
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "976": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4770,
        4803
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "977": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4770,
        4803
      ],
      "op": "DUP1",
      "path": "38"
    },
    "978": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4770,
        4803
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "979": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4770,
        4803
      ],
      "op": "SUB",
      "path": "38"
    },
    "980": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4770,
        4803
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "981": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4770,
        4803
      ],
      "op": "LOG1",
      "path": "38"
    },
    "982": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "offset": [
        4583,
        4810
      ],
      "op": "POP",
      "path": "38"
    },
    "983": {
      "fn": "OptionConfigBinary.setStakingFeePercentage",
      "jump": "o",
      "offset": [
        4583,
        4810
      ],
      "op": "JUMP",
      "path": "38"
    },
    "984": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3838,
        4077
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "985": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "986": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E1"
    },
    "989": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x740"
    },
    "992": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "993": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1000": {
      "op": "SHL"
    },
    "1001": {
      "op": "SUB"
    },
    "1002": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "1003": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1004": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x407"
    },
    "1007": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1008": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1010": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1011": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1017": {
      "op": "SHL"
    },
    "1018": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1019": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1020": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1022": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1023": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x342"
    },
    "1026": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1027": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE28"
    },
    "1030": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1031": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1032": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3934,
        3938
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 4,
      "value": "0x7D0"
    },
    "1035": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3926,
        3931
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1036": {
      "branch": 43,
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3926,
        3938
      ],
      "op": "LT",
      "path": "38"
    },
    "1037": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3918,
        3978
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x464"
    },
    "1040": {
      "branch": 43,
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3918,
        3978
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1041": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3918,
        3978
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1043": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3918,
        3978
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1044": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1050": {
      "op": "SHL"
    },
    "1051": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3918,
        3978
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1052": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3918,
        3978
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1055": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3918,
        3978
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1057": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3918,
        3978
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1058": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3918,
        3978
      ],
      "op": "ADD",
      "path": "38"
    },
    "1059": {
      "op": "MSTORE"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1064": {
      "op": "DUP3"
    },
    "1065": {
      "op": "ADD"
    },
    "1066": {
      "op": "MSTORE"
    },
    "1067": {
      "op": "PUSH32",
      "value": "0x536574746C656D656E7446656550657263656E7461676520697320746F6F2068"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1102": {
      "op": "DUP3"
    },
    "1103": {
      "op": "ADD"
    },
    "1104": {
      "op": "MSTORE"
    },
    "1105": {
      "op": "PUSH3",
      "value": "0xD2CED"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0xEB"
    },
    "1111": {
      "op": "SHL"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1114": {
      "op": "DUP3"
    },
    "1115": {
      "op": "ADD"
    },
    "1116": {
      "op": "MSTORE"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1119": {
      "op": "ADD"
    },
    "1120": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3918,
        3978
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x342"
    },
    "1123": {
      "op": "JUMP"
    },
    "1124": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3918,
        3978
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1125": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3988,
        4011
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 5,
      "value": "0x3"
    },
    "1127": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3988,
        4019
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1128": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3988,
        4019
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1129": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        3988,
        4019
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "1130": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        4034,
        4070
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 6,
      "value": "0x40"
    },
    "1132": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        4034,
        4070
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1133": {
      "op": "DUP2"
    },
    "1134": {
      "op": "DUP2"
    },
    "1135": {
      "op": "MSTORE"
    },
    "1136": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        4034,
        4070
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x803E7BBAEBADBDA418EC6DD788E57C29C1CF3FAEB7E139D21247E624C9E6D119"
    },
    "1169": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        4034,
        4070
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1172": {
      "op": "ADD"
    },
    "1173": {
      "fn": "OptionConfigBinary.setSettlementFeePercentage",
      "offset": [
        4034,
        4070
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x3CD"
    },
    "1176": {
      "op": "JUMP"
    },
    "1177": {
      "fn": "OptionConfigBinary.setUtilizationRate",
      "offset": [
        6053,
        6155
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1178": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1179": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4A2"
    },
    "1182": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x740"
    },
    "1185": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1186": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1193": {
      "op": "SHL"
    },
    "1194": {
      "op": "SUB"
    },
    "1195": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "1196": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1197": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C8"
    },
    "1200": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1201": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1203": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1204": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1210": {
      "op": "SHL"
    },
    "1211": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1212": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1213": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1215": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1216": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x342"
    },
    "1219": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1220": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE28"
    },
    "1223": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1224": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1225": {
      "fn": "OptionConfigBinary.setUtilizationRate",
      "offset": [
        6125,
        6140
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 7,
      "value": "0x8"
    },
    "1227": {
      "fn": "OptionConfigBinary.setUtilizationRate",
      "offset": [
        6125,
        6148
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "1228": {
      "fn": "OptionConfigBinary.setUtilizationRate",
      "jump": "o",
      "offset": [
        6053,
        6155
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1229": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5712,
        5929
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1230": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1231": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D6"
    },
    "1234": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x740"
    },
    "1237": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1238": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1245": {
      "op": "SHL"
    },
    "1246": {
      "op": "SUB"
    },
    "1247": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "1248": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1249": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4FC"
    },
    "1252": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1253": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1255": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1256": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1262": {
      "op": "SHL"
    },
    "1263": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1264": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1265": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1267": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1268": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x342"
    },
    "1271": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1272": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE28"
    },
    "1275": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1276": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1277": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5810,
        5812
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 8,
      "value": "0xA"
    },
    "1279": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5801,
        5806
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1280": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5801,
        5812
      ],
      "op": "GT",
      "path": "38"
    },
    "1281": {
      "branch": 44,
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5801,
        5812
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "1282": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5793,
        5828
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x51D"
    },
    "1285": {
      "branch": 44,
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5793,
        5828
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1286": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5793,
        5828
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1288": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5793,
        5828
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1289": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1295": {
      "op": "SHL"
    },
    "1296": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5793,
        5828
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1297": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5793,
        5828
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1298": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5793,
        5828
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1300": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5793,
        5828
      ],
      "op": "ADD",
      "path": "38"
    },
    "1301": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5793,
        5828
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x342"
    },
    "1304": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5793,
        5828
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1305": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5793,
        5828
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE03"
    },
    "1308": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "jump": "i",
      "offset": [
        5793,
        5828
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1309": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5793,
        5828
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1310": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5838,
        5862
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 9,
      "value": "0x6"
    },
    "1312": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5838,
        5870
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1313": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5838,
        5870
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1314": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5838,
        5870
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "1315": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5885,
        5922
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 10,
      "value": "0x40"
    },
    "1317": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5885,
        5922
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1318": {
      "op": "DUP2"
    },
    "1319": {
      "op": "DUP2"
    },
    "1320": {
      "op": "MSTORE"
    },
    "1321": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5885,
        5922
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x8FB679AA627958FC7143B0829745D581E0F5E98599847E7097749CE89D8C88E0"
    },
    "1354": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5885,
        5922
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1357": {
      "op": "ADD"
    },
    "1358": {
      "fn": "OptionConfigBinary.setNFTSaleRoyaltyPercentage",
      "offset": [
        5885,
        5922
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x3CD"
    },
    "1361": {
      "op": "JUMP"
    },
    "1362": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1600,
        2242
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1363": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1859,
        1889
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 11,
      "value": "0x2"
    },
    "1365": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1845,
        1855
      ],
      "op": "DUP7",
      "path": "38"
    },
    "1366": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1845,
        1889
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x2"
    },
    "1368": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1845,
        1889
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1369": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1845,
        1889
      ],
      "op": "GT",
      "path": "38"
    },
    "1370": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1845,
        1889
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "1371": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1845,
        1889
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x574"
    },
    "1374": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1845,
        1889
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1375": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1382": {
      "op": "SHL"
    },
    "1383": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1845,
        1889
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1385": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1845,
        1889
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1386": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1845,
        1889
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x21"
    },
    "1388": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1845,
        1889
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1390": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1845,
        1889
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1391": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1845,
        1889
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x24"
    },
    "1393": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1845,
        1889
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1395": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1845,
        1889
      ],
      "op": "REVERT",
      "path": "38"
    },
    "1396": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1845,
        1889
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1397": {
      "branch": 45,
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1845,
        1889
      ],
      "op": "EQ",
      "path": "38"
    },
    "1398": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1845,
        1952
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1399": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1845,
        1952
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x59F"
    },
    "1402": {
      "branch": 45,
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1845,
        1952
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1403": {
      "op": "POP"
    },
    "1404": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1923,
        1952
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1"
    },
    "1406": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1909,
        1919
      ],
      "op": "DUP7",
      "path": "38"
    },
    "1407": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1909,
        1952
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x2"
    },
    "1409": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1909,
        1952
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1410": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1909,
        1952
      ],
      "op": "GT",
      "path": "38"
    },
    "1411": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1909,
        1952
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "1412": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1909,
        1952
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x59D"
    },
    "1415": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1909,
        1952
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1416": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1423": {
      "op": "SHL"
    },
    "1424": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1909,
        1952
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1426": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1909,
        1952
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1427": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1909,
        1952
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x21"
    },
    "1429": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1909,
        1952
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1431": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1909,
        1952
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1432": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1909,
        1952
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x24"
    },
    "1434": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1909,
        1952
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1436": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1909,
        1952
      ],
      "op": "REVERT",
      "path": "38"
    },
    "1437": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1909,
        1952
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1438": {
      "branch": 46,
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1909,
        1952
      ],
      "op": "EQ",
      "path": "38"
    },
    "1439": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1845,
        1952
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1440": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1824,
        1995
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x5DF"
    },
    "1443": {
      "branch": 46,
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1824,
        1995
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1444": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1824,
        1995
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1446": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1824,
        1995
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1447": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1453": {
      "op": "SHL"
    },
    "1454": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1824,
        1995
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1455": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1824,
        1995
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1458": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1824,
        1995
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1460": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1824,
        1995
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1461": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1824,
        1995
      ],
      "op": "ADD",
      "path": "38"
    },
    "1462": {
      "op": "MSTORE"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1467": {
      "op": "DUP3"
    },
    "1468": {
      "op": "ADD"
    },
    "1469": {
      "op": "MSTORE"
    },
    "1470": {
      "op": "PUSH17",
      "value": "0x57726F6E67206F7074696F6E2074797065"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "1490": {
      "op": "SHL"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1493": {
      "op": "DUP3"
    },
    "1494": {
      "op": "ADD"
    },
    "1495": {
      "op": "MSTORE"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1498": {
      "op": "ADD"
    },
    "1499": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1824,
        1995
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x342"
    },
    "1502": {
      "op": "JUMP"
    },
    "1503": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1824,
        1995
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1504": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2023,
        2029
      ],
      "op": "PUSH3",
      "path": "38",
      "statement": 12,
      "value": "0x15180"
    },
    "1508": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2013,
        2019
      ],
      "op": "DUP6",
      "path": "38"
    },
    "1509": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2013,
        2029
      ],
      "op": "LT",
      "path": "38"
    },
    "1510": {
      "branch": 47,
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2013,
        2029
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "1511": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2005,
        2053
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x628"
    },
    "1514": {
      "branch": 47,
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2005,
        2053
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1515": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2005,
        2053
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1517": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2005,
        2053
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1518": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1522": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1524": {
      "op": "SHL"
    },
    "1525": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2005,
        2053
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1526": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2005,
        2053
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1529": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2005,
        2053
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1531": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2005,
        2053
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1532": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2005,
        2053
      ],
      "op": "ADD",
      "path": "38"
    },
    "1533": {
      "op": "MSTORE"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1538": {
      "op": "DUP3"
    },
    "1539": {
      "op": "ADD"
    },
    "1540": {
      "op": "MSTORE"
    },
    "1541": {
      "op": "PUSH19",
      "value": "0x14195C9A5BD9081A5CC81D1BDBC81CDA1BDC9D"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "1563": {
      "op": "SHL"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1566": {
      "op": "DUP3"
    },
    "1567": {
      "op": "ADD"
    },
    "1568": {
      "op": "MSTORE"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1571": {
      "op": "ADD"
    },
    "1572": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2005,
        2053
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x342"
    },
    "1575": {
      "op": "JUMP"
    },
    "1576": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2005,
        2053
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1577": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2081,
        2088
      ],
      "op": "PUSH3",
      "path": "38",
      "statement": 13,
      "value": "0x76A700"
    },
    "1581": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2071,
        2077
      ],
      "op": "DUP6",
      "path": "38"
    },
    "1582": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2071,
        2088
      ],
      "op": "GT",
      "path": "38"
    },
    "1583": {
      "branch": 48,
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2071,
        2088
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "1584": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2063,
        2111
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x670"
    },
    "1587": {
      "branch": 48,
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2063,
        2111
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1588": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2063,
        2111
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1590": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2063,
        2111
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1591": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1597": {
      "op": "SHL"
    },
    "1598": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2063,
        2111
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1599": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2063,
        2111
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1602": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2063,
        2111
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1604": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2063,
        2111
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1605": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2063,
        2111
      ],
      "op": "ADD",
      "path": "38"
    },
    "1606": {
      "op": "MSTORE"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1611": {
      "op": "DUP3"
    },
    "1612": {
      "op": "ADD"
    },
    "1613": {
      "op": "MSTORE"
    },
    "1614": {
      "op": "PUSH18",
      "value": "0x506572696F6420697320746F6F206C6F6E67"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1635": {
      "op": "SHL"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1638": {
      "op": "DUP3"
    },
    "1639": {
      "op": "ADD"
    },
    "1640": {
      "op": "MSTORE"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1643": {
      "op": "ADD"
    },
    "1644": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2063,
        2111
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x342"
    },
    "1647": {
      "op": "JUMP"
    },
    "1648": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2063,
        2111
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1649": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2138,
        2147
      ],
      "op": "DUP3",
      "path": "38",
      "statement": 14
    },
    "1650": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2129,
        2135
      ],
      "op": "DUP5",
      "path": "38"
    },
    "1651": {
      "branch": 49,
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2129,
        2147
      ],
      "op": "GT",
      "path": "38"
    },
    "1652": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2121,
        2181
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x6BF"
    },
    "1655": {
      "branch": 49,
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2121,
        2181
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1656": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2121,
        2181
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1658": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2121,
        2181
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1659": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1665": {
      "op": "SHL"
    },
    "1666": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2121,
        2181
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1667": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2121,
        2181
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1670": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2121,
        2181
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1672": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2121,
        2181
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1673": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2121,
        2181
      ],
      "op": "ADD",
      "path": "38"
    },
    "1674": {
      "op": "MSTORE"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1679": {
      "op": "DUP3"
    },
    "1680": {
      "op": "ADD"
    },
    "1681": {
      "op": "MSTORE"
    },
    "1682": {
      "op": "PUSH32",
      "value": "0x507269636520646966666572656E636520697320746F6F206C61726765000000"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1717": {
      "op": "DUP3"
    },
    "1718": {
      "op": "ADD"
    },
    "1719": {
      "op": "MSTORE"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1722": {
      "op": "ADD"
    },
    "1723": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2121,
        2181
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x342"
    },
    "1726": {
      "op": "JUMP"
    },
    "1727": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2121,
        2181
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1728": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2211,
        2219
      ],
      "op": "DUP2",
      "path": "38",
      "statement": 15
    },
    "1729": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2199,
        2207
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1730": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2199,
        2219
      ],
      "op": "LT",
      "path": "38"
    },
    "1731": {
      "branch": 50,
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2199,
        2219
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "1732": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2191,
        2235
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x6FD"
    },
    "1735": {
      "branch": 50,
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2191,
        2235
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1736": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2191,
        2235
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1738": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2191,
        2235
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1739": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1745": {
      "op": "SHL"
    },
    "1746": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2191,
        2235
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1747": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2191,
        2235
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1750": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2191,
        2235
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1752": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2191,
        2235
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1753": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2191,
        2235
      ],
      "op": "ADD",
      "path": "38"
    },
    "1754": {
      "op": "MSTORE"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1759": {
      "op": "DUP3"
    },
    "1760": {
      "op": "ADD"
    },
    "1761": {
      "op": "MSTORE"
    },
    "1762": {
      "op": "PUSH11",
      "value": "0x57726F6E672076616C7565"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1776": {
      "op": "SHL"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1779": {
      "op": "DUP3"
    },
    "1780": {
      "op": "ADD"
    },
    "1781": {
      "op": "MSTORE"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1784": {
      "op": "ADD"
    },
    "1785": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2191,
        2235
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x342"
    },
    "1788": {
      "op": "JUMP"
    },
    "1789": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        2191,
        2235
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1790": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1600,
        2242
      ],
      "op": "POP",
      "path": "38"
    },
    "1791": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1600,
        2242
      ],
      "op": "POP",
      "path": "38"
    },
    "1792": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1600,
        2242
      ],
      "op": "POP",
      "path": "38"
    },
    "1793": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1600,
        2242
      ],
      "op": "POP",
      "path": "38"
    },
    "1794": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1600,
        2242
      ],
      "op": "POP",
      "path": "38"
    },
    "1795": {
      "fn": "OptionConfigBinary.checkParams",
      "offset": [
        1600,
        2242
      ],
      "op": "POP",
      "path": "38"
    },
    "1796": {
      "fn": "OptionConfigBinary.checkParams",
      "jump": "o",
      "offset": [
        1600,
        2242
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1797": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1798": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1799": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70E"
    },
    "1802": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x740"
    },
    "1805": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1806": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1813": {
      "op": "SHL"
    },
    "1814": {
      "op": "SUB"
    },
    "1815": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "1816": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1817": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x734"
    },
    "1820": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1821": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1823": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1824": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1830": {
      "op": "SHL"
    },
    "1831": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1832": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1833": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1835": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1836": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x342"
    },
    "1839": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1840": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE28"
    },
    "1843": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1844": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1845": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 16,
      "value": "0x73E"
    },
    "1848": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1850": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC4"
    },
    "1853": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1854": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1855": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1856": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1857": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1859": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "2",
      "statement": 17
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1866": {
      "op": "SHL"
    },
    "1867": {
      "op": "SUB"
    },
    "1868": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "2"
    },
    "1869": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1870": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1871": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4215,
        4453
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1872": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1873": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x758"
    },
    "1876": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x740"
    },
    "1879": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1880": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1887": {
      "op": "SHL"
    },
    "1888": {
      "op": "SUB"
    },
    "1889": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "1890": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1891": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x77E"
    },
    "1894": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1895": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1897": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1898": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1902": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1904": {
      "op": "SHL"
    },
    "1905": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1906": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1907": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1909": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1910": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x342"
    },
    "1913": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1914": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE28"
    },
    "1917": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1918": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1925": {
      "op": "SHL"
    },
    "1926": {
      "op": "SUB"
    },
    "1927": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4306,
        4338
      ],
      "op": "DUP2",
      "path": "38",
      "statement": 18
    },
    "1928": {
      "branch": 51,
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4306,
        4338
      ],
      "op": "AND",
      "path": "38"
    },
    "1929": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4298,
        4339
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x791"
    },
    "1932": {
      "branch": 51,
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4298,
        4339
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1933": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4298,
        4339
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1935": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4298,
        4339
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1936": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4298,
        4339
      ],
      "op": "REVERT",
      "path": "38"
    },
    "1937": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4298,
        4339
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1938": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4349,
        4371
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 19,
      "value": "0x7"
    },
    "1940": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4349,
        4383
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1941": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4349,
        4383
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1948": {
      "op": "SHL"
    },
    "1949": {
      "op": "SUB"
    },
    "1950": {
      "op": "NOT"
    },
    "1951": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4349,
        4383
      ],
      "op": "AND",
      "path": "38"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1958": {
      "op": "SHL"
    },
    "1959": {
      "op": "SUB"
    },
    "1960": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4349,
        4383
      ],
      "op": "DUP4",
      "path": "38"
    },
    "1961": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4349,
        4383
      ],
      "op": "AND",
      "path": "38"
    },
    "1962": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4349,
        4383
      ],
      "op": "OR",
      "path": "38"
    },
    "1963": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4349,
        4383
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1964": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4349,
        4383
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "1965": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4398,
        4446
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 20,
      "value": "0x40"
    },
    "1967": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4398,
        4446
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1968": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4398,
        4446
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x92F6C1E8DF34C666F737A2407B4E63D3A77F133B69FDF70F01B5E3B8072551F6"
    },
    "2001": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4398,
        4446
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2002": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4398,
        4446
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x3CD"
    },
    "2005": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4398,
        4446
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2006": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4349,
        4383
      ],
      "op": "DUP4",
      "path": "38"
    },
    "2007": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4349,
        4383
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2008": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "offset": [
        4398,
        4446
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xDC7"
    },
    "2011": {
      "fn": "OptionConfigBinary.setSettlementFeeRecipient",
      "jump": "i",
      "offset": [
        4398,
        4446
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2012": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2346,
        2592
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2013": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2014": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E5"
    },
    "2017": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x740"
    },
    "2020": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2021": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2028": {
      "op": "SHL"
    },
    "2029": {
      "op": "SUB"
    },
    "2030": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "2031": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "2032": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x80B"
    },
    "2035": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2036": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2038": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2039": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2045": {
      "op": "SHL"
    },
    "2046": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2047": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2048": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2050": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "2051": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x342"
    },
    "2054": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2055": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE28"
    },
    "2058": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2059": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2060": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2442,
        2451
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 21,
      "value": "0x12C"
    },
    "2063": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2433,
        2438
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2064": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2433,
        2451
      ],
      "op": "LT",
      "path": "38"
    },
    "2065": {
      "branch": 52,
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2433,
        2451
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "2066": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2412,
        2521
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x872"
    },
    "2069": {
      "branch": 52,
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2412,
        2521
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2070": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2412,
        2521
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2072": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2412,
        2521
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2073": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2079": {
      "op": "SHL"
    },
    "2080": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2412,
        2521
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2081": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2412,
        2521
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2084": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2412,
        2521
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "2086": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2412,
        2521
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2087": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2412,
        2521
      ],
      "op": "ADD",
      "path": "38"
    },
    "2088": {
      "op": "MSTORE"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2093": {
      "op": "DUP3"
    },
    "2094": {
      "op": "ADD"
    },
    "2095": {
      "op": "MSTORE"
    },
    "2096": {
      "op": "PUSH32",
      "value": "0x4D6178506572696F64206E6565647320746F2062652067726561746572207468"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2131": {
      "op": "DUP3"
    },
    "2132": {
      "op": "ADD"
    },
    "2133": {
      "op": "MSTORE"
    },
    "2134": {
      "op": "PUSH12",
      "value": "0x616E2035206D696E75746573"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2149": {
      "op": "SHL"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2152": {
      "op": "DUP3"
    },
    "2153": {
      "op": "ADD"
    },
    "2154": {
      "op": "MSTORE"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2157": {
      "op": "ADD"
    },
    "2158": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2412,
        2521
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x342"
    },
    "2161": {
      "op": "JUMP"
    },
    "2162": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2412,
        2521
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2163": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2531,
        2540
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 22,
      "value": "0xA"
    },
    "2165": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2531,
        2548
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2166": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2531,
        2548
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2167": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2531,
        2548
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "2168": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2563,
        2585
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 23,
      "value": "0x40"
    },
    "2170": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2563,
        2585
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2171": {
      "op": "DUP2"
    },
    "2172": {
      "op": "DUP2"
    },
    "2173": {
      "op": "MSTORE"
    },
    "2174": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2563,
        2585
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x967EEAC7CCAA5705556859408DDB017BAC37AFA817DD8FF3D27CF4EA1171A66"
    },
    "2207": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2563,
        2585
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2210": {
      "op": "ADD"
    },
    "2211": {
      "fn": "OptionConfigBinary.setMaxPeriod",
      "offset": [
        2563,
        2585
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x3CD"
    },
    "2214": {
      "op": "JUMP"
    },
    "2215": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3248,
        3461
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2216": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2217": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8B0"
    },
    "2220": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x740"
    },
    "2223": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2224": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2231": {
      "op": "SHL"
    },
    "2232": {
      "op": "SUB"
    },
    "2233": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "2234": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "2235": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8D6"
    },
    "2238": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2239": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2241": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2242": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2248": {
      "op": "SHL"
    },
    "2249": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2250": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2251": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2253": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "2254": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x342"
    },
    "2257": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2258": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE28"
    },
    "2261": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2262": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2263": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3336,
        3339
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 24,
      "value": "0x64"
    },
    "2265": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3327,
        3332
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2266": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3327,
        3339
      ],
      "op": "LT",
      "path": "38"
    },
    "2267": {
      "branch": 53,
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3327,
        3339
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "2268": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3319,
        3377
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x931"
    },
    "2271": {
      "branch": 53,
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3319,
        3377
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2272": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3319,
        3377
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2274": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3319,
        3377
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2275": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2281": {
      "op": "SHL"
    },
    "2282": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3319,
        3377
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2283": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3319,
        3377
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2286": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3319,
        3377
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "2288": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3319,
        3377
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2289": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3319,
        3377
      ],
      "op": "ADD",
      "path": "38"
    },
    "2290": {
      "op": "MSTORE"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2295": {
      "op": "DUP3"
    },
    "2296": {
      "op": "ADD"
    },
    "2297": {
      "op": "MSTORE"
    },
    "2298": {
      "op": "PUSH32",
      "value": "0x496D706C696564566F6C52617465206C696D697420697320746F6F20736D616C"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2333": {
      "op": "DUP3"
    },
    "2334": {
      "op": "ADD"
    },
    "2335": {
      "op": "MSTORE"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "2340": {
      "op": "SHL"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2343": {
      "op": "DUP3"
    },
    "2344": {
      "op": "ADD"
    },
    "2345": {
      "op": "MSTORE"
    },
    "2346": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2348": {
      "op": "ADD"
    },
    "2349": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3319,
        3377
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x342"
    },
    "2352": {
      "op": "JUMP"
    },
    "2353": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3319,
        3377
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2354": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3387,
        3401
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 25,
      "value": "0x1"
    },
    "2356": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3387,
        3409
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2357": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3387,
        3409
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2358": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3387,
        3409
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "2359": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3424,
        3454
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 26,
      "value": "0x40"
    },
    "2361": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3424,
        3454
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2362": {
      "op": "DUP2"
    },
    "2363": {
      "op": "DUP2"
    },
    "2364": {
      "op": "MSTORE"
    },
    "2365": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3424,
        3454
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x3E0C59249D1A9C5F08383BDBDFBC45517A71B76E72223AE649C576E4D1258696"
    },
    "2398": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3424,
        3454
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2401": {
      "op": "ADD"
    },
    "2402": {
      "fn": "OptionConfigBinary.setImpliedVolRate",
      "offset": [
        3424,
        3454
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x3CD"
    },
    "2405": {
      "op": "JUMP"
    },
    "2406": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        4948,
        5191
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2407": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2408": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x96F"
    },
    "2411": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x740"
    },
    "2414": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2415": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2422": {
      "op": "SHL"
    },
    "2423": {
      "op": "SUB"
    },
    "2424": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "2425": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "2426": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x995"
    },
    "2429": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2430": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2432": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2433": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2439": {
      "op": "SHL"
    },
    "2440": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2441": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2442": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2444": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "2445": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x342"
    },
    "2448": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2449": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE28"
    },
    "2452": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2453": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2454": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5046,
        5049
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 27,
      "value": "0x64"
    },
    "2456": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5037,
        5042
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2457": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5037,
        5049
      ],
      "op": "GT",
      "path": "38"
    },
    "2458": {
      "branch": 54,
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5037,
        5049
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "2459": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5029,
        5090
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x9F2"
    },
    "2462": {
      "branch": 54,
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5029,
        5090
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2463": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5029,
        5090
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2465": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5029,
        5090
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2466": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2472": {
      "op": "SHL"
    },
    "2473": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5029,
        5090
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2474": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5029,
        5090
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2477": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5029,
        5090
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "2479": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5029,
        5090
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2480": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5029,
        5090
      ],
      "op": "ADD",
      "path": "38"
    },
    "2481": {
      "op": "MSTORE"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2484": {
      "op": "DUP1"
    },
    "2485": {
      "op": "DUP3"
    },
    "2486": {
      "op": "ADD"
    },
    "2487": {
      "op": "MSTORE"
    },
    "2488": {
      "op": "PUSH32",
      "value": "0x526566657272616C52657761726450657263656E7461676520697320746F6F20"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2523": {
      "op": "DUP3"
    },
    "2524": {
      "op": "ADD"
    },
    "2525": {
      "op": "MSTORE"
    },
    "2526": {
      "op": "PUSH4",
      "value": "0xD0D2CED"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2533": {
      "op": "SHL"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2536": {
      "op": "DUP3"
    },
    "2537": {
      "op": "ADD"
    },
    "2538": {
      "op": "MSTORE"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2541": {
      "op": "ADD"
    },
    "2542": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5029,
        5090
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x342"
    },
    "2545": {
      "op": "JUMP"
    },
    "2546": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5029,
        5090
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2547": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5100,
        5124
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 28,
      "value": "0x5"
    },
    "2549": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5100,
        5132
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2550": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5100,
        5132
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2551": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5100,
        5132
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "2552": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5147,
        5184
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 29,
      "value": "0x40"
    },
    "2554": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5147,
        5184
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2555": {
      "op": "DUP2"
    },
    "2556": {
      "op": "DUP2"
    },
    "2557": {
      "op": "MSTORE"
    },
    "2558": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5147,
        5184
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0xC089466003B94FFB5787D1D1AFFE1C743F8CA63F949D2296CFA4D7986601ADE"
    },
    "2591": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5147,
        5184
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2594": {
      "op": "ADD"
    },
    "2595": {
      "fn": "OptionConfigBinary.setReferralRewardPercentage",
      "offset": [
        5147,
        5184
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x3CD"
    },
    "2598": {
      "op": "JUMP"
    },
    "2599": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5336,
        5577
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2600": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2601": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA30"
    },
    "2604": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x740"
    },
    "2607": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2608": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2615": {
      "op": "SHL"
    },
    "2616": {
      "op": "SUB"
    },
    "2617": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "2618": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "2619": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA56"
    },
    "2622": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2623": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2625": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2626": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2632": {
      "op": "SHL"
    },
    "2633": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2634": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2635": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2637": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "2638": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x342"
    },
    "2641": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2642": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE28"
    },
    "2645": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2646": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2647": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5433,
        5438
      ],
      "op": "DUP1",
      "path": "38",
      "statement": 30
    },
    "2648": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5427,
        5429
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x32"
    },
    "2650": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5427,
        5438
      ],
      "op": "GT",
      "path": "38"
    },
    "2651": {
      "branch": 55,
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5427,
        5438
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "2652": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5427,
        5454
      ],
      "op": "DUP1",
      "path": "38"
    },
    "2653": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5427,
        5454
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "2654": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5427,
        5454
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA68"
    },
    "2657": {
      "branch": 55,
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5427,
        5454
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2658": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5427,
        5454
      ],
      "op": "POP",
      "path": "38"
    },
    "2659": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5451,
        5454
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x64"
    },
    "2661": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5442,
        5447
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2662": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5442,
        5454
      ],
      "op": "GT",
      "path": "38"
    },
    "2663": {
      "branch": 56,
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5442,
        5454
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "2664": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5427,
        5454
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2665": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5419,
        5470
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA84"
    },
    "2668": {
      "branch": 56,
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5419,
        5470
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2669": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5419,
        5470
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2671": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5419,
        5470
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2672": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2678": {
      "op": "SHL"
    },
    "2679": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5419,
        5470
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2680": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5419,
        5470
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2681": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5419,
        5470
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "2683": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5419,
        5470
      ],
      "op": "ADD",
      "path": "38"
    },
    "2684": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5419,
        5470
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x342"
    },
    "2687": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5419,
        5470
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2688": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5419,
        5470
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE03"
    },
    "2691": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "jump": "i",
      "offset": [
        5419,
        5470
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2692": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5419,
        5470
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2693": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5480,
        5508
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 31,
      "value": "0x2"
    },
    "2695": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5480,
        5516
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2696": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5480,
        5516
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2697": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5480,
        5516
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "2698": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5531,
        5570
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 32,
      "value": "0x40"
    },
    "2700": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5531,
        5570
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2701": {
      "op": "DUP2"
    },
    "2702": {
      "op": "DUP2"
    },
    "2703": {
      "op": "MSTORE"
    },
    "2704": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5531,
        5570
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x66B26A0DFAA5FC9F5C7432381208AA4BD7F13F4489299B52F09F1AF7669BB93B"
    },
    "2737": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5531,
        5570
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2740": {
      "op": "ADD"
    },
    "2741": {
      "fn": "OptionConfigBinary.setOptionCollaterizationRatio",
      "offset": [
        5531,
        5570
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x3CD"
    },
    "2744": {
      "op": "JUMP"
    },
    "2745": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2754,
        3088
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2746": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2747": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAC2"
    },
    "2750": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x740"
    },
    "2753": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2754": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2761": {
      "op": "SHL"
    },
    "2762": {
      "op": "SUB"
    },
    "2763": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "2764": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "2765": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAE8"
    },
    "2768": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2769": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2771": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2772": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2778": {
      "op": "SHL"
    },
    "2779": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2780": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2781": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2783": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "2784": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x342"
    },
    "2787": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2788": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE28"
    },
    "2791": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2792": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2793": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2890,
        2893
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 33,
      "value": "0x64"
    },
    "2795": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2882,
        2887
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2796": {
      "branch": 57,
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2882,
        2893
      ],
      "op": "LT",
      "path": "38"
    },
    "2797": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2861,
        2975
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xB59"
    },
    "2800": {
      "branch": 57,
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2861,
        2975
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2801": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2861,
        2975
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2803": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2861,
        2975
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2804": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2808": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2810": {
      "op": "SHL"
    },
    "2811": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2861,
        2975
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2812": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2861,
        2975
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2815": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2861,
        2975
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "2817": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2861,
        2975
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2818": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2861,
        2975
      ],
      "op": "ADD",
      "path": "38"
    },
    "2819": {
      "op": "MSTORE"
    },
    "2820": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2822": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2824": {
      "op": "DUP3"
    },
    "2825": {
      "op": "ADD"
    },
    "2826": {
      "op": "MSTORE"
    },
    "2827": {
      "op": "PUSH32",
      "value": "0x4F7074696F6E53697A65506572426C6F636B4C696D697450657263656E74206E"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2862": {
      "op": "DUP3"
    },
    "2863": {
      "op": "ADD"
    },
    "2864": {
      "op": "MSTORE"
    },
    "2865": {
      "op": "PUSH24",
      "value": "0x6565647320746F206265206C657373207468616E2031303"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2892": {
      "op": "SHL"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2895": {
      "op": "DUP3"
    },
    "2896": {
      "op": "ADD"
    },
    "2897": {
      "op": "MSTORE"
    },
    "2898": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2900": {
      "op": "ADD"
    },
    "2901": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2861,
        2975
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x342"
    },
    "2904": {
      "op": "JUMP"
    },
    "2905": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2861,
        2975
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2906": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2985,
        3015
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 34,
      "value": "0x9"
    },
    "2908": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2985,
        3023
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2909": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2985,
        3023
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2910": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        2985,
        3023
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "2911": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        3038,
        3081
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 35,
      "value": "0x40"
    },
    "2913": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        3038,
        3081
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2914": {
      "op": "DUP2"
    },
    "2915": {
      "op": "DUP2"
    },
    "2916": {
      "op": "MSTORE"
    },
    "2917": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        3038,
        3081
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x5CA84F51F1B091675330ABC6E5665566A97744B04121DABC6BDA4B3D3503945F"
    },
    "2950": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        3038,
        3081
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2953": {
      "op": "ADD"
    },
    "2954": {
      "fn": "OptionConfigBinary.setOptionSizePerBlockLimitPercent",
      "offset": [
        3038,
        3081
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x3CD"
    },
    "2957": {
      "op": "JUMP"
    },
    "2958": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2959": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2960": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB97"
    },
    "2963": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x740"
    },
    "2966": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2967": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2974": {
      "op": "SHL"
    },
    "2975": {
      "op": "SUB"
    },
    "2976": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "2977": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "2978": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBBD"
    },
    "2981": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2982": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2984": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2985": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2991": {
      "op": "SHL"
    },
    "2992": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2993": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2994": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2996": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "2997": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x342"
    },
    "3000": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3001": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE28"
    },
    "3004": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3005": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3012": {
      "op": "SHL"
    },
    "3013": {
      "op": "SUB"
    },
    "3014": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 36
    },
    "3015": {
      "branch": 58,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "2"
    },
    "3016": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC22"
    },
    "3019": {
      "branch": 58,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3020": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3022": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3023": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3027": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3029": {
      "op": "SHL"
    },
    "3030": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3031": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3034": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3036": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3037": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "2"
    },
    "3038": {
      "op": "MSTORE"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3041": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3043": {
      "op": "DUP3"
    },
    "3044": {
      "op": "ADD"
    },
    "3045": {
      "op": "MSTORE"
    },
    "3046": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3081": {
      "op": "DUP3"
    },
    "3082": {
      "op": "ADD"
    },
    "3083": {
      "op": "MSTORE"
    },
    "3084": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3093": {
      "op": "SHL"
    },
    "3094": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3096": {
      "op": "DUP3"
    },
    "3097": {
      "op": "ADD"
    },
    "3098": {
      "op": "MSTORE"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3101": {
      "op": "ADD"
    },
    "3102": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x342"
    },
    "3105": {
      "op": "JUMP"
    },
    "3106": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3107": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 37,
      "value": "0xC2B"
    },
    "3110": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3111": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC4"
    },
    "3114": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3115": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3116": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "2"
    },
    "3117": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3118": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3467,
        3681
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "3119": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3120": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC37"
    },
    "3123": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x740"
    },
    "3126": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3127": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3134": {
      "op": "SHL"
    },
    "3135": {
      "op": "SUB"
    },
    "3136": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "3137": {
      "branch": 59,
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "3138": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC5D"
    },
    "3141": {
      "branch": 59,
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3142": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3144": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3145": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3151": {
      "op": "SHL"
    },
    "3152": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3153": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3154": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3156": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "3157": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x342"
    },
    "3160": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3161": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE28"
    },
    "3164": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3165": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3166": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3603
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 38,
      "value": "0xB"
    },
    "3168": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "DUP1",
      "path": "38"
    },
    "3169": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "3170": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3606,
        3620
      ],
      "op": "DUP3",
      "path": "38"
    },
    "3171": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3606,
        3620
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "3172": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3603
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3177": {
      "op": "SHL"
    },
    "3178": {
      "op": "NOT"
    },
    "3179": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "AND",
      "path": "38"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3184": {
      "op": "SHL"
    },
    "3185": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3606,
        3620
      ],
      "op": "DUP4",
      "path": "38"
    },
    "3186": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x3"
    },
    "3188": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "DUP2",
      "path": "38"
    },
    "3189": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "GT",
      "path": "38"
    },
    "3190": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "3191": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xC90"
    },
    "3194": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "3195": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3202": {
      "op": "SHL"
    },
    "3203": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "3205": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "3206": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x21"
    },
    "3208": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "3210": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "3211": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x24"
    },
    "3213": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "3215": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "REVERT",
      "path": "38"
    },
    "3216": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "3217": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "MUL",
      "path": "38"
    },
    "3218": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "OR",
      "path": "38"
    },
    "3219": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "3220": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "3221": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3583,
        3620
      ],
      "op": "POP",
      "path": "38"
    },
    "3222": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3635,
        3674
      ],
      "op": "PUSH32",
      "path": "38",
      "statement": 39,
      "value": "0x75E98309D621801FC34E8CE7FA6EAA10B82599A58639171FE865E39BB4728D48"
    },
    "3255": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3659,
        3673
      ],
      "op": "DUP2",
      "path": "38"
    },
    "3256": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3635,
        3674
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "3258": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3635,
        3674
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "3259": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3635,
        3674
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x3CD"
    },
    "3262": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3635,
        3674
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "3263": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3635,
        3674
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "3264": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "offset": [
        3635,
        3674
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xDDB"
    },
    "3267": {
      "fn": "OptionConfigBinary.setTradingPermission",
      "jump": "i",
      "offset": [
        3635,
        3674
      ],
      "op": "JUMP",
      "path": "38"
    },
    "3268": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3269": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3271": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3272": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3279": {
      "op": "SHL"
    },
    "3280": {
      "op": "SUB"
    },
    "3281": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 40
    },
    "3282": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3283": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "2"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3290": {
      "op": "SHL"
    },
    "3291": {
      "op": "SUB"
    },
    "3292": {
      "op": "NOT"
    },
    "3293": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3294": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "2"
    },
    "3295": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3296": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "2"
    },
    "3297": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3298": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3299": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 41,
      "value": "0x40"
    },
    "3301": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3302": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3303": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3304": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3305": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "2"
    },
    "3306": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3307": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3308": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3309": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3342": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3343": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3344": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "2"
    },
    "3345": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "2"
    },
    "3346": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "2"
    },
    "3347": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3348": {
      "op": "JUMPDEST"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3353": {
      "op": "DUP3"
    },
    "3354": {
      "op": "DUP5"
    },
    "3355": {
      "op": "SUB"
    },
    "3356": {
      "op": "SLT"
    },
    "3357": {
      "op": "ISZERO"
    },
    "3358": {
      "op": "PUSH2",
      "value": "0xD25"
    },
    "3361": {
      "op": "JUMPI"
    },
    "3362": {
      "op": "DUP1"
    },
    "3363": {
      "op": "DUP2"
    },
    "3364": {
      "op": "REVERT"
    },
    "3365": {
      "op": "JUMPDEST"
    },
    "3366": {
      "op": "DUP2"
    },
    "3367": {
      "op": "CALLDATALOAD"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3374": {
      "op": "SHL"
    },
    "3375": {
      "op": "SUB"
    },
    "3376": {
      "op": "DUP2"
    },
    "3377": {
      "op": "AND"
    },
    "3378": {
      "op": "DUP2"
    },
    "3379": {
      "op": "EQ"
    },
    "3380": {
      "op": "PUSH2",
      "value": "0xD3B"
    },
    "3383": {
      "op": "JUMPI"
    },
    "3384": {
      "op": "DUP2"
    },
    "3385": {
      "op": "DUP3"
    },
    "3386": {
      "op": "REVERT"
    },
    "3387": {
      "op": "JUMPDEST"
    },
    "3388": {
      "op": "SWAP4"
    },
    "3389": {
      "op": "SWAP3"
    },
    "3390": {
      "op": "POP"
    },
    "3391": {
      "op": "POP"
    },
    "3392": {
      "op": "POP"
    },
    "3393": {
      "jump": "o",
      "op": "JUMP"
    },
    "3394": {
      "op": "JUMPDEST"
    },
    "3395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3397": {
      "op": "DUP1"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3400": {
      "op": "DUP1"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3403": {
      "op": "DUP1"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3406": {
      "op": "DUP8"
    },
    "3407": {
      "op": "DUP10"
    },
    "3408": {
      "op": "SUB"
    },
    "3409": {
      "op": "SLT"
    },
    "3410": {
      "op": "ISZERO"
    },
    "3411": {
      "op": "PUSH2",
      "value": "0xD5A"
    },
    "3414": {
      "op": "JUMPI"
    },
    "3415": {
      "op": "DUP2"
    },
    "3416": {
      "op": "DUP3"
    },
    "3417": {
      "op": "REVERT"
    },
    "3418": {
      "op": "JUMPDEST"
    },
    "3419": {
      "op": "DUP7"
    },
    "3420": {
      "op": "CALLDATALOAD"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3423": {
      "op": "DUP2"
    },
    "3424": {
      "op": "LT"
    },
    "3425": {
      "op": "PUSH2",
      "value": "0xD68"
    },
    "3428": {
      "op": "JUMPI"
    },
    "3429": {
      "op": "DUP3"
    },
    "3430": {
      "op": "DUP4"
    },
    "3431": {
      "op": "REVERT"
    },
    "3432": {
      "op": "JUMPDEST"
    },
    "3433": {
      "op": "SWAP9"
    },
    "3434": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3436": {
      "op": "DUP9"
    },
    "3437": {
      "op": "ADD"
    },
    "3438": {
      "op": "CALLDATALOAD"
    },
    "3439": {
      "op": "SWAP9"
    },
    "3440": {
      "op": "POP"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3443": {
      "op": "DUP9"
    },
    "3444": {
      "op": "ADD"
    },
    "3445": {
      "op": "CALLDATALOAD"
    },
    "3446": {
      "op": "SWAP8"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3449": {
      "op": "DUP2"
    },
    "3450": {
      "op": "ADD"
    },
    "3451": {
      "op": "CALLDATALOAD"
    },
    "3452": {
      "op": "SWAP8"
    },
    "3453": {
      "op": "POP"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3456": {
      "op": "DUP2"
    },
    "3457": {
      "op": "ADD"
    },
    "3458": {
      "op": "CALLDATALOAD"
    },
    "3459": {
      "op": "SWAP7"
    },
    "3460": {
      "op": "POP"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3463": {
      "op": "ADD"
    },
    "3464": {
      "op": "CALLDATALOAD"
    },
    "3465": {
      "op": "SWAP5"
    },
    "3466": {
      "op": "POP"
    },
    "3467": {
      "op": "SWAP3"
    },
    "3468": {
      "op": "POP"
    },
    "3469": {
      "op": "POP"
    },
    "3470": {
      "op": "POP"
    },
    "3471": {
      "jump": "o",
      "op": "JUMP"
    },
    "3472": {
      "op": "JUMPDEST"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3477": {
      "op": "DUP3"
    },
    "3478": {
      "op": "DUP5"
    },
    "3479": {
      "op": "SUB"
    },
    "3480": {
      "op": "SLT"
    },
    "3481": {
      "op": "ISZERO"
    },
    "3482": {
      "op": "PUSH2",
      "value": "0xDA1"
    },
    "3485": {
      "op": "JUMPI"
    },
    "3486": {
      "op": "DUP1"
    },
    "3487": {
      "op": "DUP2"
    },
    "3488": {
      "op": "REVERT"
    },
    "3489": {
      "op": "JUMPDEST"
    },
    "3490": {
      "op": "DUP2"
    },
    "3491": {
      "op": "CALLDATALOAD"
    },
    "3492": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3494": {
      "op": "DUP2"
    },
    "3495": {
      "op": "LT"
    },
    "3496": {
      "op": "PUSH2",
      "value": "0xD3B"
    },
    "3499": {
      "op": "JUMPI"
    },
    "3500": {
      "op": "DUP2"
    },
    "3501": {
      "op": "DUP3"
    },
    "3502": {
      "op": "REVERT"
    },
    "3503": {
      "op": "JUMPDEST"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3508": {
      "op": "DUP3"
    },
    "3509": {
      "op": "DUP5"
    },
    "3510": {
      "op": "SUB"
    },
    "3511": {
      "op": "SLT"
    },
    "3512": {
      "op": "ISZERO"
    },
    "3513": {
      "op": "PUSH2",
      "value": "0xDC0"
    },
    "3516": {
      "op": "JUMPI"
    },
    "3517": {
      "op": "DUP1"
    },
    "3518": {
      "op": "DUP2"
    },
    "3519": {
      "op": "REVERT"
    },
    "3520": {
      "op": "JUMPDEST"
    },
    "3521": {
      "op": "POP"
    },
    "3522": {
      "op": "CALLDATALOAD"
    },
    "3523": {
      "op": "SWAP2"
    },
    "3524": {
      "op": "SWAP1"
    },
    "3525": {
      "op": "POP"
    },
    "3526": {
      "jump": "o",
      "op": "JUMP"
    },
    "3527": {
      "op": "JUMPDEST"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3534": {
      "op": "SHL"
    },
    "3535": {
      "op": "SUB"
    },
    "3536": {
      "op": "SWAP2"
    },
    "3537": {
      "op": "SWAP1"
    },
    "3538": {
      "op": "SWAP2"
    },
    "3539": {
      "op": "AND"
    },
    "3540": {
      "op": "DUP2"
    },
    "3541": {
      "op": "MSTORE"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3544": {
      "op": "ADD"
    },
    "3545": {
      "op": "SWAP1"
    },
    "3546": {
      "jump": "o",
      "op": "JUMP"
    },
    "3547": {
      "op": "JUMPDEST"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3550": {
      "op": "DUP2"
    },
    "3551": {
      "op": "ADD"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3554": {
      "op": "DUP4"
    },
    "3555": {
      "op": "LT"
    },
    "3556": {
      "op": "PUSH2",
      "value": "0xDFD"
    },
    "3559": {
      "op": "JUMPI"
    },
    "3560": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3565": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3567": {
      "op": "SHL"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3570": {
      "op": "MSTORE"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3573": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3575": {
      "op": "MSTORE"
    },
    "3576": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3580": {
      "op": "REVERT"
    },
    "3581": {
      "op": "JUMPDEST"
    },
    "3582": {
      "op": "SWAP2"
    },
    "3583": {
      "op": "SWAP1"
    },
    "3584": {
      "op": "MSTORE"
    },
    "3585": {
      "op": "SWAP1"
    },
    "3586": {
      "jump": "o",
      "op": "JUMP"
    },
    "3587": {
      "op": "JUMPDEST"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3590": {
      "op": "DUP1"
    },
    "3591": {
      "op": "DUP3"
    },
    "3592": {
      "op": "MSTORE"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "3595": {
      "op": "SWAP1"
    },
    "3596": {
      "op": "DUP3"
    },
    "3597": {
      "op": "ADD"
    },
    "3598": {
      "op": "MSTORE"
    },
    "3599": {
      "op": "PUSH11",
      "value": "0x77726F6E672076616C7565"
    },
    "3611": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3613": {
      "op": "SHL"
    },
    "3614": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3616": {
      "op": "DUP3"
    },
    "3617": {
      "op": "ADD"
    },
    "3618": {
      "op": "MSTORE"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3621": {
      "op": "ADD"
    },
    "3622": {
      "op": "SWAP1"
    },
    "3623": {
      "jump": "o",
      "op": "JUMP"
    },
    "3624": {
      "op": "JUMPDEST"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3627": {
      "op": "DUP1"
    },
    "3628": {
      "op": "DUP3"
    },
    "3629": {
      "op": "MSTORE"
    },
    "3630": {
      "op": "DUP2"
    },
    "3631": {
      "op": "DUP2"
    },
    "3632": {
      "op": "ADD"
    },
    "3633": {
      "op": "MSTORE"
    },
    "3634": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3669": {
      "op": "DUP3"
    },
    "3670": {
      "op": "ADD"
    },
    "3671": {
      "op": "MSTORE"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3674": {
      "op": "ADD"
    },
    "3675": {
      "op": "SWAP1"
    },
    "3676": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "95442c61cc722457e2a8faf03b43fa90e4191063",
  "source": "pragma solidity ^0.8.0;\n\n// SPDX-License-Identifier: BUSL-1.1\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../Pool/BufferIBFRPoolV2.sol\";\n\n/**\n * @author Heisenberg\n * @title Buffer BNB Bidirectional (Call and Put) Options\n * @notice Buffer BNB Options Contract\n */\ncontract OptionConfigBinary is Ownable, IBufferOptions, IOptionsConfig {\n    uint256 public impliedVolRate;\n    uint256 public optionCollateralizationRatio = 100;\n    uint256 public settlementFeePercentage = 5e2;\n    uint256 public stakingFeePercentage = 50;\n    uint256 public referralRewardPercentage = 0;\n    uint256 public nftSaleRoyaltyPercentage = 5;\n    uint256 internal constant PRICE_DECIMALS = 1e8;\n    address public settlementFeeRecipient;\n    uint256 public utilizationRate = 60e8;\n    uint256 public optionSizePerBlockLimitPercent = 5;\n    uint256 public maxPeriod = 24 hours;\n    BufferIBFRPoolV2 public pool;\n    PermittedTradingType public permittedTradingType;\n\n    constructor(\n        address staking,\n        uint256 initialImpliedVolRate,\n        BufferIBFRPoolV2 _pool\n    ) {\n        settlementFeeRecipient = staking;\n        impliedVolRate = initialImpliedVolRate;\n        pool = _pool;\n    }\n\n    /**\n     * @notice Check the validity of the input params\n     * @param optionType Call or Put option type\n     * @param period Option period in seconds (1 days <= period <= 90 days)\n     * @param amount Option amount\n     * @param strikeFee strike fee for the option\n     * @param totalFee total fee for the option\n     * @param msgValue the msg.value given to the Create function\n     */\n    function checkParams(\n        IBufferOptions.OptionType optionType,\n        uint256 period,\n        uint256 amount,\n        uint256 strikeFee,\n        uint256 totalFee,\n        uint256 msgValue\n    ) external pure {\n        require(\n            optionType == IBufferOptions.OptionType.Call ||\n                optionType == IBufferOptions.OptionType.Put,\n            \"Wrong option type\"\n        );\n        require(period >= 1 days, \"Period is too short\");\n        require(period <= 90 days, \"Period is too long\");\n        require(amount > strikeFee, \"Price difference is too large\");\n        require(msgValue >= totalFee, \"Wrong value\");\n    }\n\n    /**\n     * @notice Used for adjusting the maxPeriod\n     * @param value New maxPeriod\n     */\n    function setMaxPeriod(uint256 value) external onlyOwner {\n        require(\n            value >= 5 minutes,\n            \"MaxPeriod needs to be greater than 5 minutes\"\n        );\n        maxPeriod = value;\n        emit UpdateMaxPeriod(value);\n    }\n\n    /**\n     * @notice Used for adjusting the option size per block limit percent\n     * @param value New option size per block limit percent value\n     */\n    function setOptionSizePerBlockLimitPercent(uint256 value)\n        external\n        onlyOwner\n    {\n        require(\n            value < 100,\n            \"OptionSizePerBlockLimitPercent needs to be less than 100\"\n        );\n        optionSizePerBlockLimitPercent = value;\n        emit UpdateOptionSizePerBlockLimitPercent(value);\n    }\n\n    /**\n     * @notice Used for adjusting the options prices while balancing asset's implied volatility rate\n     * @param value New IVRate value\n     */\n    function setImpliedVolRate(uint256 value) external onlyOwner {\n        require(value >= 100, \"ImpliedVolRate limit is too small\");\n        impliedVolRate = value;\n        emit UpdateImpliedVolatility(value);\n    }\n\n    function setTradingPermission(PermittedTradingType permissionType)\n        external\n        onlyOwner\n    {\n        permittedTradingType = permissionType;\n        emit UpdateTradingPermission(permissionType);\n    }\n\n    /**\n     * @notice Used for adjusting the settlement fee percentage with a factor of 100\n     * @param value New Settlement Fee Percentage\n     */\n    function setSettlementFeePercentage(uint256 value) external onlyOwner {\n        require(value < 20e2, \"SettlementFeePercentage is too high\");\n        settlementFeePercentage = value;\n        emit UpdateSettlementFeePercentage(value);\n    }\n\n    /**\n     * @notice Used for changing settlementFeeRecipient\n     * @param recipient New settlementFee recipient address\n     */\n    function setSettlementFeeRecipient(address recipient) external onlyOwner {\n        require(address(recipient) != address(0));\n        settlementFeeRecipient = recipient;\n        emit UpdateSettlementFeeRecipient(address(recipient));\n    }\n\n    /**\n     * @notice Used for adjusting the staking fee percentage\n     * @param value New Staking Fee Percentage\n     */\n    function setStakingFeePercentage(uint256 value) external onlyOwner {\n        require(value <= 100, \"StakingFeePercentage is too high\");\n        stakingFeePercentage = value;\n        emit UpdateStakingFeePercentage(value);\n    }\n\n    /**\n     * @notice Used for adjusting the referral reward percentage\n     * @param value New Referral Reward Percentage\n     */\n    function setReferralRewardPercentage(uint256 value) external onlyOwner {\n        require(value <= 100, \"ReferralRewardPercentage is too high\");\n        referralRewardPercentage = value;\n        emit UpdateReferralRewardPercentage(value);\n    }\n\n    /**\n     * @notice Used for changing option collateralization ratio\n     * @param value New optionCollateralizationRatio value\n     */\n    function setOptionCollaterizationRatio(uint256 value) external onlyOwner {\n        require(50 <= value && value <= 100, \"wrong value\");\n        optionCollateralizationRatio = value;\n        emit UpdateOptionCollaterizationRatio(value);\n    }\n\n    /**\n     * @notice Used for changing nftSaleRoyaltyPercentage\n     * @param value New nftSaleRoyaltyPercentage value\n     */\n    function setNFTSaleRoyaltyPercentage(uint256 value) external onlyOwner {\n        require(value <= 10, \"wrong value\");\n        nftSaleRoyaltyPercentage = value;\n        emit UpdateNFTSaleRoyaltyPercentage(value);\n    }\n\n    /**\n     * @notice Used for updating utilizationRate value\n     * @param value New utilizationRate value\n     **/\n    function setUtilizationRate(uint256 value) external onlyOwner {\n        utilizationRate = value;\n    }\n}\n",
  "sourceMap": "283:5874:38:-:0;;;441:3;395:49;;491:3;450:44;;538:2;500:40;;588:1;546:43;;637:1;595:43;;772:4;739:37;;830:1;782:49;;864:8;837:35;;967:233;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:2;666:10:15;867:9:2;:23::i;:::-;1091:22:38;:32;;-1:-1:-1;;;;;1091:32:38;;;-1:-1:-1;;;;;;1091:32:38;;;;;;;;1133:38;;;;1181:4;:12;;;;;;;;;;;283:5874;;2041:169:2;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;14:482:48:-;128:6;136;144;197:2;185:9;176:7;172:23;168:32;165:2;;;218:6;210;203:22;165:2;255:9;249:16;274:31;299:5;274:31;:::i;:::-;369:2;354:18;;348:25;418:2;403:18;;397:25;324:5;;-1:-1:-1;348:25:48;-1:-1:-1;431:33:48;397:25;431:33;:::i;:::-;483:7;473:17;;;155:341;;;;;:::o;501:131::-;-1:-1:-1;;;;;576:31:48;;566:42;;556:2;;622:1;619;612:12;556:2;546:86;:::o;:::-;283:5874:38;;;;;;",
  "sourcePath": "contracts/Options/OptionConfigBinary.sol",
  "type": "contract"
}