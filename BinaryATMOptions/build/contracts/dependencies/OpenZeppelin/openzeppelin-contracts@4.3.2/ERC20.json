{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "15": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
    "4": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol",
    "5": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
    "6": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/extensions/IERC20Metadata.sol"
  },
  "ast": {
    "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol",
    "exportedSymbols": {
      "Context": [
        27611
      ],
      "ERC20": [
        18824
      ],
      "IERC20": [
        27689
      ],
      "IERC20Metadata": [
        27714
      ]
    },
    "id": 18825,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 18280,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:4"
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 18281,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 18825,
        "sourceUnit": 27690,
        "src": "58:22:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "./extensions/IERC20Metadata.sol",
        "id": 18282,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 18825,
        "sourceUnit": 27715,
        "src": "81:41:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 18283,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 18825,
        "sourceUnit": 27612,
        "src": "123:33:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18285,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27611,
              "src": "1349:7:4"
            },
            "id": 18286,
            "nodeType": "InheritanceSpecifier",
            "src": "1349:7:4"
          },
          {
            "baseName": {
              "id": 18287,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27689,
              "src": "1358:6:4"
            },
            "id": 18288,
            "nodeType": "InheritanceSpecifier",
            "src": "1358:6:4"
          },
          {
            "baseName": {
              "id": 18289,
              "name": "IERC20Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27714,
              "src": "1366:14:4"
            },
            "id": 18290,
            "nodeType": "InheritanceSpecifier",
            "src": "1366:14:4"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 18284,
          "nodeType": "StructuredDocumentation",
          "src": "158:1172:4",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 18824,
        "linearizedBaseContracts": [
          18824,
          27714,
          27689,
          27611
        ],
        "name": "ERC20",
        "nameLocation": "1340:5:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 18294,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1423:9:4",
            "nodeType": "VariableDeclaration",
            "scope": 18824,
            "src": "1387:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 18293,
              "keyType": {
                "id": 18291,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1395:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1387:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 18292,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1406:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 18300,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "1495:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 18824,
            "src": "1439:67:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 18299,
              "keyType": {
                "id": 18295,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1447:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1439:47:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 18298,
                "keyType": {
                  "id": 18296,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1466:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1458:27:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 18297,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1477:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 18302,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1529:12:4",
            "nodeType": "VariableDeclaration",
            "scope": 18824,
            "src": "1513:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18301,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1513:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 18304,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1563:5:4",
            "nodeType": "VariableDeclaration",
            "scope": 18824,
            "src": "1548:20:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 18303,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1548:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 18306,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1589:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 18824,
            "src": "1574:22:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 18305,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1574:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 18322,
              "nodeType": "Block",
              "src": "1962:57:4",
              "statements": [
                {
                  "expression": {
                    "id": 18316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18314,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18304,
                      "src": "1972:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 18315,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18309,
                      "src": "1980:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1972:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 18317,
                  "nodeType": "ExpressionStatement",
                  "src": "1972:13:4"
                },
                {
                  "expression": {
                    "id": 18320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18318,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18306,
                      "src": "1995:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 18319,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18311,
                      "src": "2005:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1995:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 18321,
                  "nodeType": "ExpressionStatement",
                  "src": "1995:17:4"
                }
              ]
            },
            "documentation": {
              "id": 18307,
              "nodeType": "StructuredDocumentation",
              "src": "1603:298:4",
              "text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
            },
            "id": 18323,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18309,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1932:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18323,
                  "src": "1918:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18308,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1918:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18311,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1953:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18323,
                  "src": "1939:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18310,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1939:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1917:44:4"
            },
            "returnParameters": {
              "id": 18313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1962:0:4"
            },
            "scope": 18824,
            "src": "1906:113:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              27701
            ],
            "body": {
              "id": 18332,
              "nodeType": "Block",
              "src": "2153:29:4",
              "statements": [
                {
                  "expression": {
                    "id": 18330,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18304,
                    "src": "2170:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 18329,
                  "id": 18331,
                  "nodeType": "Return",
                  "src": "2163:12:4"
                }
              ]
            },
            "documentation": {
              "id": 18324,
              "nodeType": "StructuredDocumentation",
              "src": "2025:54:4",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 18333,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2093:4:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18326,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2120:8:4"
            },
            "parameters": {
              "id": 18325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2097:2:4"
            },
            "returnParameters": {
              "id": 18329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18328,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18333,
                  "src": "2138:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18327,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2137:15:4"
            },
            "scope": 18824,
            "src": "2084:98:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              27707
            ],
            "body": {
              "id": 18342,
              "nodeType": "Block",
              "src": "2366:31:4",
              "statements": [
                {
                  "expression": {
                    "id": 18340,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18306,
                    "src": "2383:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 18339,
                  "id": 18341,
                  "nodeType": "Return",
                  "src": "2376:14:4"
                }
              ]
            },
            "documentation": {
              "id": 18334,
              "nodeType": "StructuredDocumentation",
              "src": "2188:102:4",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 18343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2304:6:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18336,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2333:8:4"
            },
            "parameters": {
              "id": 18335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2310:2:4"
            },
            "returnParameters": {
              "id": 18339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18338,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18343,
                  "src": "2351:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18337,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2351:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2350:15:4"
            },
            "scope": 18824,
            "src": "2295:102:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              27713
            ],
            "body": {
              "id": 18352,
              "nodeType": "Block",
              "src": "3086:26:4",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 18350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3103:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 18349,
                  "id": 18351,
                  "nodeType": "Return",
                  "src": "3096:9:4"
                }
              ]
            },
            "documentation": {
              "id": 18344,
              "nodeType": "StructuredDocumentation",
              "src": "2403:613:4",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 18353,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3030:8:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18346,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3061:8:4"
            },
            "parameters": {
              "id": 18345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3038:2:4"
            },
            "returnParameters": {
              "id": 18349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18348,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18353,
                  "src": "3079:5:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 18347,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3079:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3078:7:4"
            },
            "scope": 18824,
            "src": "3021:91:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              27620
            ],
            "body": {
              "id": 18362,
              "nodeType": "Block",
              "src": "3242:36:4",
              "statements": [
                {
                  "expression": {
                    "id": 18360,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18302,
                    "src": "3259:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 18359,
                  "id": 18361,
                  "nodeType": "Return",
                  "src": "3252:19:4"
                }
              ]
            },
            "documentation": {
              "id": 18354,
              "nodeType": "StructuredDocumentation",
              "src": "3118:49:4",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 18363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3181:11:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18356,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3215:8:4"
            },
            "parameters": {
              "id": 18355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3192:2:4"
            },
            "returnParameters": {
              "id": 18359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18358,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18363,
                  "src": "3233:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3233:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3232:9:4"
            },
            "scope": 18824,
            "src": "3172:106:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              27628
            ],
            "body": {
              "id": 18376,
              "nodeType": "Block",
              "src": "3419:42:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 18372,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18294,
                      "src": "3436:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 18374,
                    "indexExpression": {
                      "id": 18373,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18366,
                      "src": "3446:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3436:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 18371,
                  "id": 18375,
                  "nodeType": "Return",
                  "src": "3429:25:4"
                }
              ]
            },
            "documentation": {
              "id": 18364,
              "nodeType": "StructuredDocumentation",
              "src": "3284:47:4",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 18377,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3345:9:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18368,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3392:8:4"
            },
            "parameters": {
              "id": 18367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18366,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3363:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18377,
                  "src": "3355:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3355:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3354:17:4"
            },
            "returnParameters": {
              "id": 18371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18370,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18377,
                  "src": "3410:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3410:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3409:9:4"
            },
            "scope": 18824,
            "src": "3336:125:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              27638
            ],
            "body": {
              "id": 18397,
              "nodeType": "Block",
              "src": "3756:80:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 18389,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27601,
                          "src": "3776:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 18390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3776:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18391,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18380,
                        "src": "3790:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18392,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18382,
                        "src": "3801:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18388,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18628,
                      "src": "3766:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 18393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3766:42:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18394,
                  "nodeType": "ExpressionStatement",
                  "src": "3766:42:4"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 18395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3825:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 18387,
                  "id": 18396,
                  "nodeType": "Return",
                  "src": "3818:11:4"
                }
              ]
            },
            "documentation": {
              "id": 18378,
              "nodeType": "StructuredDocumentation",
              "src": "3467:192:4",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 18398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "3673:8:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18384,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3732:8:4"
            },
            "parameters": {
              "id": 18383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18380,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3690:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18398,
                  "src": "3682:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3682:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18382,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3709:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18398,
                  "src": "3701:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18381,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3701:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3681:35:4"
            },
            "returnParameters": {
              "id": 18387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18386,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18398,
                  "src": "3750:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18385,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3750:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3749:6:4"
            },
            "scope": 18824,
            "src": "3664:172:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              27648
            ],
            "body": {
              "id": 18415,
              "nodeType": "Block",
              "src": "3992:51:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 18409,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18300,
                        "src": "4009:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 18411,
                      "indexExpression": {
                        "id": 18410,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18401,
                        "src": "4021:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4009:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 18413,
                    "indexExpression": {
                      "id": 18412,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18403,
                      "src": "4028:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4009:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 18408,
                  "id": 18414,
                  "nodeType": "Return",
                  "src": "4002:34:4"
                }
              ]
            },
            "documentation": {
              "id": 18399,
              "nodeType": "StructuredDocumentation",
              "src": "3842:47:4",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 18416,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "3903:9:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18405,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3965:8:4"
            },
            "parameters": {
              "id": 18404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18401,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3921:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18416,
                  "src": "3913:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3913:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18403,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "3936:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18416,
                  "src": "3928:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18402,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3928:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3912:32:4"
            },
            "returnParameters": {
              "id": 18408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18407,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18416,
                  "src": "3983:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18406,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3983:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3982:9:4"
            },
            "scope": 18824,
            "src": "3894:149:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              27658
            ],
            "body": {
              "id": 18436,
              "nodeType": "Block",
              "src": "4270:77:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 18428,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27601,
                          "src": "4289:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 18429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4289:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18430,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18419,
                        "src": "4303:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18431,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18421,
                        "src": "4312:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18427,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18801,
                      "src": "4280:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 18432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4280:39:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18433,
                  "nodeType": "ExpressionStatement",
                  "src": "4280:39:4"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 18434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4336:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 18426,
                  "id": 18435,
                  "nodeType": "Return",
                  "src": "4329:11:4"
                }
              ]
            },
            "documentation": {
              "id": 18417,
              "nodeType": "StructuredDocumentation",
              "src": "4049:127:4",
              "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 18437,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4190:7:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18423,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4246:8:4"
            },
            "parameters": {
              "id": 18422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18419,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4206:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18437,
                  "src": "4198:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4198:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18421,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4223:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18437,
                  "src": "4215:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4215:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4197:33:4"
            },
            "returnParameters": {
              "id": 18426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18425,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18437,
                  "src": "4264:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18424,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4264:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4263:6:4"
            },
            "scope": 18824,
            "src": "4181:166:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              27670
            ],
            "body": {
              "id": 18484,
              "nodeType": "Block",
              "src": "4956:336:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18451,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18440,
                        "src": "4976:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18452,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18442,
                        "src": "4984:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18453,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18444,
                        "src": "4995:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18450,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18628,
                      "src": "4966:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 18454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4966:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18455,
                  "nodeType": "ExpressionStatement",
                  "src": "4966:36:4"
                },
                {
                  "assignments": [
                    18457
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18457,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "5021:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 18484,
                      "src": "5013:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 18456,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5013:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18464,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 18458,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18300,
                        "src": "5040:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 18460,
                      "indexExpression": {
                        "id": 18459,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18440,
                        "src": "5052:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5040:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 18463,
                    "indexExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 18461,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27601,
                        "src": "5060:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 18462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5060:12:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5040:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5013:60:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 18468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18466,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18457,
                          "src": "5091:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 18467,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18444,
                          "src": "5111:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5091:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 18469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5119:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        },
                        "value": "ERC20: transfer amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        }
                      ],
                      "id": 18465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5083:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5083:79:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18471,
                  "nodeType": "ExpressionStatement",
                  "src": "5083:79:4"
                },
                {
                  "id": 18481,
                  "nodeType": "UncheckedBlock",
                  "src": "5172:92:4",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 18473,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18440,
                            "src": "5205:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 18474,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27601,
                              "src": "5213:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 18475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5213:12:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 18478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 18476,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18457,
                              "src": "5227:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 18477,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18444,
                              "src": "5246:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5227:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 18472,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18801,
                          "src": "5196:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 18479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5196:57:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 18480,
                      "nodeType": "ExpressionStatement",
                      "src": "5196:57:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 18482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5281:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 18449,
                  "id": 18483,
                  "nodeType": "Return",
                  "src": "5274:11:4"
                }
              ]
            },
            "documentation": {
              "id": 18438,
              "nodeType": "StructuredDocumentation",
              "src": "4353:456:4",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 18485,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4823:12:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18446,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4932:8:4"
            },
            "parameters": {
              "id": 18445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18440,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "4853:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18485,
                  "src": "4845:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18439,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4845:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18442,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4877:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18485,
                  "src": "4869:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4869:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18444,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4904:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18485,
                  "src": "4896:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4896:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4835:81:4"
            },
            "returnParameters": {
              "id": 18449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18448,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18485,
                  "src": "4950:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18447,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4950:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4949:6:4"
            },
            "scope": 18824,
            "src": "4814:478:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18511,
              "nodeType": "Block",
              "src": "5781:118:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 18496,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27601,
                          "src": "5800:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 18497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5800:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18498,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18488,
                        "src": "5814:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 18506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 18499,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18300,
                              "src": "5823:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 18502,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 18500,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27601,
                                "src": "5835:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 18501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5835:12:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5823:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 18504,
                          "indexExpression": {
                            "id": 18503,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18488,
                            "src": "5849:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5823:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 18505,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18490,
                          "src": "5860:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5823:47:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18495,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18801,
                      "src": "5791:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 18507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5791:80:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18508,
                  "nodeType": "ExpressionStatement",
                  "src": "5791:80:4"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 18509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5888:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 18494,
                  "id": 18510,
                  "nodeType": "Return",
                  "src": "5881:11:4"
                }
              ]
            },
            "documentation": {
              "id": 18486,
              "nodeType": "StructuredDocumentation",
              "src": "5298:384:4",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 18512,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "5696:17:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18488,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5722:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18512,
                  "src": "5714:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18487,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5714:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18490,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "5739:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18512,
                  "src": "5731:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18489,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5731:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5713:37:4"
            },
            "returnParameters": {
              "id": 18494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18493,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18512,
                  "src": "5775:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18492,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5775:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5774:6:4"
            },
            "scope": 18824,
            "src": "5687:212:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18550,
              "nodeType": "Block",
              "src": "6485:306:4",
              "statements": [
                {
                  "assignments": [
                    18523
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18523,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "6503:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 18550,
                      "src": "6495:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 18522,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6495:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18530,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 18524,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18300,
                        "src": "6522:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 18527,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 18525,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27601,
                          "src": "6534:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 18526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6534:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6522:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 18529,
                    "indexExpression": {
                      "id": 18528,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18515,
                      "src": "6548:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6522:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6495:61:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 18534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18532,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18523,
                          "src": "6574:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 18533,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18517,
                          "src": "6594:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6574:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 18535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6611:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 18531,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6566:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6566:85:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18537,
                  "nodeType": "ExpressionStatement",
                  "src": "6566:85:4"
                },
                {
                  "id": 18547,
                  "nodeType": "UncheckedBlock",
                  "src": "6661:102:4",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 18539,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27601,
                              "src": "6694:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 18540,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6694:12:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 18541,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18515,
                            "src": "6708:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 18544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 18542,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18523,
                              "src": "6717:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 18543,
                              "name": "subtractedValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18517,
                              "src": "6736:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6717:34:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 18538,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18801,
                          "src": "6685:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 18545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6685:67:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 18546,
                      "nodeType": "ExpressionStatement",
                      "src": "6685:67:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 18548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6780:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 18521,
                  "id": 18549,
                  "nodeType": "Return",
                  "src": "6773:11:4"
                }
              ]
            },
            "documentation": {
              "id": 18513,
              "nodeType": "StructuredDocumentation",
              "src": "5905:476:4",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 18551,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "6395:17:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18515,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6421:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18551,
                  "src": "6413:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6413:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18517,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "6438:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18551,
                  "src": "6430:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6430:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6412:42:4"
            },
            "returnParameters": {
              "id": 18521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18520,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18551,
                  "src": "6479:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18519,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6479:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6478:6:4"
            },
            "scope": 18824,
            "src": "6386:405:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18627,
              "nodeType": "Block",
              "src": "7382:596:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18562,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18554,
                          "src": "7400:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 18565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7418:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 18564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7410:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18563,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7410:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7410:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7400:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 18568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7422:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 18561,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7392:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7392:70:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18570,
                  "nodeType": "ExpressionStatement",
                  "src": "7392:70:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18572,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18556,
                          "src": "7480:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 18575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7501:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 18574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7493:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18573,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7493:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7493:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7480:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 18578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7505:37:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 18571,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7472:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7472:71:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18580,
                  "nodeType": "ExpressionStatement",
                  "src": "7472:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18582,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18554,
                        "src": "7575:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18583,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18556,
                        "src": "7583:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18584,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18558,
                        "src": "7594:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18581,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18812,
                      "src": "7554:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 18585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7554:47:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18586,
                  "nodeType": "ExpressionStatement",
                  "src": "7554:47:4"
                },
                {
                  "assignments": [
                    18588
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18588,
                      "mutability": "mutable",
                      "name": "senderBalance",
                      "nameLocation": "7620:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 18627,
                      "src": "7612:21:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 18587,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7612:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18592,
                  "initialValue": {
                    "baseExpression": {
                      "id": 18589,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18294,
                      "src": "7636:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 18591,
                    "indexExpression": {
                      "id": 18590,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18554,
                      "src": "7646:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7636:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7612:41:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 18596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18594,
                          "name": "senderBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18588,
                          "src": "7671:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 18595,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18558,
                          "src": "7688:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7671:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 18597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7696:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 18593,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7663:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7663:74:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18599,
                  "nodeType": "ExpressionStatement",
                  "src": "7663:74:4"
                },
                {
                  "id": 18608,
                  "nodeType": "UncheckedBlock",
                  "src": "7747:77:4",
                  "statements": [
                    {
                      "expression": {
                        "id": 18606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 18600,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18294,
                            "src": "7771:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 18602,
                          "indexExpression": {
                            "id": 18601,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18554,
                            "src": "7781:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "7771:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 18605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 18603,
                            "name": "senderBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18588,
                            "src": "7791:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 18604,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18558,
                            "src": "7807:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7791:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7771:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 18607,
                      "nodeType": "ExpressionStatement",
                      "src": "7771:42:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 18613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 18609,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18294,
                        "src": "7833:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 18611,
                      "indexExpression": {
                        "id": 18610,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18556,
                        "src": "7843:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7833:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 18612,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18558,
                      "src": "7857:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7833:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18614,
                  "nodeType": "ExpressionStatement",
                  "src": "7833:30:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 18616,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18554,
                        "src": "7888:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18617,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18556,
                        "src": "7896:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18618,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18558,
                        "src": "7907:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18615,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27679,
                      "src": "7879:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 18619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7879:35:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18620,
                  "nodeType": "EmitStatement",
                  "src": "7874:40:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18622,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18554,
                        "src": "7945:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18623,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18556,
                        "src": "7953:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18624,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18558,
                        "src": "7964:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18621,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18823,
                      "src": "7925:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 18625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7925:46:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18626,
                  "nodeType": "ExpressionStatement",
                  "src": "7925:46:4"
                }
              ]
            },
            "documentation": {
              "id": 18552,
              "nodeType": "StructuredDocumentation",
              "src": "6797:463:4",
              "text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
            },
            "id": 18628,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "7274:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18554,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7301:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18628,
                  "src": "7293:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7293:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18556,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "7325:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18628,
                  "src": "7317:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7317:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18558,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7352:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18628,
                  "src": "7344:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7344:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7283:81:4"
            },
            "returnParameters": {
              "id": 18560,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7382:0:4"
            },
            "scope": 18824,
            "src": "7265:713:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18683,
              "nodeType": "Block",
              "src": "8319:324:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18637,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18631,
                          "src": "8337:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 18640,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8356:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 18639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8348:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18638,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8348:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8348:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8337:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 18643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8360:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 18636,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8329:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8329:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18645,
                  "nodeType": "ExpressionStatement",
                  "src": "8329:65:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 18649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8434:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 18648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8426:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18647,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8426:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8426:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18651,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18631,
                        "src": "8438:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18652,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18633,
                        "src": "8447:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18646,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18812,
                      "src": "8405:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 18653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8405:49:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18654,
                  "nodeType": "ExpressionStatement",
                  "src": "8405:49:4"
                },
                {
                  "expression": {
                    "id": 18657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18655,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18302,
                      "src": "8465:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 18656,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18633,
                      "src": "8481:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8465:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18658,
                  "nodeType": "ExpressionStatement",
                  "src": "8465:22:4"
                },
                {
                  "expression": {
                    "id": 18663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 18659,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18294,
                        "src": "8497:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 18661,
                      "indexExpression": {
                        "id": 18660,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18631,
                        "src": "8507:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8497:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 18662,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18633,
                      "src": "8519:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8497:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18664,
                  "nodeType": "ExpressionStatement",
                  "src": "8497:28:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 18668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8557:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 18667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8549:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18666,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8549:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8549:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18670,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18631,
                        "src": "8561:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18671,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18633,
                        "src": "8570:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18665,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27679,
                      "src": "8540:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 18672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8540:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18673,
                  "nodeType": "EmitStatement",
                  "src": "8535:42:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 18677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8616:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 18676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8608:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18675,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8608:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8608:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18679,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18631,
                        "src": "8620:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18680,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18633,
                        "src": "8629:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18674,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18823,
                      "src": "8588:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 18681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8588:48:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18682,
                  "nodeType": "ExpressionStatement",
                  "src": "8588:48:4"
                }
              ]
            },
            "documentation": {
              "id": 18629,
              "nodeType": "StructuredDocumentation",
              "src": "7984:265:4",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
            },
            "id": 18684,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8263:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18631,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8277:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18684,
                  "src": "8269:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8269:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18633,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8294:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18684,
                  "src": "8286:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8286:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8268:33:4"
            },
            "returnParameters": {
              "id": 18635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8319:0:4"
            },
            "scope": 18824,
            "src": "8254:389:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18755,
              "nodeType": "Block",
              "src": "9028:511:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18693,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18687,
                          "src": "9046:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 18696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9065:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 18695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9057:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18694,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9057:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9057:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9046:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 18699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9069:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 18692,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9038:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9038:67:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18701,
                  "nodeType": "ExpressionStatement",
                  "src": "9038:67:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18703,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18687,
                        "src": "9137:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 18706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9154:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 18705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9146:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18704,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9146:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9146:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18708,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18689,
                        "src": "9158:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18702,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18812,
                      "src": "9116:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 18709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9116:49:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18710,
                  "nodeType": "ExpressionStatement",
                  "src": "9116:49:4"
                },
                {
                  "assignments": [
                    18712
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18712,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "9184:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 18755,
                      "src": "9176:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 18711,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9176:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18716,
                  "initialValue": {
                    "baseExpression": {
                      "id": 18713,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18294,
                      "src": "9201:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 18715,
                    "indexExpression": {
                      "id": 18714,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18687,
                      "src": "9211:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9201:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9176:43:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 18720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18718,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18712,
                          "src": "9237:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 18719,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18689,
                          "src": "9255:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9237:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 18721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9263:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 18717,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9229:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9229:71:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18723,
                  "nodeType": "ExpressionStatement",
                  "src": "9229:71:4"
                },
                {
                  "id": 18732,
                  "nodeType": "UncheckedBlock",
                  "src": "9310:79:4",
                  "statements": [
                    {
                      "expression": {
                        "id": 18730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 18724,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18294,
                            "src": "9334:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 18726,
                          "indexExpression": {
                            "id": 18725,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18687,
                            "src": "9344:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "9334:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 18729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 18727,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18712,
                            "src": "9355:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 18728,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18689,
                            "src": "9372:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9355:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9334:44:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 18731,
                      "nodeType": "ExpressionStatement",
                      "src": "9334:44:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 18735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18733,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18302,
                      "src": "9398:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 18734,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18689,
                      "src": "9414:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9398:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18736,
                  "nodeType": "ExpressionStatement",
                  "src": "9398:22:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 18738,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18687,
                        "src": "9445:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 18741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9462:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 18740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9454:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18739,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9454:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9454:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18743,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18689,
                        "src": "9466:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18737,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27679,
                      "src": "9436:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 18744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9436:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18745,
                  "nodeType": "EmitStatement",
                  "src": "9431:42:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18747,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18687,
                        "src": "9504:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 18750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9521:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 18749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9513:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18748,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9513:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9513:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18752,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18689,
                        "src": "9525:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18746,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18823,
                      "src": "9484:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 18753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9484:48:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18754,
                  "nodeType": "ExpressionStatement",
                  "src": "9484:48:4"
                }
              ]
            },
            "documentation": {
              "id": 18685,
              "nodeType": "StructuredDocumentation",
              "src": "8649:309:4",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 18756,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "8972:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18687,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8986:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18756,
                  "src": "8978:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8978:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18689,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9003:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18756,
                  "src": "8995:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18688,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8995:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8977:33:4"
            },
            "returnParameters": {
              "id": 18691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9028:0:4"
            },
            "scope": 18824,
            "src": "8963:576:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18800,
              "nodeType": "Block",
              "src": "10075:257:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18767,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18759,
                          "src": "10093:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 18770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10110:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 18769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10102:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18768,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10102:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10102:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10093:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 18773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10114:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 18766,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10085:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10085:68:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18775,
                  "nodeType": "ExpressionStatement",
                  "src": "10085:68:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18777,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18761,
                          "src": "10171:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 18780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10190:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 18779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10182:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18778,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10182:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10182:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10171:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 18783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10194:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 18776,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10163:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10163:68:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18785,
                  "nodeType": "ExpressionStatement",
                  "src": "10163:68:4"
                },
                {
                  "expression": {
                    "id": 18792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 18786,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18300,
                          "src": "10242:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 18789,
                        "indexExpression": {
                          "id": 18787,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18759,
                          "src": "10254:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10242:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 18790,
                      "indexExpression": {
                        "id": 18788,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18761,
                        "src": "10261:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10242:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 18791,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18763,
                      "src": "10272:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10242:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18793,
                  "nodeType": "ExpressionStatement",
                  "src": "10242:36:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 18795,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18759,
                        "src": "10302:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18796,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18761,
                        "src": "10309:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18797,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18763,
                        "src": "10318:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18794,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27688,
                      "src": "10293:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 18798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10293:32:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18799,
                  "nodeType": "EmitStatement",
                  "src": "10288:37:4"
                }
              ]
            },
            "documentation": {
              "id": 18757,
              "nodeType": "StructuredDocumentation",
              "src": "9545:412:4",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 18801,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "9971:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18759,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "9997:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18801,
                  "src": "9989:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18758,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9989:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18761,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "10020:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18801,
                  "src": "10012:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18760,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10012:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18763,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10045:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18801,
                  "src": "10037:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10037:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9979:78:4"
            },
            "returnParameters": {
              "id": 18765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10075:0:4"
            },
            "scope": 18824,
            "src": "9962:370:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18811,
              "nodeType": "Block",
              "src": "11035:2:4",
              "statements": []
            },
            "documentation": {
              "id": 18802,
              "nodeType": "StructuredDocumentation",
              "src": "10338:573:4",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 18812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "10925:20:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18804,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10963:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18812,
                  "src": "10955:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10955:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18806,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10985:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18812,
                  "src": "10977:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10977:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18808,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11005:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18812,
                  "src": "10997:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10997:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10945:72:4"
            },
            "returnParameters": {
              "id": 18810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11035:0:4"
            },
            "scope": 18824,
            "src": "10916:121:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18822,
              "nodeType": "Block",
              "src": "11743:2:4",
              "statements": []
            },
            "documentation": {
              "id": 18813,
              "nodeType": "StructuredDocumentation",
              "src": "11043:577:4",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 18823,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "11634:19:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18815,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11671:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18823,
                  "src": "11663:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11663:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18817,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11693:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18823,
                  "src": "11685:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11685:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18819,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11713:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 18823,
                  "src": "11705:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18818,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11705:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11653:72:4"
            },
            "returnParameters": {
              "id": 18821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11743:0:4"
            },
            "scope": 18824,
            "src": "11625:120:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 18825,
        "src": "1331:10416:4",
        "usedErrors": []
      }
    ],
    "src": "33:11715:4"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000b3738038062000b378339810160408190526200003491620001c1565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b5050506200027b565b828054620000769062000228565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c62000265565b604051601f8301601f19908116603f0116810190828211818310171562000167576200016762000265565b8160405283815260209250868385880101111562000183578485fd5b8491505b83821015620001a6578582018301518183018401529082019062000187565b83821115620001b757848385830101525b9695505050505050565b60008060408385031215620001d4578182fd5b82516001600160401b0380821115620001eb578384fd5b620001f9868387016200010e565b935060208501519150808211156200020f578283fd5b506200021e858286016200010e565b9150509250929050565b600181811c908216806200023d57607f821691505b602082108114156200025f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6108ac806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c806306fdde031461009e578063095ea7b3146100bc57806318160ddd146100df57806323b872dd146100f1578063313ce56714610104578063395093511461011357806370a082311461012657806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d575b600080fd5b6100a66101b6565b6040516100b391906107c4565b60405180910390f35b6100cf6100ca36600461079b565b610248565b60405190151581526020016100b3565b6002545b6040519081526020016100b3565b6100cf6100ff366004610760565b61025e565b604051601281526020016100b3565b6100cf61012136600461079b565b61030d565b6100e361013436600461070d565b6001600160a01b031660009081526020819052604090205490565b6100a6610349565b6100cf61016536600461079b565b610358565b6100cf61017836600461079b565b6103f1565b6100e361018b36600461072e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101c59061083b565b80601f01602080910402602001604051908101604052809291908181526020018280546101f19061083b565b801561023e5780601f106102135761010080835404028352916020019161023e565b820191906000526020600020905b81548152906001019060200180831161022157829003601f168201915b5050505050905090565b60006102553384846103fe565b50600192915050565b600061026b848484610522565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156102f55760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61030285338584036103fe565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610255918590610344908690610817565b6103fe565b6060600480546101c59061083b565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103da5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102ec565b6103e733858584036103fe565b5060019392505050565b6000610255338484610522565b6001600160a01b0383166104605760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102ec565b6001600160a01b0382166104c15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102ec565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105865760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102ec565b6001600160a01b0382166105e85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102ec565b6001600160a01b038316600090815260208190526040902054818110156106605760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102ec565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610697908490610817565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106e391815260200190565b60405180910390a350505050565b80356001600160a01b038116811461070857600080fd5b919050565b60006020828403121561071e578081fd5b610727826106f1565b9392505050565b60008060408385031215610740578081fd5b610749836106f1565b9150610757602084016106f1565b90509250929050565b600080600060608486031215610774578081fd5b61077d846106f1565b925061078b602085016106f1565b9150604084013590509250925092565b600080604083850312156107ad578182fd5b6107b6836106f1565b946020939093013593505050565b6000602080835283518082850152825b818110156107f0578581018301518582016040015282016107d4565b818111156108015783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561083657634e487b7160e01b81526011600452602481fd5b500190565b600181811c9082168061084f57607f821691505b6020821081141561087057634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220dcb2b47a81e40c33d4b2cdc8a5bb901b2fa8d116ba06c435f0d3487e1f8df92f64736f6c63430008040033",
  "bytecodeSha1": "82e10346a7c7f4bb91a67f3730a7f501725f8d7a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 1
    },
    "version": "0.8.4+commit.c7e474f2"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "15": {},
      "4": {
        "ERC20._approve": {
          "30": [
            10093,
            10112,
            true
          ],
          "31": [
            10171,
            10192,
            true
          ]
        },
        "ERC20._transfer": {
          "32": [
            7400,
            7420,
            true
          ],
          "33": [
            7480,
            7503,
            true
          ],
          "34": [
            7671,
            7694,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "29": [
            6574,
            6609,
            true
          ]
        },
        "ERC20.transferFrom": {
          "28": [
            5091,
            5117,
            true
          ]
        }
      },
      "5": {},
      "6": {}
    },
    "statements": {
      "15": {
        "Context._msgSender": {
          "6": [
            659,
            676
          ]
        }
      },
      "4": {
        "ERC20._approve": {
          "18": [
            10085,
            10153
          ],
          "19": [
            10163,
            10231
          ],
          "20": [
            10242,
            10278
          ],
          "21": [
            10288,
            10325
          ]
        },
        "ERC20._transfer": {
          "22": [
            7392,
            7462
          ],
          "23": [
            7472,
            7543
          ],
          "24": [
            7663,
            7737
          ],
          "25": [
            7771,
            7813
          ],
          "26": [
            7833,
            7863
          ],
          "27": [
            7874,
            7914
          ]
        },
        "ERC20.allowance": {
          "3": [
            4002,
            4036
          ]
        },
        "ERC20.approve": {
          "5": [
            4280,
            4319
          ],
          "7": [
            4329,
            4340
          ]
        },
        "ERC20.balanceOf": {
          "2": [
            3429,
            3454
          ]
        },
        "ERC20.decimals": {
          "1": [
            3096,
            3105
          ]
        },
        "ERC20.decreaseAllowance": {
          "14": [
            6566,
            6651
          ],
          "15": [
            6685,
            6752
          ],
          "16": [
            6773,
            6784
          ]
        },
        "ERC20.increaseAllowance": {
          "12": [
            5791,
            5871
          ]
        },
        "ERC20.name": {
          "4": [
            2163,
            2175
          ]
        },
        "ERC20.symbol": {
          "13": [
            2376,
            2390
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3252,
            3271
          ]
        },
        "ERC20.transfer": {
          "17": [
            3766,
            3808
          ]
        },
        "ERC20.transferFrom": {
          "8": [
            4966,
            5002
          ],
          "9": [
            5083,
            5162
          ],
          "10": [
            5196,
            5253
          ],
          "11": [
            5274,
            5285
          ]
        }
      },
      "5": {},
      "6": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100995760003560e01c806306fdde031461009e578063095ea7b3146100bc57806318160ddd146100df57806323b872dd146100f1578063313ce56714610104578063395093511461011357806370a082311461012657806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d575b600080fd5b6100a66101b6565b6040516100b391906107c4565b60405180910390f35b6100cf6100ca36600461079b565b610248565b60405190151581526020016100b3565b6002545b6040519081526020016100b3565b6100cf6100ff366004610760565b61025e565b604051601281526020016100b3565b6100cf61012136600461079b565b61030d565b6100e361013436600461070d565b6001600160a01b031660009081526020819052604090205490565b6100a6610349565b6100cf61016536600461079b565b610358565b6100cf61017836600461079b565b6103f1565b6100e361018b36600461072e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101c59061083b565b80601f01602080910402602001604051908101604052809291908181526020018280546101f19061083b565b801561023e5780601f106102135761010080835404028352916020019161023e565b820191906000526020600020905b81548152906001019060200180831161022157829003601f168201915b5050505050905090565b60006102553384846103fe565b50600192915050565b600061026b848484610522565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156102f55760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61030285338584036103fe565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610255918590610344908690610817565b6103fe565b6060600480546101c59061083b565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103da5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102ec565b6103e733858584036103fe565b5060019392505050565b6000610255338484610522565b6001600160a01b0383166104605760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102ec565b6001600160a01b0382166104c15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102ec565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105865760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102ec565b6001600160a01b0382166105e85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102ec565b6001600160a01b038316600090815260208190526040902054818110156106605760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102ec565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610697908490610817565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106e391815260200190565b60405180910390a350505050565b80356001600160a01b038116811461070857600080fd5b919050565b60006020828403121561071e578081fd5b610727826106f1565b9392505050565b60008060408385031215610740578081fd5b610749836106f1565b9150610757602084016106f1565b90509250929050565b600080600060608486031215610774578081fd5b61077d846106f1565b925061078b602085016106f1565b9150604084013590509250925092565b600080604083850312156107ad578182fd5b6107b6836106f1565b946020939093013593505050565b6000602080835283518082850152825b818110156107f0578581018301518582016040015282016107d4565b818111156108015783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561083657634e487b7160e01b81526011600452602481fd5b500190565b600181811c9082168061084f57607f821691505b6020821081141561087057634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220dcb2b47a81e40c33d4b2cdc8a5bb901b2fa8d116ba06c435f0d3487e1f8df92f64736f6c63430008040033",
  "deployedSourceMap": "1331:10416:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4181:166;;;;;;:::i;:::-;;:::i;:::-;;;1445:14:48;;1438:22;1420:41;;1408:2;1393:18;4181:166:4;1375:92:48;3172:106:4;3259:12;;3172:106;;;5066:25:48;;;5054:2;5039:18;3172:106:4;5021:76:48;4814:478:4;;;;;;:::i;:::-;;:::i;3021:91::-;;;3103:2;5244:36:48;;5232:2;5217:18;3021:91:4;5199:87:48;5687:212:4;;;;;;:::i;:::-;;:::i;3336:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3436:18:4;3410:7;3436:18;;;;;;;;;;;;3336:125;2295:102;;;:::i;6386:405::-;;;;;;:::i;:::-;;:::i;3664:172::-;;;;;;:::i;:::-;;:::i;3894:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4009:18:4;;;3983:7;4009:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3894:149;2084:98;2138:13;2170:5;2163:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:98;:::o;4181:166::-;4264:4;4280:39;666:10:15;4303:7:4;4312:6;4280:8;:39::i;:::-;-1:-1:-1;4336:4:4;4181:166;;;;:::o;4814:478::-;4950:4;4966:36;4976:6;4984:9;4995:6;4966:9;:36::i;:::-;-1:-1:-1;;;;;5040:19:4;;5013:24;5040:19;;;:11;:19;;;;;;;;666:10:15;5040:33:4;;;;;;;;5091:26;;;;5083:79;;;;-1:-1:-1;;;5083:79:4;;3496:2:48;5083:79:4;;;3478:21:48;3535:2;3515:18;;;3508:30;3574:34;3554:18;;;3547:62;-1:-1:-1;;;3625:18:48;;;3618:38;3673:19;;5083:79:4;;;;;;;;;5196:57;5205:6;666:10:15;5246:6:4;5227:16;:25;5196:8;:57::i;:::-;-1:-1:-1;5281:4:4;;4814:478;-1:-1:-1;;;;4814:478:4:o;5687:212::-;666:10:15;5775:4:4;5823:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5823:34:4;;;;;;;;;;5775:4;;5791:80;;5814:7;;5823:47;;5860:10;;5823:47;:::i;:::-;5791:8;:80::i;2295:102::-;2351:13;2383:7;2376:14;;;;;:::i;6386:405::-;666:10:15;6479:4:4;6522:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6522:34:4;;;;;;;;;;6574:35;;;;6566:85;;;;-1:-1:-1;;;6566:85:4;;4716:2:48;6566:85:4;;;4698:21:48;4755:2;4735:18;;;4728:30;4794:34;4774:18;;;4767:62;-1:-1:-1;;;4845:18:48;;;4838:35;4890:19;;6566:85:4;4688:227:48;6566:85:4;6685:67;666:10:15;6708:7:4;6736:15;6717:16;:34;6685:8;:67::i;:::-;-1:-1:-1;6780:4:4;;6386:405;-1:-1:-1;;;6386:405:4:o;3664:172::-;3750:4;3766:42;666:10:15;3790:9:4;3801:6;3766:9;:42::i;9962:370::-;-1:-1:-1;;;;;10093:19:4;;10085:68;;;;-1:-1:-1;;;10085:68:4;;4311:2:48;10085:68:4;;;4293:21:48;4350:2;4330:18;;;4323:30;4389:34;4369:18;;;4362:62;-1:-1:-1;;;4440:18:48;;;4433:34;4484:19;;10085:68:4;4283:226:48;10085:68:4;-1:-1:-1;;;;;10171:21:4;;10163:68;;;;-1:-1:-1;;;10163:68:4;;2686:2:48;10163:68:4;;;2668:21:48;2725:2;2705:18;;;2698:30;2764:34;2744:18;;;2737:62;-1:-1:-1;;;2815:18:48;;;2808:32;2857:19;;10163:68:4;2658:224:48;10163:68:4;-1:-1:-1;;;;;10242:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10293:32;;5066:25:48;;;10293:32:4;;5039:18:48;10293:32:4;;;;;;;9962:370;;;:::o;7265:713::-;-1:-1:-1;;;;;7400:20:4;;7392:70;;;;-1:-1:-1;;;7392:70:4;;3905:2:48;7392:70:4;;;3887:21:48;3944:2;3924:18;;;3917:30;3983:34;3963:18;;;3956:62;-1:-1:-1;;;4034:18:48;;;4027:35;4079:19;;7392:70:4;3877:227:48;7392:70:4;-1:-1:-1;;;;;7480:23:4;;7472:71;;;;-1:-1:-1;;;7472:71:4;;2282:2:48;7472:71:4;;;2264:21:48;2321:2;2301:18;;;2294:30;2360:34;2340:18;;;2333:62;-1:-1:-1;;;2411:18:48;;;2404:33;2454:19;;7472:71:4;2254:225:48;7472:71:4;-1:-1:-1;;;;;7636:17:4;;7612:21;7636:17;;;;;;;;;;;7671:23;;;;7663:74;;;;-1:-1:-1;;;7663:74:4;;3089:2:48;7663:74:4;;;3071:21:48;3128:2;3108:18;;;3101:30;3167:34;3147:18;;;3140:62;-1:-1:-1;;;3218:18:48;;;3211:36;3264:19;;7663:74:4;3061:228:48;7663:74:4;-1:-1:-1;;;;;7771:17:4;;;:9;:17;;;;;;;;;;;7791:22;;;7771:42;;7833:20;;;;;;;;:30;;7807:6;;7771:9;7833:30;;7807:6;;7833:30;:::i;:::-;;;;;;;;7896:9;-1:-1:-1;;;;;7879:35:4;7888:6;-1:-1:-1;;;;;7879:35:4;;7907:6;7879:35;;;;5066:25:48;;5054:2;5039:18;;5021:76;7879:35:4;;;;;;;;7265:713;;;;:::o;14:173:48:-;82:20;;-1:-1:-1;;;;;131:31:48;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;:::-;343:39;262:126;-1:-1:-1;;;262:126:48:o;393:270::-;461:6;469;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;745:6;753;761;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;1079:6;1087;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:48:o;1472:603::-;1584:4;1613:2;1642;1631:9;1624:21;1674:6;1668:13;1717:6;1712:2;1701:9;1697:18;1690:34;1742:4;1755:140;1769:6;1766:1;1763:13;1755:140;;;1864:14;;;1860:23;;1854:30;1830:17;;;1849:2;1826:26;1819:66;1784:10;;1755:140;;;1913:6;1910:1;1907:13;1904:2;;;1983:4;1978:2;1969:6;1958:9;1954:22;1950:31;1943:45;1904:2;-1:-1:-1;2059:2:48;2038:15;-1:-1:-1;;2034:29:48;2019:45;;;;2066:2;2015:54;;1593:482;-1:-1:-1;;;1593:482:48:o;5291:229::-;5331:3;5362:1;5358:6;5355:1;5352:13;5349:2;;;-1:-1:-1;;;5388:33:48;;5444:4;5441:1;5434:15;5474:4;5395:3;5462:17;5349:2;-1:-1:-1;5505:9:48;;5339:181::o;5525:380::-;5604:1;5600:12;;;;5647;;;5668:2;;5722:4;5714:6;5710:17;5700:27;;5668:2;5775;5767:6;5764:14;5744:18;5741:38;5738:2;;;5821:10;5816:3;5812:20;5809:1;5802:31;5856:4;5853:1;5846:15;5884:4;5881:1;5874:15;5738:2;;5580:325;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    1331,
    11747
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x99 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x17D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH2 0x1B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x7C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH2 0xCA CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH2 0xCF PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x760 JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH2 0x30D JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x70D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA6 PUSH2 0x349 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x72E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1C5 SWAP1 PUSH2 0x83B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F1 SWAP1 PUSH2 0x83B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x23E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x213 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x23E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x221 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x255 CALLER DUP5 DUP5 PUSH2 0x3FE JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B DUP5 DUP5 DUP5 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x302 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x3FE JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x255 SWAP2 DUP6 SWAP1 PUSH2 0x344 SWAP1 DUP7 SWAP1 PUSH2 0x817 JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1C5 SWAP1 PUSH2 0x83B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x3E7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x3FE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x255 CALLER DUP5 DUP5 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x460 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x586 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x660 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x697 SWAP1 DUP5 SWAP1 PUSH2 0x817 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6E3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x71E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x727 DUP3 PUSH2 0x6F1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x740 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x749 DUP4 PUSH2 0x6F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x757 PUSH1 0x20 DUP5 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x6F1 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7AD JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x7B6 DUP4 PUSH2 0x6F1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7F0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7D4 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x801 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x836 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x84F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x870 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xB2 0xB4 PUSH27 0x81E40C33D4B2CDC8A5BB901B2FA8D116BA06C435F0D3487E1F8DF9 0x2F PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x99"
    },
    "25": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6FDDE03"
    },
    "38": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9E"
    },
    "42": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95EA7B3"
    },
    "49": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBC"
    },
    "53": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x18160DDD"
    },
    "60": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDF"
    },
    "64": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "71": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF1"
    },
    "75": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x313CE567"
    },
    "82": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x104"
    },
    "86": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "4"
    },
    "88": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x39509351"
    },
    "93": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "4"
    },
    "94": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x113"
    },
    "97": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "98": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "4"
    },
    "99": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x70A08231"
    },
    "104": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "4"
    },
    "105": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x126"
    },
    "108": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "109": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "4"
    },
    "110": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95D89B41"
    },
    "115": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "4"
    },
    "116": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14F"
    },
    "119": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "120": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "4"
    },
    "121": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA457C2D7"
    },
    "126": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "4"
    },
    "127": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x157"
    },
    "130": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "131": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "4"
    },
    "132": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "137": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "4"
    },
    "138": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16A"
    },
    "141": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "142": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "4"
    },
    "143": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xDD62ED3E"
    },
    "148": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "4"
    },
    "149": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17D"
    },
    "152": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "153": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "154": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "156": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "4"
    },
    "157": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "REVERT",
      "path": "4"
    },
    "158": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "159": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA6"
    },
    "162": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B6"
    },
    "165": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2084,
        2182
      ],
      "op": "JUMP",
      "path": "4"
    },
    "166": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "167": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "169": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "170": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB3"
    },
    "173": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "174": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "175": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C4"
    },
    "178": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2084,
        2182
      ],
      "op": "JUMP",
      "path": "4"
    },
    "179": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "180": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "182": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "183": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "DUP1",
      "path": "4"
    },
    "184": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "185": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "SUB",
      "path": "4"
    },
    "186": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "187": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "RETURN",
      "path": "4"
    },
    "188": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "189": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCF"
    },
    "192": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCA"
    },
    "195": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "196": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "198": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x79B"
    },
    "201": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMP",
      "path": "4"
    },
    "202": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "203": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x248"
    },
    "206": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMP",
      "path": "4"
    },
    "207": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "208": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "210": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "211": {
      "op": "SWAP1"
    },
    "212": {
      "op": "ISZERO"
    },
    "213": {
      "op": "ISZERO"
    },
    "214": {
      "op": "DUP2"
    },
    "215": {
      "op": "MSTORE"
    },
    "216": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "218": {
      "op": "ADD"
    },
    "219": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB3"
    },
    "222": {
      "op": "JUMP"
    },
    "223": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "224": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3259,
        3271
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 0,
      "value": "0x2"
    },
    "226": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3259,
        3271
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "227": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "228": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "230": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "231": {
      "op": "SWAP1"
    },
    "232": {
      "op": "DUP2"
    },
    "233": {
      "op": "MSTORE"
    },
    "234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "236": {
      "op": "ADD"
    },
    "237": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB3"
    },
    "240": {
      "op": "JUMP"
    },
    "241": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "242": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCF"
    },
    "245": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFF"
    },
    "248": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "249": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "251": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x760"
    },
    "254": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMP",
      "path": "4"
    },
    "255": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "256": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x25E"
    },
    "259": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMP",
      "path": "4"
    },
    "260": {
      "fn": "ERC20.decimals",
      "offset": [
        3021,
        3112
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "261": {
      "fn": "ERC20.decimals",
      "offset": [
        3021,
        3112
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC20.decimals",
      "offset": [
        3021,
        3112
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "264": {
      "fn": "ERC20.decimals",
      "offset": [
        3103,
        3105
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 1,
      "value": "0x12"
    },
    "266": {
      "op": "DUP2"
    },
    "267": {
      "op": "MSTORE"
    },
    "268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "270": {
      "op": "ADD"
    },
    "271": {
      "fn": "ERC20.decimals",
      "offset": [
        3021,
        3112
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB3"
    },
    "274": {
      "op": "JUMP"
    },
    "275": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "276": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCF"
    },
    "279": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x121"
    },
    "282": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "283": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "285": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x79B"
    },
    "288": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5687,
        5899
      ],
      "op": "JUMP",
      "path": "4"
    },
    "289": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "290": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x30D"
    },
    "293": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5687,
        5899
      ],
      "op": "JUMP",
      "path": "4"
    },
    "294": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "295": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE3"
    },
    "298": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x134"
    },
    "301": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "302": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "304": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x70D"
    },
    "307": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3336,
        3461
      ],
      "op": "JUMP",
      "path": "4"
    },
    "308": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "315": {
      "op": "SHL"
    },
    "316": {
      "op": "SUB"
    },
    "317": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "AND",
      "path": "4",
      "statement": 2
    },
    "318": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3410,
        3417
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "320": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "321": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "DUP2",
      "path": "4"
    },
    "322": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "323": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "325": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "DUP2",
      "path": "4"
    },
    "326": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "327": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "328": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "330": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "331": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "332": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "333": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "334": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "JUMP",
      "path": "4"
    },
    "335": {
      "fn": "ERC20.symbol",
      "offset": [
        2295,
        2397
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "336": {
      "fn": "ERC20.symbol",
      "offset": [
        2295,
        2397
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA6"
    },
    "339": {
      "fn": "ERC20.symbol",
      "offset": [
        2295,
        2397
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x349"
    },
    "342": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2295,
        2397
      ],
      "op": "JUMP",
      "path": "4"
    },
    "343": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "344": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCF"
    },
    "347": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x165"
    },
    "350": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "351": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "353": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x79B"
    },
    "356": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMP",
      "path": "4"
    },
    "357": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "358": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x358"
    },
    "361": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMP",
      "path": "4"
    },
    "362": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "363": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCF"
    },
    "366": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x178"
    },
    "369": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "370": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "372": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x79B"
    },
    "375": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3664,
        3836
      ],
      "op": "JUMP",
      "path": "4"
    },
    "376": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "377": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3F1"
    },
    "380": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3664,
        3836
      ],
      "op": "JUMP",
      "path": "4"
    },
    "381": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "382": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE3"
    },
    "385": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18B"
    },
    "388": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "389": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "391": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x72E"
    },
    "394": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3894,
        4043
      ],
      "op": "JUMP",
      "path": "4"
    },
    "395": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "402": {
      "op": "SHL"
    },
    "403": {
      "op": "SUB"
    },
    "404": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 3
    },
    "405": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "DUP3",
      "path": "4"
    },
    "406": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "AND",
      "path": "4"
    },
    "407": {
      "fn": "ERC20.allowance",
      "offset": [
        3983,
        3990
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "409": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "410": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "DUP2",
      "path": "4"
    },
    "411": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "412": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4020
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "414": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "416": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "417": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "DUP2",
      "path": "4"
    },
    "418": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "419": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "421": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "DUP1",
      "path": "4"
    },
    "422": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "DUP4",
      "path": "4"
    },
    "423": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "424": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "425": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "426": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "427": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "AND",
      "path": "4"
    },
    "428": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "DUP3",
      "path": "4"
    },
    "429": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "430": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "431": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "432": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "433": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "434": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "435": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "436": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "437": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "JUMP",
      "path": "4"
    },
    "438": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "439": {
      "fn": "ERC20.name",
      "offset": [
        2138,
        2151
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "441": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2175
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 4,
      "value": "0x3"
    },
    "443": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "444": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "445": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C5"
    },
    "448": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "449": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x83B"
    },
    "452": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMP",
      "path": "4"
    },
    "453": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "454": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "455": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "457": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "4"
    },
    "458": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "460": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "461": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "462": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DIV",
      "path": "4"
    },
    "463": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MUL",
      "path": "4"
    },
    "464": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "466": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "4"
    },
    "467": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "469": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "470": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "471": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP2",
      "path": "4"
    },
    "472": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "4"
    },
    "473": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "475": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "476": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "477": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "478": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "479": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "480": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP2",
      "path": "4"
    },
    "481": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP2",
      "path": "4"
    },
    "482": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "485": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "4"
    },
    "486": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP3",
      "path": "4"
    },
    "487": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "488": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "489": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F1"
    },
    "492": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "493": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x83B"
    },
    "496": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMP",
      "path": "4"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "498": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "499": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "500": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x23E"
    },
    "503": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "504": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "505": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "507": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "LT",
      "path": "4"
    },
    "508": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x213"
    },
    "511": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "512": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "515": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP4",
      "path": "4"
    },
    "517": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "518": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DIV",
      "path": "4"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MUL",
      "path": "4"
    },
    "520": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP4",
      "path": "4"
    },
    "521": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "522": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "523": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "525": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "4"
    },
    "526": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x23E"
    },
    "530": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMP",
      "path": "4"
    },
    "531": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP3",
      "path": "4"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "4"
    },
    "534": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "535": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "536": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "541": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "544": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "545": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "546": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP2",
      "path": "4"
    },
    "547": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "548": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP2",
      "path": "4"
    },
    "549": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "550": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "551": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "553": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "4"
    },
    "554": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "555": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "4"
    },
    "558": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP4",
      "path": "4"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "GT",
      "path": "4"
    },
    "561": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x221"
    },
    "564": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "565": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP3",
      "path": "4"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SUB",
      "path": "4"
    },
    "568": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "570": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "AND",
      "path": "4"
    },
    "571": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP3",
      "path": "4"
    },
    "572": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "4"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "575": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "POP",
      "path": "4"
    },
    "576": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "POP",
      "path": "4"
    },
    "577": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "POP",
      "path": "4"
    },
    "578": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "POP",
      "path": "4"
    },
    "579": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "POP",
      "path": "4"
    },
    "580": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "581": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "POP",
      "path": "4"
    },
    "582": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "583": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2084,
        2182
      ],
      "op": "JUMP",
      "path": "4"
    },
    "584": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "585": {
      "fn": "ERC20.approve",
      "offset": [
        4264,
        4268
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "587": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4319
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 5,
      "value": "0x255"
    },
    "590": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15",
      "statement": 6
    },
    "591": {
      "fn": "ERC20.approve",
      "offset": [
        4303,
        4310
      ],
      "op": "DUP5",
      "path": "4"
    },
    "592": {
      "fn": "ERC20.approve",
      "offset": [
        4312,
        4318
      ],
      "op": "DUP5",
      "path": "4"
    },
    "593": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4288
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3FE"
    },
    "596": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4280,
        4319
      ],
      "op": "JUMP",
      "path": "4"
    },
    "597": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4319
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "598": {
      "op": "POP"
    },
    "599": {
      "fn": "ERC20.approve",
      "offset": [
        4336,
        4340
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 7,
      "value": "0x1"
    },
    "601": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "602": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "603": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "POP",
      "path": "4"
    },
    "604": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "POP",
      "path": "4"
    },
    "605": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMP",
      "path": "4"
    },
    "606": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "607": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4950,
        4954
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "609": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4966,
        5002
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 8,
      "value": "0x26B"
    },
    "612": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4976,
        4982
      ],
      "op": "DUP5",
      "path": "4"
    },
    "613": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4984,
        4993
      ],
      "op": "DUP5",
      "path": "4"
    },
    "614": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4995,
        5001
      ],
      "op": "DUP5",
      "path": "4"
    },
    "615": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4966,
        4975
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x522"
    },
    "618": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4966,
        5002
      ],
      "op": "JUMP",
      "path": "4"
    },
    "619": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4966,
        5002
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "624": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "626": {
      "op": "SHL"
    },
    "627": {
      "op": "SUB"
    },
    "628": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "DUP5",
      "path": "4"
    },
    "629": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "AND",
      "path": "4"
    },
    "630": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5013,
        5037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "632": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "633": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "DUP2",
      "path": "4"
    },
    "634": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "635": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5051
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "637": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "639": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "640": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "DUP2",
      "path": "4"
    },
    "641": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "642": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "644": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "DUP1",
      "path": "4"
    },
    "645": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "DUP4",
      "path": "4"
    },
    "646": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "647": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "648": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "DUP5",
      "path": "4"
    },
    "649": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "650": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "651": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "652": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "653": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "654": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "655": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "656": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5091,
        5117
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 9
    },
    "657": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5091,
        5117
      ],
      "op": "DUP2",
      "path": "4"
    },
    "658": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5091,
        5117
      ],
      "op": "LT",
      "path": "4"
    },
    "659": {
      "branch": 28,
      "fn": "ERC20.transferFrom",
      "offset": [
        5091,
        5117
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "660": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2F5"
    },
    "663": {
      "branch": 28,
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "664": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "666": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "667": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "671": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "673": {
      "op": "SHL"
    },
    "674": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "DUP2",
      "path": "4"
    },
    "675": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "678": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "680": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "DUP3",
      "path": "4"
    },
    "681": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "ADD",
      "path": "4"
    },
    "682": {
      "op": "MSTORE"
    },
    "683": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "685": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "687": {
      "op": "DUP3"
    },
    "688": {
      "op": "ADD"
    },
    "689": {
      "op": "MSTORE"
    },
    "690": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "725": {
      "op": "DUP3"
    },
    "726": {
      "op": "ADD"
    },
    "727": {
      "op": "MSTORE"
    },
    "728": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "737": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "739": {
      "op": "SHL"
    },
    "740": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "742": {
      "op": "DUP3"
    },
    "743": {
      "op": "ADD"
    },
    "744": {
      "op": "MSTORE"
    },
    "745": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "747": {
      "op": "ADD"
    },
    "748": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "749": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "751": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "752": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "DUP1",
      "path": "4"
    },
    "753": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "754": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "SUB",
      "path": "4"
    },
    "755": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "756": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "757": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "758": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5196,
        5253
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 10,
      "value": "0x302"
    },
    "761": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5205,
        5211
      ],
      "op": "DUP6",
      "path": "4"
    },
    "762": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "763": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5246,
        5252
      ],
      "op": "DUP6",
      "path": "4"
    },
    "764": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5227,
        5243
      ],
      "op": "DUP5",
      "path": "4"
    },
    "765": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5227,
        5252
      ],
      "op": "SUB",
      "path": "4"
    },
    "766": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5196,
        5204
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3FE"
    },
    "769": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5196,
        5253
      ],
      "op": "JUMP",
      "path": "4"
    },
    "770": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5196,
        5253
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "771": {
      "op": "POP"
    },
    "772": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5281,
        5285
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 11,
      "value": "0x1"
    },
    "774": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5281,
        5285
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "775": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "776": {
      "op": "POP"
    },
    "777": {
      "op": "POP"
    },
    "778": {
      "op": "POP"
    },
    "779": {
      "op": "POP"
    },
    "780": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMP",
      "path": "4"
    },
    "781": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "782": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "783": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5775,
        5779
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "785": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 12
    },
    "786": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "DUP2",
      "path": "4"
    },
    "787": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "788": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5834
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "790": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "792": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "793": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "DUP2",
      "path": "4"
    },
    "794": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "795": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "797": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "DUP1",
      "path": "4"
    },
    "798": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "DUP4",
      "path": "4"
    },
    "799": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "806": {
      "op": "SHL"
    },
    "807": {
      "op": "SUB"
    },
    "808": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "DUP8",
      "path": "4"
    },
    "809": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "AND",
      "path": "4"
    },
    "810": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "DUP5",
      "path": "4"
    },
    "811": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "812": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "813": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "814": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "815": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "DUP2",
      "path": "4"
    },
    "816": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "817": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "818": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5775,
        5779
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "819": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5775,
        5779
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "820": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5791,
        5871
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x255"
    },
    "823": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5791,
        5871
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "824": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5814,
        5821
      ],
      "op": "DUP6",
      "path": "4"
    },
    "825": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5814,
        5821
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "826": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5870
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x344"
    },
    "829": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5870
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "830": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5860,
        5870
      ],
      "op": "DUP7",
      "path": "4"
    },
    "831": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5860,
        5870
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "832": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5870
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x817"
    },
    "835": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5823,
        5870
      ],
      "op": "JUMP",
      "path": "4"
    },
    "836": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5870
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "837": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5791,
        5799
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3FE"
    },
    "840": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5791,
        5871
      ],
      "op": "JUMP",
      "path": "4"
    },
    "841": {
      "fn": "ERC20.symbol",
      "offset": [
        2295,
        2397
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "842": {
      "fn": "ERC20.symbol",
      "offset": [
        2351,
        2364
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "844": {
      "fn": "ERC20.symbol",
      "offset": [
        2383,
        2390
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 13,
      "value": "0x4"
    },
    "846": {
      "fn": "ERC20.symbol",
      "offset": [
        2376,
        2390
      ],
      "op": "DUP1",
      "path": "4"
    },
    "847": {
      "fn": "ERC20.symbol",
      "offset": [
        2376,
        2390
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "848": {
      "fn": "ERC20.symbol",
      "offset": [
        2376,
        2390
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C5"
    },
    "851": {
      "fn": "ERC20.symbol",
      "offset": [
        2376,
        2390
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "852": {
      "fn": "ERC20.symbol",
      "offset": [
        2376,
        2390
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x83B"
    },
    "855": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2376,
        2390
      ],
      "op": "JUMP",
      "path": "4"
    },
    "856": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "857": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "858": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6479,
        6483
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "860": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "861": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "DUP2",
      "path": "4"
    },
    "862": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "863": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6533
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "865": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "867": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "868": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "DUP2",
      "path": "4"
    },
    "869": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "870": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "872": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "DUP1",
      "path": "4"
    },
    "873": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "DUP4",
      "path": "4"
    },
    "874": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "881": {
      "op": "SHL"
    },
    "882": {
      "op": "SUB"
    },
    "883": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "DUP7",
      "path": "4"
    },
    "884": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "AND",
      "path": "4"
    },
    "885": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "DUP5",
      "path": "4"
    },
    "886": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "887": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "888": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "889": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "890": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "DUP2",
      "path": "4"
    },
    "891": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "892": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "893": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6574,
        6609
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 14
    },
    "894": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6574,
        6609
      ],
      "op": "DUP2",
      "path": "4"
    },
    "895": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6574,
        6609
      ],
      "op": "LT",
      "path": "4"
    },
    "896": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6574,
        6609
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "897": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3DA"
    },
    "900": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "901": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "903": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "904": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "908": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "910": {
      "op": "SHL"
    },
    "911": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "DUP2",
      "path": "4"
    },
    "912": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "913": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "915": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "917": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "DUP3",
      "path": "4"
    },
    "918": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "ADD",
      "path": "4"
    },
    "919": {
      "op": "MSTORE"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "924": {
      "op": "DUP3"
    },
    "925": {
      "op": "ADD"
    },
    "926": {
      "op": "MSTORE"
    },
    "927": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "960": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "962": {
      "op": "DUP3"
    },
    "963": {
      "op": "ADD"
    },
    "964": {
      "op": "MSTORE"
    },
    "965": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "971": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "973": {
      "op": "SHL"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "976": {
      "op": "DUP3"
    },
    "977": {
      "op": "ADD"
    },
    "978": {
      "op": "MSTORE"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "981": {
      "op": "ADD"
    },
    "982": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2EC"
    },
    "985": {
      "op": "JUMP"
    },
    "986": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "987": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6752
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 15,
      "value": "0x3E7"
    },
    "990": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "991": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6708,
        6715
      ],
      "op": "DUP6",
      "path": "4"
    },
    "992": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6736,
        6751
      ],
      "op": "DUP6",
      "path": "4"
    },
    "993": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6717,
        6733
      ],
      "op": "DUP5",
      "path": "4"
    },
    "994": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6717,
        6751
      ],
      "op": "SUB",
      "path": "4"
    },
    "995": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6693
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3FE"
    },
    "998": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6685,
        6752
      ],
      "op": "JUMP",
      "path": "4"
    },
    "999": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6752
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1000": {
      "op": "POP"
    },
    "1001": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6780,
        6784
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 16,
      "value": "0x1"
    },
    "1003": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6780,
        6784
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1004": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1005": {
      "op": "POP"
    },
    "1006": {
      "op": "POP"
    },
    "1007": {
      "op": "POP"
    },
    "1008": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1009": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1010": {
      "fn": "ERC20.transfer",
      "offset": [
        3750,
        3754
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1012": {
      "fn": "ERC20.transfer",
      "offset": [
        3766,
        3808
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 17,
      "value": "0x255"
    },
    "1015": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1016": {
      "fn": "ERC20.transfer",
      "offset": [
        3790,
        3799
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1017": {
      "fn": "ERC20.transfer",
      "offset": [
        3801,
        3807
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1018": {
      "fn": "ERC20.transfer",
      "offset": [
        3766,
        3775
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x522"
    },
    "1021": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3766,
        3808
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1022": {
      "fn": "ERC20._approve",
      "offset": [
        9962,
        10332
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1029": {
      "op": "SHL"
    },
    "1030": {
      "op": "SUB"
    },
    "1031": {
      "fn": "ERC20._approve",
      "offset": [
        10093,
        10112
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 18
    },
    "1032": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        10093,
        10112
      ],
      "op": "AND",
      "path": "4"
    },
    "1033": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x460"
    },
    "1036": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1037": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1039": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1040": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1046": {
      "op": "SHL"
    },
    "1047": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1048": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1051": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1053": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1054": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "ADD",
      "path": "4"
    },
    "1055": {
      "op": "MSTORE"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1058": {
      "op": "DUP1"
    },
    "1059": {
      "op": "DUP3"
    },
    "1060": {
      "op": "ADD"
    },
    "1061": {
      "op": "MSTORE"
    },
    "1062": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1097": {
      "op": "DUP3"
    },
    "1098": {
      "op": "ADD"
    },
    "1099": {
      "op": "MSTORE"
    },
    "1100": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1107": {
      "op": "SHL"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1110": {
      "op": "DUP3"
    },
    "1111": {
      "op": "ADD"
    },
    "1112": {
      "op": "MSTORE"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1115": {
      "op": "ADD"
    },
    "1116": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2EC"
    },
    "1119": {
      "op": "JUMP"
    },
    "1120": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1127": {
      "op": "SHL"
    },
    "1128": {
      "op": "SUB"
    },
    "1129": {
      "fn": "ERC20._approve",
      "offset": [
        10171,
        10192
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 19
    },
    "1130": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        10171,
        10192
      ],
      "op": "AND",
      "path": "4"
    },
    "1131": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4C1"
    },
    "1134": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1135": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1137": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1138": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1144": {
      "op": "SHL"
    },
    "1145": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1146": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1149": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1151": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1152": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "ADD",
      "path": "4"
    },
    "1153": {
      "op": "MSTORE"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1158": {
      "op": "DUP3"
    },
    "1159": {
      "op": "ADD"
    },
    "1160": {
      "op": "MSTORE"
    },
    "1161": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1196": {
      "op": "DUP3"
    },
    "1197": {
      "op": "ADD"
    },
    "1198": {
      "op": "MSTORE"
    },
    "1199": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1204": {
      "op": "SHL"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1207": {
      "op": "DUP3"
    },
    "1208": {
      "op": "ADD"
    },
    "1209": {
      "op": "MSTORE"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1212": {
      "op": "ADD"
    },
    "1213": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2EC"
    },
    "1216": {
      "op": "JUMP"
    },
    "1217": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1224": {
      "op": "SHL"
    },
    "1225": {
      "op": "SUB"
    },
    "1226": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 20
    },
    "1227": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1228": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "AND",
      "path": "4"
    },
    "1229": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1231": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1232": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1233": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1234": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10253
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1236": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1238": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1239": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1240": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1241": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1243": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1244": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1245": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1246": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1247": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1248": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "AND",
      "path": "4"
    },
    "1249": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1250": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1251": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1252": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1253": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1254": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1255": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1256": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1257": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1258": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1259": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10278
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1260": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10278
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1261": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10278
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1262": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 21
    },
    "1263": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1264": {
      "op": "DUP5"
    },
    "1265": {
      "op": "DUP2"
    },
    "1266": {
      "op": "MSTORE"
    },
    "1267": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1300": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1301": {
      "op": "ADD"
    },
    "1302": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1304": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1305": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1306": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1307": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "SUB",
      "path": "4"
    },
    "1308": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1309": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "LOG3",
      "path": "4"
    },
    "1310": {
      "fn": "ERC20._approve",
      "offset": [
        9962,
        10332
      ],
      "op": "POP",
      "path": "4"
    },
    "1311": {
      "fn": "ERC20._approve",
      "offset": [
        9962,
        10332
      ],
      "op": "POP",
      "path": "4"
    },
    "1312": {
      "fn": "ERC20._approve",
      "offset": [
        9962,
        10332
      ],
      "op": "POP",
      "path": "4"
    },
    "1313": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9962,
        10332
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1314": {
      "fn": "ERC20._transfer",
      "offset": [
        7265,
        7978
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1321": {
      "op": "SHL"
    },
    "1322": {
      "op": "SUB"
    },
    "1323": {
      "fn": "ERC20._transfer",
      "offset": [
        7400,
        7420
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 22
    },
    "1324": {
      "branch": 32,
      "fn": "ERC20._transfer",
      "offset": [
        7400,
        7420
      ],
      "op": "AND",
      "path": "4"
    },
    "1325": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x586"
    },
    "1328": {
      "branch": 32,
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1329": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1331": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1332": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1338": {
      "op": "SHL"
    },
    "1339": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1340": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1343": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1345": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1346": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "ADD",
      "path": "4"
    },
    "1347": {
      "op": "MSTORE"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1352": {
      "op": "DUP3"
    },
    "1353": {
      "op": "ADD"
    },
    "1354": {
      "op": "MSTORE"
    },
    "1355": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1390": {
      "op": "DUP3"
    },
    "1391": {
      "op": "ADD"
    },
    "1392": {
      "op": "MSTORE"
    },
    "1393": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1401": {
      "op": "SHL"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1404": {
      "op": "DUP3"
    },
    "1405": {
      "op": "ADD"
    },
    "1406": {
      "op": "MSTORE"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1409": {
      "op": "ADD"
    },
    "1410": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2EC"
    },
    "1413": {
      "op": "JUMP"
    },
    "1414": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1421": {
      "op": "SHL"
    },
    "1422": {
      "op": "SUB"
    },
    "1423": {
      "fn": "ERC20._transfer",
      "offset": [
        7480,
        7503
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 23
    },
    "1424": {
      "branch": 33,
      "fn": "ERC20._transfer",
      "offset": [
        7480,
        7503
      ],
      "op": "AND",
      "path": "4"
    },
    "1425": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5E8"
    },
    "1428": {
      "branch": 33,
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1429": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1431": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1432": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1438": {
      "op": "SHL"
    },
    "1439": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1440": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1443": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1445": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1446": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "ADD",
      "path": "4"
    },
    "1447": {
      "op": "MSTORE"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1452": {
      "op": "DUP3"
    },
    "1453": {
      "op": "ADD"
    },
    "1454": {
      "op": "MSTORE"
    },
    "1455": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1490": {
      "op": "DUP3"
    },
    "1491": {
      "op": "ADD"
    },
    "1492": {
      "op": "MSTORE"
    },
    "1493": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1499": {
      "op": "SHL"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1502": {
      "op": "DUP3"
    },
    "1503": {
      "op": "ADD"
    },
    "1504": {
      "op": "MSTORE"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1507": {
      "op": "ADD"
    },
    "1508": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2EC"
    },
    "1511": {
      "op": "JUMP"
    },
    "1512": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1519": {
      "op": "SHL"
    },
    "1520": {
      "op": "SUB"
    },
    "1521": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1522": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "AND",
      "path": "4"
    },
    "1523": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7633
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1525": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1526": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1527": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1528": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1530": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1531": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1532": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1533": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1535": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1536": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1537": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1538": {
      "fn": "ERC20._transfer",
      "offset": [
        7671,
        7694
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 24
    },
    "1539": {
      "fn": "ERC20._transfer",
      "offset": [
        7671,
        7694
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1540": {
      "fn": "ERC20._transfer",
      "offset": [
        7671,
        7694
      ],
      "op": "LT",
      "path": "4"
    },
    "1541": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7671,
        7694
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1542": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x660"
    },
    "1545": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1546": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1548": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1549": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1555": {
      "op": "SHL"
    },
    "1556": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1557": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1560": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1562": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1563": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "ADD",
      "path": "4"
    },
    "1564": {
      "op": "MSTORE"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1569": {
      "op": "DUP3"
    },
    "1570": {
      "op": "ADD"
    },
    "1571": {
      "op": "MSTORE"
    },
    "1572": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1607": {
      "op": "DUP3"
    },
    "1608": {
      "op": "ADD"
    },
    "1609": {
      "op": "MSTORE"
    },
    "1610": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1619": {
      "op": "SHL"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1622": {
      "op": "DUP3"
    },
    "1623": {
      "op": "ADD"
    },
    "1624": {
      "op": "MSTORE"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1627": {
      "op": "ADD"
    },
    "1628": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2EC"
    },
    "1631": {
      "op": "JUMP"
    },
    "1632": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1639": {
      "op": "SHL"
    },
    "1640": {
      "op": "SUB"
    },
    "1641": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 25
    },
    "1642": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1643": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "AND",
      "path": "4"
    },
    "1644": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7780
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1646": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1647": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1648": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1649": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1651": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1652": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1653": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1654": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1656": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1657": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1658": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1659": {
      "fn": "ERC20._transfer",
      "offset": [
        7791,
        7813
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1660": {
      "fn": "ERC20._transfer",
      "offset": [
        7791,
        7813
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1661": {
      "fn": "ERC20._transfer",
      "offset": [
        7791,
        7813
      ],
      "op": "SUB",
      "path": "4"
    },
    "1662": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7813
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1663": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7813
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1664": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 26
    },
    "1665": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1666": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "AND",
      "path": "4"
    },
    "1667": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1668": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1669": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1670": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1671": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1672": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1673": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1674": {
      "fn": "ERC20._transfer",
      "offset": [
        7807,
        7813
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1675": {
      "fn": "ERC20._transfer",
      "offset": [
        7807,
        7813
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1676": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7780
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1677": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x697"
    },
    "1680": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1681": {
      "fn": "ERC20._transfer",
      "offset": [
        7807,
        7813
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1682": {
      "fn": "ERC20._transfer",
      "offset": [
        7807,
        7813
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1683": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x817"
    },
    "1686": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7833,
        7863
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1687": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1688": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1689": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "POP",
      "path": "4"
    },
    "1690": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "POP",
      "path": "4"
    },
    "1691": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1692": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1693": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1694": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "POP",
      "path": "4"
    },
    "1695": {
      "fn": "ERC20._transfer",
      "offset": [
        7896,
        7905
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 27
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1702": {
      "op": "SHL"
    },
    "1703": {
      "op": "SUB"
    },
    "1704": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "AND",
      "path": "4"
    },
    "1705": {
      "fn": "ERC20._transfer",
      "offset": [
        7888,
        7894
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1712": {
      "op": "SHL"
    },
    "1713": {
      "op": "SUB"
    },
    "1714": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "AND",
      "path": "4"
    },
    "1715": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1748": {
      "fn": "ERC20._transfer",
      "offset": [
        7907,
        7913
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1749": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1751": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1752": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E3"
    },
    "1755": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1756": {
      "op": "DUP2"
    },
    "1757": {
      "op": "MSTORE"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1760": {
      "op": "ADD"
    },
    "1761": {
      "op": "SWAP1"
    },
    "1762": {
      "op": "JUMP"
    },
    "1763": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1764": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1766": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1767": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1768": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1769": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "SUB",
      "path": "4"
    },
    "1770": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1771": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "LOG3",
      "path": "4"
    },
    "1772": {
      "fn": "ERC20._transfer",
      "offset": [
        7265,
        7978
      ],
      "op": "POP",
      "path": "4"
    },
    "1773": {
      "fn": "ERC20._transfer",
      "offset": [
        7265,
        7978
      ],
      "op": "POP",
      "path": "4"
    },
    "1774": {
      "fn": "ERC20._transfer",
      "offset": [
        7265,
        7978
      ],
      "op": "POP",
      "path": "4"
    },
    "1775": {
      "fn": "ERC20._transfer",
      "offset": [
        7265,
        7978
      ],
      "op": "POP",
      "path": "4"
    },
    "1776": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7265,
        7978
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1777": {
      "op": "JUMPDEST"
    },
    "1778": {
      "op": "DUP1"
    },
    "1779": {
      "op": "CALLDATALOAD"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1786": {
      "op": "SHL"
    },
    "1787": {
      "op": "SUB"
    },
    "1788": {
      "op": "DUP2"
    },
    "1789": {
      "op": "AND"
    },
    "1790": {
      "op": "DUP2"
    },
    "1791": {
      "op": "EQ"
    },
    "1792": {
      "op": "PUSH2",
      "value": "0x708"
    },
    "1795": {
      "op": "JUMPI"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1798": {
      "op": "DUP1"
    },
    "1799": {
      "op": "REVERT"
    },
    "1800": {
      "op": "JUMPDEST"
    },
    "1801": {
      "op": "SWAP2"
    },
    "1802": {
      "op": "SWAP1"
    },
    "1803": {
      "op": "POP"
    },
    "1804": {
      "jump": "o",
      "op": "JUMP"
    },
    "1805": {
      "op": "JUMPDEST"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1810": {
      "op": "DUP3"
    },
    "1811": {
      "op": "DUP5"
    },
    "1812": {
      "op": "SUB"
    },
    "1813": {
      "op": "SLT"
    },
    "1814": {
      "op": "ISZERO"
    },
    "1815": {
      "op": "PUSH2",
      "value": "0x71E"
    },
    "1818": {
      "op": "JUMPI"
    },
    "1819": {
      "op": "DUP1"
    },
    "1820": {
      "op": "DUP2"
    },
    "1821": {
      "op": "REVERT"
    },
    "1822": {
      "op": "JUMPDEST"
    },
    "1823": {
      "op": "PUSH2",
      "value": "0x727"
    },
    "1826": {
      "op": "DUP3"
    },
    "1827": {
      "op": "PUSH2",
      "value": "0x6F1"
    },
    "1830": {
      "jump": "i",
      "op": "JUMP"
    },
    "1831": {
      "op": "JUMPDEST"
    },
    "1832": {
      "op": "SWAP4"
    },
    "1833": {
      "op": "SWAP3"
    },
    "1834": {
      "op": "POP"
    },
    "1835": {
      "op": "POP"
    },
    "1836": {
      "op": "POP"
    },
    "1837": {
      "jump": "o",
      "op": "JUMP"
    },
    "1838": {
      "op": "JUMPDEST"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1841": {
      "op": "DUP1"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1844": {
      "op": "DUP4"
    },
    "1845": {
      "op": "DUP6"
    },
    "1846": {
      "op": "SUB"
    },
    "1847": {
      "op": "SLT"
    },
    "1848": {
      "op": "ISZERO"
    },
    "1849": {
      "op": "PUSH2",
      "value": "0x740"
    },
    "1852": {
      "op": "JUMPI"
    },
    "1853": {
      "op": "DUP1"
    },
    "1854": {
      "op": "DUP2"
    },
    "1855": {
      "op": "REVERT"
    },
    "1856": {
      "op": "JUMPDEST"
    },
    "1857": {
      "op": "PUSH2",
      "value": "0x749"
    },
    "1860": {
      "op": "DUP4"
    },
    "1861": {
      "op": "PUSH2",
      "value": "0x6F1"
    },
    "1864": {
      "jump": "i",
      "op": "JUMP"
    },
    "1865": {
      "op": "JUMPDEST"
    },
    "1866": {
      "op": "SWAP2"
    },
    "1867": {
      "op": "POP"
    },
    "1868": {
      "op": "PUSH2",
      "value": "0x757"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1873": {
      "op": "DUP5"
    },
    "1874": {
      "op": "ADD"
    },
    "1875": {
      "op": "PUSH2",
      "value": "0x6F1"
    },
    "1878": {
      "jump": "i",
      "op": "JUMP"
    },
    "1879": {
      "op": "JUMPDEST"
    },
    "1880": {
      "op": "SWAP1"
    },
    "1881": {
      "op": "POP"
    },
    "1882": {
      "op": "SWAP3"
    },
    "1883": {
      "op": "POP"
    },
    "1884": {
      "op": "SWAP3"
    },
    "1885": {
      "op": "SWAP1"
    },
    "1886": {
      "op": "POP"
    },
    "1887": {
      "jump": "o",
      "op": "JUMP"
    },
    "1888": {
      "op": "JUMPDEST"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1891": {
      "op": "DUP1"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1896": {
      "op": "DUP5"
    },
    "1897": {
      "op": "DUP7"
    },
    "1898": {
      "op": "SUB"
    },
    "1899": {
      "op": "SLT"
    },
    "1900": {
      "op": "ISZERO"
    },
    "1901": {
      "op": "PUSH2",
      "value": "0x774"
    },
    "1904": {
      "op": "JUMPI"
    },
    "1905": {
      "op": "DUP1"
    },
    "1906": {
      "op": "DUP2"
    },
    "1907": {
      "op": "REVERT"
    },
    "1908": {
      "op": "JUMPDEST"
    },
    "1909": {
      "op": "PUSH2",
      "value": "0x77D"
    },
    "1912": {
      "op": "DUP5"
    },
    "1913": {
      "op": "PUSH2",
      "value": "0x6F1"
    },
    "1916": {
      "jump": "i",
      "op": "JUMP"
    },
    "1917": {
      "op": "JUMPDEST"
    },
    "1918": {
      "op": "SWAP3"
    },
    "1919": {
      "op": "POP"
    },
    "1920": {
      "op": "PUSH2",
      "value": "0x78B"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1925": {
      "op": "DUP6"
    },
    "1926": {
      "op": "ADD"
    },
    "1927": {
      "op": "PUSH2",
      "value": "0x6F1"
    },
    "1930": {
      "jump": "i",
      "op": "JUMP"
    },
    "1931": {
      "op": "JUMPDEST"
    },
    "1932": {
      "op": "SWAP2"
    },
    "1933": {
      "op": "POP"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1936": {
      "op": "DUP5"
    },
    "1937": {
      "op": "ADD"
    },
    "1938": {
      "op": "CALLDATALOAD"
    },
    "1939": {
      "op": "SWAP1"
    },
    "1940": {
      "op": "POP"
    },
    "1941": {
      "op": "SWAP3"
    },
    "1942": {
      "op": "POP"
    },
    "1943": {
      "op": "SWAP3"
    },
    "1944": {
      "op": "POP"
    },
    "1945": {
      "op": "SWAP3"
    },
    "1946": {
      "jump": "o",
      "op": "JUMP"
    },
    "1947": {
      "op": "JUMPDEST"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1950": {
      "op": "DUP1"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1953": {
      "op": "DUP4"
    },
    "1954": {
      "op": "DUP6"
    },
    "1955": {
      "op": "SUB"
    },
    "1956": {
      "op": "SLT"
    },
    "1957": {
      "op": "ISZERO"
    },
    "1958": {
      "op": "PUSH2",
      "value": "0x7AD"
    },
    "1961": {
      "op": "JUMPI"
    },
    "1962": {
      "op": "DUP2"
    },
    "1963": {
      "op": "DUP3"
    },
    "1964": {
      "op": "REVERT"
    },
    "1965": {
      "op": "JUMPDEST"
    },
    "1966": {
      "op": "PUSH2",
      "value": "0x7B6"
    },
    "1969": {
      "op": "DUP4"
    },
    "1970": {
      "op": "PUSH2",
      "value": "0x6F1"
    },
    "1973": {
      "jump": "i",
      "op": "JUMP"
    },
    "1974": {
      "op": "JUMPDEST"
    },
    "1975": {
      "op": "SWAP5"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1978": {
      "op": "SWAP4"
    },
    "1979": {
      "op": "SWAP1"
    },
    "1980": {
      "op": "SWAP4"
    },
    "1981": {
      "op": "ADD"
    },
    "1982": {
      "op": "CALLDATALOAD"
    },
    "1983": {
      "op": "SWAP4"
    },
    "1984": {
      "op": "POP"
    },
    "1985": {
      "op": "POP"
    },
    "1986": {
      "op": "POP"
    },
    "1987": {
      "jump": "o",
      "op": "JUMP"
    },
    "1988": {
      "op": "JUMPDEST"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1993": {
      "op": "DUP1"
    },
    "1994": {
      "op": "DUP4"
    },
    "1995": {
      "op": "MSTORE"
    },
    "1996": {
      "op": "DUP4"
    },
    "1997": {
      "op": "MLOAD"
    },
    "1998": {
      "op": "DUP1"
    },
    "1999": {
      "op": "DUP3"
    },
    "2000": {
      "op": "DUP6"
    },
    "2001": {
      "op": "ADD"
    },
    "2002": {
      "op": "MSTORE"
    },
    "2003": {
      "op": "DUP3"
    },
    "2004": {
      "op": "JUMPDEST"
    },
    "2005": {
      "op": "DUP2"
    },
    "2006": {
      "op": "DUP2"
    },
    "2007": {
      "op": "LT"
    },
    "2008": {
      "op": "ISZERO"
    },
    "2009": {
      "op": "PUSH2",
      "value": "0x7F0"
    },
    "2012": {
      "op": "JUMPI"
    },
    "2013": {
      "op": "DUP6"
    },
    "2014": {
      "op": "DUP2"
    },
    "2015": {
      "op": "ADD"
    },
    "2016": {
      "op": "DUP4"
    },
    "2017": {
      "op": "ADD"
    },
    "2018": {
      "op": "MLOAD"
    },
    "2019": {
      "op": "DUP6"
    },
    "2020": {
      "op": "DUP3"
    },
    "2021": {
      "op": "ADD"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2024": {
      "op": "ADD"
    },
    "2025": {
      "op": "MSTORE"
    },
    "2026": {
      "op": "DUP3"
    },
    "2027": {
      "op": "ADD"
    },
    "2028": {
      "op": "PUSH2",
      "value": "0x7D4"
    },
    "2031": {
      "op": "JUMP"
    },
    "2032": {
      "op": "JUMPDEST"
    },
    "2033": {
      "op": "DUP2"
    },
    "2034": {
      "op": "DUP2"
    },
    "2035": {
      "op": "GT"
    },
    "2036": {
      "op": "ISZERO"
    },
    "2037": {
      "op": "PUSH2",
      "value": "0x801"
    },
    "2040": {
      "op": "JUMPI"
    },
    "2041": {
      "op": "DUP4"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2044": {
      "op": "DUP4"
    },
    "2045": {
      "op": "DUP8"
    },
    "2046": {
      "op": "ADD"
    },
    "2047": {
      "op": "ADD"
    },
    "2048": {
      "op": "MSTORE"
    },
    "2049": {
      "op": "JUMPDEST"
    },
    "2050": {
      "op": "POP"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2053": {
      "op": "ADD"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2056": {
      "op": "NOT"
    },
    "2057": {
      "op": "AND"
    },
    "2058": {
      "op": "SWAP3"
    },
    "2059": {
      "op": "SWAP1"
    },
    "2060": {
      "op": "SWAP3"
    },
    "2061": {
      "op": "ADD"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2064": {
      "op": "ADD"
    },
    "2065": {
      "op": "SWAP4"
    },
    "2066": {
      "op": "SWAP3"
    },
    "2067": {
      "op": "POP"
    },
    "2068": {
      "op": "POP"
    },
    "2069": {
      "op": "POP"
    },
    "2070": {
      "jump": "o",
      "op": "JUMP"
    },
    "2071": {
      "op": "JUMPDEST"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2074": {
      "op": "DUP3"
    },
    "2075": {
      "op": "NOT"
    },
    "2076": {
      "op": "DUP3"
    },
    "2077": {
      "op": "GT"
    },
    "2078": {
      "op": "ISZERO"
    },
    "2079": {
      "op": "PUSH2",
      "value": "0x836"
    },
    "2082": {
      "op": "JUMPI"
    },
    "2083": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2090": {
      "op": "SHL"
    },
    "2091": {
      "op": "DUP2"
    },
    "2092": {
      "op": "MSTORE"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2097": {
      "op": "MSTORE"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2100": {
      "op": "DUP2"
    },
    "2101": {
      "op": "REVERT"
    },
    "2102": {
      "op": "JUMPDEST"
    },
    "2103": {
      "op": "POP"
    },
    "2104": {
      "op": "ADD"
    },
    "2105": {
      "op": "SWAP1"
    },
    "2106": {
      "jump": "o",
      "op": "JUMP"
    },
    "2107": {
      "op": "JUMPDEST"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2110": {
      "op": "DUP2"
    },
    "2111": {
      "op": "DUP2"
    },
    "2112": {
      "op": "SHR"
    },
    "2113": {
      "op": "SWAP1"
    },
    "2114": {
      "op": "DUP3"
    },
    "2115": {
      "op": "AND"
    },
    "2116": {
      "op": "DUP1"
    },
    "2117": {
      "op": "PUSH2",
      "value": "0x84F"
    },
    "2120": {
      "op": "JUMPI"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2123": {
      "op": "DUP3"
    },
    "2124": {
      "op": "AND"
    },
    "2125": {
      "op": "SWAP2"
    },
    "2126": {
      "op": "POP"
    },
    "2127": {
      "op": "JUMPDEST"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2130": {
      "op": "DUP3"
    },
    "2131": {
      "op": "LT"
    },
    "2132": {
      "op": "DUP2"
    },
    "2133": {
      "op": "EQ"
    },
    "2134": {
      "op": "ISZERO"
    },
    "2135": {
      "op": "PUSH2",
      "value": "0x870"
    },
    "2138": {
      "op": "JUMPI"
    },
    "2139": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2146": {
      "op": "SHL"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2149": {
      "op": "MSTORE"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2154": {
      "op": "MSTORE"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2159": {
      "op": "REVERT"
    },
    "2160": {
      "op": "JUMPDEST"
    },
    "2161": {
      "op": "POP"
    },
    "2162": {
      "op": "SWAP2"
    },
    "2163": {
      "op": "SWAP1"
    },
    "2164": {
      "op": "POP"
    },
    "2165": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "8dcf47d054dbef74601cd18742b080c8eb62c60e",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n",
  "sourceMap": "1331:10416:4:-:0;;;1906:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1972:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1995:17:4;;;;:7;;:17;;;;;:::i;:::-;;1906:113;;1331:10416;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1331:10416:4;;;-1:-1:-1;1331:10416:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:909:48;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;143:5;136;129:20;88:2;170:13;;-1:-1:-1;;;;;232:10:48;;;229:2;;;245:18;;:::i;:::-;320:2;314:9;288:2;374:13;;-1:-1:-1;;370:22:48;;;394:2;366:31;362:40;350:53;;;418:18;;;438:22;;;415:46;412:2;;;464:18;;:::i;:::-;504:10;500:2;493:22;539:2;531:6;524:18;561:4;551:14;;606:3;601:2;596;588:6;584:15;580:24;577:33;574:2;;;627:5;620;613:20;574:2;653:5;644:14;;667:133;681:2;678:1;675:9;667:133;;;769:14;;;765:23;;759:30;738:14;;;734:23;;727:63;692:10;;;;667:133;;;818:2;815:1;812:9;809:2;;;877:5;872:2;867;859:6;855:15;851:24;844:39;809:2;911:6;78:845;-1:-1:-1;;;;;;78:845:48:o;928:592::-;1027:6;1035;1088:2;1076:9;1067:7;1063:23;1059:32;1056:2;;;1109:6;1101;1094:22;1056:2;1141:16;;-1:-1:-1;;;;;1206:14:48;;;1203:2;;;1238:6;1230;1223:22;1203:2;1266:61;1319:7;1310:6;1299:9;1295:22;1266:61;:::i;:::-;1256:71;;1373:2;1362:9;1358:18;1352:25;1336:41;;1402:2;1392:8;1389:16;1386:2;;;1423:6;1415;1408:22;1386:2;;1451:63;1506:7;1495:8;1484:9;1480:24;1451:63;:::i;:::-;1441:73;;;1046:474;;;;;:::o;1525:380::-;1604:1;1600:12;;;;1647;;;1668:2;;1722:4;1714:6;1710:17;1700:27;;1668:2;1775;1767:6;1764:14;1744:18;1741:38;1738:2;;;1821:10;1816:3;1812:20;1809:1;1802:31;1856:4;1853:1;1846:15;1884:4;1881:1;1874:15;1738:2;;1580:325;;;:::o;1910:127::-;1971:10;1966:3;1962:20;1959:1;1952:31;2002:4;1999:1;1992:15;2026:4;2023:1;2016:15;1942:95;1331:10416:4;;;;;;",
  "sourcePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol",
  "type": "contract"
}