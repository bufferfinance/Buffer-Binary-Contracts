{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tournamentManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenXAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "InitiateWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Loss",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "round",
          "type": "uint256"
        }
      ],
      "name": "PoolRollOver",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenXAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "ProcessWithdrawRequest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Profit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "writeAmount",
          "type": "uint256"
        }
      ],
      "name": "Provide",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "name": "UpdateExpiry",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "maxLiquidity",
          "type": "uint256"
        }
      ],
      "name": "UpdateMaxLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "hasPoolEnded",
          "type": "bool"
        }
      ],
      "name": "UpdatePoolState",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "UpdateProjectOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "UpdateRevertTransfersInLockUpPeriod",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "writeAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OPTION_ISSUER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tournamentId",
          "type": "uint256"
        }
      ],
      "name": "chargeFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "asset",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "tournamentId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiration",
          "type": "uint256"
        }
      ],
      "name": "checkParams",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountToLock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "premium",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tournamentId",
          "type": "uint256"
        }
      ],
      "name": "lock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lockedLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "premium",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "locked",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tournamentId",
          "type": "uint256"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tournamentManager",
      "outputs": [
        {
          "internalType": "contract ITournamentManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "unlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "unlockWithoutProfit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/AccessControl.sol",
    "1": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/IAccessControl.sol",
    "10": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
    "17": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
    "19": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/ERC165.sol",
    "20": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/IERC165.sol",
    "23": "contracts/Binary ATM Options/BufferBinaryIBFRPoolBinary.sol",
    "25": "contracts/Interfaces/Interfaces.sol",
    "6": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/IERC1155Receiver.sol",
    "8": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/utils/ERC1155Holder.sol",
    "9": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/utils/ERC1155Receiver.sol"
  },
  "ast": {
    "absolutePath": "contracts/Binary ATM Options/BufferBinaryIBFRPoolBinary.sol",
    "exportedSymbols": {
      "AccessControl": [
        3733
      ],
      "BufferBinaryIBFRPoolBinary": [
        1270
      ],
      "Context": [
        7022
      ],
      "ERC1155Holder": [
        5471
      ],
      "ERC1155Receiver": [
        7444
      ],
      "ERC165": [
        7249
      ],
      "IAccessControl": [
        7000
      ],
      "IBufferBinaryOptions": [
        1671
      ],
      "IBufferOptions": [
        1730
      ],
      "IERC1155Receiver": [
        7607
      ],
      "IERC165": [
        7634
      ],
      "IERC20": [
        5549
      ],
      "ILiquidityPool": [
        1854
      ],
      "IOptionsConfig": [
        1913
      ],
      "IPriceProvider": [
        1952
      ],
      "ITournamentManager": [
        2207
      ],
      "Strings": [
        7225
      ]
    },
    "id": 1271,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 917,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:23"
      },
      {
        "absolutePath": "contracts/Interfaces/Interfaces.sol",
        "file": "../Interfaces/Interfaces.sol",
        "id": 918,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1271,
        "sourceUnit": 2208,
        "src": "63:38:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 919,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1271,
        "sourceUnit": 3734,
        "src": "102:58:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "id": 920,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1271,
        "sourceUnit": 5472,
        "src": "161:71:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 922,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3733,
              "src": "428:13:23"
            },
            "id": 923,
            "nodeType": "InheritanceSpecifier",
            "src": "428:13:23"
          },
          {
            "baseName": {
              "id": 924,
              "name": "ILiquidityPool",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1854,
              "src": "447:14:23"
            },
            "id": 925,
            "nodeType": "InheritanceSpecifier",
            "src": "447:14:23"
          },
          {
            "baseName": {
              "id": 926,
              "name": "ERC1155Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5471,
              "src": "467:13:23"
            },
            "id": 927,
            "nodeType": "InheritanceSpecifier",
            "src": "467:13:23"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 921,
          "nodeType": "StructuredDocumentation",
          "src": "234:150:23",
          "text": " @author Heisenberg\n @title Buffer TokenX Liquidity Pool\n @notice Accumulates liquidity in TokenX from LPs and distributes P&L in TokenX"
        },
        "fullyImplemented": true,
        "id": 1270,
        "linearizedBaseContracts": [
          1270,
          5471,
          7444,
          7607,
          1854,
          3733,
          7249,
          7634,
          7000,
          7022
        ],
        "name": "BufferBinaryIBFRPoolBinary",
        "nameLocation": "394:26:23",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 929,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "502:5:23",
            "nodeType": "VariableDeclaration",
            "scope": 1270,
            "src": "487:20:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 928,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "487:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e9a78824",
            "id": 932,
            "mutability": "mutable",
            "name": "tournamentManager",
            "nameLocation": "539:17:23",
            "nodeType": "VariableDeclaration",
            "scope": 1270,
            "src": "513:43:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ITournamentManager_$2207",
              "typeString": "contract ITournamentManager"
            },
            "typeName": {
              "id": 931,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 930,
                "name": "ITournamentManager",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2207,
                "src": "513:18:23"
              },
              "referencedDeclaration": 2207,
              "src": "513:18:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ITournamentManager_$2207",
                "typeString": "contract ITournamentManager"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b9cfe348",
            "id": 938,
            "mutability": "mutable",
            "name": "lockedLiquidity",
            "nameLocation": "607:15:23",
            "nodeType": "VariableDeclaration",
            "scope": 1270,
            "src": "562:60:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockedLiquidity_$1737_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct ILiquidityPool.LockedLiquidity[])"
            },
            "typeName": {
              "id": 937,
              "keyType": {
                "id": 933,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "570:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "562:37:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockedLiquidity_$1737_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct ILiquidityPool.LockedLiquidity[])"
              },
              "valueType": {
                "baseType": {
                  "id": 935,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 934,
                    "name": "LockedLiquidity",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1737,
                    "src": "581:15:23"
                  },
                  "referencedDeclaration": 1737,
                  "src": "581:15:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LockedLiquidity_$1737_storage_ptr",
                    "typeString": "struct ILiquidityPool.LockedLiquidity"
                  }
                },
                "id": 936,
                "nodeType": "ArrayTypeName",
                "src": "581:17:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_LockedLiquidity_$1737_storage_$dyn_storage_ptr",
                  "typeString": "struct ILiquidityPool.LockedLiquidity[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "ec277a66",
            "id": 943,
            "mutability": "constant",
            "name": "OPTION_ISSUER_ROLE",
            "nameLocation": "653:18:23",
            "nodeType": "VariableDeclaration",
            "scope": 1270,
            "src": "629:84:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 939,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "629:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4f5054494f4e5f4953535545525f524f4c45",
                  "id": 941,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "692:20:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_02b0c433c31e2b44fbbb341ca2a1a7c86f98b5158b42b073f63efe02d35ea89f",
                    "typeString": "literal_string \"OPTION_ISSUER_ROLE\""
                  },
                  "value": "OPTION_ISSUER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_02b0c433c31e2b44fbbb341ca2a1a7c86f98b5158b42b073f63efe02d35ea89f",
                    "typeString": "literal_string \"OPTION_ISSUER_ROLE\""
                  }
                ],
                "id": 940,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "682:9:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 942,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "682:31:23",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 965,
              "nodeType": "Block",
              "src": "760:155:23",
              "statements": [
                {
                  "expression": {
                    "id": 951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 948,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 929,
                      "src": "770:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 949,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "778:3:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "778:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "770:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 952,
                  "nodeType": "ExpressionStatement",
                  "src": "770:18:23"
                },
                {
                  "expression": {
                    "id": 957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 953,
                      "name": "tournamentManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 932,
                      "src": "798:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITournamentManager_$2207",
                        "typeString": "contract ITournamentManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 955,
                          "name": "_tournamentManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 945,
                          "src": "837:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 954,
                        "name": "ITournamentManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2207,
                        "src": "818:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ITournamentManager_$2207_$",
                          "typeString": "type(contract ITournamentManager)"
                        }
                      },
                      "id": 956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "818:38:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITournamentManager_$2207",
                        "typeString": "contract ITournamentManager"
                      }
                    },
                    "src": "798:58:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITournamentManager_$2207",
                      "typeString": "contract ITournamentManager"
                    }
                  },
                  "id": 958,
                  "nodeType": "ExpressionStatement",
                  "src": "798:58:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 960,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3454,
                        "src": "877:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 961,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "897:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "897:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 959,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3643,
                      "src": "866:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "866:42:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 964,
                  "nodeType": "ExpressionStatement",
                  "src": "866:42:23"
                }
              ]
            },
            "id": 966,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 945,
                  "mutability": "mutable",
                  "name": "_tournamentManager",
                  "nameLocation": "740:18:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "732:26:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "732:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "731:28:23"
            },
            "returnParameters": {
              "id": 947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "760:0:23"
            },
            "scope": 1270,
            "src": "720:195:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1844
            ],
            "body": {
              "id": 987,
              "nodeType": "Block",
              "src": "1066:64:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 982,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 968,
                        "src": "1099:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 983,
                        "name": "tournamentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 972,
                        "src": "1105:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 984,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 970,
                        "src": "1119:3:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 979,
                        "name": "tournamentManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 932,
                        "src": "1076:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITournamentManager_$2207",
                          "typeString": "contract ITournamentManager"
                        }
                      },
                      "id": 981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2131,
                      "src": "1076:22:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1076:47:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 986,
                  "nodeType": "ExpressionStatement",
                  "src": "1076:47:23"
                }
              ]
            },
            "functionSelector": "e7a47b1a",
            "id": 988,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 976,
                    "name": "OPTION_ISSUER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 943,
                    "src": "1046:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 977,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 975,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3467,
                  "src": "1037:8:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "1037:28:23"
              }
            ],
            "name": "chargeFee",
            "nameLocation": "930:9:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 974,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1028:8:23"
            },
            "parameters": {
              "id": 973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 968,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "957:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 988,
                  "src": "949:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "949:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 970,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "979:3:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 988,
                  "src": "971:11:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 969,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "971:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 972,
                  "mutability": "mutable",
                  "name": "tournamentId",
                  "nameLocation": "1000:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 988,
                  "src": "992:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "992:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "939:79:23"
            },
            "returnParameters": {
              "id": 978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1066:0:23"
            },
            "scope": 1270,
            "src": "921:209:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1853
            ],
            "body": {
              "id": 1031,
              "nodeType": "Block",
              "src": "1273:417:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1001,
                            "name": "tournamentId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 992,
                            "src": "1333:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1002,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 990,
                            "src": "1347:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 999,
                            "name": "tournamentManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 932,
                            "src": "1304:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ITournamentManager_$2207",
                              "typeString": "contract ITournamentManager"
                            }
                          },
                          "id": 1000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isTradable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2076,
                          "src": "1304:28:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (uint256,string memory) view external returns (bool)"
                          }
                        },
                        "id": 1003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1304:49:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726164696e672069736e277420616c6c6f776564206f6e2074686973206173736574",
                        "id": 1004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1367:37:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78415008327a35a9cd9b3c939d35a456f5f6f344043158073539640bc90e1a4b",
                          "typeString": "literal_string \"Trading isn't allowed on this asset\""
                        },
                        "value": "Trading isn't allowed on this asset"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78415008327a35a9cd9b3c939d35a456f5f6f344043158073539640bc90e1a4b",
                          "typeString": "literal_string \"Trading isn't allowed on this asset\""
                        }
                      ],
                      "id": 998,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1283:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:131:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1006,
                  "nodeType": "ExpressionStatement",
                  "src": "1283:131:23"
                },
                {
                  "assignments": [
                    null,
                    1008,
                    1010,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 1008,
                      "mutability": "mutable",
                      "name": "start",
                      "nameLocation": "1435:5:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1031,
                      "src": "1427:13:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1007,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1427:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1010,
                      "mutability": "mutable",
                      "name": "close",
                      "nameLocation": "1450:5:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1031,
                      "src": "1442:13:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1009,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1442:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 1015,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1013,
                        "name": "tournamentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 992,
                        "src": "1518:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1011,
                        "name": "tournamentManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 932,
                        "src": "1475:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITournamentManager_$2207",
                          "typeString": "contract ITournamentManager"
                        }
                      },
                      "id": 1012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tournaments",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2181,
                      "src": "1475:42:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_struct$_ERC20Asset_$1962_memory_ptr_$_t_uint256_$_t_struct$_ERC20Asset_$1962_memory_ptr_$_t_bool_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (string memory,uint256,uint256,uint256,struct ITournamentManager.ERC20Asset memory,uint256,struct ITournamentManager.ERC20Asset memory,bool,bytes32,bytes32,uint256)"
                      }
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1475:56:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_struct$_ERC20Asset_$1962_memory_ptr_$_t_uint256_$_t_struct$_ERC20Asset_$1962_memory_ptr_$_t_bool_$_t_bytes32_$_t_bytes32_$_t_uint256_$",
                      "typeString": "tuple(string memory,uint256,uint256,uint256,struct ITournamentManager.ERC20Asset memory,uint256,struct ITournamentManager.ERC20Asset memory,bool,bytes32,bytes32,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1424:107:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1017,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1549:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1549:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 1019,
                          "name": "start",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1008,
                          "src": "1567:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1549:23:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320746f75726e616d656e7420686173206e6f74207374617274656420796574",
                        "id": 1021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1574:37:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c46ffaccc01a4c473d7120d7bcec50b976095cc61acea5e5ad9072f3bf424314",
                          "typeString": "literal_string \"This tournament has not started yet\""
                        },
                        "value": "This tournament has not started yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c46ffaccc01a4c473d7120d7bcec50b976095cc61acea5e5ad9072f3bf424314",
                          "typeString": "literal_string \"This tournament has not started yet\""
                        }
                      ],
                      "id": 1016,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1541:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1541:71:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1023,
                  "nodeType": "ExpressionStatement",
                  "src": "1541:71:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1025,
                          "name": "expiration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 994,
                          "src": "1630:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1026,
                          "name": "close",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1010,
                          "src": "1643:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1630:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696f6e20657870697279206973206f7574206f6620626f756e6473",
                        "id": 1028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1650:32:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a06726b4c897e29a95e5b627a35a84701483eda3de9ad7ae3d78f0643e43864c",
                          "typeString": "literal_string \"Option expiry is out of bounds\""
                        },
                        "value": "Option expiry is out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a06726b4c897e29a95e5b627a35a84701483eda3de9ad7ae3d78f0643e43864c",
                          "typeString": "literal_string \"Option expiry is out of bounds\""
                        }
                      ],
                      "id": 1024,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1622:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1622:61:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1030,
                  "nodeType": "ExpressionStatement",
                  "src": "1622:61:23"
                }
              ]
            },
            "functionSelector": "b53a5f9c",
            "id": 1032,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkParams",
            "nameLocation": "1145:11:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 996,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1264:8:23"
            },
            "parameters": {
              "id": 995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 990,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "1180:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1032,
                  "src": "1166:19:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 989,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1166:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 992,
                  "mutability": "mutable",
                  "name": "tournamentId",
                  "nameLocation": "1203:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1032,
                  "src": "1195:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 991,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1195:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 994,
                  "mutability": "mutable",
                  "name": "expiration",
                  "nameLocation": "1233:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1032,
                  "src": "1225:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 993,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1225:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1156:93:23"
            },
            "returnParameters": {
              "id": 997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1273:0:23"
            },
            "scope": 1270,
            "src": "1136:554:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1835
            ],
            "body": {
              "id": 1082,
              "nodeType": "Block",
              "src": "2141:264:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1049,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1035,
                          "src": "2159:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1050,
                              "name": "lockedLiquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 938,
                              "src": "2165:15:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockedLiquidity_$1737_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct ILiquidityPool.LockedLiquidity storage ref[] storage ref)"
                              }
                            },
                            "id": 1053,
                            "indexExpression": {
                              "expression": {
                                "id": 1051,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2181:3:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2181:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2165:27:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_LockedLiquidity_$1737_storage_$dyn_storage",
                              "typeString": "struct ILiquidityPool.LockedLiquidity storage ref[] storage ref"
                            }
                          },
                          "id": 1054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2165:34:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2159:40:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e67206964",
                        "id": 1056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2201:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ee69e74efe88f367f67f12cc520005ee33af942aa1612f1c2f7cf912f5d56ac",
                          "typeString": "literal_string \"Wrong id\""
                        },
                        "value": "Wrong id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ee69e74efe88f367f67f12cc520005ee33af942aa1612f1c2f7cf912f5d56ac",
                          "typeString": "literal_string \"Wrong id\""
                        }
                      ],
                      "id": 1048,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2151:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2151:61:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1058,
                  "nodeType": "ExpressionStatement",
                  "src": "2151:61:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1065,
                            "name": "amountToLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1037,
                            "src": "2285:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1066,
                            "name": "premium",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1039,
                            "src": "2299:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "74727565",
                            "id": 1067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2308:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1064,
                          "name": "LockedLiquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1737,
                          "src": "2269:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_LockedLiquidity_$1737_storage_ptr_$",
                            "typeString": "type(struct ILiquidityPool.LockedLiquidity storage pointer)"
                          }
                        },
                        "id": 1068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2269:44:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedLiquidity_$1737_memory_ptr",
                          "typeString": "struct ILiquidityPool.LockedLiquidity memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LockedLiquidity_$1737_memory_ptr",
                          "typeString": "struct ILiquidityPool.LockedLiquidity memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1059,
                          "name": "lockedLiquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 938,
                          "src": "2223:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockedLiquidity_$1737_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct ILiquidityPool.LockedLiquidity storage ref[] storage ref)"
                          }
                        },
                        "id": 1062,
                        "indexExpression": {
                          "expression": {
                            "id": 1060,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2239:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2239:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2223:27:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LockedLiquidity_$1737_storage_$dyn_storage",
                          "typeString": "struct ILiquidityPool.LockedLiquidity storage ref[] storage ref"
                        }
                      },
                      "id": 1063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2223:32:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_LockedLiquidity_$1737_storage_$dyn_storage_ptr_$_t_struct$_LockedLiquidity_$1737_storage_$returns$__$bound_to$_t_array$_t_struct$_LockedLiquidity_$1737_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct ILiquidityPool.LockedLiquidity storage ref[] storage pointer,struct ILiquidityPool.LockedLiquidity storage ref)"
                      }
                    },
                    "id": 1069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2223:100:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1070,
                  "nodeType": "ExpressionStatement",
                  "src": "2223:100:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1076,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2364:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BufferBinaryIBFRPoolBinary_$1270",
                              "typeString": "contract BufferBinaryIBFRPoolBinary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BufferBinaryIBFRPoolBinary_$1270",
                              "typeString": "contract BufferBinaryIBFRPoolBinary"
                            }
                          ],
                          "id": 1075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2356:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1074,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2356:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2356:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1078,
                        "name": "tournamentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "2371:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1079,
                        "name": "amountToLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1037,
                        "src": "2385:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1071,
                        "name": "tournamentManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 932,
                        "src": "2333:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITournamentManager_$2207",
                          "typeString": "contract ITournamentManager"
                        }
                      },
                      "id": 1073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2122,
                      "src": "2333:22:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2333:65:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1081,
                  "nodeType": "ExpressionStatement",
                  "src": "2333:65:23"
                }
              ]
            },
            "documentation": {
              "id": 1033,
              "nodeType": "StructuredDocumentation",
              "src": "1696:268:23",
              "text": " @notice Called by BufferCallOptions to lock the funds\n @param amountToLock Amount of funds that should be locked in an option\n @param premium Fee that the user paid\n @param tournamentId Id of the tournament the option is bought for"
            },
            "functionSelector": "260e9640",
            "id": 1083,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1045,
                    "name": "OPTION_ISSUER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 943,
                    "src": "2121:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1046,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1044,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3467,
                  "src": "2112:8:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "2112:28:23"
              }
            ],
            "name": "lock",
            "nameLocation": "1978:4:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1043,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2103:8:23"
            },
            "parameters": {
              "id": 1042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1035,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2000:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1083,
                  "src": "1992:10:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1992:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1037,
                  "mutability": "mutable",
                  "name": "amountToLock",
                  "nameLocation": "2020:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1083,
                  "src": "2012:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2012:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1039,
                  "mutability": "mutable",
                  "name": "premium",
                  "nameLocation": "2050:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1083,
                  "src": "2042:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2042:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1041,
                  "mutability": "mutable",
                  "name": "tournamentId",
                  "nameLocation": "2075:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1083,
                  "src": "2067:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2067:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1982:111:23"
            },
            "returnParameters": {
              "id": 1047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2141:0:23"
            },
            "scope": 1270,
            "src": "1969:436:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1121,
              "nodeType": "Block",
              "src": "2670:205:23",
              "statements": [
                {
                  "assignments": [
                    1096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1096,
                      "mutability": "mutable",
                      "name": "ll",
                      "nameLocation": "2704:2:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1121,
                      "src": "2680:26:23",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LockedLiquidity_$1737_storage_ptr",
                        "typeString": "struct ILiquidityPool.LockedLiquidity"
                      },
                      "typeName": {
                        "id": 1095,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1094,
                          "name": "LockedLiquidity",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1737,
                          "src": "2680:15:23"
                        },
                        "referencedDeclaration": 1737,
                        "src": "2680:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedLiquidity_$1737_storage_ptr",
                          "typeString": "struct ILiquidityPool.LockedLiquidity"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1103,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1097,
                        "name": "lockedLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 938,
                        "src": "2709:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockedLiquidity_$1737_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct ILiquidityPool.LockedLiquidity storage ref[] storage ref)"
                        }
                      },
                      "id": 1100,
                      "indexExpression": {
                        "expression": {
                          "id": 1098,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2725:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2725:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2709:27:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_LockedLiquidity_$1737_storage_$dyn_storage",
                        "typeString": "struct ILiquidityPool.LockedLiquidity storage ref[] storage ref"
                      }
                    },
                    "id": 1102,
                    "indexExpression": {
                      "id": 1101,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1086,
                      "src": "2737:2:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2709:31:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LockedLiquidity_$1737_storage",
                      "typeString": "struct ILiquidityPool.LockedLiquidity storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2680:60:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1105,
                          "name": "ll",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1096,
                          "src": "2758:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LockedLiquidity_$1737_storage_ptr",
                            "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                          }
                        },
                        "id": 1106,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "locked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1736,
                        "src": "2758:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c3a206c6f636b6564416d6f756e7420697320616c726561647920756e6c6f636b6564",
                        "id": 1107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2769:40:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20aa42c12630b5e92a3ba3c815c84bed8219883ea91067c401c891e552c927c9",
                          "typeString": "literal_string \"Pool: lockedAmount is already unlocked\""
                        },
                        "value": "Pool: lockedAmount is already unlocked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20aa42c12630b5e92a3ba3c815c84bed8219883ea91067c401c891e552c927c9",
                          "typeString": "literal_string \"Pool: lockedAmount is already unlocked\""
                        }
                      ],
                      "id": 1104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2750:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2750:60:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1109,
                  "nodeType": "ExpressionStatement",
                  "src": "2750:60:23"
                },
                {
                  "expression": {
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1110,
                        "name": "ll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1096,
                        "src": "2820:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedLiquidity_$1737_storage_ptr",
                          "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                        }
                      },
                      "id": 1112,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1736,
                      "src": "2820:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2832:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2820:17:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1115,
                  "nodeType": "ExpressionStatement",
                  "src": "2820:17:23"
                },
                {
                  "expression": {
                    "id": 1119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1116,
                      "name": "premium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1092,
                      "src": "2848:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1117,
                        "name": "ll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1096,
                        "src": "2858:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedLiquidity_$1737_storage_ptr",
                          "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                        }
                      },
                      "id": 1118,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "premium",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1734,
                      "src": "2858:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2848:20:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1120,
                  "nodeType": "ExpressionStatement",
                  "src": "2848:20:23"
                }
              ]
            },
            "documentation": {
              "id": 1084,
              "nodeType": "StructuredDocumentation",
              "src": "2411:133:23",
              "text": " @notice Called by BufferOptions to unlock the funds\n @param id Id of LockedLiquidity that should be unlocked"
            },
            "id": 1122,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1089,
                    "name": "OPTION_ISSUER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 943,
                    "src": "2612:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1090,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1088,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3467,
                  "src": "2603:8:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "2603:28:23"
              }
            ],
            "name": "_unlock",
            "nameLocation": "2558:7:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1086,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2574:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1122,
                  "src": "2566:10:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1085,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2566:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2565:12:23"
            },
            "returnParameters": {
              "id": 1093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1092,
                  "mutability": "mutable",
                  "name": "premium",
                  "nameLocation": "2657:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1122,
                  "src": "2649:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2649:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2648:17:23"
            },
            "scope": 1270,
            "src": "2549:326:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1770
            ],
            "body": {
              "id": 1140,
              "nodeType": "Block",
              "src": "3065:80:23",
              "statements": [
                {
                  "assignments": [
                    1130
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1130,
                      "mutability": "mutable",
                      "name": "premium",
                      "nameLocation": "3083:7:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1140,
                      "src": "3075:15:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1129,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3075:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1134,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1132,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1125,
                        "src": "3101:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1131,
                      "name": "_unlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1122,
                      "src": "3093:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3093:11:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3075:29:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1136,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1125,
                        "src": "3126:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1137,
                        "name": "premium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "3130:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1135,
                      "name": "Profit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1743,
                      "src": "3119:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3119:19:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1139,
                  "nodeType": "EmitStatement",
                  "src": "3114:24:23"
                }
              ]
            },
            "documentation": {
              "id": 1123,
              "nodeType": "StructuredDocumentation",
              "src": "2881:133:23",
              "text": " @notice Called by BufferOptions to unlock the funds\n @param id Id of LockedLiquidity that should be unlocked"
            },
            "functionSelector": "6198e339",
            "id": 1141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlock",
            "nameLocation": "3028:6:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1127,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3056:8:23"
            },
            "parameters": {
              "id": 1126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1125,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3043:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1141,
                  "src": "3035:10:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3035:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3034:12:23"
            },
            "returnParameters": {
              "id": 1128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3065:0:23"
            },
            "scope": 1270,
            "src": "3019:126:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1813
            ],
            "body": {
              "id": 1152,
              "nodeType": "Block",
              "src": "3348:28:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1149,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1144,
                        "src": "3366:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1148,
                      "name": "_unlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1122,
                      "src": "3358:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3358:11:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1151,
                  "nodeType": "ExpressionStatement",
                  "src": "3358:11:23"
                }
              ]
            },
            "documentation": {
              "id": 1142,
              "nodeType": "StructuredDocumentation",
              "src": "3151:133:23",
              "text": " @notice Called by BufferOptions to unlock the funds\n @param id Id of LockedLiquidity that should be unlocked"
            },
            "functionSelector": "0dbf21b0",
            "id": 1153,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlockWithoutProfit",
            "nameLocation": "3298:19:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1146,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3339:8:23"
            },
            "parameters": {
              "id": 1145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1144,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3326:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1153,
                  "src": "3318:10:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3318:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3317:12:23"
            },
            "returnParameters": {
              "id": 1147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3348:0:23"
            },
            "scope": 1270,
            "src": "3289:87:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1824
            ],
            "body": {
              "id": 1252,
              "nodeType": "Block",
              "src": "3814:696:23",
              "statements": [
                {
                  "assignments": [
                    1171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1171,
                      "mutability": "mutable",
                      "name": "ll",
                      "nameLocation": "3848:2:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1252,
                      "src": "3824:26:23",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LockedLiquidity_$1737_storage_ptr",
                        "typeString": "struct ILiquidityPool.LockedLiquidity"
                      },
                      "typeName": {
                        "id": 1170,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1169,
                          "name": "LockedLiquidity",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1737,
                          "src": "3824:15:23"
                        },
                        "referencedDeclaration": 1737,
                        "src": "3824:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedLiquidity_$1737_storage_ptr",
                          "typeString": "struct ILiquidityPool.LockedLiquidity"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1178,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1172,
                        "name": "lockedLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 938,
                        "src": "3853:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LockedLiquidity_$1737_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct ILiquidityPool.LockedLiquidity storage ref[] storage ref)"
                        }
                      },
                      "id": 1175,
                      "indexExpression": {
                        "expression": {
                          "id": 1173,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3869:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3869:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3853:27:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_LockedLiquidity_$1737_storage_$dyn_storage",
                        "typeString": "struct ILiquidityPool.LockedLiquidity storage ref[] storage ref"
                      }
                    },
                    "id": 1177,
                    "indexExpression": {
                      "id": 1176,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1156,
                      "src": "3881:2:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3853:31:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LockedLiquidity_$1737_storage",
                      "typeString": "struct ILiquidityPool.LockedLiquidity storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3824:60:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1180,
                          "name": "ll",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1171,
                          "src": "3902:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LockedLiquidity_$1737_storage_ptr",
                            "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                          }
                        },
                        "id": 1181,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "locked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1736,
                        "src": "3902:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c3a206c6f636b6564416d6f756e7420697320616c726561647920756e6c6f636b6564",
                        "id": 1182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3913:40:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20aa42c12630b5e92a3ba3c815c84bed8219883ea91067c401c891e552c927c9",
                          "typeString": "literal_string \"Pool: lockedAmount is already unlocked\""
                        },
                        "value": "Pool: lockedAmount is already unlocked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20aa42c12630b5e92a3ba3c815c84bed8219883ea91067c401c891e552c927c9",
                          "typeString": "literal_string \"Pool: lockedAmount is already unlocked\""
                        }
                      ],
                      "id": 1179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3894:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3894:60:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1184,
                  "nodeType": "ExpressionStatement",
                  "src": "3894:60:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1186,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1158,
                          "src": "3972:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3986:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3978:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1187,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3978:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3978:10:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3972:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3964:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3964:25:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1193,
                  "nodeType": "ExpressionStatement",
                  "src": "3964:25:23"
                },
                {
                  "expression": {
                    "id": 1198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1194,
                        "name": "ll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1171,
                        "src": "4000:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedLiquidity_$1737_storage_ptr",
                          "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                        }
                      },
                      "id": 1196,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1736,
                      "src": "4000:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4012:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4000:17:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1199,
                  "nodeType": "ExpressionStatement",
                  "src": "4000:17:23"
                },
                {
                  "assignments": [
                    1201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1201,
                      "mutability": "mutable",
                      "name": "transferrableProfit",
                      "nameLocation": "4036:19:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1252,
                      "src": "4028:27:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1200,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4028:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1210,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1202,
                        "name": "profit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1160,
                        "src": "4058:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "expression": {
                          "id": 1203,
                          "name": "ll",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1171,
                          "src": "4067:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LockedLiquidity_$1737_storage_ptr",
                            "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                          }
                        },
                        "id": 1204,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1732,
                        "src": "4067:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4058:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 1208,
                      "name": "profit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1160,
                      "src": "4091:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4058:39:23",
                    "trueExpression": {
                      "expression": {
                        "id": 1206,
                        "name": "ll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1171,
                        "src": "4079:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedLiquidity_$1737_storage_ptr",
                          "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                        }
                      },
                      "id": 1207,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1732,
                      "src": "4079:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4028:69:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1216,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4164:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BufferBinaryIBFRPoolBinary_$1270",
                              "typeString": "contract BufferBinaryIBFRPoolBinary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BufferBinaryIBFRPoolBinary_$1270",
                              "typeString": "contract BufferBinaryIBFRPoolBinary"
                            }
                          ],
                          "id": 1215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4156:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1214,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4156:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4156:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1218,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1158,
                        "src": "4183:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1219,
                        "name": "tournamentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1162,
                        "src": "4199:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1220,
                        "name": "transferrableProfit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1201,
                        "src": "4225:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 1221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4258:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 1211,
                        "name": "tournamentManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 932,
                        "src": "4108:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITournamentManager_$2207",
                          "typeString": "contract ITournamentManager"
                        }
                      },
                      "id": 1213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2206,
                      "src": "4108:34:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 1222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4108:162:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1223,
                  "nodeType": "ExpressionStatement",
                  "src": "4108:162:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1227,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1158,
                        "src": "4313:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1228,
                        "name": "tournamentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1162,
                        "src": "4317:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1224,
                        "name": "tournamentManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 932,
                        "src": "4280:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITournamentManager_$2207",
                          "typeString": "contract ITournamentManager"
                        }
                      },
                      "id": 1226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateUserRank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2138,
                      "src": "4280:32:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4280:50:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1230,
                  "nodeType": "ExpressionStatement",
                  "src": "4280:50:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1231,
                      "name": "transferrableProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1201,
                      "src": "4345:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 1232,
                        "name": "ll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1171,
                        "src": "4368:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedLiquidity_$1737_storage_ptr",
                          "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                        }
                      },
                      "id": 1233,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "premium",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1734,
                      "src": "4368:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4345:33:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 1244,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1156,
                          "src": "4466:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1245,
                            "name": "transferrableProfit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1201,
                            "src": "4470:19:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 1246,
                              "name": "ll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1171,
                              "src": "4492:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LockedLiquidity_$1737_storage_ptr",
                                "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                              }
                            },
                            "id": 1247,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "premium",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1734,
                            "src": "4492:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4470:32:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1243,
                        "name": "Loss",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1749,
                        "src": "4461:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256)"
                        }
                      },
                      "id": 1249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4461:42:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1250,
                    "nodeType": "EmitStatement",
                    "src": "4456:47:23"
                  },
                  "id": 1251,
                  "nodeType": "IfStatement",
                  "src": "4341:162:23",
                  "trueBody": {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 1236,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1156,
                          "src": "4404:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1237,
                              "name": "ll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1171,
                              "src": "4408:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LockedLiquidity_$1737_storage_ptr",
                                "typeString": "struct ILiquidityPool.LockedLiquidity storage pointer"
                              }
                            },
                            "id": 1238,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "premium",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1734,
                            "src": "4408:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1239,
                            "name": "transferrableProfit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1201,
                            "src": "4421:19:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4408:32:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1235,
                        "name": "Profit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1743,
                        "src": "4397:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256)"
                        }
                      },
                      "id": 1241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4397:44:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1242,
                    "nodeType": "EmitStatement",
                    "src": "4392:49:23"
                  }
                }
              ]
            },
            "documentation": {
              "id": 1154,
              "nodeType": "StructuredDocumentation",
              "src": "3382:266:23",
              "text": " @notice Called by BufferCallOptions to send funds to liquidity providers after an option's expiration\n @param to Provider\n @param profit Funds that should be sent\n @param tournamentId Id of the tournament the option is bought for"
            },
            "functionSelector": "a134ce5b",
            "id": 1253,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1166,
                    "name": "OPTION_ISSUER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 943,
                    "src": "3794:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1167,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1165,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3467,
                  "src": "3785:8:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "3785:28:23"
              }
            ],
            "name": "send",
            "nameLocation": "3662:4:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1164,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3776:8:23"
            },
            "parameters": {
              "id": 1163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1156,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3684:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1253,
                  "src": "3676:10:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3676:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1158,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3704:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1253,
                  "src": "3696:10:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3696:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1160,
                  "mutability": "mutable",
                  "name": "profit",
                  "nameLocation": "3724:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1253,
                  "src": "3716:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3716:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1162,
                  "mutability": "mutable",
                  "name": "tournamentId",
                  "nameLocation": "3748:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1253,
                  "src": "3740:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3740:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3666:100:23"
            },
            "returnParameters": {
              "id": 1168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3814:0:23"
            },
            "scope": 1270,
            "src": "3653:857:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3489,
              7443
            ],
            "body": {
              "id": 1268,
              "nodeType": "Block",
              "src": "4667:60:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1265,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1255,
                        "src": "4708:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 1263,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "4684:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BufferBinaryIBFRPoolBinary_$1270_$",
                          "typeString": "type(contract super BufferBinaryIBFRPoolBinary)"
                        }
                      },
                      "id": 1264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7443,
                      "src": "4684:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 1266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4684:36:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1262,
                  "id": 1267,
                  "nodeType": "Return",
                  "src": "4677:43:23"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 1269,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4525:17:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1259,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1257,
                  "name": "AccessControl",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3733,
                  "src": "4608:13:23"
                },
                {
                  "id": 1258,
                  "name": "ERC1155Receiver",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7444,
                  "src": "4623:15:23"
                }
              ],
              "src": "4599:40:23"
            },
            "parameters": {
              "id": 1256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1255,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4550:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1269,
                  "src": "4543:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1254,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4543:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4542:20:23"
            },
            "returnParameters": {
              "id": 1262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1261,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1269,
                  "src": "4657:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1260,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4657:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4656:6:23"
            },
            "scope": 1270,
            "src": "4516:211:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1271,
        "src": "385:4344:23",
        "usedErrors": []
      }
    ],
    "src": "0:4730:23"
  },
  "bytecode": "60806040523480156200001157600080fd5b506040516200188138038062001881833981016040819052620000349162000123565b60018054336001600160a01b03199182168117909255600280549091166001600160a01b0384161790556200006c9060009062000073565b5062000153565b6200007f828262000083565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166200007f576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620000df3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006020828403121562000135578081fd5b81516001600160a01b03811681146200014c578182fd5b9392505050565b61171e80620001636000396000f3fe608060405234801561001057600080fd5b50600436106100f15760003560e01c806301ffc9a7146100f65780630dbf21b01461011e578063248a9ca314610133578063260e9640146101545780632f2ff15d1461016757806336568abe1461017a5780636198e3391461018d5780638da5cb5b146101a057806391d14854146101cb578063a134ce5b146101de578063a217fddf146101f1578063b53a5f9c146101f9578063b9cfe3481461020c578063bc197c811461023c578063d547741f14610274578063e7a47b1a14610287578063e9a788241461029a578063ec277a66146102ad578063f23a6e61146102c2575b600080fd5b610109610104366004611249565b6102e1565b60405190151581526020015b60405180910390f35b61013161012c366004611202565b6102f2565b005b610146610141366004611202565b6102ff565b604051908152602001610115565b6101316101623660046113f1565b610314565b61013161017536600461121a565b610446565b61013161018836600461121a565b610468565b61013161019b366004611202565b6104e2565b6001546101b3906001600160a01b031681565b6040516001600160a01b039091168152602001610115565b6101096101d936600461121a565b61051b565b6101316101ec3660046113b5565b610544565b610146600081565b610131610207366004611271565b61076d565b61021f61021a366004611189565b61098a565b604080519384526020840192909252151590820152606001610115565b61025b61024a36600461107a565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610115565b61013161028236600461121a565b6109cf565b6101316102953660046111b4565b6109ec565b6002546101b3906001600160a01b031681565b6101466000805160206116c983398151915281565b61025b6102d0366004611123565b63f23a6e6160e01b95945050505050565b60006102ec82610a71565b92915050565b6102fb81610a96565b5050565b60009081526020819052604090206001015490565b6000805160206116c983398151915261032d8133610b2e565b33600090815260036020526040902054851461037b5760405162461bcd60e51b815260206004820152600860248201526715dc9bdb99c81a5960c21b60448201526064015b60405180910390fd5b33600090815260036020818152604080842081516060810183528981528084018981526001828501818152845480830186559489529590972091519290950201908155925193830193909355516002918201805460ff1916911515919091179055549051630ab714fb60e11b81526001600160a01b039091169063156e29f69061040d903090869089906004016114bd565b600060405180830381600087803b15801561042757600080fd5b505af115801561043b573d6000803e3d6000fd5b505050505050505050565b61044f826102ff565b6104598133610b2e565b6104638383610b92565b505050565b6001600160a01b03811633146104d85760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610372565b6102fb8282610c16565b60006104ed82610a96565b9050816000805160206116a98339815191528260405161050f91815260200190565b60405180910390a25050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000805160206116c983398151915261055d8133610b2e565b33600090815260036020526040812080548790811061058c57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201600281015490915060ff166105c35760405162461bcd60e51b8152600401610372906114f1565b6001600160a01b0385166105d657600080fd5b60028101805460ff19169055805460009085116105f357846105f6565b81545b600254604051637921219560e11b81523060048201526001600160a01b038981166024830152604482018890526064820184905260a06084830152600060a483015292935091169063f242432a9060c401600060405180830381600087803b15801561066157600080fd5b505af1158015610675573d6000803e3d6000fd5b505060025460405163b46b791960e01b81526001600160a01b038a8116600483015260248201899052909116925063b46b79199150604401600060405180830381600087803b1580156106c757600080fd5b505af11580156106db573d6000803e3d6000fd5b505050508160010154811161072057866000805160206116a983398151915282846001015461070a9190611606565b60405190815260200160405180910390a2610764565b867f86f83f021a5ecb92d6dcaec11be9da0e65b5401ce748ac3c1f0ddbae029f55ce8360010154836107529190611606565b60405190815260200160405180910390a25b50505050505050565b600254604051630701ac3160e01b81526001600160a01b0390911690630701ac319061079f9085908790600401611537565b60206040518083038186803b1580156107b757600080fd5b505afa1580156107cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ef91906111e8565b6108475760405162461bcd60e51b815260206004820152602360248201527f54726164696e672069736e277420616c6c6f776564206f6e20746869732061736044820152621cd95d60ea1b6064820152608401610372565b600254604051637503e1b760e01b81526004810184905260009182916001600160a01b0390911690637503e1b79060240160006040518083038186803b15801561089057600080fd5b505afa1580156108a4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108cc91908101906112cf565b505050505050505092509250508142116109345760405162461bcd60e51b815260206004820152602360248201527f5468697320746f75726e616d656e7420686173206e6f742073746172746564206044820152621e595d60ea1b6064820152608401610372565b8083106109835760405162461bcd60e51b815260206004820152601e60248201527f4f7074696f6e20657870697279206973206f7574206f6620626f756e647300006044820152606401610372565b5050505050565b600360205281600052604060002081815481106109a657600080fd5b600091825260209091206003909102018054600182015460029092015490935090915060ff1683565b6109d8826102ff565b6109e28133610b2e565b6104638383610c16565b6000805160206116c9833981519152610a058133610b2e565b600254604051637a94c56560e11b81526001600160a01b039091169063f5298aca90610a39908790869088906004016114bd565b600060405180830381600087803b158015610a5357600080fd5b505af1158015610a67573d6000803e3d6000fd5b5050505050505050565b60006001600160e01b03198216630271189760e51b14806102ec57506102ec82610c7b565b60006000805160206116c9833981519152610ab18133610b2e565b336000908152600360205260408120805485908110610ae057634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201600281015490915060ff16610b175760405162461bcd60e51b8152600401610372906114f1565b60028101805460ff19169055600101549392505050565b610b38828261051b565b6102fb57610b50816001600160a01b03166014610cb0565b610b5b836020610cb0565b604051602001610b6c92919061144e565b60408051601f198184030181529082905262461bcd60e51b8252610372916004016114de565b610b9c828261051b565b6102fb576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610bd23390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610c20828261051b565b156102fb576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006001600160e01b03198216637965db0b60e01b14806102ec57506301ffc9a760e01b6001600160e01b03198316146102ec565b60606000610cbf8360026115e7565b610cca9060026115cf565b6001600160401b03811115610cef57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610d19576020820181803683370190505b509050600360fc1b81600081518110610d4257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610d7f57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000610da38460026115e7565b610dae9060016115cf565b90505b6001811115610e42576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610df057634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110610e1457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93610e3b8161164d565b9050610db1565b508315610e915760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610372565b9392505050565b6000610eab610ea6846115a8565b611578565b9050828152838383011115610ebf57600080fd5b828260208301376000602084830101529392505050565b600082601f830112610ee6578081fd5b813560206001600160401b03821115610f0157610f0161167a565b8160051b610f10828201611578565b838152828101908684018388018501891015610f2a578687fd5b8693505b85841015610f4c578035835260019390930192918401918401610f2e565b50979650505050505050565b80518015158114610f6857600080fd5b919050565b600082601f830112610f7d578081fd5b610e9183833560208501610e98565b8051610f6881611690565b600082601f830112610fa7578081fd5b8151610fb5610ea6826115a8565b818152846020838601011115610fc9578283fd5b610fda82602083016020870161161d565b949350505050565b600060808284031215610ff3578081fd5b610ffb611550565b82519091506001600160401b038082111561101557600080fd5b61102185838601610f97565b8352602084015191508082111561103757600080fd5b5061104484828501610f97565b602083015250604082015160ff8116811461105e57600080fd5b604082015261106f60608301610f8c565b606082015292915050565b600080600080600060a08688031215611091578081fd5b853561109c81611690565b945060208601356110ac81611690565b935060408601356001600160401b03808211156110c7578283fd5b6110d389838a01610ed6565b945060608801359150808211156110e8578283fd5b6110f489838a01610ed6565b93506080880135915080821115611109578283fd5b5061111688828901610f6d565b9150509295509295909350565b600080600080600060a0868803121561113a578081fd5b853561114581611690565b9450602086013561115581611690565b9350604086013592506060860135915060808601356001600160401b0381111561117d578182fd5b61111688828901610f6d565b6000806040838503121561119b578182fd5b82356111a681611690565b946020939093013593505050565b6000806000606084860312156111c8578283fd5b83356111d381611690565b95602085013595506040909401359392505050565b6000602082840312156111f9578081fd5b610e9182610f58565b600060208284031215611213578081fd5b5035919050565b6000806040838503121561122c578182fd5b82359150602083013561123e81611690565b809150509250929050565b60006020828403121561125a578081fd5b81356001600160e01b031981168114610e91578182fd5b600080600060608486031215611285578081fd5b83356001600160401b0381111561129a578182fd5b8401601f810186136112aa578182fd5b6112b986823560208401610e98565b9660208601359650604090950135949350505050565b60008060008060008060008060008060006101608c8e0312156112f0578889fd5b8b516001600160401b0381111561130557898afd5b6113118e828f01610f97565b9b505060208c0151995060408c0151985060608c0151975060808c015160018060401b03811115611340578687fd5b61134c8e828f01610fe2565b60a08e015160c08f0151919950975090506001600160401b03811115611370578586fd5b61137c8e828f01610fe2565b95505061138b60e08d01610f58565b93506101008c015192506101208c015191506101408c015190509295989b509295989b9093969950565b600080600080608085870312156113ca578182fd5b8435935060208501356113dc81611690565b93969395505050506040820135916060013590565b60008060008060808587031215611406578182fd5b5050823594602084013594506040840135936060013592509050565b6000815180845261143a81602086016020860161161d565b601f01601f19169290920160200192915050565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b81526000835161148081601785016020880161161d565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516114b181602884016020880161161d565b01602801949350505050565b6001600160a01b039390931683526020830191909152604082015260600190565b602081526000610e916020830184611422565b60208082526026908201527f506f6f6c3a206c6f636b6564416d6f756e7420697320616c726561647920756e6040820152651b1bd8dad95960d21b606082015260800190565b828152604060208201526000610fda6040830184611422565b604051608081016001600160401b03811182821017156115725761157261167a565b60405290565b604051601f8201601f191681016001600160401b03811182821017156115a0576115a061167a565b604052919050565b60006001600160401b038211156115c1576115c161167a565b50601f01601f191660200190565b600082198211156115e2576115e2611664565b500190565b600081600019048311821515161561160157611601611664565b500290565b60008282101561161857611618611664565b500390565b60005b83811015611638578181015183820152602001611620565b83811115611647576000848401525b50505050565b60008161165c5761165c611664565b506000190190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146116a557600080fd5b5056fe9f78baa7a8e3640efadcbedc2d00f5930ade7a7bb66038dbf88684d49972957a02b0c433c31e2b44fbbb341ca2a1a7c86f98b5158b42b073f63efe02d35ea89fa26469706673582212206d1a5b23235b9926794a941c7a6986888afdb1c3cc1de31a138d33e33ad7f45c64736f6c63430008040033",
  "bytecodeSha1": "fe0c2984c316b9878dd7e1803f02834e0bf79f01",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 1
    },
    "version": "0.8.4+commit.c7e474f2"
  },
  "contractName": "BufferBinaryIBFRPoolBinary",
  "coverageMap": {
    "branches": {
      "0": {
        "AccessControl._checkRole": {
          "45": [
            3332,
            3354,
            false
          ]
        },
        "AccessControl._grantRole": {
          "46": [
            6646,
            6668,
            false
          ]
        },
        "AccessControl._revokeRole": {
          "47": [
            6876,
            6898,
            false
          ]
        },
        "AccessControl.renounceRole": {
          "44": [
            5400,
            5423,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "17": {},
      "19": {},
      "20": {},
      "23": {
        "BufferBinaryIBFRPoolBinary._unlock": {
          "43": [
            2758,
            2767,
            true
          ]
        },
        "BufferBinaryIBFRPoolBinary.checkParams": {
          "40": [
            1304,
            1353,
            true
          ],
          "41": [
            1549,
            1572,
            true
          ],
          "42": [
            1630,
            1648,
            true
          ]
        },
        "BufferBinaryIBFRPoolBinary.lock": {
          "35": [
            2159,
            2199,
            true
          ]
        },
        "BufferBinaryIBFRPoolBinary.send": {
          "36": [
            3902,
            3911,
            true
          ],
          "37": [
            3972,
            3988,
            true
          ],
          "38": [
            4058,
            4076,
            true
          ],
          "39": [
            4345,
            4378,
            false
          ]
        }
      },
      "25": {},
      "6": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "AccessControl._checkRole": {
          "28": [
            3370,
            3719
          ]
        },
        "AccessControl._grantRole": {
          "29": [
            6684,
            6720
          ],
          "30": [
            6734,
            6779
          ]
        },
        "AccessControl._revokeRole": {
          "31": [
            6914,
            6951
          ],
          "32": [
            6965,
            7010
          ]
        },
        "AccessControl.getRoleAdmin": {
          "2": [
            4002,
            4031
          ]
        },
        "AccessControl.grantRole": {
          "7": [
            4401,
            4426
          ]
        },
        "AccessControl.hasRole": {
          "11": [
            2928,
            2964
          ]
        },
        "AccessControl.renounceRole": {
          "8": [
            5392,
            5475
          ],
          "9": [
            5486,
            5512
          ]
        },
        "AccessControl.revokeRole": {
          "22": [
            4781,
            4807
          ]
        },
        "AccessControl.supportsInterface": {
          "33": [
            2646,
            2740
          ]
        }
      },
      "1": {},
      "10": {},
      "17": {
        "Context._msgSender": {
          "3": [
            659,
            676
          ]
        }
      },
      "19": {
        "ERC165.supportsInterface": {
          "34": [
            864,
            911
          ]
        }
      },
      "20": {},
      "23": {
        "BufferBinaryIBFRPoolBinary._unlock": {
          "25": [
            2750,
            2810
          ],
          "26": [
            2820,
            2837
          ],
          "27": [
            2848,
            2868
          ]
        },
        "BufferBinaryIBFRPoolBinary.chargeFee": {
          "23": [
            1076,
            1123
          ]
        },
        "BufferBinaryIBFRPoolBinary.checkParams": {
          "19": [
            1283,
            1414
          ],
          "20": [
            1541,
            1612
          ],
          "21": [
            1622,
            1683
          ]
        },
        "BufferBinaryIBFRPoolBinary.lock": {
          "4": [
            2151,
            2212
          ],
          "5": [
            2223,
            2323
          ],
          "6": [
            2333,
            2398
          ]
        },
        "BufferBinaryIBFRPoolBinary.send": {
          "12": [
            3894,
            3954
          ],
          "13": [
            3964,
            3989
          ],
          "14": [
            4000,
            4017
          ],
          "15": [
            4108,
            4270
          ],
          "16": [
            4280,
            4330
          ],
          "17": [
            4392,
            4441
          ],
          "18": [
            4456,
            4503
          ]
        },
        "BufferBinaryIBFRPoolBinary.supportsInterface": {
          "0": [
            4677,
            4720
          ]
        },
        "BufferBinaryIBFRPoolBinary.unlock": {
          "10": [
            3114,
            3138
          ]
        },
        "BufferBinaryIBFRPoolBinary.unlockWithoutProfit": {
          "1": [
            3358,
            3369
          ]
        }
      },
      "25": {},
      "6": {},
      "8": {},
      "9": {
        "ERC1155Receiver.supportsInterface": {
          "24": [
            430,
            526
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/AccessControl",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC1155Holder",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IAccessControl",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20",
    "ILiquidityPool",
    "ITournamentManager"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100f15760003560e01c806301ffc9a7146100f65780630dbf21b01461011e578063248a9ca314610133578063260e9640146101545780632f2ff15d1461016757806336568abe1461017a5780636198e3391461018d5780638da5cb5b146101a057806391d14854146101cb578063a134ce5b146101de578063a217fddf146101f1578063b53a5f9c146101f9578063b9cfe3481461020c578063bc197c811461023c578063d547741f14610274578063e7a47b1a14610287578063e9a788241461029a578063ec277a66146102ad578063f23a6e61146102c2575b600080fd5b610109610104366004611249565b6102e1565b60405190151581526020015b60405180910390f35b61013161012c366004611202565b6102f2565b005b610146610141366004611202565b6102ff565b604051908152602001610115565b6101316101623660046113f1565b610314565b61013161017536600461121a565b610446565b61013161018836600461121a565b610468565b61013161019b366004611202565b6104e2565b6001546101b3906001600160a01b031681565b6040516001600160a01b039091168152602001610115565b6101096101d936600461121a565b61051b565b6101316101ec3660046113b5565b610544565b610146600081565b610131610207366004611271565b61076d565b61021f61021a366004611189565b61098a565b604080519384526020840192909252151590820152606001610115565b61025b61024a36600461107a565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610115565b61013161028236600461121a565b6109cf565b6101316102953660046111b4565b6109ec565b6002546101b3906001600160a01b031681565b6101466000805160206116c983398151915281565b61025b6102d0366004611123565b63f23a6e6160e01b95945050505050565b60006102ec82610a71565b92915050565b6102fb81610a96565b5050565b60009081526020819052604090206001015490565b6000805160206116c983398151915261032d8133610b2e565b33600090815260036020526040902054851461037b5760405162461bcd60e51b815260206004820152600860248201526715dc9bdb99c81a5960c21b60448201526064015b60405180910390fd5b33600090815260036020818152604080842081516060810183528981528084018981526001828501818152845480830186559489529590972091519290950201908155925193830193909355516002918201805460ff1916911515919091179055549051630ab714fb60e11b81526001600160a01b039091169063156e29f69061040d903090869089906004016114bd565b600060405180830381600087803b15801561042757600080fd5b505af115801561043b573d6000803e3d6000fd5b505050505050505050565b61044f826102ff565b6104598133610b2e565b6104638383610b92565b505050565b6001600160a01b03811633146104d85760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610372565b6102fb8282610c16565b60006104ed82610a96565b9050816000805160206116a98339815191528260405161050f91815260200190565b60405180910390a25050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000805160206116c983398151915261055d8133610b2e565b33600090815260036020526040812080548790811061058c57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201600281015490915060ff166105c35760405162461bcd60e51b8152600401610372906114f1565b6001600160a01b0385166105d657600080fd5b60028101805460ff19169055805460009085116105f357846105f6565b81545b600254604051637921219560e11b81523060048201526001600160a01b038981166024830152604482018890526064820184905260a06084830152600060a483015292935091169063f242432a9060c401600060405180830381600087803b15801561066157600080fd5b505af1158015610675573d6000803e3d6000fd5b505060025460405163b46b791960e01b81526001600160a01b038a8116600483015260248201899052909116925063b46b79199150604401600060405180830381600087803b1580156106c757600080fd5b505af11580156106db573d6000803e3d6000fd5b505050508160010154811161072057866000805160206116a983398151915282846001015461070a9190611606565b60405190815260200160405180910390a2610764565b867f86f83f021a5ecb92d6dcaec11be9da0e65b5401ce748ac3c1f0ddbae029f55ce8360010154836107529190611606565b60405190815260200160405180910390a25b50505050505050565b600254604051630701ac3160e01b81526001600160a01b0390911690630701ac319061079f9085908790600401611537565b60206040518083038186803b1580156107b757600080fd5b505afa1580156107cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ef91906111e8565b6108475760405162461bcd60e51b815260206004820152602360248201527f54726164696e672069736e277420616c6c6f776564206f6e20746869732061736044820152621cd95d60ea1b6064820152608401610372565b600254604051637503e1b760e01b81526004810184905260009182916001600160a01b0390911690637503e1b79060240160006040518083038186803b15801561089057600080fd5b505afa1580156108a4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108cc91908101906112cf565b505050505050505092509250508142116109345760405162461bcd60e51b815260206004820152602360248201527f5468697320746f75726e616d656e7420686173206e6f742073746172746564206044820152621e595d60ea1b6064820152608401610372565b8083106109835760405162461bcd60e51b815260206004820152601e60248201527f4f7074696f6e20657870697279206973206f7574206f6620626f756e647300006044820152606401610372565b5050505050565b600360205281600052604060002081815481106109a657600080fd5b600091825260209091206003909102018054600182015460029092015490935090915060ff1683565b6109d8826102ff565b6109e28133610b2e565b6104638383610c16565b6000805160206116c9833981519152610a058133610b2e565b600254604051637a94c56560e11b81526001600160a01b039091169063f5298aca90610a39908790869088906004016114bd565b600060405180830381600087803b158015610a5357600080fd5b505af1158015610a67573d6000803e3d6000fd5b5050505050505050565b60006001600160e01b03198216630271189760e51b14806102ec57506102ec82610c7b565b60006000805160206116c9833981519152610ab18133610b2e565b336000908152600360205260408120805485908110610ae057634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201600281015490915060ff16610b175760405162461bcd60e51b8152600401610372906114f1565b60028101805460ff19169055600101549392505050565b610b38828261051b565b6102fb57610b50816001600160a01b03166014610cb0565b610b5b836020610cb0565b604051602001610b6c92919061144e565b60408051601f198184030181529082905262461bcd60e51b8252610372916004016114de565b610b9c828261051b565b6102fb576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610bd23390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610c20828261051b565b156102fb576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006001600160e01b03198216637965db0b60e01b14806102ec57506301ffc9a760e01b6001600160e01b03198316146102ec565b60606000610cbf8360026115e7565b610cca9060026115cf565b6001600160401b03811115610cef57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610d19576020820181803683370190505b509050600360fc1b81600081518110610d4257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610d7f57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000610da38460026115e7565b610dae9060016115cf565b90505b6001811115610e42576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610df057634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110610e1457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93610e3b8161164d565b9050610db1565b508315610e915760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610372565b9392505050565b6000610eab610ea6846115a8565b611578565b9050828152838383011115610ebf57600080fd5b828260208301376000602084830101529392505050565b600082601f830112610ee6578081fd5b813560206001600160401b03821115610f0157610f0161167a565b8160051b610f10828201611578565b838152828101908684018388018501891015610f2a578687fd5b8693505b85841015610f4c578035835260019390930192918401918401610f2e565b50979650505050505050565b80518015158114610f6857600080fd5b919050565b600082601f830112610f7d578081fd5b610e9183833560208501610e98565b8051610f6881611690565b600082601f830112610fa7578081fd5b8151610fb5610ea6826115a8565b818152846020838601011115610fc9578283fd5b610fda82602083016020870161161d565b949350505050565b600060808284031215610ff3578081fd5b610ffb611550565b82519091506001600160401b038082111561101557600080fd5b61102185838601610f97565b8352602084015191508082111561103757600080fd5b5061104484828501610f97565b602083015250604082015160ff8116811461105e57600080fd5b604082015261106f60608301610f8c565b606082015292915050565b600080600080600060a08688031215611091578081fd5b853561109c81611690565b945060208601356110ac81611690565b935060408601356001600160401b03808211156110c7578283fd5b6110d389838a01610ed6565b945060608801359150808211156110e8578283fd5b6110f489838a01610ed6565b93506080880135915080821115611109578283fd5b5061111688828901610f6d565b9150509295509295909350565b600080600080600060a0868803121561113a578081fd5b853561114581611690565b9450602086013561115581611690565b9350604086013592506060860135915060808601356001600160401b0381111561117d578182fd5b61111688828901610f6d565b6000806040838503121561119b578182fd5b82356111a681611690565b946020939093013593505050565b6000806000606084860312156111c8578283fd5b83356111d381611690565b95602085013595506040909401359392505050565b6000602082840312156111f9578081fd5b610e9182610f58565b600060208284031215611213578081fd5b5035919050565b6000806040838503121561122c578182fd5b82359150602083013561123e81611690565b809150509250929050565b60006020828403121561125a578081fd5b81356001600160e01b031981168114610e91578182fd5b600080600060608486031215611285578081fd5b83356001600160401b0381111561129a578182fd5b8401601f810186136112aa578182fd5b6112b986823560208401610e98565b9660208601359650604090950135949350505050565b60008060008060008060008060008060006101608c8e0312156112f0578889fd5b8b516001600160401b0381111561130557898afd5b6113118e828f01610f97565b9b505060208c0151995060408c0151985060608c0151975060808c015160018060401b03811115611340578687fd5b61134c8e828f01610fe2565b60a08e015160c08f0151919950975090506001600160401b03811115611370578586fd5b61137c8e828f01610fe2565b95505061138b60e08d01610f58565b93506101008c015192506101208c015191506101408c015190509295989b509295989b9093969950565b600080600080608085870312156113ca578182fd5b8435935060208501356113dc81611690565b93969395505050506040820135916060013590565b60008060008060808587031215611406578182fd5b5050823594602084013594506040840135936060013592509050565b6000815180845261143a81602086016020860161161d565b601f01601f19169290920160200192915050565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b81526000835161148081601785016020880161161d565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516114b181602884016020880161161d565b01602801949350505050565b6001600160a01b039390931683526020830191909152604082015260600190565b602081526000610e916020830184611422565b60208082526026908201527f506f6f6c3a206c6f636b6564416d6f756e7420697320616c726561647920756e6040820152651b1bd8dad95960d21b606082015260800190565b828152604060208201526000610fda6040830184611422565b604051608081016001600160401b03811182821017156115725761157261167a565b60405290565b604051601f8201601f191681016001600160401b03811182821017156115a0576115a061167a565b604052919050565b60006001600160401b038211156115c1576115c161167a565b50601f01601f191660200190565b600082198211156115e2576115e2611664565b500190565b600081600019048311821515161561160157611601611664565b500290565b60008282101561161857611618611664565b500390565b60005b83811015611638578181015183820152602001611620565b83811115611647576000848401525b50505050565b60008161165c5761165c611664565b506000190190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146116a557600080fd5b5056fe9f78baa7a8e3640efadcbedc2d00f5930ade7a7bb66038dbf88684d49972957a02b0c433c31e2b44fbbb341ca2a1a7c86f98b5158b42b073f63efe02d35ea89fa26469706673582212206d1a5b23235b9926794a941c7a6986888afdb1c3cc1de31a138d33e33ad7f45c64736f6c63430008040033",
  "deployedSourceMap": "385:4344:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4516:211;;;;;;:::i;:::-;;:::i;:::-;;;12367:14:27;;12360:22;12342:41;;12330:2;12315:18;4516:211:23;;;;;;;;3289:87;;;;;;:::i;:::-;;:::i;:::-;;3917:121:0;;;;;;:::i;:::-;;:::i;:::-;;;12540:25:27;;;12528:2;12513:18;3917:121:0;12495:76:27;1969:436:23;;;;;;:::i;:::-;;:::i;4288:145:0:-;;;;;;:::i;:::-;;:::i;5305:214::-;;;;;;:::i;:::-;;:::i;3019:126:23:-;;;;;;:::i;:::-;;:::i;487:20::-;;;;;-1:-1:-1;;;;;487:20:23;;;;;;-1:-1:-1;;;;;10894:32:27;;;10876:51;;10864:2;10849:18;487:20:23;10831:102:27;2834:137:0;;;;;;:::i;:::-;;:::i;3653:857:23:-;;;;;;:::i;:::-;;:::i;1952:49:0:-;;1997:4;1952:49;;1136:554:23;;;;;;:::i;:::-;;:::i;562:60::-;;;;;;:::i;:::-;;:::i;:::-;;;;16604:25:27;;;16660:2;16645:18;;16638:34;;;;16715:14;16708:22;16688:18;;;16681:50;16592:2;16577:18;562:60:23;16559:178:27;404:247:8;;;;;;:::i;:::-;-1:-1:-1;;;404:247:8;;;;;;;;;;;-1:-1:-1;;;;;;12738:33:27;;;12720:52;;12708:2;12693:18;404:247:8;12675:103:27;4667:147:0;;;;;;:::i;:::-;;:::i;921:209:23:-;;;;;;:::i;:::-;;:::i;513:43::-;;;;;-1:-1:-1;;;;;513:43:23;;;629:84;;-1:-1:-1;;;;;;;;;;;629:84:23;;179:219:8;;;;;;:::i;:::-;-1:-1:-1;;;179:219:8;;;;;;;;4516:211:23;4657:4;4684:36;4708:11;4684:23;:36::i;:::-;4677:43;4516:211;-1:-1:-1;;4516:211:23:o;3289:87::-;3358:11;3366:2;3358:7;:11::i;:::-;;3289:87;:::o;3917:121:0:-;3983:7;4009:12;;;;;;;;;;:22;;;;3917:121::o;1969:436:23:-;-1:-1:-1;;;;;;;;;;;2430:30:0;682:31:23;666:10:17;2430::0;:30::i;:::-;2181:10:23::1;2165:27;::::0;;;:15:::1;:27;::::0;;;;:34;2159:40;::::1;2151:61;;;::::0;-1:-1:-1;;;2151:61:23;;14213:2:27;2151:61:23::1;::::0;::::1;14195:21:27::0;14252:1;14232:18;;;14225:29;-1:-1:-1;;;14270:18:27;;;14263:38;14318:18;;2151:61:23::1;;;;;;;;;2239:10;2223:27;::::0;;;:15:::1;:27;::::0;;;;;;;2269:44;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;2308:4:::1;2269:44:::0;;;;;;2223:100;;;;::::1;::::0;;;;;;;;;;;;;;::::1;;::::0;;;;;;;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;2223:100:23::1;::::0;::::1;;::::0;;;::::1;::::0;;2333:17;:65;;-1:-1:-1;;;2333:65:23;;-1:-1:-1;;;;;2333:17:23;;::::1;::::0;:22:::1;::::0;:65:::1;::::0;2364:4:::1;::::0;2371:12;;2269:44;;2333:65:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1969:436:::0;;;;;:::o;4288:145:0:-;4371:18;4384:4;4371:12;:18::i;:::-;2430:30;2441:4;666:10:17;2430::0;:30::i;:::-;4401:25:::1;4412:4;4418:7;4401:10;:25::i;:::-;4288:145:::0;;;:::o;5305:214::-;-1:-1:-1;;;;;5400:23:0;;666:10:17;5400:23:0;5392:83;;;;-1:-1:-1;;;5392:83:0;;15716:2:27;5392:83:0;;;15698:21:27;15755:2;15735:18;;;15728:30;15794:34;15774:18;;;15767:62;-1:-1:-1;;;15845:18:27;;;15838:45;15900:19;;5392:83:0;15688:237:27;5392:83:0;5486:26;5498:4;5504:7;5486:11;:26::i;3019:126:23:-;3075:15;3093:11;3101:2;3093:7;:11::i;:::-;3075:29;;3126:2;-1:-1:-1;;;;;;;;;;;3130:7:23;3119:19;;;;12540:25:27;;12528:2;12513:18;;12495:76;3119:19:23;;;;;;;;3019:126;;:::o;2834:137:0:-;2912:4;2935:12;;;;;;;;;;;-1:-1:-1;;;;;2935:29:0;;;;;;;;;;;;;;;2834:137::o;3653:857:23:-;-1:-1:-1;;;;;;;;;;;2430:30:0;682:31:23;666:10:17;2430::0;:30::i;:::-;3869:10:23::1;3824:26;3853:27:::0;;;:15:::1;:27;::::0;;;;:31;;3881:2;;3853:31;::::1;;;-1:-1:-1::0;;;3853:31:23::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;3902:9;::::0;::::1;::::0;3853:31;;-1:-1:-1;3902:9:23::1;;3894:60;;;;-1:-1:-1::0;;;3894:60:23::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3972:16:23;::::1;3964:25;;;::::0;::::1;;4000:9;::::0;::::1;:17:::0;;-1:-1:-1;;4000:17:23::1;::::0;;4067:9;;4012:5:::1;::::0;4058:18;::::1;:39;;4091:6;4058:39;;;4079:9:::0;;4058:39:::1;4108:17;::::0;:162:::1;::::0;-1:-1:-1;;;4108:162:23;;4164:4:::1;4108:162;::::0;::::1;11271:34:27::0;-1:-1:-1;;;;;11341:15:27;;;11321:18;;;11314:43;11373:18;;;11366:34;;;11416:18;;;11409:34;;;11251:3;11459:19;;;11452:32;-1:-1:-1;11500:19:27;;;11493:33;4028:69:23;;-1:-1:-1;4108:17:23;::::1;::::0;:34:::1;::::0;11543:19:27;;4108:162:23::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4280:17:23::1;::::0;:50:::1;::::0;-1:-1:-1;;;4280:50:23;;-1:-1:-1;;;;;11765:32:27;;;4280:50:23::1;::::0;::::1;11747:51:27::0;11814:18;;;11807:34;;;4280:17:23;;::::1;::::0;-1:-1:-1;4280:32:23::1;::::0;-1:-1:-1;11720:18:27;;4280:50:23::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4368:2;:10;;;4345:19;:33;4341:162;;4404:2;-1:-1:-1::0;;;;;;;;;;;4421:19:23::1;4408:2;:10;;;:32;;;;:::i;:::-;4397:44;::::0;12540:25:27;;;12528:2;12513:18;4397:44:23::1;;;;;;;4341:162;;;4466:2;4461:42;4492:2;:10;;;4470:19;:32;;;;:::i;:::-;4461:42;::::0;12540:25:27;;;12528:2;12513:18;4461:42:23::1;;;;;;;4341:162;2470:1:0;;3653:857:23::0;;;;;:::o;1136:554::-;1304:17;;:49;;-1:-1:-1;;;1304:49:23;;-1:-1:-1;;;;;1304:17:23;;;;:28;;:49;;1333:12;;1347:5;;1304:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1283:131;;;;-1:-1:-1;;;1283:131:23;;14549:2:27;1283:131:23;;;14531:21:27;14588:2;14568:18;;;14561:30;14627:34;14607:18;;;14600:62;-1:-1:-1;;;14678:18:27;;;14671:33;14721:19;;1283:131:23;14521:225:27;1283:131:23;1475:17;;:56;;-1:-1:-1;;;1475:56:23;;;;;12540:25:27;;;1427:13:23;;;;-1:-1:-1;;;;;1475:17:23;;;;:42;;12513:18:27;;1475:56:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1475:56:23;;;;;;;;;;;;:::i;:::-;1424:107;;;;;;;;;;;;;1567:5;1549:15;:23;1541:71;;;;-1:-1:-1;;;1541:71:23;;15312:2:27;1541:71:23;;;15294:21:27;15351:2;15331:18;;;15324:30;15390:34;15370:18;;;15363:62;-1:-1:-1;;;15441:18:27;;;15434:33;15484:19;;1541:71:23;15284:225:27;1541:71:23;1643:5;1630:10;:18;1622:61;;;;-1:-1:-1;;;1622:61:23;;14953:2:27;1622:61:23;;;14935:21:27;14992:2;14972:18;;;14965:30;15031:32;15011:18;;;15004:60;15081:18;;1622:61:23;14925:180:27;1622:61:23;1136:554;;;;;:::o;562:60::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;562:60:23;;-1:-1:-1;562:60:23;;;:::o;4667:147:0:-;4751:18;4764:4;4751:12;:18::i;:::-;2430:30;2441:4;666:10:17;2430::0;:30::i;:::-;4781:26:::1;4793:4;4799:7;4781:11;:26::i;921:209:23:-:0;-1:-1:-1;;;;;;;;;;;2430:30:0;682:31:23;666:10:17;2430::0;:30::i;:::-;1076:17:23::1;::::0;:47:::1;::::0;-1:-1:-1;;;1076:47:23;;-1:-1:-1;;;;;1076:17:23;;::::1;::::0;:22:::1;::::0;:47:::1;::::0;1099:4;;1105:12;;1119:3;;1076:47:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;921:209:::0;;;;:::o;312:221:9:-;414:4;-1:-1:-1;;;;;;437:49:9;;-1:-1:-1;;;437:49:9;;:89;;;490:36;514:11;490:23;:36::i;2549:326:23:-;2649:15;-1:-1:-1;;;;;;;;;;;2430:30:0;682:31:23;666:10:17;2430::0;:30::i;:::-;2725:10:23::1;2680:26;2709:27:::0;;;:15:::1;:27;::::0;;;;:31;;2737:2;;2709:31;::::1;;;-1:-1:-1::0;;;2709:31:23::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;2758:9;::::0;::::1;::::0;2709:31;;-1:-1:-1;2758:9:23::1;;2750:60;;;;-1:-1:-1::0;;;2750:60:23::1;;;;;;;:::i;:::-;2820:9;::::0;::::1;:17:::0;;-1:-1:-1;;2820:17:23::1;::::0;;;2858:10:::1;::::0;;2549:326;-1:-1:-1;;;2549:326:23:o;3252:484:0:-;3332:22;3340:4;3346:7;3332;:22::i;:::-;3327:403;;3515:41;3543:7;-1:-1:-1;;;;;3515:41:0;3553:2;3515:19;:41::i;:::-;3627:38;3655:4;3662:2;3627:19;:38::i;:::-;3422:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3422:265:0;;;;;;;;;;-1:-1:-1;;;3370:349:0;;;;;;;:::i;6572:224::-;6646:22;6654:4;6660:7;6646;:22::i;:::-;6641:149;;6684:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6684:29:0;;;;;;;;;:36;;-1:-1:-1;;6684:36:0;6716:4;6684:36;;;6766:12;666:10:17;;587:96;6766:12:0;-1:-1:-1;;;;;6739:40:0;6757:7;-1:-1:-1;;;;;6739:40:0;6751:4;6739:40;;;;;;;;;;6572:224;;:::o;6802:225::-;6876:22;6884:4;6890:7;6876;:22::i;:::-;6872:149;;;6946:5;6914:12;;;;;;;;;;;-1:-1:-1;;;;;6914:29:0;;;;;;;;;;:37;;-1:-1:-1;;6914:37:0;;;6970:40;666:10:17;;6914:12:0;;6970:40;;6946:5;6970:40;6802:225;;:::o;2545:202::-;2630:4;-1:-1:-1;;;;;;2653:47:0;;-1:-1:-1;;;2653:47:0;;:87;;-1:-1:-1;;;;;;;;;;871:40:19;;;2704:36:0;763:155:19;1535:441:18;1610:13;1635:19;1667:10;1671:6;1667:1;:10;:::i;:::-;:14;;1680:1;1667:14;:::i;:::-;-1:-1:-1;;;;;1657:25:18;;;;;-1:-1:-1;;;1657:25:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1657:25:18;;1635:47;;-1:-1:-1;;;1692:6:18;1699:1;1692:9;;;;;;-1:-1:-1;;;1692:9:18;;;;;;;;;;;;:15;-1:-1:-1;;;;;1692:15:18;;;;;;;;;-1:-1:-1;;;1717:6:18;1724:1;1717:9;;;;;;-1:-1:-1;;;1717:9:18;;;;;;;;;;;;:15;-1:-1:-1;;;;;1717:15:18;;;;;;;;-1:-1:-1;1747:9:18;1759:10;1763:6;1759:1;:10;:::i;:::-;:14;;1772:1;1759:14;:::i;:::-;1747:26;;1742:132;1779:1;1775;:5;1742:132;;;-1:-1:-1;;;1826:5:18;1834:3;1826:11;1813:25;;;;;-1:-1:-1;;;1813:25:18;;;;;;;;;;;;1801:6;1808:1;1801:9;;;;;;-1:-1:-1;;;1801:9:18;;;;;;;;;;;;:37;-1:-1:-1;;;;;1801:37:18;;;;;;;;-1:-1:-1;1862:1:18;1852:11;;;;;1782:3;;;:::i;:::-;;;1742:132;;;-1:-1:-1;1891:10:18;;1883:55;;;;-1:-1:-1;;;1883:55:18;;13445:2:27;1883:55:18;;;13427:21:27;;;13464:18;;;13457:30;13523:34;13503:18;;;13496:62;13575:18;;1883:55:18;13417:182:27;1883:55:18;1962:6;1535:441;-1:-1:-1;;;1535:441:18:o;14:336:27:-;78:5;107:52;123:35;151:6;123:35;:::i;:::-;107:52;:::i;:::-;98:61;;182:6;175:5;168:21;222:3;213:6;208:3;204:16;201:25;198:2;;;239:1;236;229:12;198:2;288:6;283:3;276:4;269:5;265:16;252:43;342:1;335:4;326:6;319:5;315:18;311:29;304:40;88:262;;;;;:::o;355:743::-;409:5;462:3;455:4;447:6;443:17;439:27;429:2;;484:5;477;470:20;429:2;511:20;;550:4;-1:-1:-1;;;;;566:26:27;;563:2;;;595:18;;:::i;:::-;641:2;638:1;634:10;664:28;688:2;684;680:11;664:28;:::i;:::-;726:15;;;757:12;;;;789:15;;;823;;;819:24;;816:33;-1:-1:-1;813:2:27;;;866:5;859;852:20;813:2;892:5;883:14;;906:163;920:2;917:1;914:9;906:163;;;977:17;;965:30;;938:1;931:9;;;;;1015:12;;;;1047;;906:163;;;-1:-1:-1;1087:5:27;419:679;-1:-1:-1;;;;;;;419:679:27:o;1103:164::-;1179:13;;1228;;1221:21;1211:32;;1201:2;;1257:1;1254;1247:12;1201:2;1160:107;;;:::o;1272:228::-;1314:5;1367:3;1360:4;1352:6;1348:17;1344:27;1334:2;;1389:5;1382;1375:20;1334:2;1415:79;1490:3;1481:6;1468:20;1461:4;1453:6;1449:17;1415:79;:::i;1505:146::-;1592:13;;1614:31;1592:13;1614:31;:::i;1656:445::-;1710:5;1763:3;1756:4;1748:6;1744:17;1740:27;1730:2;;1785:5;1778;1771:20;1730:2;1818:6;1812:13;1849:48;1865:31;1893:2;1865:31;:::i;1849:48::-;1922:2;1913:7;1906:19;1968:3;1961:4;1956:2;1948:6;1944:15;1940:26;1937:35;1934:2;;;1989:5;1982;1975:20;1934:2;2006:64;2067:2;2060:4;2051:7;2047:18;2040:4;2032:6;2028:17;2006:64;:::i;:::-;2088:7;1720:381;-1:-1:-1;;;;1720:381:27:o;2106:826::-;2174:5;2222:4;2210:9;2205:3;2201:19;2197:30;2194:2;;;2244:5;2237;2230:20;2194:2;2270:22;;:::i;:::-;2315:16;;2261:31;;-1:-1:-1;;;;;;2380:14:27;;;2377:2;;;2407:1;2404;2397:12;2377:2;2434:57;2487:3;2478:6;2467:9;2463:22;2434:57;:::i;:::-;2427:5;2420:72;2538:2;2527:9;2523:18;2517:25;2501:41;;2567:2;2557:8;2554:16;2551:2;;;2583:1;2580;2573:12;2551:2;;2619:59;2674:3;2663:8;2652:9;2648:24;2619:59;:::i;:::-;2614:2;2607:5;2603:14;2596:83;;2724:2;2713:9;2709:18;2703:25;2772:4;2763:7;2759:18;2750:7;2747:31;2737:2;;2792:1;2789;2782:12;2737:2;2823;2812:14;;2805:31;2868:57;2921:2;2906:18;;2868:57;:::i;:::-;2863:2;2856:5;2852:14;2845:81;2184:748;;;;:::o;2937:1111::-;3091:6;3099;3107;3115;3123;3176:3;3164:9;3155:7;3151:23;3147:33;3144:2;;;3198:6;3190;3183:22;3144:2;3242:9;3229:23;3261:31;3286:5;3261:31;:::i;:::-;3311:5;-1:-1:-1;3368:2:27;3353:18;;3340:32;3381:33;3340:32;3381:33;:::i;:::-;3433:7;-1:-1:-1;3491:2:27;3476:18;;3463:32;-1:-1:-1;;;;;3544:14:27;;;3541:2;;;3576:6;3568;3561:22;3541:2;3604:61;3657:7;3648:6;3637:9;3633:22;3604:61;:::i;:::-;3594:71;;3718:2;3707:9;3703:18;3690:32;3674:48;;3747:2;3737:8;3734:16;3731:2;;;3768:6;3760;3753:22;3731:2;3796:63;3851:7;3840:8;3829:9;3825:24;3796:63;:::i;:::-;3786:73;;3912:3;3901:9;3897:19;3884:33;3868:49;;3942:2;3932:8;3929:16;3926:2;;;3963:6;3955;3948:22;3926:2;;3991:51;4034:7;4023:8;4012:9;4008:24;3991:51;:::i;:::-;3981:61;;;3134:914;;;;;;;;:::o;4053:754::-;4157:6;4165;4173;4181;4189;4242:3;4230:9;4221:7;4217:23;4213:33;4210:2;;;4264:6;4256;4249:22;4210:2;4308:9;4295:23;4327:31;4352:5;4327:31;:::i;:::-;4377:5;-1:-1:-1;4434:2:27;4419:18;;4406:32;4447:33;4406:32;4447:33;:::i;:::-;4499:7;-1:-1:-1;4553:2:27;4538:18;;4525:32;;-1:-1:-1;4604:2:27;4589:18;;4576:32;;-1:-1:-1;4659:3:27;4644:19;;4631:33;-1:-1:-1;;;;;4676:30:27;;4673:2;;;4724:6;4716;4709:22;4673:2;4752:49;4793:7;4784:6;4773:9;4769:22;4752:49;:::i;4812:325::-;4880:6;4888;4941:2;4929:9;4920:7;4916:23;4912:32;4909:2;;;4962:6;4954;4947:22;4909:2;5006:9;4993:23;5025:31;5050:5;5025:31;:::i;:::-;5075:5;5127:2;5112:18;;;;5099:32;;-1:-1:-1;;;4899:238:27:o;5142:393::-;5219:6;5227;5235;5288:2;5276:9;5267:7;5263:23;5259:32;5256:2;;;5309:6;5301;5294:22;5256:2;5353:9;5340:23;5372:31;5397:5;5372:31;:::i;:::-;5422:5;5474:2;5459:18;;5446:32;;-1:-1:-1;5525:2:27;5510:18;;;5497:32;;5246:289;-1:-1:-1;;;5246:289:27:o;5540:212::-;5607:6;5660:2;5648:9;5639:7;5635:23;5631:32;5628:2;;;5681:6;5673;5666:22;5628:2;5709:37;5736:9;5709:37;:::i;5757:190::-;5816:6;5869:2;5857:9;5848:7;5844:23;5840:32;5837:2;;;5890:6;5882;5875:22;5837:2;-1:-1:-1;5918:23:27;;5827:120;-1:-1:-1;5827:120:27:o;5952:325::-;6020:6;6028;6081:2;6069:9;6060:7;6056:23;6052:32;6049:2;;;6102:6;6094;6087:22;6049:2;6143:9;6130:23;6120:33;;6203:2;6192:9;6188:18;6175:32;6216:31;6241:5;6216:31;:::i;:::-;6266:5;6256:15;;;6039:238;;;;;:::o;6282:306::-;6340:6;6393:2;6381:9;6372:7;6368:23;6364:32;6361:2;;;6414:6;6406;6399:22;6361:2;6445:23;;-1:-1:-1;;;;;;6497:32:27;;6487:43;;6477:2;;6549:6;6541;6534:22;6593:620;6680:6;6688;6696;6749:2;6737:9;6728:7;6724:23;6720:32;6717:2;;;6770:6;6762;6755:22;6717:2;6802:23;;-1:-1:-1;;;;;6837:30:27;;6834:2;;;6885:6;6877;6870:22;6834:2;6913:22;;6966:4;6958:13;;6954:27;-1:-1:-1;6944:2:27;;7000:6;6992;6985:22;6944:2;7028:75;7095:7;7090:2;7077:16;7070:4;7066:2;7062:13;7028:75;:::i;:::-;7018:85;7150:4;7135:20;;7122:34;;-1:-1:-1;7203:2:27;7188:18;;;7175:32;;6707:506;-1:-1:-1;;;;6707:506:27:o;7218:1391::-;7441:6;7449;7457;7465;7473;7481;7489;7497;7505;7513;7521:7;7575:3;7563:9;7554:7;7550:23;7546:33;7543:2;;;7597:6;7589;7582:22;7543:2;7629:16;;-1:-1:-1;;;;;7657:30:27;;7654:2;;;7705:6;7697;7690:22;7654:2;7733:61;7786:7;7777:6;7766:9;7762:22;7733:61;:::i;:::-;7723:71;;;7834:2;7823:9;7819:18;7813:25;7803:35;;7878:2;7867:9;7863:18;7857:25;7847:35;;7922:2;7911:9;7907:18;7901:25;7891:35;;7972:3;7961:9;7957:19;7951:26;8018:1;8014;8010:2;8006:10;8002:18;7992:8;7989:32;7986:2;;;8039:6;8031;8024:22;7986:2;8067:74;8133:7;8122:8;8111:9;8107:24;8067:74;:::i;:::-;8181:3;8166:19;;8160:26;8232:3;8217:19;;8211:26;8057:84;;-1:-1:-1;8160:26:27;-1:-1:-1;8211:26:27;-1:-1:-1;;;;;;8249:32:27;;8246:2;;;8299:6;8291;8284:22;8246:2;8327:74;8393:7;8382:8;8371:9;8367:24;8327:74;:::i;:::-;8317:84;;;8420:47;8462:3;8451:9;8447:19;8420:47;:::i;:::-;8410:57;;8507:3;8496:9;8492:19;8486:26;8476:36;;8552:3;8541:9;8537:19;8531:26;8521:36;;8598:3;8587:9;8583:19;8577:26;8566:37;;7533:1076;;;;;;;;;;;;;;:::o;8809:462::-;8895:6;8903;8911;8919;8972:3;8960:9;8951:7;8947:23;8943:33;8940:2;;;8994:6;8986;8979:22;8940:2;9035:9;9022:23;9012:33;;9095:2;9084:9;9080:18;9067:32;9108:31;9133:5;9108:31;:::i;:::-;8930:341;;9158:5;;-1:-1:-1;;;;9210:2:27;9195:18;;9182:32;;9261:2;9246:18;9233:32;;8930:341::o;9276:395::-;9362:6;9370;9378;9386;9439:3;9427:9;9418:7;9414:23;9410:33;9407:2;;;9461:6;9453;9446:22;9407:2;-1:-1:-1;;9489:23:27;;;9559:2;9544:18;;9531:32;;-1:-1:-1;9610:2:27;9595:18;;9582:32;;9661:2;9646:18;9633:32;;-1:-1:-1;9397:274:27;-1:-1:-1;9397:274:27:o;9676:258::-;9718:3;9756:5;9750:12;9783:6;9778:3;9771:19;9799:63;9855:6;9848:4;9843:3;9839:14;9832:4;9825:5;9821:16;9799:63;:::i;:::-;9916:2;9895:15;-1:-1:-1;;9891:29:27;9882:39;;;;9923:4;9878:50;;9726:208;-1:-1:-1;;9726:208:27:o;9939:786::-;-1:-1:-1;;;10345:3:27;10338:38;10320:3;10405:6;10399:13;10421:62;10476:6;10471:2;10466:3;10462:12;10455:4;10447:6;10443:17;10421:62;:::i;:::-;-1:-1:-1;;;10542:2:27;10502:16;;;10534:11;;;10527:40;10592:13;;10614:63;10592:13;10663:2;10655:11;;10648:4;10636:17;;10614:63;:::i;:::-;10697:17;10716:2;10693:26;;10328:397;-1:-1:-1;;;;10328:397:27:o;11852:345::-;-1:-1:-1;;;;;12072:32:27;;;;12054:51;;12136:2;12121:18;;12114:34;;;;12179:2;12164:18;;12157:34;12042:2;12027:18;;12009:188::o;13018:220::-;13167:2;13156:9;13149:21;13130:4;13187:45;13228:2;13217:9;13213:18;13205:6;13187:45;:::i;13604:402::-;13806:2;13788:21;;;13845:2;13825:18;;;13818:30;13884:34;13879:2;13864:18;;13857:62;-1:-1:-1;;;13950:2:27;13935:18;;13928:36;13996:3;13981:19;;13778:228::o;16112:291::-;16289:6;16278:9;16271:25;16332:2;16327;16316:9;16312:18;16305:30;16252:4;16352:45;16393:2;16382:9;16378:18;16370:6;16352:45;:::i;16742:253::-;16814:2;16808:9;16856:4;16844:17;;-1:-1:-1;;;;;16876:34:27;;16912:22;;;16873:62;16870:2;;;16938:18;;:::i;:::-;16974:2;16967:22;16788:207;:::o;17000:275::-;17071:2;17065:9;17136:2;17117:13;;-1:-1:-1;;17113:27:27;17101:40;;-1:-1:-1;;;;;17156:34:27;;17192:22;;;17153:62;17150:2;;;17218:18;;:::i;:::-;17254:2;17247:22;17045:230;;-1:-1:-1;17045:230:27:o;17280:186::-;17328:4;-1:-1:-1;;;;;17350:30:27;;17347:2;;;17383:18;;:::i;:::-;-1:-1:-1;17449:2:27;17428:15;-1:-1:-1;;17424:29:27;17455:4;17420:40;;17337:129::o;17471:128::-;17511:3;17542:1;17538:6;17535:1;17532:13;17529:2;;;17548:18;;:::i;:::-;-1:-1:-1;17584:9:27;;17519:80::o;17604:168::-;17644:7;17710:1;17706;17702:6;17698:14;17695:1;17692:21;17687:1;17680:9;17673:17;17669:45;17666:2;;;17717:18;;:::i;:::-;-1:-1:-1;17757:9:27;;17656:116::o;17777:125::-;17817:4;17845:1;17842;17839:8;17836:2;;;17850:18;;:::i;:::-;-1:-1:-1;17887:9:27;;17826:76::o;17907:258::-;17979:1;17989:113;18003:6;18000:1;17997:13;17989:113;;;18079:11;;;18073:18;18060:11;;;18053:39;18025:2;18018:10;17989:113;;;18120:6;18117:1;18114:13;18111:2;;;18155:1;18146:6;18141:3;18137:16;18130:27;18111:2;;17960:205;;;:::o;18170:136::-;18209:3;18237:5;18227:2;;18246:18;;:::i;:::-;-1:-1:-1;;;18282:18:27;;18217:89::o;18311:127::-;18372:10;18367:3;18363:20;18360:1;18353:31;18403:4;18400:1;18393:15;18427:4;18424:1;18417:15;18443:127;18504:10;18499:3;18495:20;18492:1;18485:31;18535:4;18532:1;18525:15;18559:4;18556:1;18549:15;18575:131;-1:-1:-1;;;;;18650:31:27;;18640:42;;18630:2;;18696:1;18693;18686:12;18630:2;18620:86;:::o",
  "language": "Solidity",
  "natspec": {
    "author": "Heisenberg",
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "lock(uint256,uint256,uint256,uint256)": {
        "notice": "Called by BufferCallOptions to lock the funds",
        "params": {
          "amountToLock": "Amount of funds that should be locked in an option",
          "premium": "Fee that the user paid",
          "tournamentId": "Id of the tournament the option is bought for"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "send(uint256,address,uint256,uint256)": {
        "notice": "Called by BufferCallOptions to send funds to liquidity providers after an option's expiration",
        "params": {
          "profit": "Funds that should be sent",
          "to": "Provider",
          "tournamentId": "Id of the tournament the option is bought for"
        }
      },
      "unlock(uint256)": {
        "notice": "Called by BufferOptions to unlock the funds",
        "params": {
          "id": "Id of LockedLiquidity that should be unlocked"
        }
      },
      "unlockWithoutProfit(uint256)": {
        "notice": "Called by BufferOptions to unlock the funds",
        "params": {
          "id": "Id of LockedLiquidity that should be unlocked"
        }
      }
    },
    "notice": "Accumulates liquidity in TokenX from LPs and distributes P&L in TokenX",
    "title": "Buffer TokenX Liquidity Pool",
    "version": 1
  },
  "offset": [
    385,
    4729
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xDBF21B0 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x260E9640 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x6198E339 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0xA134CE5B EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xB53A5F9C EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0xB9CFE348 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xE7A47B1A EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xE9A78824 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xEC277A66 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x2C2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH2 0x12C CALLDATASIZE PUSH1 0x4 PUSH2 0x1202 JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x146 PUSH2 0x141 CALLDATASIZE PUSH1 0x4 PUSH2 0x1202 JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x115 JUMP JUMPDEST PUSH2 0x131 PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F1 JUMP JUMPDEST PUSH2 0x314 JUMP JUMPDEST PUSH2 0x131 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x121A JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH2 0x131 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x121A JUMP JUMPDEST PUSH2 0x468 JUMP JUMPDEST PUSH2 0x131 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x1202 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1B3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x115 JUMP JUMPDEST PUSH2 0x109 PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x121A JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH2 0x131 PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0x13B5 JUMP JUMPDEST PUSH2 0x544 JUMP JUMPDEST PUSH2 0x146 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x131 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST PUSH2 0x21F PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x1189 JUMP JUMPDEST PUSH2 0x98A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x115 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x107A JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x115 JUMP JUMPDEST PUSH2 0x131 PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0x121A JUMP JUMPDEST PUSH2 0x9CF JUMP JUMPDEST PUSH2 0x131 PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1B3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x146 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1123 JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EC DUP3 PUSH2 0xA71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2FB DUP2 PUSH2 0xA96 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x32D DUP2 CALLER PUSH2 0xB2E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP6 EQ PUSH2 0x37B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x15DC9BDB99C81A59 PUSH1 0xC2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP10 DUP2 MSTORE DUP1 DUP5 ADD DUP10 DUP2 MSTORE PUSH1 0x1 DUP3 DUP6 ADD DUP2 DUP2 MSTORE DUP5 SLOAD DUP1 DUP4 ADD DUP7 SSTORE SWAP5 DUP10 MSTORE SWAP6 SWAP1 SWAP8 KECCAK256 SWAP2 MLOAD SWAP3 SWAP1 SWAP6 MUL ADD SWAP1 DUP2 SSTORE SWAP3 MLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD PUSH1 0x2 SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SLOAD SWAP1 MLOAD PUSH4 0xAB714FB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x156E29F6 SWAP1 PUSH2 0x40D SWAP1 ADDRESS SWAP1 DUP7 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x44F DUP3 PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x459 DUP2 CALLER PUSH2 0xB2E JUMP JUMPDEST PUSH2 0x463 DUP4 DUP4 PUSH2 0xB92 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x2FB DUP3 DUP3 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4ED DUP3 PUSH2 0xA96 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH1 0x40 MLOAD PUSH2 0x50F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x55D DUP2 CALLER PUSH2 0xB2E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP1 DUP2 LT PUSH2 0x58C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x14F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 SLOAD PUSH1 0x0 SWAP1 DUP6 GT PUSH2 0x5F3 JUMPI DUP5 PUSH2 0x5F6 JUMP JUMPDEST DUP2 SLOAD JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0xA4 DUP4 ADD MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xF242432A SWAP1 PUSH1 0xC4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x675 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB46B7919 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP10 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP3 POP PUSH4 0xB46B7919 SWAP2 POP PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 PUSH1 0x1 ADD SLOAD DUP2 GT PUSH2 0x720 JUMPI DUP7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x70A SWAP2 SWAP1 PUSH2 0x1606 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x764 JUMP JUMPDEST DUP7 PUSH32 0x86F83F021A5ECB92D6DCAEC11BE9DA0E65B5401CE748AC3C1F0DDBAE029F55CE DUP4 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x752 SWAP2 SWAP1 PUSH2 0x1606 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x701AC31 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x701AC31 SWAP1 PUSH2 0x79F SWAP1 DUP6 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1537 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7EF SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH2 0x847 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696E672069736E277420616C6C6F776564206F6E2074686973206173 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1CD95D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7503E1B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x7503E1B7 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x8CC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x12CF JUMP JUMPDEST POP POP POP POP POP POP POP POP SWAP3 POP SWAP3 POP POP DUP2 TIMESTAMP GT PUSH2 0x934 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F75726E616D656E7420686173206E6F74207374617274656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1E595D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST DUP1 DUP4 LT PUSH2 0x983 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7074696F6E20657870697279206973206F7574206F6620626F756E64730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP4 POP SWAP1 SWAP2 POP PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH2 0x9D8 DUP3 PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x9E2 DUP2 CALLER PUSH2 0xB2E JUMP JUMPDEST PUSH2 0x463 DUP4 DUP4 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xA05 DUP2 CALLER PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7A94C565 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF5298ACA SWAP1 PUSH2 0xA39 SWAP1 DUP8 SWAP1 DUP7 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA67 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0x2EC JUMPI POP PUSH2 0x2EC DUP3 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xAB1 DUP2 CALLER PUSH2 0xB2E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP1 DUP2 LT PUSH2 0xAE0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x14F1 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 ADD SLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB38 DUP3 DUP3 PUSH2 0x51B JUMP JUMPDEST PUSH2 0x2FB JUMPI PUSH2 0xB50 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0xB5B DUP4 PUSH1 0x20 PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB6C SWAP3 SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x372 SWAP2 PUSH1 0x4 ADD PUSH2 0x14DE JUMP JUMPDEST PUSH2 0xB9C DUP3 DUP3 PUSH2 0x51B JUMP JUMPDEST PUSH2 0x2FB JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xBD2 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0xC20 DUP3 DUP3 PUSH2 0x51B JUMP JUMPDEST ISZERO PUSH2 0x2FB JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2EC JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xCBF DUP4 PUSH1 0x2 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0xCCA SWAP1 PUSH1 0x2 PUSH2 0x15CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xCEF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD19 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD42 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xD7F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0xDA3 DUP5 PUSH1 0x2 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0xDAE SWAP1 PUSH1 0x1 PUSH2 0x15CF JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE42 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0xDF0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE14 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0xE3B DUP2 PUSH2 0x164D JUMP JUMPDEST SWAP1 POP PUSH2 0xDB1 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xE91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAB PUSH2 0xEA6 DUP5 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0x1578 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0xEBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEE6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0xF01 JUMPI PUSH2 0xF01 PUSH2 0x167A JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0xF10 DUP3 DUP3 ADD PUSH2 0x1578 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP1 DUP7 DUP5 ADD DUP4 DUP9 ADD DUP6 ADD DUP10 LT ISZERO PUSH2 0xF2A JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP4 POP JUMPDEST DUP6 DUP5 LT ISZERO PUSH2 0xF4C JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 DUP5 ADD PUSH2 0xF2E JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF7D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xE91 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0xE98 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xF68 DUP2 PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFA7 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xFB5 PUSH2 0xEA6 DUP3 PUSH2 0x15A8 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xFC9 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xFDA DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x161D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFF3 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xFFB PUSH2 0x1550 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1015 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1021 DUP6 DUP4 DUP7 ADD PUSH2 0xF97 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1037 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1044 DUP5 DUP3 DUP6 ADD PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x105E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x106F PUSH1 0x60 DUP4 ADD PUSH2 0xF8C JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1091 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x109C DUP2 PUSH2 0x1690 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x10AC DUP2 PUSH2 0x1690 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x10C7 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x10D3 DUP10 DUP4 DUP11 ADD PUSH2 0xED6 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x10E8 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x10F4 DUP10 DUP4 DUP11 ADD PUSH2 0xED6 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1109 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x1116 DUP9 DUP3 DUP10 ADD PUSH2 0xF6D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x113A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1145 DUP2 PUSH2 0x1690 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1155 DUP2 PUSH2 0x1690 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x117D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1116 DUP9 DUP3 DUP10 ADD PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x119B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x11A6 DUP2 PUSH2 0x1690 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11C8 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x11D3 DUP2 PUSH2 0x1690 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xE91 DUP3 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1213 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x122C JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x123E DUP2 PUSH2 0x1690 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x125A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xE91 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1285 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x129A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x12AA JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x12B9 DUP7 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0xE98 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x12F0 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP12 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1305 JUMPI DUP10 DUP11 REVERT JUMPDEST PUSH2 0x1311 DUP15 DUP3 DUP16 ADD PUSH2 0xF97 JUMP JUMPDEST SWAP12 POP POP PUSH1 0x20 DUP13 ADD MLOAD SWAP10 POP PUSH1 0x40 DUP13 ADD MLOAD SWAP9 POP PUSH1 0x60 DUP13 ADD MLOAD SWAP8 POP PUSH1 0x80 DUP13 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1340 JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH2 0x134C DUP15 DUP3 DUP16 ADD PUSH2 0xFE2 JUMP JUMPDEST PUSH1 0xA0 DUP15 ADD MLOAD PUSH1 0xC0 DUP16 ADD MLOAD SWAP2 SWAP10 POP SWAP8 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1370 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x137C DUP15 DUP3 DUP16 ADD PUSH2 0xFE2 JUMP JUMPDEST SWAP6 POP POP PUSH2 0x138B PUSH1 0xE0 DUP14 ADD PUSH2 0xF58 JUMP JUMPDEST SWAP4 POP PUSH2 0x100 DUP13 ADD MLOAD SWAP3 POP PUSH2 0x120 DUP13 ADD MLOAD SWAP2 POP PUSH2 0x140 DUP13 ADD MLOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x13CA JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x13DC DUP2 PUSH2 0x1690 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1406 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x143A DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x161D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH23 0x20B1B1B2B9B9A1B7B73A3937B61D1030B1B1B7BAB73A1 PUSH1 0x4D SHL DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1480 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x161D JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x14B1 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x161D JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xE91 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x506F6F6C3A206C6F636B6564416D6F756E7420697320616C726561647920756E PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1B1BD8DAD959 PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xFDA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1572 JUMPI PUSH2 0x1572 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x15A0 JUMPI PUSH2 0x15A0 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x15C1 JUMPI PUSH2 0x15C1 PUSH2 0x167A JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x15E2 JUMPI PUSH2 0x15E2 PUSH2 0x1664 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1601 JUMPI PUSH2 0x1601 PUSH2 0x1664 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1618 JUMPI PUSH2 0x1618 PUSH2 0x1664 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1638 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1620 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1647 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x165C JUMPI PUSH2 0x165C PUSH2 0x1664 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x16A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID SWAP16 PUSH25 0xBAA7A8E3640EFADCBEDC2D00F5930ADE7A7BB66038DBF88684 0xD4 SWAP10 PUSH19 0x957A02B0C433C31E2B44FBBB341CA2A1A7C86F SWAP9 0xB5 ISZERO DUP12 TIMESTAMP 0xB0 PUSH20 0xF63EFE02D35EA89FA26469706673582212206D1A JUMPDEST 0x23 0x23 JUMPDEST SWAP10 0x26 PUSH26 0x4A941C7A6986888AFDB1C3CC1DE31A138D33E33AD7F45C64736F PUSH13 0x63430008040033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        385,
        4729
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "6": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "DUP1",
      "path": "23"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "REVERT",
      "path": "23"
    },
    "16": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "17": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "POP",
      "path": "23"
    },
    "18": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "21": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "LT",
      "path": "23"
    },
    "22": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF1"
    },
    "25": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "26": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "29": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "SHR",
      "path": "23"
    },
    "32": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "DUP1",
      "path": "23"
    },
    "33": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x1FFC9A7"
    },
    "38": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "EQ",
      "path": "23"
    },
    "39": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF6"
    },
    "42": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "43": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "DUP1",
      "path": "23"
    },
    "44": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xDBF21B0"
    },
    "49": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "EQ",
      "path": "23"
    },
    "50": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11E"
    },
    "53": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "54": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "DUP1",
      "path": "23"
    },
    "55": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x248A9CA3"
    },
    "60": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "EQ",
      "path": "23"
    },
    "61": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x133"
    },
    "64": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "65": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "DUP1",
      "path": "23"
    },
    "66": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x260E9640"
    },
    "71": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "EQ",
      "path": "23"
    },
    "72": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x154"
    },
    "75": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "76": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "DUP1",
      "path": "23"
    },
    "77": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x2F2FF15D"
    },
    "82": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "EQ",
      "path": "23"
    },
    "83": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x167"
    },
    "86": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "87": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "DUP1",
      "path": "23"
    },
    "88": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x36568ABE"
    },
    "93": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "EQ",
      "path": "23"
    },
    "94": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x17A"
    },
    "97": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "98": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "DUP1",
      "path": "23"
    },
    "99": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x6198E339"
    },
    "104": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "EQ",
      "path": "23"
    },
    "105": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x18D"
    },
    "108": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "109": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "DUP1",
      "path": "23"
    },
    "110": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x8DA5CB5B"
    },
    "115": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "EQ",
      "path": "23"
    },
    "116": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A0"
    },
    "119": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "120": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "DUP1",
      "path": "23"
    },
    "121": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x91D14854"
    },
    "126": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "EQ",
      "path": "23"
    },
    "127": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1CB"
    },
    "130": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "131": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "DUP1",
      "path": "23"
    },
    "132": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA134CE5B"
    },
    "137": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "EQ",
      "path": "23"
    },
    "138": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1DE"
    },
    "141": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "142": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "DUP1",
      "path": "23"
    },
    "143": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA217FDDF"
    },
    "148": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "EQ",
      "path": "23"
    },
    "149": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F1"
    },
    "152": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "153": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "DUP1",
      "path": "23"
    },
    "154": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xB53A5F9C"
    },
    "159": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "EQ",
      "path": "23"
    },
    "160": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F9"
    },
    "163": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "164": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "DUP1",
      "path": "23"
    },
    "165": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xB9CFE348"
    },
    "170": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "EQ",
      "path": "23"
    },
    "171": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x20C"
    },
    "174": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "175": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "DUP1",
      "path": "23"
    },
    "176": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xBC197C81"
    },
    "181": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "EQ",
      "path": "23"
    },
    "182": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x23C"
    },
    "185": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "186": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "DUP1",
      "path": "23"
    },
    "187": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xD547741F"
    },
    "192": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "EQ",
      "path": "23"
    },
    "193": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x274"
    },
    "196": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "197": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "DUP1",
      "path": "23"
    },
    "198": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xE7A47B1A"
    },
    "203": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "EQ",
      "path": "23"
    },
    "204": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x287"
    },
    "207": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "208": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "DUP1",
      "path": "23"
    },
    "209": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xE9A78824"
    },
    "214": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "EQ",
      "path": "23"
    },
    "215": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x29A"
    },
    "218": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "219": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "DUP1",
      "path": "23"
    },
    "220": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xEC277A66"
    },
    "225": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "EQ",
      "path": "23"
    },
    "226": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2AD"
    },
    "229": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "230": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "DUP1",
      "path": "23"
    },
    "231": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xF23A6E61"
    },
    "236": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "EQ",
      "path": "23"
    },
    "237": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2C2"
    },
    "240": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "241": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "242": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "244": {
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "DUP1",
      "path": "23"
    },
    "245": {
      "first_revert": true,
      "fn": null,
      "offset": [
        385,
        4729
      ],
      "op": "REVERT",
      "path": "23"
    },
    "246": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4516,
        4727
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "247": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4516,
        4727
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x109"
    },
    "250": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4516,
        4727
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x104"
    },
    "253": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4516,
        4727
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "254": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4516,
        4727
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "256": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4516,
        4727
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1249"
    },
    "259": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "jump": "i",
      "offset": [
        4516,
        4727
      ],
      "op": "JUMP",
      "path": "23"
    },
    "260": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4516,
        4727
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "261": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4516,
        4727
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E1"
    },
    "264": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "jump": "i",
      "offset": [
        4516,
        4727
      ],
      "op": "JUMP",
      "path": "23"
    },
    "265": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4516,
        4727
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "266": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4516,
        4727
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "268": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4516,
        4727
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "269": {
      "op": "SWAP1"
    },
    "270": {
      "op": "ISZERO"
    },
    "271": {
      "op": "ISZERO"
    },
    "272": {
      "op": "DUP2"
    },
    "273": {
      "op": "MSTORE"
    },
    "274": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "276": {
      "op": "ADD"
    },
    "277": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4516,
        4727
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "278": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4516,
        4727
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "280": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4516,
        4727
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "281": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4516,
        4727
      ],
      "op": "DUP1",
      "path": "23"
    },
    "282": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4516,
        4727
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "283": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4516,
        4727
      ],
      "op": "SUB",
      "path": "23"
    },
    "284": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4516,
        4727
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "285": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4516,
        4727
      ],
      "op": "RETURN",
      "path": "23"
    },
    "286": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        3289,
        3376
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "287": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        3289,
        3376
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x131"
    },
    "290": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        3289,
        3376
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x12C"
    },
    "293": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        3289,
        3376
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "294": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        3289,
        3376
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "296": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        3289,
        3376
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1202"
    },
    "299": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "jump": "i",
      "offset": [
        3289,
        3376
      ],
      "op": "JUMP",
      "path": "23"
    },
    "300": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        3289,
        3376
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "301": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        3289,
        3376
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F2"
    },
    "304": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "jump": "i",
      "offset": [
        3289,
        3376
      ],
      "op": "JUMP",
      "path": "23"
    },
    "305": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        3289,
        3376
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "306": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        3289,
        3376
      ],
      "op": "STOP",
      "path": "23"
    },
    "307": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "308": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146"
    },
    "311": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x141"
    },
    "314": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "315": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "317": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1202"
    },
    "320": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        3917,
        4038
      ],
      "op": "JUMP",
      "path": "0"
    },
    "321": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "322": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FF"
    },
    "325": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        3917,
        4038
      ],
      "op": "JUMP",
      "path": "0"
    },
    "326": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "327": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "329": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "330": {
      "op": "SWAP1"
    },
    "331": {
      "op": "DUP2"
    },
    "332": {
      "op": "MSTORE"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "335": {
      "op": "ADD"
    },
    "336": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x115"
    },
    "339": {
      "op": "JUMP"
    },
    "340": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        1969,
        2405
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "341": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        1969,
        2405
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x131"
    },
    "344": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        1969,
        2405
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x162"
    },
    "347": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        1969,
        2405
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "348": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        1969,
        2405
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "350": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        1969,
        2405
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x13F1"
    },
    "353": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "jump": "i",
      "offset": [
        1969,
        2405
      ],
      "op": "JUMP",
      "path": "23"
    },
    "354": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        1969,
        2405
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "355": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        1969,
        2405
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x314"
    },
    "358": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "jump": "i",
      "offset": [
        1969,
        2405
      ],
      "op": "JUMP",
      "path": "23"
    },
    "359": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "360": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131"
    },
    "363": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x175"
    },
    "366": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "367": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "369": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x121A"
    },
    "372": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4288,
        4433
      ],
      "op": "JUMP",
      "path": "0"
    },
    "373": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "374": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x446"
    },
    "377": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4288,
        4433
      ],
      "op": "JUMP",
      "path": "0"
    },
    "378": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "379": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131"
    },
    "382": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x188"
    },
    "385": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "386": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "388": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x121A"
    },
    "391": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5305,
        5519
      ],
      "op": "JUMP",
      "path": "0"
    },
    "392": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "393": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x468"
    },
    "396": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5305,
        5519
      ],
      "op": "JUMP",
      "path": "0"
    },
    "397": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3019,
        3145
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "398": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3019,
        3145
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x131"
    },
    "401": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3019,
        3145
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x19B"
    },
    "404": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3019,
        3145
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "405": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3019,
        3145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "407": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3019,
        3145
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1202"
    },
    "410": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "jump": "i",
      "offset": [
        3019,
        3145
      ],
      "op": "JUMP",
      "path": "23"
    },
    "411": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3019,
        3145
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "412": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3019,
        3145
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4E2"
    },
    "415": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "jump": "i",
      "offset": [
        3019,
        3145
      ],
      "op": "JUMP",
      "path": "23"
    },
    "416": {
      "offset": [
        487,
        507
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "417": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        487,
        507
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "419": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        487,
        507
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "420": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        487,
        507
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B3"
    },
    "423": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        487,
        507
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "430": {
      "op": "SHL"
    },
    "431": {
      "op": "SUB"
    },
    "432": {
      "offset": [
        487,
        507
      ],
      "op": "AND",
      "path": "23"
    },
    "433": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        487,
        507
      ],
      "op": "DUP2",
      "path": "23"
    },
    "434": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        487,
        507
      ],
      "op": "JUMP",
      "path": "23"
    },
    "435": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        487,
        507
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "436": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        487,
        507
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "438": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        487,
        507
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "445": {
      "op": "SHL"
    },
    "446": {
      "op": "SUB"
    },
    "447": {
      "op": "SWAP1"
    },
    "448": {
      "op": "SWAP2"
    },
    "449": {
      "op": "AND"
    },
    "450": {
      "op": "DUP2"
    },
    "451": {
      "op": "MSTORE"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "454": {
      "op": "ADD"
    },
    "455": {
      "offset": [
        487,
        507
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x115"
    },
    "458": {
      "op": "JUMP"
    },
    "459": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "460": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x109"
    },
    "463": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D9"
    },
    "466": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "467": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "469": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x121A"
    },
    "472": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2834,
        2971
      ],
      "op": "JUMP",
      "path": "0"
    },
    "473": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "474": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51B"
    },
    "477": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2834,
        2971
      ],
      "op": "JUMP",
      "path": "0"
    },
    "478": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3653,
        4510
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "479": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3653,
        4510
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x131"
    },
    "482": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3653,
        4510
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1EC"
    },
    "485": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3653,
        4510
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "486": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3653,
        4510
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "488": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3653,
        4510
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x13B5"
    },
    "491": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "jump": "i",
      "offset": [
        3653,
        4510
      ],
      "op": "JUMP",
      "path": "23"
    },
    "492": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3653,
        4510
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "493": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3653,
        4510
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x544"
    },
    "496": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "jump": "i",
      "offset": [
        3653,
        4510
      ],
      "op": "JUMP",
      "path": "23"
    },
    "497": {
      "offset": [
        1952,
        2001
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "498": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        1952,
        2001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146"
    },
    "501": {
      "offset": [
        1997,
        2001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "503": {
      "offset": [
        1952,
        2001
      ],
      "op": "DUP2",
      "path": "0"
    },
    "504": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        1952,
        2001
      ],
      "op": "JUMP",
      "path": "0"
    },
    "505": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1136,
        1690
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "506": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1136,
        1690
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x131"
    },
    "509": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1136,
        1690
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x207"
    },
    "512": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1136,
        1690
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "513": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1136,
        1690
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "515": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1136,
        1690
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1271"
    },
    "518": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "jump": "i",
      "offset": [
        1136,
        1690
      ],
      "op": "JUMP",
      "path": "23"
    },
    "519": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1136,
        1690
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "520": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1136,
        1690
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x76D"
    },
    "523": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "jump": "i",
      "offset": [
        1136,
        1690
      ],
      "op": "JUMP",
      "path": "23"
    },
    "524": {
      "offset": [
        562,
        622
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "525": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21F"
    },
    "528": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21A"
    },
    "531": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "532": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "534": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1189"
    },
    "537": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "jump": "i",
      "offset": [
        562,
        622
      ],
      "op": "JUMP",
      "path": "23"
    },
    "538": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "539": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x98A"
    },
    "542": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "jump": "i",
      "offset": [
        562,
        622
      ],
      "op": "JUMP",
      "path": "23"
    },
    "543": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "544": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "546": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "DUP1",
      "path": "23"
    },
    "547": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "548": {
      "op": "SWAP4"
    },
    "549": {
      "op": "DUP5"
    },
    "550": {
      "op": "MSTORE"
    },
    "551": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "553": {
      "op": "DUP5"
    },
    "554": {
      "op": "ADD"
    },
    "555": {
      "op": "SWAP3"
    },
    "556": {
      "op": "SWAP1"
    },
    "557": {
      "op": "SWAP3"
    },
    "558": {
      "op": "MSTORE"
    },
    "559": {
      "op": "ISZERO"
    },
    "560": {
      "op": "ISZERO"
    },
    "561": {
      "op": "SWAP1"
    },
    "562": {
      "op": "DUP3"
    },
    "563": {
      "op": "ADD"
    },
    "564": {
      "op": "MSTORE"
    },
    "565": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "567": {
      "op": "ADD"
    },
    "568": {
      "offset": [
        562,
        622
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x115"
    },
    "571": {
      "op": "JUMP"
    },
    "572": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "573": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x25B"
    },
    "576": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24A"
    },
    "579": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "580": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "582": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x107A"
    },
    "585": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "jump": "i",
      "offset": [
        404,
        651
      ],
      "op": "JUMP",
      "path": "8"
    },
    "586": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "587": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "592": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "594": {
      "op": "SHL"
    },
    "595": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "596": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "597": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "8"
    },
    "598": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "8"
    },
    "599": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "8"
    },
    "600": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "8"
    },
    "601": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "8"
    },
    "602": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMP",
      "path": "8"
    },
    "603": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "604": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "606": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "611": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "613": {
      "op": "SHL"
    },
    "614": {
      "op": "SUB"
    },
    "615": {
      "op": "NOT"
    },
    "616": {
      "op": "SWAP1"
    },
    "617": {
      "op": "SWAP2"
    },
    "618": {
      "op": "AND"
    },
    "619": {
      "op": "DUP2"
    },
    "620": {
      "op": "MSTORE"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "623": {
      "op": "ADD"
    },
    "624": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x115"
    },
    "627": {
      "op": "JUMP"
    },
    "628": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "629": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131"
    },
    "632": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x282"
    },
    "635": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "636": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "638": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x121A"
    },
    "641": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        4667,
        4814
      ],
      "op": "JUMP",
      "path": "0"
    },
    "642": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "643": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CF"
    },
    "646": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        4667,
        4814
      ],
      "op": "JUMP",
      "path": "0"
    },
    "647": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        921,
        1130
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "648": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        921,
        1130
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x131"
    },
    "651": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        921,
        1130
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x295"
    },
    "654": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        921,
        1130
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "655": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        921,
        1130
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "657": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        921,
        1130
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11B4"
    },
    "660": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "jump": "i",
      "offset": [
        921,
        1130
      ],
      "op": "JUMP",
      "path": "23"
    },
    "661": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        921,
        1130
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "662": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        921,
        1130
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9EC"
    },
    "665": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "jump": "i",
      "offset": [
        921,
        1130
      ],
      "op": "JUMP",
      "path": "23"
    },
    "666": {
      "offset": [
        513,
        556
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "667": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        513,
        556
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "669": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        513,
        556
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "670": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        513,
        556
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B3"
    },
    "673": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        513,
        556
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "680": {
      "op": "SHL"
    },
    "681": {
      "op": "SUB"
    },
    "682": {
      "offset": [
        513,
        556
      ],
      "op": "AND",
      "path": "23"
    },
    "683": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        513,
        556
      ],
      "op": "DUP2",
      "path": "23"
    },
    "684": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        513,
        556
      ],
      "op": "JUMP",
      "path": "23"
    },
    "685": {
      "offset": [
        629,
        713
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "686": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        629,
        713
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x146"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "691": {
      "op": "DUP1"
    },
    "692": {
      "op": "MLOAD"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "695": {
      "op": "PUSH2",
      "value": "0x16C9"
    },
    "698": {
      "op": "DUP4"
    },
    "699": {
      "op": "CODECOPY"
    },
    "700": {
      "op": "DUP2"
    },
    "701": {
      "op": "MLOAD"
    },
    "702": {
      "op": "SWAP2"
    },
    "703": {
      "op": "MSTORE"
    },
    "704": {
      "offset": [
        629,
        713
      ],
      "op": "DUP2",
      "path": "23"
    },
    "705": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        629,
        713
      ],
      "op": "JUMP",
      "path": "23"
    },
    "706": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "707": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x25B"
    },
    "710": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2D0"
    },
    "713": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "714": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "716": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1123"
    },
    "719": {
      "fn": "ERC1155Holder.onERC1155Received",
      "jump": "i",
      "offset": [
        179,
        398
      ],
      "op": "JUMP",
      "path": "8"
    },
    "720": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "721": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "726": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "728": {
      "op": "SHL"
    },
    "729": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "730": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "731": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "8"
    },
    "732": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "8"
    },
    "733": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "8"
    },
    "734": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "8"
    },
    "735": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "8"
    },
    "736": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMP",
      "path": "8"
    },
    "737": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4516,
        4727
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "738": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4657,
        4661
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "740": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4684,
        4720
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 0,
      "value": "0x2EC"
    },
    "743": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4708,
        4719
      ],
      "op": "DUP3",
      "path": "23"
    },
    "744": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4684,
        4707
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA71"
    },
    "747": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "jump": "i",
      "offset": [
        4684,
        4720
      ],
      "op": "JUMP",
      "path": "23"
    },
    "748": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4684,
        4720
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "749": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4677,
        4720
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "750": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "offset": [
        4516,
        4727
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "751": {
      "op": "POP"
    },
    "752": {
      "op": "POP"
    },
    "753": {
      "fn": "BufferBinaryIBFRPoolBinary.supportsInterface",
      "jump": "o",
      "offset": [
        4516,
        4727
      ],
      "op": "JUMP",
      "path": "23"
    },
    "754": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        3289,
        3376
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "755": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        3358,
        3369
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 1,
      "value": "0x2FB"
    },
    "758": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        3366,
        3368
      ],
      "op": "DUP2",
      "path": "23"
    },
    "759": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        3358,
        3365
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA96"
    },
    "762": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "jump": "i",
      "offset": [
        3358,
        3369
      ],
      "op": "JUMP",
      "path": "23"
    },
    "763": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        3358,
        3369
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "764": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        3358,
        3369
      ],
      "op": "POP",
      "path": "23"
    },
    "765": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "offset": [
        3289,
        3376
      ],
      "op": "POP",
      "path": "23"
    },
    "766": {
      "fn": "BufferBinaryIBFRPoolBinary.unlockWithoutProfit",
      "jump": "o",
      "offset": [
        3289,
        3376
      ],
      "op": "JUMP",
      "path": "23"
    },
    "767": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "768": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3983,
        3990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "770": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 2
    },
    "771": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "772": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "773": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "775": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "776": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "777": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "778": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "780": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "781": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "782": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4031
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "784": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4031
      ],
      "op": "ADD",
      "path": "0"
    },
    "785": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4031
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "786": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4031
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "787": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "o",
      "offset": [
        3917,
        4038
      ],
      "op": "JUMP",
      "path": "0"
    },
    "788": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        1969,
        2405
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "791": {
      "op": "DUP1"
    },
    "792": {
      "op": "MLOAD"
    },
    "793": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "795": {
      "op": "PUSH2",
      "value": "0x16C9"
    },
    "798": {
      "op": "DUP4"
    },
    "799": {
      "op": "CODECOPY"
    },
    "800": {
      "op": "DUP2"
    },
    "801": {
      "op": "MLOAD"
    },
    "802": {
      "op": "SWAP2"
    },
    "803": {
      "op": "MSTORE"
    },
    "804": {
      "offset": [
        2430,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32D"
    },
    "807": {
      "offset": [
        682,
        713
      ],
      "op": "DUP2",
      "path": "23"
    },
    "808": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17",
      "statement": 3
    },
    "809": {
      "offset": [
        2430,
        2440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2E"
    },
    "812": {
      "jump": "i",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "813": {
      "fn": "Context._msgSender",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "814": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2181,
        2191
      ],
      "op": "CALLER",
      "path": "23",
      "statement": 4
    },
    "815": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2165,
        2192
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "817": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2165,
        2192
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "818": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2165,
        2192
      ],
      "op": "DUP2",
      "path": "23"
    },
    "819": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2165,
        2192
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "820": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2165,
        2180
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "822": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2165,
        2192
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "824": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2165,
        2192
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "825": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2165,
        2192
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "827": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2165,
        2192
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "828": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2165,
        2192
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "829": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2165,
        2199
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "830": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2159,
        2199
      ],
      "op": "DUP6",
      "path": "23"
    },
    "831": {
      "branch": 35,
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2159,
        2199
      ],
      "op": "EQ",
      "path": "23"
    },
    "832": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2151,
        2212
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x37B"
    },
    "835": {
      "branch": 35,
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2151,
        2212
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "836": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2151,
        2212
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "838": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2151,
        2212
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "839": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "843": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "845": {
      "op": "SHL"
    },
    "846": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2151,
        2212
      ],
      "op": "DUP2",
      "path": "23"
    },
    "847": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2151,
        2212
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "850": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2151,
        2212
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "852": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2151,
        2212
      ],
      "op": "DUP3",
      "path": "23"
    },
    "853": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2151,
        2212
      ],
      "op": "ADD",
      "path": "23"
    },
    "854": {
      "op": "MSTORE"
    },
    "855": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "857": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "859": {
      "op": "DUP3"
    },
    "860": {
      "op": "ADD"
    },
    "861": {
      "op": "MSTORE"
    },
    "862": {
      "op": "PUSH8",
      "value": "0x15DC9BDB99C81A59"
    },
    "871": {
      "op": "PUSH1",
      "value": "0xC2"
    },
    "873": {
      "op": "SHL"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "876": {
      "op": "DUP3"
    },
    "877": {
      "op": "ADD"
    },
    "878": {
      "op": "MSTORE"
    },
    "879": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "881": {
      "op": "ADD"
    },
    "882": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2151,
        2212
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "883": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2151,
        2212
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "885": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2151,
        2212
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "886": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2151,
        2212
      ],
      "op": "DUP1",
      "path": "23"
    },
    "887": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2151,
        2212
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "888": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2151,
        2212
      ],
      "op": "SUB",
      "path": "23"
    },
    "889": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2151,
        2212
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "890": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2151,
        2212
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "23"
    },
    "891": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2151,
        2212
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "892": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2239,
        2249
      ],
      "op": "CALLER",
      "path": "23",
      "statement": 5
    },
    "893": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2250
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "895": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2250
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "896": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2250
      ],
      "op": "DUP2",
      "path": "23"
    },
    "897": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2250
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "898": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2238
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "900": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2250
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "902": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2250
      ],
      "op": "DUP2",
      "path": "23"
    },
    "903": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2250
      ],
      "op": "DUP2",
      "path": "23"
    },
    "904": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2250
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "905": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2250
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "907": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2250
      ],
      "op": "DUP1",
      "path": "23"
    },
    "908": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2250
      ],
      "op": "DUP5",
      "path": "23"
    },
    "909": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2250
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "910": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "DUP2",
      "path": "23"
    },
    "911": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "912": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "914": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "DUP2",
      "path": "23"
    },
    "915": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "ADD",
      "path": "23"
    },
    "916": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "DUP4",
      "path": "23"
    },
    "917": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "918": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "DUP10",
      "path": "23"
    },
    "919": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "DUP2",
      "path": "23"
    },
    "920": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "921": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "DUP1",
      "path": "23"
    },
    "922": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "DUP5",
      "path": "23"
    },
    "923": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "ADD",
      "path": "23"
    },
    "924": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "DUP10",
      "path": "23"
    },
    "925": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "DUP2",
      "path": "23"
    },
    "926": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "927": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2308,
        2312
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "929": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "DUP3",
      "path": "23"
    },
    "930": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "DUP6",
      "path": "23"
    },
    "931": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "ADD",
      "path": "23"
    },
    "932": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "DUP2",
      "path": "23"
    },
    "933": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "DUP2",
      "path": "23"
    },
    "934": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "935": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "DUP5",
      "path": "23"
    },
    "936": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "937": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "DUP1",
      "path": "23"
    },
    "938": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "DUP4",
      "path": "23"
    },
    "939": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "ADD",
      "path": "23"
    },
    "940": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "DUP7",
      "path": "23"
    },
    "941": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "942": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "943": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "DUP10",
      "path": "23"
    },
    "944": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "945": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "946": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "947": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SWAP8",
      "path": "23"
    },
    "948": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "949": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "950": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "951": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "952": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "953": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "954": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "MUL",
      "path": "23"
    },
    "955": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "ADD",
      "path": "23"
    },
    "956": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "957": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "DUP2",
      "path": "23"
    },
    "958": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "959": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "960": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "961": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "962": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "DUP4",
      "path": "23"
    },
    "963": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "ADD",
      "path": "23"
    },
    "964": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "965": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "966": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "967": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "968": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "969": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "971": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "972": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "DUP3",
      "path": "23"
    },
    "973": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "ADD",
      "path": "23"
    },
    "974": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "DUP1",
      "path": "23"
    },
    "975": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "976": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "978": {
      "op": "NOT"
    },
    "979": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "AND",
      "path": "23"
    },
    "980": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "981": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "982": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "983": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "984": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "985": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "986": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "OR",
      "path": "23"
    },
    "987": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "988": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2223,
        2323
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "989": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2350
      ],
      "op": "SLOAD",
      "path": "23",
      "statement": 6
    },
    "990": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "991": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "992": {
      "op": "PUSH4",
      "value": "0xAB714FB"
    },
    "997": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "999": {
      "op": "SHL"
    },
    "1000": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1001": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1008": {
      "op": "SHL"
    },
    "1009": {
      "op": "SUB"
    },
    "1010": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2350
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1011": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2350
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1012": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2350
      ],
      "op": "AND",
      "path": "23"
    },
    "1013": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2350
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1014": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2355
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x156E29F6"
    },
    "1019": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2355
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1020": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x40D"
    },
    "1023": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1024": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2364,
        2368
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "1025": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2364,
        2368
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1026": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2371,
        2383
      ],
      "op": "DUP7",
      "path": "23"
    },
    "1027": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2371,
        2383
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1028": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "DUP10",
      "path": "23"
    },
    "1029": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2269,
        2313
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1030": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1032": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "ADD",
      "path": "23"
    },
    "1033": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14BD"
    },
    "1036": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "jump": "i",
      "offset": [
        2333,
        2398
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1037": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1038": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1040": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1042": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1043": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1044": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1045": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "SUB",
      "path": "23"
    },
    "1046": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1047": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1049": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "DUP8",
      "path": "23"
    },
    "1050": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1051": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "1052": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1053": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1054": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1055": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x427"
    },
    "1058": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1059": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1061": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1062": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1063": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1064": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "POP",
      "path": "23"
    },
    "1065": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "GAS",
      "path": "23"
    },
    "1066": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "CALL",
      "path": "23"
    },
    "1067": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1068": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1069": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1070": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x43B"
    },
    "1073": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1074": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "1075": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1077": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1078": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "1079": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "1080": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1082": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1083": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1084": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "POP",
      "path": "23"
    },
    "1085": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "POP",
      "path": "23"
    },
    "1086": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "POP",
      "path": "23"
    },
    "1087": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        2333,
        2398
      ],
      "op": "POP",
      "path": "23"
    },
    "1088": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        1969,
        2405
      ],
      "op": "POP",
      "path": "23"
    },
    "1089": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        1969,
        2405
      ],
      "op": "POP",
      "path": "23"
    },
    "1090": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        1969,
        2405
      ],
      "op": "POP",
      "path": "23"
    },
    "1091": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        1969,
        2405
      ],
      "op": "POP",
      "path": "23"
    },
    "1092": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "offset": [
        1969,
        2405
      ],
      "op": "POP",
      "path": "23"
    },
    "1093": {
      "fn": "BufferBinaryIBFRPoolBinary.lock",
      "jump": "o",
      "offset": [
        1969,
        2405
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1094": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1095": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4371,
        4389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44F"
    },
    "1098": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4384,
        4388
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1099": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4371,
        4383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FF"
    },
    "1102": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4371,
        4389
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1103": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4371,
        4389
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1104": {
      "offset": [
        2430,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x459"
    },
    "1107": {
      "offset": [
        2441,
        2445
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1108": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1109": {
      "offset": [
        2430,
        2440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2E"
    },
    "1112": {
      "jump": "i",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1113": {
      "fn": "Context._msgSender",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1114": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4401,
        4426
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 7,
      "value": "0x463"
    },
    "1117": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4412,
        4416
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1118": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4418,
        4425
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1119": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4401,
        4411
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB92"
    },
    "1122": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4401,
        4426
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1123": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4401,
        4426
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1124": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "POP",
      "path": "0"
    },
    "1125": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "POP",
      "path": "0"
    },
    "1126": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "POP",
      "path": "0"
    },
    "1127": {
      "fn": "AccessControl.grantRole",
      "jump": "o",
      "offset": [
        4288,
        4433
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1128": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1135": {
      "op": "SHL"
    },
    "1136": {
      "op": "SUB"
    },
    "1137": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5400,
        5423
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 8
    },
    "1138": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5400,
        5423
      ],
      "op": "AND",
      "path": "0"
    },
    "1139": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1140": {
      "branch": 44,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5400,
        5423
      ],
      "op": "EQ",
      "path": "0"
    },
    "1141": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D8"
    },
    "1144": {
      "branch": 44,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1145": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1147": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1148": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1154": {
      "op": "SHL"
    },
    "1155": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1156": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1159": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1161": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1162": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "ADD",
      "path": "0"
    },
    "1163": {
      "op": "MSTORE"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1168": {
      "op": "DUP3"
    },
    "1169": {
      "op": "ADD"
    },
    "1170": {
      "op": "MSTORE"
    },
    "1171": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1206": {
      "op": "DUP3"
    },
    "1207": {
      "op": "ADD"
    },
    "1208": {
      "op": "MSTORE"
    },
    "1209": {
      "op": "PUSH15",
      "value": "0x103937B632B9903337B91039B2B633"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1227": {
      "op": "SHL"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1230": {
      "op": "DUP3"
    },
    "1231": {
      "op": "ADD"
    },
    "1232": {
      "op": "MSTORE"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1235": {
      "op": "ADD"
    },
    "1236": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x372"
    },
    "1239": {
      "op": "JUMP"
    },
    "1240": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1241": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5486,
        5512
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 9,
      "value": "0x2FB"
    },
    "1244": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5498,
        5502
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1245": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5504,
        5511
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1246": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5486,
        5497
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC16"
    },
    "1249": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5486,
        5512
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1250": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3019,
        3145
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1251": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3075,
        3090
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1253": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3093,
        3104
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4ED"
    },
    "1256": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3101,
        3103
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1257": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3093,
        3100
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA96"
    },
    "1260": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "jump": "i",
      "offset": [
        3093,
        3104
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1261": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3093,
        3104
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1262": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3075,
        3104
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1263": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3075,
        3104
      ],
      "op": "POP",
      "path": "23"
    },
    "1264": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3126,
        3128
      ],
      "op": "DUP2",
      "path": "23",
      "statement": 10
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1267": {
      "op": "DUP1"
    },
    "1268": {
      "op": "MLOAD"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1271": {
      "op": "PUSH2",
      "value": "0x16A9"
    },
    "1274": {
      "op": "DUP4"
    },
    "1275": {
      "op": "CODECOPY"
    },
    "1276": {
      "op": "DUP2"
    },
    "1277": {
      "op": "MLOAD"
    },
    "1278": {
      "op": "SWAP2"
    },
    "1279": {
      "op": "MSTORE"
    },
    "1280": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3130,
        3137
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1281": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3119,
        3138
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1283": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3119,
        3138
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1284": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3119,
        3138
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x50F"
    },
    "1287": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3119,
        3138
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1288": {
      "op": "DUP2"
    },
    "1289": {
      "op": "MSTORE"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1292": {
      "op": "ADD"
    },
    "1293": {
      "op": "SWAP1"
    },
    "1294": {
      "op": "JUMP"
    },
    "1295": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3119,
        3138
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1296": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3119,
        3138
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1298": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3119,
        3138
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1299": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3119,
        3138
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1300": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3119,
        3138
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1301": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3119,
        3138
      ],
      "op": "SUB",
      "path": "23"
    },
    "1302": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3119,
        3138
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1303": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3119,
        3138
      ],
      "op": "LOG2",
      "path": "23"
    },
    "1304": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3019,
        3145
      ],
      "op": "POP",
      "path": "23"
    },
    "1305": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "offset": [
        3019,
        3145
      ],
      "op": "POP",
      "path": "23"
    },
    "1306": {
      "fn": "BufferBinaryIBFRPoolBinary.unlock",
      "jump": "o",
      "offset": [
        3019,
        3145
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1307": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1308": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2912,
        2916
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1310": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 11
    },
    "1311": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1312": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1313": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1315": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1316": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1317": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1318": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1320": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1321": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1322": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1329": {
      "op": "SHL"
    },
    "1330": {
      "op": "SUB"
    },
    "1331": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1332": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1333": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1334": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "AND",
      "path": "0"
    },
    "1335": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1336": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1337": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1338": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1339": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1340": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1341": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1342": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1343": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1345": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "AND",
      "path": "0"
    },
    "1346": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1347": {
      "fn": "AccessControl.hasRole",
      "jump": "o",
      "offset": [
        2834,
        2971
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1348": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3653,
        4510
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1351": {
      "op": "DUP1"
    },
    "1352": {
      "op": "MLOAD"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1355": {
      "op": "PUSH2",
      "value": "0x16C9"
    },
    "1358": {
      "op": "DUP4"
    },
    "1359": {
      "op": "CODECOPY"
    },
    "1360": {
      "op": "DUP2"
    },
    "1361": {
      "op": "MLOAD"
    },
    "1362": {
      "op": "SWAP2"
    },
    "1363": {
      "op": "MSTORE"
    },
    "1364": {
      "offset": [
        2430,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55D"
    },
    "1367": {
      "offset": [
        682,
        713
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1368": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1369": {
      "offset": [
        2430,
        2440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2E"
    },
    "1372": {
      "jump": "i",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1373": {
      "fn": "Context._msgSender",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1374": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3869,
        3879
      ],
      "op": "CALLER",
      "path": "23"
    },
    "1375": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3824,
        3850
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1377": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3880
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1378": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3880
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1379": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3880
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1380": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3868
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "1382": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3880
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1384": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3880
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1385": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3880
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1387": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3880
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1388": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3880
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "1389": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1390": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1391": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3881,
        3883
      ],
      "op": "DUP8",
      "path": "23"
    },
    "1392": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3881,
        3883
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1393": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1394": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "LT",
      "path": "23"
    },
    "1395": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x58C"
    },
    "1398": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1399": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1406": {
      "op": "SHL"
    },
    "1407": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1409": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1410": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x32"
    },
    "1412": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1414": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1415": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "1417": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1419": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1420": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1421": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1423": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1424": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1425": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1426": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1428": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1429": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1430": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "1431": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "1433": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1434": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1435": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "MUL",
      "path": "23"
    },
    "1436": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "ADD",
      "path": "23"
    },
    "1437": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3902,
        3911
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 12,
      "value": "0x2"
    },
    "1439": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3902,
        3911
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1440": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3902,
        3911
      ],
      "op": "ADD",
      "path": "23"
    },
    "1441": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3902,
        3911
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1442": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1443": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3853,
        3884
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1444": {
      "op": "POP"
    },
    "1445": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3902,
        3911
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "1447": {
      "branch": 36,
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3902,
        3911
      ],
      "op": "AND",
      "path": "23"
    },
    "1448": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3894,
        3954
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5C3"
    },
    "1451": {
      "branch": 36,
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3894,
        3954
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1452": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3894,
        3954
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1454": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3894,
        3954
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1455": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1461": {
      "op": "SHL"
    },
    "1462": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3894,
        3954
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1463": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3894,
        3954
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1464": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3894,
        3954
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1466": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3894,
        3954
      ],
      "op": "ADD",
      "path": "23"
    },
    "1467": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3894,
        3954
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x372"
    },
    "1470": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3894,
        3954
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1471": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3894,
        3954
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14F1"
    },
    "1474": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "jump": "i",
      "offset": [
        3894,
        3954
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1475": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3894,
        3954
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1482": {
      "op": "SHL"
    },
    "1483": {
      "op": "SUB"
    },
    "1484": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3972,
        3988
      ],
      "op": "DUP6",
      "path": "23",
      "statement": 13
    },
    "1485": {
      "branch": 37,
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3972,
        3988
      ],
      "op": "AND",
      "path": "23"
    },
    "1486": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3964,
        3989
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5D6"
    },
    "1489": {
      "branch": 37,
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3964,
        3989
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1490": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3964,
        3989
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1492": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3964,
        3989
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1493": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3964,
        3989
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1494": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3964,
        3989
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1495": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4000,
        4009
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 14,
      "value": "0x2"
    },
    "1497": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4000,
        4009
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1498": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4000,
        4009
      ],
      "op": "ADD",
      "path": "23"
    },
    "1499": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4000,
        4017
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1500": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4000,
        4017
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1503": {
      "op": "NOT"
    },
    "1504": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4000,
        4017
      ],
      "op": "AND",
      "path": "23"
    },
    "1505": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4000,
        4017
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1506": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4000,
        4017
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "1507": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4067,
        4076
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1508": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4067,
        4076
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1509": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4012,
        4017
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1511": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4012,
        4017
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1512": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4058,
        4076
      ],
      "op": "DUP6",
      "path": "23"
    },
    "1513": {
      "branch": 38,
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4058,
        4076
      ],
      "op": "GT",
      "path": "23"
    },
    "1514": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4058,
        4097
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5F3"
    },
    "1517": {
      "branch": 38,
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4058,
        4097
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1518": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4091,
        4097
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1519": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4058,
        4097
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5F6"
    },
    "1522": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4058,
        4097
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1523": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4058,
        4097
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1524": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4079,
        4088
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1525": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4079,
        4088
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1526": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4058,
        4097
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1527": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4125
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 15,
      "value": "0x2"
    },
    "1529": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4125
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1530": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1532": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1533": {
      "op": "PUSH4",
      "value": "0x79212195"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1540": {
      "op": "SHL"
    },
    "1541": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1542": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1543": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4164,
        4168
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "1544": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1546": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1547": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "ADD",
      "path": "23"
    },
    "1548": {
      "op": "MSTORE"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1555": {
      "op": "SHL"
    },
    "1556": {
      "op": "SUB"
    },
    "1557": {
      "op": "DUP10"
    },
    "1558": {
      "op": "DUP2"
    },
    "1559": {
      "op": "AND"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1562": {
      "op": "DUP4"
    },
    "1563": {
      "op": "ADD"
    },
    "1564": {
      "op": "MSTORE"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1567": {
      "op": "DUP3"
    },
    "1568": {
      "op": "ADD"
    },
    "1569": {
      "op": "DUP9"
    },
    "1570": {
      "op": "SWAP1"
    },
    "1571": {
      "op": "MSTORE"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1574": {
      "op": "DUP3"
    },
    "1575": {
      "op": "ADD"
    },
    "1576": {
      "op": "DUP5"
    },
    "1577": {
      "op": "SWAP1"
    },
    "1578": {
      "op": "MSTORE"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1583": {
      "op": "DUP4"
    },
    "1584": {
      "op": "ADD"
    },
    "1585": {
      "op": "MSTORE"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "1590": {
      "op": "DUP4"
    },
    "1591": {
      "op": "ADD"
    },
    "1592": {
      "op": "MSTORE"
    },
    "1593": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4028,
        4097
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1594": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4028,
        4097
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "1595": {
      "op": "POP"
    },
    "1596": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4125
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1597": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4125
      ],
      "op": "AND",
      "path": "23"
    },
    "1598": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4125
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1599": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4142
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xF242432A"
    },
    "1604": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4142
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "1607": {
      "op": "ADD"
    },
    "1608": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1610": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1612": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1613": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1614": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1615": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "SUB",
      "path": "23"
    },
    "1616": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1617": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1619": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "DUP8",
      "path": "23"
    },
    "1620": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1621": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "1622": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1623": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1624": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1625": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x661"
    },
    "1628": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1629": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1631": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1632": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1633": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1634": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "POP",
      "path": "23"
    },
    "1635": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "GAS",
      "path": "23"
    },
    "1636": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "CALL",
      "path": "23"
    },
    "1637": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1638": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1639": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1640": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x675"
    },
    "1643": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1644": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "1645": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1647": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1648": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "1649": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "1650": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1652": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1653": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4108,
        4270
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1654": {
      "op": "POP"
    },
    "1655": {
      "op": "POP"
    },
    "1656": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4297
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 16,
      "value": "0x2"
    },
    "1658": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4297
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1659": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1661": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1662": {
      "op": "PUSH4",
      "value": "0xB46B7919"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1669": {
      "op": "SHL"
    },
    "1670": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1671": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1678": {
      "op": "SHL"
    },
    "1679": {
      "op": "SUB"
    },
    "1680": {
      "op": "DUP11"
    },
    "1681": {
      "op": "DUP2"
    },
    "1682": {
      "op": "AND"
    },
    "1683": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1685": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1686": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "ADD",
      "path": "23"
    },
    "1687": {
      "op": "MSTORE"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1690": {
      "op": "DUP3"
    },
    "1691": {
      "op": "ADD"
    },
    "1692": {
      "op": "DUP10"
    },
    "1693": {
      "op": "SWAP1"
    },
    "1694": {
      "op": "MSTORE"
    },
    "1695": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4297
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1696": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4297
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1697": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4297
      ],
      "op": "AND",
      "path": "23"
    },
    "1698": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4297
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1699": {
      "op": "POP"
    },
    "1700": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4312
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xB46B7919"
    },
    "1705": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4312
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1706": {
      "op": "POP"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1709": {
      "op": "ADD"
    },
    "1710": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1712": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1714": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1715": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1716": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1717": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "SUB",
      "path": "23"
    },
    "1718": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1719": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1721": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "DUP8",
      "path": "23"
    },
    "1722": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1723": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "1724": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1725": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1726": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1727": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6C7"
    },
    "1730": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1731": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1733": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1734": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1735": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1736": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "POP",
      "path": "23"
    },
    "1737": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "GAS",
      "path": "23"
    },
    "1738": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "CALL",
      "path": "23"
    },
    "1739": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1740": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1741": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1742": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6DB"
    },
    "1745": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1746": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "1747": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1749": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1750": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "1751": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "1752": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1754": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1755": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1756": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "POP",
      "path": "23"
    },
    "1757": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "POP",
      "path": "23"
    },
    "1758": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "POP",
      "path": "23"
    },
    "1759": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4280,
        4330
      ],
      "op": "POP",
      "path": "23"
    },
    "1760": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4368,
        4370
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1761": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4368,
        4378
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "1763": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4368,
        4378
      ],
      "op": "ADD",
      "path": "23"
    },
    "1764": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4368,
        4378
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1765": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4345,
        4364
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1766": {
      "branch": 39,
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4345,
        4378
      ],
      "op": "GT",
      "path": "23"
    },
    "1767": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4341,
        4503
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x720"
    },
    "1770": {
      "branch": 39,
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4341,
        4503
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1771": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4404,
        4406
      ],
      "op": "DUP7",
      "path": "23",
      "statement": 17
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1774": {
      "op": "DUP1"
    },
    "1775": {
      "op": "MLOAD"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1778": {
      "op": "PUSH2",
      "value": "0x16A9"
    },
    "1781": {
      "op": "DUP4"
    },
    "1782": {
      "op": "CODECOPY"
    },
    "1783": {
      "op": "DUP2"
    },
    "1784": {
      "op": "MLOAD"
    },
    "1785": {
      "op": "SWAP2"
    },
    "1786": {
      "op": "MSTORE"
    },
    "1787": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4421,
        4440
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1788": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4408,
        4410
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1789": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4408,
        4418
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "1791": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4408,
        4418
      ],
      "op": "ADD",
      "path": "23"
    },
    "1792": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4408,
        4418
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1793": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4408,
        4440
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x70A"
    },
    "1796": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4408,
        4440
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1797": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4408,
        4440
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1798": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4408,
        4440
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1606"
    },
    "1801": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "jump": "i",
      "offset": [
        4408,
        4440
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1802": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4408,
        4440
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1803": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4397,
        4441
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1805": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4397,
        4441
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1806": {
      "op": "SWAP1"
    },
    "1807": {
      "op": "DUP2"
    },
    "1808": {
      "op": "MSTORE"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1811": {
      "op": "ADD"
    },
    "1812": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4397,
        4441
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1814": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4397,
        4441
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1815": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4397,
        4441
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1816": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4397,
        4441
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1817": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4397,
        4441
      ],
      "op": "SUB",
      "path": "23"
    },
    "1818": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4397,
        4441
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1819": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4397,
        4441
      ],
      "op": "LOG2",
      "path": "23"
    },
    "1820": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4341,
        4503
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x764"
    },
    "1823": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4341,
        4503
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1824": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4341,
        4503
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1825": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4466,
        4468
      ],
      "op": "DUP7",
      "path": "23",
      "statement": 18
    },
    "1826": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4461,
        4503
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x86F83F021A5ECB92D6DCAEC11BE9DA0E65B5401CE748AC3C1F0DDBAE029F55CE"
    },
    "1859": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4492,
        4494
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1860": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4492,
        4502
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "1862": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4492,
        4502
      ],
      "op": "ADD",
      "path": "23"
    },
    "1863": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4492,
        4502
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1864": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4470,
        4489
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1865": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4470,
        4502
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x752"
    },
    "1868": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4470,
        4502
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1869": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4470,
        4502
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1870": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4470,
        4502
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1606"
    },
    "1873": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "jump": "i",
      "offset": [
        4470,
        4502
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1874": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4470,
        4502
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1875": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4461,
        4503
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1877": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4461,
        4503
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1878": {
      "op": "SWAP1"
    },
    "1879": {
      "op": "DUP2"
    },
    "1880": {
      "op": "MSTORE"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1883": {
      "op": "ADD"
    },
    "1884": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4461,
        4503
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1886": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4461,
        4503
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1887": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4461,
        4503
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1888": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4461,
        4503
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1889": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4461,
        4503
      ],
      "op": "SUB",
      "path": "23"
    },
    "1890": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4461,
        4503
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1891": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4461,
        4503
      ],
      "op": "LOG2",
      "path": "23"
    },
    "1892": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        4341,
        4503
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1893": {
      "offset": [
        2470,
        2471
      ],
      "op": "POP",
      "path": "0"
    },
    "1894": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        2470,
        2471
      ],
      "op": "POP",
      "path": "0"
    },
    "1895": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3653,
        4510
      ],
      "op": "POP",
      "path": "23"
    },
    "1896": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3653,
        4510
      ],
      "op": "POP",
      "path": "23"
    },
    "1897": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3653,
        4510
      ],
      "op": "POP",
      "path": "23"
    },
    "1898": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3653,
        4510
      ],
      "op": "POP",
      "path": "23"
    },
    "1899": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "offset": [
        3653,
        4510
      ],
      "op": "POP",
      "path": "23"
    },
    "1900": {
      "fn": "BufferBinaryIBFRPoolBinary.send",
      "jump": "o",
      "offset": [
        3653,
        4510
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1901": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1136,
        1690
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1902": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1321
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 19,
      "value": "0x2"
    },
    "1904": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1321
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1905": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1907": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1908": {
      "op": "PUSH4",
      "value": "0x701AC31"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1915": {
      "op": "SHL"
    },
    "1916": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1917": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1924": {
      "op": "SHL"
    },
    "1925": {
      "op": "SUB"
    },
    "1926": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1321
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1927": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1321
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1928": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1321
      ],
      "op": "AND",
      "path": "23"
    },
    "1929": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1321
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1930": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1332
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x701AC31"
    },
    "1935": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1332
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1936": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x79F"
    },
    "1939": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1940": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1333,
        1345
      ],
      "op": "DUP6",
      "path": "23"
    },
    "1941": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1333,
        1345
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1942": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1347,
        1352
      ],
      "op": "DUP8",
      "path": "23"
    },
    "1943": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1347,
        1352
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1944": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1946": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "ADD",
      "path": "23"
    },
    "1947": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1537"
    },
    "1950": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "jump": "i",
      "offset": [
        1304,
        1353
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1951": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1952": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1954": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1956": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1957": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1958": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1959": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "SUB",
      "path": "23"
    },
    "1960": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1961": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "DUP7",
      "path": "23"
    },
    "1962": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1963": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "1964": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1965": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1966": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1967": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7B7"
    },
    "1970": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1971": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1973": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1974": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1975": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1976": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "POP",
      "path": "23"
    },
    "1977": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "GAS",
      "path": "23"
    },
    "1978": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "1979": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1980": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1981": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1982": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7CB"
    },
    "1985": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1986": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "1987": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1989": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1990": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "1991": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "1992": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1994": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1995": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1996": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "POP",
      "path": "23"
    },
    "1997": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "POP",
      "path": "23"
    },
    "1998": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "POP",
      "path": "23"
    },
    "1999": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "POP",
      "path": "23"
    },
    "2000": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2002": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2003": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "2004": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "2006": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "NOT",
      "path": "23"
    },
    "2007": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "2009": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2010": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "ADD",
      "path": "23"
    },
    "2011": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "AND",
      "path": "23"
    },
    "2012": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2013": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "ADD",
      "path": "23"
    },
    "2014": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2015": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2017": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2018": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "POP",
      "path": "23"
    },
    "2019": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2020": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "ADD",
      "path": "23"
    },
    "2021": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2022": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7EF"
    },
    "2025": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2026": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2027": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11E8"
    },
    "2030": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "jump": "i",
      "offset": [
        1304,
        1353
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2031": {
      "branch": 40,
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1304,
        1353
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2032": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1283,
        1414
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x847"
    },
    "2035": {
      "branch": 40,
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1283,
        1414
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2036": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1283,
        1414
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2038": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1283,
        1414
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2039": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2045": {
      "op": "SHL"
    },
    "2046": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1283,
        1414
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2047": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1283,
        1414
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2050": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1283,
        1414
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2052": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1283,
        1414
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2053": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1283,
        1414
      ],
      "op": "ADD",
      "path": "23"
    },
    "2054": {
      "op": "MSTORE"
    },
    "2055": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2059": {
      "op": "DUP3"
    },
    "2060": {
      "op": "ADD"
    },
    "2061": {
      "op": "MSTORE"
    },
    "2062": {
      "op": "PUSH32",
      "value": "0x54726164696E672069736E277420616C6C6F776564206F6E2074686973206173"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2097": {
      "op": "DUP3"
    },
    "2098": {
      "op": "ADD"
    },
    "2099": {
      "op": "MSTORE"
    },
    "2100": {
      "op": "PUSH3",
      "value": "0x1CD95D"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "2106": {
      "op": "SHL"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2109": {
      "op": "DUP3"
    },
    "2110": {
      "op": "ADD"
    },
    "2111": {
      "op": "MSTORE"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2114": {
      "op": "ADD"
    },
    "2115": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1283,
        1414
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x372"
    },
    "2118": {
      "op": "JUMP"
    },
    "2119": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1283,
        1414
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2120": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1492
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "2122": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1492
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2123": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2125": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2126": {
      "op": "PUSH4",
      "value": "0x7503E1B7"
    },
    "2131": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2133": {
      "op": "SHL"
    },
    "2134": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2135": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2136": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2138": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2139": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "ADD",
      "path": "23"
    },
    "2140": {
      "op": "DUP5"
    },
    "2141": {
      "op": "SWAP1"
    },
    "2142": {
      "op": "MSTORE"
    },
    "2143": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1427,
        1440
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2145": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1427,
        1440
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2146": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1427,
        1440
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2147": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1427,
        1440
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2154": {
      "op": "SHL"
    },
    "2155": {
      "op": "SUB"
    },
    "2156": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1492
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2157": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1492
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2158": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1492
      ],
      "op": "AND",
      "path": "23"
    },
    "2159": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1492
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2160": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1517
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x7503E1B7"
    },
    "2165": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1517
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2168": {
      "op": "ADD"
    },
    "2169": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2171": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2173": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2174": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2175": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2176": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "SUB",
      "path": "23"
    },
    "2177": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2178": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "DUP7",
      "path": "23"
    },
    "2179": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2180": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "2181": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2182": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2183": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2184": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x890"
    },
    "2187": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2188": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2190": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2191": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "REVERT",
      "path": "23"
    },
    "2192": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2193": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "POP",
      "path": "23"
    },
    "2194": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "GAS",
      "path": "23"
    },
    "2195": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "2196": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2197": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2198": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2199": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8A4"
    },
    "2202": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2203": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "2204": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2206": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2207": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "2208": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "2209": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2211": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "REVERT",
      "path": "23"
    },
    "2212": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2213": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "POP",
      "path": "23"
    },
    "2214": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "POP",
      "path": "23"
    },
    "2215": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "POP",
      "path": "23"
    },
    "2216": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "POP",
      "path": "23"
    },
    "2217": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2219": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2220": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "2221": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2223": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2224": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "2225": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "2227": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "2228": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2229": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2230": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "ADD",
      "path": "23"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2233": {
      "op": "NOT"
    },
    "2234": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "AND",
      "path": "23"
    },
    "2235": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2236": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "ADD",
      "path": "23"
    },
    "2237": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2239": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2240": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8CC"
    },
    "2243": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2244": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2245": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2246": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "ADD",
      "path": "23"
    },
    "2247": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2248": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x12CF"
    },
    "2251": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "jump": "i",
      "offset": [
        1475,
        1531
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2252": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1475,
        1531
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2253": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1424,
        1531
      ],
      "op": "POP",
      "path": "23"
    },
    "2254": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1424,
        1531
      ],
      "op": "POP",
      "path": "23"
    },
    "2255": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1424,
        1531
      ],
      "op": "POP",
      "path": "23"
    },
    "2256": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1424,
        1531
      ],
      "op": "POP",
      "path": "23"
    },
    "2257": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1424,
        1531
      ],
      "op": "POP",
      "path": "23"
    },
    "2258": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1424,
        1531
      ],
      "op": "POP",
      "path": "23"
    },
    "2259": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1424,
        1531
      ],
      "op": "POP",
      "path": "23"
    },
    "2260": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1424,
        1531
      ],
      "op": "POP",
      "path": "23"
    },
    "2261": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1424,
        1531
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2262": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1424,
        1531
      ],
      "op": "POP",
      "path": "23"
    },
    "2263": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1424,
        1531
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2264": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1424,
        1531
      ],
      "op": "POP",
      "path": "23"
    },
    "2265": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1424,
        1531
      ],
      "op": "POP",
      "path": "23"
    },
    "2266": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1567,
        1572
      ],
      "op": "DUP2",
      "path": "23",
      "statement": 20
    },
    "2267": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1549,
        1564
      ],
      "op": "TIMESTAMP",
      "path": "23"
    },
    "2268": {
      "branch": 41,
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1549,
        1572
      ],
      "op": "GT",
      "path": "23"
    },
    "2269": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1541,
        1612
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x934"
    },
    "2272": {
      "branch": 41,
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1541,
        1612
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2273": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1541,
        1612
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2275": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1541,
        1612
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2276": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2282": {
      "op": "SHL"
    },
    "2283": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1541,
        1612
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2284": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1541,
        1612
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2287": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1541,
        1612
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2289": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1541,
        1612
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2290": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1541,
        1612
      ],
      "op": "ADD",
      "path": "23"
    },
    "2291": {
      "op": "MSTORE"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2296": {
      "op": "DUP3"
    },
    "2297": {
      "op": "ADD"
    },
    "2298": {
      "op": "MSTORE"
    },
    "2299": {
      "op": "PUSH32",
      "value": "0x5468697320746F75726E616D656E7420686173206E6F74207374617274656420"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2334": {
      "op": "DUP3"
    },
    "2335": {
      "op": "ADD"
    },
    "2336": {
      "op": "MSTORE"
    },
    "2337": {
      "op": "PUSH3",
      "value": "0x1E595D"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "2343": {
      "op": "SHL"
    },
    "2344": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2346": {
      "op": "DUP3"
    },
    "2347": {
      "op": "ADD"
    },
    "2348": {
      "op": "MSTORE"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2351": {
      "op": "ADD"
    },
    "2352": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1541,
        1612
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x372"
    },
    "2355": {
      "op": "JUMP"
    },
    "2356": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1541,
        1612
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2357": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1643,
        1648
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 21
    },
    "2358": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1630,
        1640
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2359": {
      "branch": 42,
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1630,
        1648
      ],
      "op": "LT",
      "path": "23"
    },
    "2360": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1622,
        1683
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x983"
    },
    "2363": {
      "branch": 42,
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1622,
        1683
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2364": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1622,
        1683
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2366": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1622,
        1683
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2367": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2373": {
      "op": "SHL"
    },
    "2374": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1622,
        1683
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2375": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1622,
        1683
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2378": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1622,
        1683
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2380": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1622,
        1683
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2381": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1622,
        1683
      ],
      "op": "ADD",
      "path": "23"
    },
    "2382": {
      "op": "MSTORE"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2387": {
      "op": "DUP3"
    },
    "2388": {
      "op": "ADD"
    },
    "2389": {
      "op": "MSTORE"
    },
    "2390": {
      "op": "PUSH32",
      "value": "0x4F7074696F6E20657870697279206973206F7574206F6620626F756E64730000"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2425": {
      "op": "DUP3"
    },
    "2426": {
      "op": "ADD"
    },
    "2427": {
      "op": "MSTORE"
    },
    "2428": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2430": {
      "op": "ADD"
    },
    "2431": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1622,
        1683
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x372"
    },
    "2434": {
      "op": "JUMP"
    },
    "2435": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1622,
        1683
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2436": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1136,
        1690
      ],
      "op": "POP",
      "path": "23"
    },
    "2437": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1136,
        1690
      ],
      "op": "POP",
      "path": "23"
    },
    "2438": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1136,
        1690
      ],
      "op": "POP",
      "path": "23"
    },
    "2439": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1136,
        1690
      ],
      "op": "POP",
      "path": "23"
    },
    "2440": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        1136,
        1690
      ],
      "op": "POP",
      "path": "23"
    },
    "2441": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "jump": "o",
      "offset": [
        1136,
        1690
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2442": {
      "offset": [
        562,
        622
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2443": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "2445": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2447": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2448": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2449": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2451": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2452": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2454": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2456": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2457": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2458": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2459": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2460": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2461": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "LT",
      "path": "23"
    },
    "2462": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9A6"
    },
    "2465": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2466": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2468": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2469": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "REVERT",
      "path": "23"
    },
    "2470": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2471": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2473": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2474": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2475": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2476": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2478": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2479": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2480": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2481": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "2483": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2484": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2485": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "MUL",
      "path": "23"
    },
    "2486": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "ADD",
      "path": "23"
    },
    "2487": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2488": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2489": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "2491": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2492": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "ADD",
      "path": "23"
    },
    "2493": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2494": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "2496": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2497": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2498": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "ADD",
      "path": "23"
    },
    "2499": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2500": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2501": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "2502": {
      "op": "POP"
    },
    "2503": {
      "offset": [
        562,
        622
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2504": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2505": {
      "op": "POP"
    },
    "2506": {
      "offset": [
        562,
        622
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "2508": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "AND",
      "path": "23"
    },
    "2509": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "offset": [
        562,
        622
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2510": {
      "fn": "BufferBinaryIBFRPoolBinary.checkParams",
      "jump": "o",
      "offset": [
        562,
        622
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2511": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2512": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4751,
        4769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D8"
    },
    "2515": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4764,
        4768
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2516": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4751,
        4763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FF"
    },
    "2519": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        4751,
        4769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2520": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4751,
        4769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2521": {
      "offset": [
        2430,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "2524": {
      "offset": [
        2441,
        2445
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2525": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "2526": {
      "offset": [
        2430,
        2440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2E"
    },
    "2529": {
      "jump": "i",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2530": {
      "fn": "Context._msgSender",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2531": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4781,
        4807
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 22,
      "value": "0x463"
    },
    "2534": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4793,
        4797
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2535": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4799,
        4806
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2536": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4781,
        4792
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC16"
    },
    "2539": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        4781,
        4807
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2540": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        921,
        1130
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2543": {
      "op": "DUP1"
    },
    "2544": {
      "op": "MLOAD"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2547": {
      "op": "PUSH2",
      "value": "0x16C9"
    },
    "2550": {
      "op": "DUP4"
    },
    "2551": {
      "op": "CODECOPY"
    },
    "2552": {
      "op": "DUP2"
    },
    "2553": {
      "op": "MLOAD"
    },
    "2554": {
      "op": "SWAP2"
    },
    "2555": {
      "op": "MSTORE"
    },
    "2556": {
      "offset": [
        2430,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA05"
    },
    "2559": {
      "offset": [
        682,
        713
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2560": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "2561": {
      "offset": [
        2430,
        2440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2E"
    },
    "2564": {
      "jump": "i",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2565": {
      "fn": "Context._msgSender",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2566": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1093
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 23,
      "value": "0x2"
    },
    "2568": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1093
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2569": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2571": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2572": {
      "op": "PUSH4",
      "value": "0x7A94C565"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2579": {
      "op": "SHL"
    },
    "2580": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2581": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2588": {
      "op": "SHL"
    },
    "2589": {
      "op": "SUB"
    },
    "2590": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1093
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2591": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1093
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2592": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1093
      ],
      "op": "AND",
      "path": "23"
    },
    "2593": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1093
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2594": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1098
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xF5298ACA"
    },
    "2599": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1098
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2600": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA39"
    },
    "2603": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2604": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1099,
        1103
      ],
      "op": "DUP8",
      "path": "23"
    },
    "2605": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1099,
        1103
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2606": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1105,
        1117
      ],
      "op": "DUP7",
      "path": "23"
    },
    "2607": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1105,
        1117
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2608": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1119,
        1122
      ],
      "op": "DUP9",
      "path": "23"
    },
    "2609": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1119,
        1122
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2610": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2612": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "ADD",
      "path": "23"
    },
    "2613": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14BD"
    },
    "2616": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "jump": "i",
      "offset": [
        1076,
        1123
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2617": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2618": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2620": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2622": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2623": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2624": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2625": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "SUB",
      "path": "23"
    },
    "2626": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2627": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2629": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "DUP8",
      "path": "23"
    },
    "2630": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2631": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "2632": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2633": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2634": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2635": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA53"
    },
    "2638": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2639": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2641": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2642": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "REVERT",
      "path": "23"
    },
    "2643": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2644": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "POP",
      "path": "23"
    },
    "2645": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "GAS",
      "path": "23"
    },
    "2646": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "CALL",
      "path": "23"
    },
    "2647": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2648": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2649": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2650": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA67"
    },
    "2653": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2654": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "2655": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2657": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2658": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "2659": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "2660": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2662": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "REVERT",
      "path": "23"
    },
    "2663": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2664": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "POP",
      "path": "23"
    },
    "2665": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "POP",
      "path": "23"
    },
    "2666": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "POP",
      "path": "23"
    },
    "2667": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        1076,
        1123
      ],
      "op": "POP",
      "path": "23"
    },
    "2668": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        921,
        1130
      ],
      "op": "POP",
      "path": "23"
    },
    "2669": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        921,
        1130
      ],
      "op": "POP",
      "path": "23"
    },
    "2670": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        921,
        1130
      ],
      "op": "POP",
      "path": "23"
    },
    "2671": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "offset": [
        921,
        1130
      ],
      "op": "POP",
      "path": "23"
    },
    "2672": {
      "fn": "BufferBinaryIBFRPoolBinary.chargeFee",
      "jump": "o",
      "offset": [
        921,
        1130
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2673": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2674": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        414,
        418
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2682": {
      "op": "SHL"
    },
    "2683": {
      "op": "SUB"
    },
    "2684": {
      "op": "NOT"
    },
    "2685": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        486
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 24
    },
    "2686": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        486
      ],
      "op": "AND",
      "path": "9"
    },
    "2687": {
      "op": "PUSH4",
      "value": "0x2711897"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2694": {
      "op": "SHL"
    },
    "2695": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        486
      ],
      "op": "EQ",
      "path": "9"
    },
    "2696": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        486
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2697": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        526
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2EC"
    },
    "2700": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        526
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2701": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        526
      ],
      "op": "POP",
      "path": "9"
    },
    "2702": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        490,
        526
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2EC"
    },
    "2705": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        514,
        525
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2706": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        490,
        513
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC7B"
    },
    "2709": {
      "fn": "ERC1155Receiver.supportsInterface",
      "jump": "i",
      "offset": [
        490,
        526
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2710": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2549,
        2875
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2711": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2649,
        2664
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2715": {
      "op": "DUP1"
    },
    "2716": {
      "op": "MLOAD"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2719": {
      "op": "PUSH2",
      "value": "0x16C9"
    },
    "2722": {
      "op": "DUP4"
    },
    "2723": {
      "op": "CODECOPY"
    },
    "2724": {
      "op": "DUP2"
    },
    "2725": {
      "op": "MLOAD"
    },
    "2726": {
      "op": "SWAP2"
    },
    "2727": {
      "op": "MSTORE"
    },
    "2728": {
      "offset": [
        2430,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB1"
    },
    "2731": {
      "offset": [
        682,
        713
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2732": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "2733": {
      "offset": [
        2430,
        2440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2E"
    },
    "2736": {
      "jump": "i",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2737": {
      "fn": "Context._msgSender",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2738": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2725,
        2735
      ],
      "op": "CALLER",
      "path": "23"
    },
    "2739": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2680,
        2706
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2741": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2736
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2742": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2736
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2743": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2736
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2744": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2724
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "2746": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2736
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2748": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2736
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2749": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2736
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2751": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2736
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2752": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2736
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2753": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2754": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2755": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2737,
        2739
      ],
      "op": "DUP6",
      "path": "23"
    },
    "2756": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2737,
        2739
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2757": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2758": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "LT",
      "path": "23"
    },
    "2759": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xAE0"
    },
    "2762": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2763": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2768": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2770": {
      "op": "SHL"
    },
    "2771": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2773": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2774": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x32"
    },
    "2776": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2778": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2779": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "2781": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2783": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "REVERT",
      "path": "23"
    },
    "2784": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2785": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2787": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2788": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2789": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2790": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2792": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2793": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2794": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2795": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "2797": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2798": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2799": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "MUL",
      "path": "23"
    },
    "2800": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "ADD",
      "path": "23"
    },
    "2801": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2758,
        2767
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 25,
      "value": "0x2"
    },
    "2803": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2758,
        2767
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2804": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2758,
        2767
      ],
      "op": "ADD",
      "path": "23"
    },
    "2805": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2758,
        2767
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2806": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2807": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2709,
        2740
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2808": {
      "op": "POP"
    },
    "2809": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2758,
        2767
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "2811": {
      "branch": 43,
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2758,
        2767
      ],
      "op": "AND",
      "path": "23"
    },
    "2812": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2750,
        2810
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB17"
    },
    "2815": {
      "branch": 43,
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2750,
        2810
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2816": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2750,
        2810
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2818": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2750,
        2810
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2819": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2825": {
      "op": "SHL"
    },
    "2826": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2750,
        2810
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2827": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2750,
        2810
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2828": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2750,
        2810
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2830": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2750,
        2810
      ],
      "op": "ADD",
      "path": "23"
    },
    "2831": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2750,
        2810
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x372"
    },
    "2834": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2750,
        2810
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2835": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2750,
        2810
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14F1"
    },
    "2838": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "jump": "i",
      "offset": [
        2750,
        2810
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2839": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2750,
        2810
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2840": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2820,
        2829
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 26,
      "value": "0x2"
    },
    "2842": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2820,
        2829
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2843": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2820,
        2829
      ],
      "op": "ADD",
      "path": "23"
    },
    "2844": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2820,
        2837
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2845": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2820,
        2837
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2846": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2848": {
      "op": "NOT"
    },
    "2849": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2820,
        2837
      ],
      "op": "AND",
      "path": "23"
    },
    "2850": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2820,
        2837
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2851": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2820,
        2837
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "2852": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2820,
        2837
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "2854": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2858,
        2868
      ],
      "op": "ADD",
      "path": "23",
      "statement": 27
    },
    "2855": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2858,
        2868
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2856": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2858,
        2868
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "2857": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "offset": [
        2549,
        2875
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2858": {
      "op": "POP"
    },
    "2859": {
      "op": "POP"
    },
    "2860": {
      "op": "POP"
    },
    "2861": {
      "fn": "BufferBinaryIBFRPoolBinary._unlock",
      "jump": "o",
      "offset": [
        2549,
        2875
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2862": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3252,
        3736
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2863": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3332,
        3354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB38"
    },
    "2866": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3340,
        3344
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2867": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3346,
        3353
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2868": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3332,
        3339
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51B"
    },
    "2871": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3332,
        3354
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2872": {
      "branch": 45,
      "fn": "AccessControl._checkRole",
      "offset": [
        3332,
        3354
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2873": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3327,
        3730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FB"
    },
    "2876": {
      "branch": 45,
      "fn": "AccessControl._checkRole",
      "offset": [
        3327,
        3730
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2877": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3515,
        3556
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 28,
      "value": "0xB50"
    },
    "2880": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3543,
        3550
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2887": {
      "op": "SHL"
    },
    "2888": {
      "op": "SUB"
    },
    "2889": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3515,
        3556
      ],
      "op": "AND",
      "path": "0"
    },
    "2890": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3553,
        3555
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "2892": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3515,
        3534
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB0"
    },
    "2895": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3515,
        3556
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2896": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3515,
        3556
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2897": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3627,
        3665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5B"
    },
    "2900": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3655,
        3659
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2901": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3662,
        3664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2903": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3627,
        3646
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB0"
    },
    "2906": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3627,
        3665
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2907": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3627,
        3665
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2908": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2910": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2911": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2913": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "ADD",
      "path": "0"
    },
    "2914": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6C"
    },
    "2917": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2918": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2919": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2920": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144E"
    },
    "2923": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3422,
        3687
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2924": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2925": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2927": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2928": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2931": {
      "op": "NOT"
    },
    "2932": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2933": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2934": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "SUB",
      "path": "0"
    },
    "2935": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "ADD",
      "path": "0"
    },
    "2936": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2937": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2938": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2939": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2940": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2941": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2942": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2948": {
      "op": "SHL"
    },
    "2949": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3370,
        3719
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2950": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3370,
        3719
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2951": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3370,
        3719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x372"
    },
    "2954": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3370,
        3719
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2955": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3370,
        3719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2957": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3370,
        3719
      ],
      "op": "ADD",
      "path": "0"
    },
    "2958": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3370,
        3719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14DE"
    },
    "2961": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3370,
        3719
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2962": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6572,
        6796
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2963": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6646,
        6668
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9C"
    },
    "2966": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6654,
        6658
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2967": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6660,
        6667
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2968": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6646,
        6653
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51B"
    },
    "2971": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        6646,
        6668
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2972": {
      "branch": 46,
      "fn": "AccessControl._grantRole",
      "offset": [
        6646,
        6668
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2973": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6641,
        6790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FB"
    },
    "2976": {
      "branch": 46,
      "fn": "AccessControl._grantRole",
      "offset": [
        6641,
        6790
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2977": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6690
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 29,
      "value": "0x0"
    },
    "2979": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2980": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2981": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2982": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2984": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2985": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2986": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2987": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2989": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2990": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2991": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2998": {
      "op": "SHL"
    },
    "2999": {
      "op": "SUB"
    },
    "3000": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3001": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "AND",
      "path": "0"
    },
    "3002": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3003": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3004": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3005": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3006": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3007": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3008": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3009": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3010": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6720
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3013": {
      "op": "NOT"
    },
    "3014": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6720
      ],
      "op": "AND",
      "path": "0"
    },
    "3015": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6716,
        6720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3017": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6720
      ],
      "op": "OR",
      "path": "0"
    },
    "3018": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6720
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3019": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6720
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3020": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6766,
        6778
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 30,
      "value": "0xBD2"
    },
    "3023": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "3024": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3025": {
      "fn": "Context._msgSender",
      "offset": [
        587,
        683
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3026": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6766,
        6778
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3031": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3033": {
      "op": "SHL"
    },
    "3034": {
      "op": "SUB"
    },
    "3035": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "AND",
      "path": "0"
    },
    "3036": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6757,
        6764
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3041": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3043": {
      "op": "SHL"
    },
    "3044": {
      "op": "SUB"
    },
    "3045": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "AND",
      "path": "0"
    },
    "3046": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6751,
        6755
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3047": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
    },
    "3080": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3082": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3083": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3085": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3086": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3087": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3088": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "SUB",
      "path": "0"
    },
    "3089": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3090": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "LOG4",
      "path": "0"
    },
    "3091": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6572,
        6796
      ],
      "op": "POP",
      "path": "0"
    },
    "3092": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6572,
        6796
      ],
      "op": "POP",
      "path": "0"
    },
    "3093": {
      "fn": "AccessControl._grantRole",
      "jump": "o",
      "offset": [
        6572,
        6796
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3094": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6802,
        7027
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3095": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6876,
        6898
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC20"
    },
    "3098": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6884,
        6888
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3099": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6890,
        6897
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3100": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6876,
        6883
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51B"
    },
    "3103": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        6876,
        6898
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3104": {
      "branch": 47,
      "fn": "AccessControl._revokeRole",
      "offset": [
        6876,
        6898
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3105": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6872,
        7021
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3106": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6872,
        7021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FB"
    },
    "3109": {
      "branch": 47,
      "fn": "AccessControl._revokeRole",
      "offset": [
        6872,
        7021
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3110": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6946,
        6951
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 31,
      "value": "0x0"
    },
    "3112": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3113": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3114": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3115": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3117": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3118": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3119": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3120": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3122": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3123": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3124": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3131": {
      "op": "SHL"
    },
    "3132": {
      "op": "SUB"
    },
    "3133": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3134": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "AND",
      "path": "0"
    },
    "3135": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3136": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3137": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3138": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3139": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3140": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3141": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3142": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3143": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6951
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3144": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6951
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3145": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3147": {
      "op": "NOT"
    },
    "3148": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6951
      ],
      "op": "AND",
      "path": "0"
    },
    "3149": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6951
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3150": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6951
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3151": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6970,
        7010
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 32
    },
    "3152": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "3153": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3154": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3155": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3156": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6970,
        7010
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
    },
    "3189": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6970,
        7010
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3190": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6946,
        6951
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3191": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6970,
        7010
      ],
      "op": "LOG4",
      "path": "0"
    },
    "3192": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6802,
        7027
      ],
      "op": "POP",
      "path": "0"
    },
    "3193": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6802,
        7027
      ],
      "op": "POP",
      "path": "0"
    },
    "3194": {
      "fn": "AccessControl._revokeRole",
      "jump": "o",
      "offset": [
        6802,
        7027
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3195": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3196": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2630,
        2634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3202": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3204": {
      "op": "SHL"
    },
    "3205": {
      "op": "SUB"
    },
    "3206": {
      "op": "NOT"
    },
    "3207": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2653,
        2700
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 33
    },
    "3208": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2653,
        2700
      ],
      "op": "AND",
      "path": "0"
    },
    "3209": {
      "op": "PUSH4",
      "value": "0x7965DB0B"
    },
    "3214": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3216": {
      "op": "SHL"
    },
    "3217": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2653,
        2700
      ],
      "op": "EQ",
      "path": "0"
    },
    "3218": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2653,
        2700
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3219": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2653,
        2740
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EC"
    },
    "3222": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2653,
        2740
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3223": {
      "op": "POP"
    },
    "3224": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3231": {
      "op": "SHL"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3238": {
      "op": "SHL"
    },
    "3239": {
      "op": "SUB"
    },
    "3240": {
      "op": "NOT"
    },
    "3241": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 34
    },
    "3242": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "19"
    },
    "3243": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "19"
    },
    "3244": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2704,
        2740
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EC"
    },
    "3247": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        763,
        918
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3248": {
      "op": "JUMPDEST"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3253": {
      "op": "PUSH2",
      "value": "0xCBF"
    },
    "3256": {
      "op": "DUP4"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3259": {
      "op": "PUSH2",
      "value": "0x15E7"
    },
    "3262": {
      "jump": "i",
      "op": "JUMP"
    },
    "3263": {
      "op": "JUMPDEST"
    },
    "3264": {
      "op": "PUSH2",
      "value": "0xCCA"
    },
    "3267": {
      "op": "SWAP1"
    },
    "3268": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3270": {
      "op": "PUSH2",
      "value": "0x15CF"
    },
    "3273": {
      "jump": "i",
      "op": "JUMP"
    },
    "3274": {
      "op": "JUMPDEST"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3281": {
      "op": "SHL"
    },
    "3282": {
      "op": "SUB"
    },
    "3283": {
      "op": "DUP2"
    },
    "3284": {
      "op": "GT"
    },
    "3285": {
      "op": "ISZERO"
    },
    "3286": {
      "op": "PUSH2",
      "value": "0xCEF"
    },
    "3289": {
      "op": "JUMPI"
    },
    "3290": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3297": {
      "op": "SHL"
    },
    "3298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3300": {
      "op": "MSTORE"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3305": {
      "op": "MSTORE"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3310": {
      "op": "REVERT"
    },
    "3311": {
      "op": "JUMPDEST"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3314": {
      "op": "MLOAD"
    },
    "3315": {
      "op": "SWAP1"
    },
    "3316": {
      "op": "DUP1"
    },
    "3317": {
      "op": "DUP3"
    },
    "3318": {
      "op": "MSTORE"
    },
    "3319": {
      "op": "DUP1"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3322": {
      "op": "ADD"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3325": {
      "op": "NOT"
    },
    "3326": {
      "op": "AND"
    },
    "3327": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3329": {
      "op": "ADD"
    },
    "3330": {
      "op": "DUP3"
    },
    "3331": {
      "op": "ADD"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3334": {
      "op": "MSTORE"
    },
    "3335": {
      "op": "DUP1"
    },
    "3336": {
      "op": "ISZERO"
    },
    "3337": {
      "op": "PUSH2",
      "value": "0xD19"
    },
    "3340": {
      "op": "JUMPI"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3343": {
      "op": "DUP3"
    },
    "3344": {
      "op": "ADD"
    },
    "3345": {
      "op": "DUP2"
    },
    "3346": {
      "op": "DUP1"
    },
    "3347": {
      "op": "CALLDATASIZE"
    },
    "3348": {
      "op": "DUP4"
    },
    "3349": {
      "op": "CALLDATACOPY"
    },
    "3350": {
      "op": "ADD"
    },
    "3351": {
      "op": "SWAP1"
    },
    "3352": {
      "op": "POP"
    },
    "3353": {
      "op": "JUMPDEST"
    },
    "3354": {
      "op": "POP"
    },
    "3355": {
      "op": "SWAP1"
    },
    "3356": {
      "op": "POP"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "3361": {
      "op": "SHL"
    },
    "3362": {
      "op": "DUP2"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3365": {
      "op": "DUP2"
    },
    "3366": {
      "op": "MLOAD"
    },
    "3367": {
      "op": "DUP2"
    },
    "3368": {
      "op": "LT"
    },
    "3369": {
      "op": "PUSH2",
      "value": "0xD42"
    },
    "3372": {
      "op": "JUMPI"
    },
    "3373": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3380": {
      "op": "SHL"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3383": {
      "op": "MSTORE"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3388": {
      "op": "MSTORE"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3393": {
      "op": "REVERT"
    },
    "3394": {
      "op": "JUMPDEST"
    },
    "3395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3397": {
      "op": "ADD"
    },
    "3398": {
      "op": "ADD"
    },
    "3399": {
      "op": "SWAP1"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3406": {
      "op": "SHL"
    },
    "3407": {
      "op": "SUB"
    },
    "3408": {
      "op": "NOT"
    },
    "3409": {
      "op": "AND"
    },
    "3410": {
      "op": "SWAP1"
    },
    "3411": {
      "op": "DUP2"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3414": {
      "op": "BYTE"
    },
    "3415": {
      "op": "SWAP1"
    },
    "3416": {
      "op": "MSTORE8"
    },
    "3417": {
      "op": "POP"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0xFB"
    },
    "3422": {
      "op": "SHL"
    },
    "3423": {
      "op": "DUP2"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3426": {
      "op": "DUP2"
    },
    "3427": {
      "op": "MLOAD"
    },
    "3428": {
      "op": "DUP2"
    },
    "3429": {
      "op": "LT"
    },
    "3430": {
      "op": "PUSH2",
      "value": "0xD7F"
    },
    "3433": {
      "op": "JUMPI"
    },
    "3434": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3439": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3441": {
      "op": "SHL"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3444": {
      "op": "MSTORE"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3449": {
      "op": "MSTORE"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3454": {
      "op": "REVERT"
    },
    "3455": {
      "op": "JUMPDEST"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3458": {
      "op": "ADD"
    },
    "3459": {
      "op": "ADD"
    },
    "3460": {
      "op": "SWAP1"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3465": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3467": {
      "op": "SHL"
    },
    "3468": {
      "op": "SUB"
    },
    "3469": {
      "op": "NOT"
    },
    "3470": {
      "op": "AND"
    },
    "3471": {
      "op": "SWAP1"
    },
    "3472": {
      "op": "DUP2"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3475": {
      "op": "BYTE"
    },
    "3476": {
      "op": "SWAP1"
    },
    "3477": {
      "op": "MSTORE8"
    },
    "3478": {
      "op": "POP"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3481": {
      "op": "PUSH2",
      "value": "0xDA3"
    },
    "3484": {
      "op": "DUP5"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3487": {
      "op": "PUSH2",
      "value": "0x15E7"
    },
    "3490": {
      "jump": "i",
      "op": "JUMP"
    },
    "3491": {
      "op": "JUMPDEST"
    },
    "3492": {
      "op": "PUSH2",
      "value": "0xDAE"
    },
    "3495": {
      "op": "SWAP1"
    },
    "3496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3498": {
      "op": "PUSH2",
      "value": "0x15CF"
    },
    "3501": {
      "jump": "i",
      "op": "JUMP"
    },
    "3502": {
      "op": "JUMPDEST"
    },
    "3503": {
      "op": "SWAP1"
    },
    "3504": {
      "op": "POP"
    },
    "3505": {
      "op": "JUMPDEST"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3508": {
      "op": "DUP2"
    },
    "3509": {
      "op": "GT"
    },
    "3510": {
      "op": "ISZERO"
    },
    "3511": {
      "op": "PUSH2",
      "value": "0xE42"
    },
    "3514": {
      "op": "JUMPI"
    },
    "3515": {
      "op": "PUSH16",
      "value": "0x181899199A1A9B1B9C1CB0B131B232B3"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "3534": {
      "op": "SHL"
    },
    "3535": {
      "op": "DUP6"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "3538": {
      "op": "AND"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "3541": {
      "op": "DUP2"
    },
    "3542": {
      "op": "LT"
    },
    "3543": {
      "op": "PUSH2",
      "value": "0xDF0"
    },
    "3546": {
      "op": "JUMPI"
    },
    "3547": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3554": {
      "op": "SHL"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3557": {
      "op": "MSTORE"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3562": {
      "op": "MSTORE"
    },
    "3563": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3567": {
      "op": "REVERT"
    },
    "3568": {
      "op": "JUMPDEST"
    },
    "3569": {
      "op": "BYTE"
    },
    "3570": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3572": {
      "op": "SHL"
    },
    "3573": {
      "op": "DUP3"
    },
    "3574": {
      "op": "DUP3"
    },
    "3575": {
      "op": "DUP2"
    },
    "3576": {
      "op": "MLOAD"
    },
    "3577": {
      "op": "DUP2"
    },
    "3578": {
      "op": "LT"
    },
    "3579": {
      "op": "PUSH2",
      "value": "0xE14"
    },
    "3582": {
      "op": "JUMPI"
    },
    "3583": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3590": {
      "op": "SHL"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3593": {
      "op": "MSTORE"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3598": {
      "op": "MSTORE"
    },
    "3599": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3603": {
      "op": "REVERT"
    },
    "3604": {
      "op": "JUMPDEST"
    },
    "3605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3607": {
      "op": "ADD"
    },
    "3608": {
      "op": "ADD"
    },
    "3609": {
      "op": "SWAP1"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3614": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3616": {
      "op": "SHL"
    },
    "3617": {
      "op": "SUB"
    },
    "3618": {
      "op": "NOT"
    },
    "3619": {
      "op": "AND"
    },
    "3620": {
      "op": "SWAP1"
    },
    "3621": {
      "op": "DUP2"
    },
    "3622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3624": {
      "op": "BYTE"
    },
    "3625": {
      "op": "SWAP1"
    },
    "3626": {
      "op": "MSTORE8"
    },
    "3627": {
      "op": "POP"
    },
    "3628": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3630": {
      "op": "SWAP5"
    },
    "3631": {
      "op": "SWAP1"
    },
    "3632": {
      "op": "SWAP5"
    },
    "3633": {
      "op": "SHR"
    },
    "3634": {
      "op": "SWAP4"
    },
    "3635": {
      "op": "PUSH2",
      "value": "0xE3B"
    },
    "3638": {
      "op": "DUP2"
    },
    "3639": {
      "op": "PUSH2",
      "value": "0x164D"
    },
    "3642": {
      "jump": "i",
      "op": "JUMP"
    },
    "3643": {
      "op": "JUMPDEST"
    },
    "3644": {
      "op": "SWAP1"
    },
    "3645": {
      "op": "POP"
    },
    "3646": {
      "op": "PUSH2",
      "value": "0xDB1"
    },
    "3649": {
      "op": "JUMP"
    },
    "3650": {
      "op": "JUMPDEST"
    },
    "3651": {
      "op": "POP"
    },
    "3652": {
      "op": "DUP4"
    },
    "3653": {
      "op": "ISZERO"
    },
    "3654": {
      "op": "PUSH2",
      "value": "0xE91"
    },
    "3657": {
      "op": "JUMPI"
    },
    "3658": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3660": {
      "op": "MLOAD"
    },
    "3661": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3667": {
      "op": "SHL"
    },
    "3668": {
      "op": "DUP2"
    },
    "3669": {
      "op": "MSTORE"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3674": {
      "op": "DUP3"
    },
    "3675": {
      "op": "ADD"
    },
    "3676": {
      "op": "DUP2"
    },
    "3677": {
      "op": "SWAP1"
    },
    "3678": {
      "op": "MSTORE"
    },
    "3679": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3681": {
      "op": "DUP3"
    },
    "3682": {
      "op": "ADD"
    },
    "3683": {
      "op": "MSTORE"
    },
    "3684": {
      "op": "PUSH32",
      "value": "0x537472696E67733A20686578206C656E67746820696E73756666696369656E74"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3719": {
      "op": "DUP3"
    },
    "3720": {
      "op": "ADD"
    },
    "3721": {
      "op": "MSTORE"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3724": {
      "op": "ADD"
    },
    "3725": {
      "op": "PUSH2",
      "value": "0x372"
    },
    "3728": {
      "op": "JUMP"
    },
    "3729": {
      "op": "JUMPDEST"
    },
    "3730": {
      "op": "SWAP4"
    },
    "3731": {
      "op": "SWAP3"
    },
    "3732": {
      "op": "POP"
    },
    "3733": {
      "op": "POP"
    },
    "3734": {
      "op": "POP"
    },
    "3735": {
      "jump": "o",
      "op": "JUMP"
    },
    "3736": {
      "op": "JUMPDEST"
    },
    "3737": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3739": {
      "op": "PUSH2",
      "value": "0xEAB"
    },
    "3742": {
      "op": "PUSH2",
      "value": "0xEA6"
    },
    "3745": {
      "op": "DUP5"
    },
    "3746": {
      "op": "PUSH2",
      "value": "0x15A8"
    },
    "3749": {
      "jump": "i",
      "op": "JUMP"
    },
    "3750": {
      "op": "JUMPDEST"
    },
    "3751": {
      "op": "PUSH2",
      "value": "0x1578"
    },
    "3754": {
      "jump": "i",
      "op": "JUMP"
    },
    "3755": {
      "op": "JUMPDEST"
    },
    "3756": {
      "op": "SWAP1"
    },
    "3757": {
      "op": "POP"
    },
    "3758": {
      "op": "DUP3"
    },
    "3759": {
      "op": "DUP2"
    },
    "3760": {
      "op": "MSTORE"
    },
    "3761": {
      "op": "DUP4"
    },
    "3762": {
      "op": "DUP4"
    },
    "3763": {
      "op": "DUP4"
    },
    "3764": {
      "op": "ADD"
    },
    "3765": {
      "op": "GT"
    },
    "3766": {
      "op": "ISZERO"
    },
    "3767": {
      "op": "PUSH2",
      "value": "0xEBF"
    },
    "3770": {
      "op": "JUMPI"
    },
    "3771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3773": {
      "op": "DUP1"
    },
    "3774": {
      "op": "REVERT"
    },
    "3775": {
      "op": "JUMPDEST"
    },
    "3776": {
      "op": "DUP3"
    },
    "3777": {
      "op": "DUP3"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3780": {
      "op": "DUP4"
    },
    "3781": {
      "op": "ADD"
    },
    "3782": {
      "op": "CALLDATACOPY"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3787": {
      "op": "DUP5"
    },
    "3788": {
      "op": "DUP4"
    },
    "3789": {
      "op": "ADD"
    },
    "3790": {
      "op": "ADD"
    },
    "3791": {
      "op": "MSTORE"
    },
    "3792": {
      "op": "SWAP4"
    },
    "3793": {
      "op": "SWAP3"
    },
    "3794": {
      "op": "POP"
    },
    "3795": {
      "op": "POP"
    },
    "3796": {
      "op": "POP"
    },
    "3797": {
      "jump": "o",
      "op": "JUMP"
    },
    "3798": {
      "op": "JUMPDEST"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3801": {
      "op": "DUP3"
    },
    "3802": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3804": {
      "op": "DUP4"
    },
    "3805": {
      "op": "ADD"
    },
    "3806": {
      "op": "SLT"
    },
    "3807": {
      "op": "PUSH2",
      "value": "0xEE6"
    },
    "3810": {
      "op": "JUMPI"
    },
    "3811": {
      "op": "DUP1"
    },
    "3812": {
      "op": "DUP2"
    },
    "3813": {
      "op": "REVERT"
    },
    "3814": {
      "op": "JUMPDEST"
    },
    "3815": {
      "op": "DUP2"
    },
    "3816": {
      "op": "CALLDATALOAD"
    },
    "3817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3823": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3825": {
      "op": "SHL"
    },
    "3826": {
      "op": "SUB"
    },
    "3827": {
      "op": "DUP3"
    },
    "3828": {
      "op": "GT"
    },
    "3829": {
      "op": "ISZERO"
    },
    "3830": {
      "op": "PUSH2",
      "value": "0xF01"
    },
    "3833": {
      "op": "JUMPI"
    },
    "3834": {
      "op": "PUSH2",
      "value": "0xF01"
    },
    "3837": {
      "op": "PUSH2",
      "value": "0x167A"
    },
    "3840": {
      "jump": "i",
      "op": "JUMP"
    },
    "3841": {
      "op": "JUMPDEST"
    },
    "3842": {
      "op": "DUP2"
    },
    "3843": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3845": {
      "op": "SHL"
    },
    "3846": {
      "op": "PUSH2",
      "value": "0xF10"
    },
    "3849": {
      "op": "DUP3"
    },
    "3850": {
      "op": "DUP3"
    },
    "3851": {
      "op": "ADD"
    },
    "3852": {
      "op": "PUSH2",
      "value": "0x1578"
    },
    "3855": {
      "jump": "i",
      "op": "JUMP"
    },
    "3856": {
      "op": "JUMPDEST"
    },
    "3857": {
      "op": "DUP4"
    },
    "3858": {
      "op": "DUP2"
    },
    "3859": {
      "op": "MSTORE"
    },
    "3860": {
      "op": "DUP3"
    },
    "3861": {
      "op": "DUP2"
    },
    "3862": {
      "op": "ADD"
    },
    "3863": {
      "op": "SWAP1"
    },
    "3864": {
      "op": "DUP7"
    },
    "3865": {
      "op": "DUP5"
    },
    "3866": {
      "op": "ADD"
    },
    "3867": {
      "op": "DUP4"
    },
    "3868": {
      "op": "DUP9"
    },
    "3869": {
      "op": "ADD"
    },
    "3870": {
      "op": "DUP6"
    },
    "3871": {
      "op": "ADD"
    },
    "3872": {
      "op": "DUP10"
    },
    "3873": {
      "op": "LT"
    },
    "3874": {
      "op": "ISZERO"
    },
    "3875": {
      "op": "PUSH2",
      "value": "0xF2A"
    },
    "3878": {
      "op": "JUMPI"
    },
    "3879": {
      "op": "DUP7"
    },
    "3880": {
      "op": "DUP8"
    },
    "3881": {
      "op": "REVERT"
    },
    "3882": {
      "op": "JUMPDEST"
    },
    "3883": {
      "op": "DUP7"
    },
    "3884": {
      "op": "SWAP4"
    },
    "3885": {
      "op": "POP"
    },
    "3886": {
      "op": "JUMPDEST"
    },
    "3887": {
      "op": "DUP6"
    },
    "3888": {
      "op": "DUP5"
    },
    "3889": {
      "op": "LT"
    },
    "3890": {
      "op": "ISZERO"
    },
    "3891": {
      "op": "PUSH2",
      "value": "0xF4C"
    },
    "3894": {
      "op": "JUMPI"
    },
    "3895": {
      "op": "DUP1"
    },
    "3896": {
      "op": "CALLDATALOAD"
    },
    "3897": {
      "op": "DUP4"
    },
    "3898": {
      "op": "MSTORE"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3901": {
      "op": "SWAP4"
    },
    "3902": {
      "op": "SWAP1"
    },
    "3903": {
      "op": "SWAP4"
    },
    "3904": {
      "op": "ADD"
    },
    "3905": {
      "op": "SWAP3"
    },
    "3906": {
      "op": "SWAP2"
    },
    "3907": {
      "op": "DUP5"
    },
    "3908": {
      "op": "ADD"
    },
    "3909": {
      "op": "SWAP2"
    },
    "3910": {
      "op": "DUP5"
    },
    "3911": {
      "op": "ADD"
    },
    "3912": {
      "op": "PUSH2",
      "value": "0xF2E"
    },
    "3915": {
      "op": "JUMP"
    },
    "3916": {
      "op": "JUMPDEST"
    },
    "3917": {
      "op": "POP"
    },
    "3918": {
      "op": "SWAP8"
    },
    "3919": {
      "op": "SWAP7"
    },
    "3920": {
      "op": "POP"
    },
    "3921": {
      "op": "POP"
    },
    "3922": {
      "op": "POP"
    },
    "3923": {
      "op": "POP"
    },
    "3924": {
      "op": "POP"
    },
    "3925": {
      "op": "POP"
    },
    "3926": {
      "op": "POP"
    },
    "3927": {
      "jump": "o",
      "op": "JUMP"
    },
    "3928": {
      "op": "JUMPDEST"
    },
    "3929": {
      "op": "DUP1"
    },
    "3930": {
      "op": "MLOAD"
    },
    "3931": {
      "op": "DUP1"
    },
    "3932": {
      "op": "ISZERO"
    },
    "3933": {
      "op": "ISZERO"
    },
    "3934": {
      "op": "DUP2"
    },
    "3935": {
      "op": "EQ"
    },
    "3936": {
      "op": "PUSH2",
      "value": "0xF68"
    },
    "3939": {
      "op": "JUMPI"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3942": {
      "op": "DUP1"
    },
    "3943": {
      "op": "REVERT"
    },
    "3944": {
      "op": "JUMPDEST"
    },
    "3945": {
      "op": "SWAP2"
    },
    "3946": {
      "op": "SWAP1"
    },
    "3947": {
      "op": "POP"
    },
    "3948": {
      "jump": "o",
      "op": "JUMP"
    },
    "3949": {
      "op": "JUMPDEST"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3952": {
      "op": "DUP3"
    },
    "3953": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3955": {
      "op": "DUP4"
    },
    "3956": {
      "op": "ADD"
    },
    "3957": {
      "op": "SLT"
    },
    "3958": {
      "op": "PUSH2",
      "value": "0xF7D"
    },
    "3961": {
      "op": "JUMPI"
    },
    "3962": {
      "op": "DUP1"
    },
    "3963": {
      "op": "DUP2"
    },
    "3964": {
      "op": "REVERT"
    },
    "3965": {
      "op": "JUMPDEST"
    },
    "3966": {
      "op": "PUSH2",
      "value": "0xE91"
    },
    "3969": {
      "op": "DUP4"
    },
    "3970": {
      "op": "DUP4"
    },
    "3971": {
      "op": "CALLDATALOAD"
    },
    "3972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3974": {
      "op": "DUP6"
    },
    "3975": {
      "op": "ADD"
    },
    "3976": {
      "op": "PUSH2",
      "value": "0xE98"
    },
    "3979": {
      "jump": "i",
      "op": "JUMP"
    },
    "3980": {
      "op": "JUMPDEST"
    },
    "3981": {
      "op": "DUP1"
    },
    "3982": {
      "op": "MLOAD"
    },
    "3983": {
      "op": "PUSH2",
      "value": "0xF68"
    },
    "3986": {
      "op": "DUP2"
    },
    "3987": {
      "op": "PUSH2",
      "value": "0x1690"
    },
    "3990": {
      "jump": "i",
      "op": "JUMP"
    },
    "3991": {
      "op": "JUMPDEST"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3994": {
      "op": "DUP3"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3997": {
      "op": "DUP4"
    },
    "3998": {
      "op": "ADD"
    },
    "3999": {
      "op": "SLT"
    },
    "4000": {
      "op": "PUSH2",
      "value": "0xFA7"
    },
    "4003": {
      "op": "JUMPI"
    },
    "4004": {
      "op": "DUP1"
    },
    "4005": {
      "op": "DUP2"
    },
    "4006": {
      "op": "REVERT"
    },
    "4007": {
      "op": "JUMPDEST"
    },
    "4008": {
      "op": "DUP2"
    },
    "4009": {
      "op": "MLOAD"
    },
    "4010": {
      "op": "PUSH2",
      "value": "0xFB5"
    },
    "4013": {
      "op": "PUSH2",
      "value": "0xEA6"
    },
    "4016": {
      "op": "DUP3"
    },
    "4017": {
      "op": "PUSH2",
      "value": "0x15A8"
    },
    "4020": {
      "jump": "i",
      "op": "JUMP"
    },
    "4021": {
      "op": "JUMPDEST"
    },
    "4022": {
      "op": "DUP2"
    },
    "4023": {
      "op": "DUP2"
    },
    "4024": {
      "op": "MSTORE"
    },
    "4025": {
      "op": "DUP5"
    },
    "4026": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4028": {
      "op": "DUP4"
    },
    "4029": {
      "op": "DUP7"
    },
    "4030": {
      "op": "ADD"
    },
    "4031": {
      "op": "ADD"
    },
    "4032": {
      "op": "GT"
    },
    "4033": {
      "op": "ISZERO"
    },
    "4034": {
      "op": "PUSH2",
      "value": "0xFC9"
    },
    "4037": {
      "op": "JUMPI"
    },
    "4038": {
      "op": "DUP3"
    },
    "4039": {
      "op": "DUP4"
    },
    "4040": {
      "op": "REVERT"
    },
    "4041": {
      "op": "JUMPDEST"
    },
    "4042": {
      "op": "PUSH2",
      "value": "0xFDA"
    },
    "4045": {
      "op": "DUP3"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4048": {
      "op": "DUP4"
    },
    "4049": {
      "op": "ADD"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4052": {
      "op": "DUP8"
    },
    "4053": {
      "op": "ADD"
    },
    "4054": {
      "op": "PUSH2",
      "value": "0x161D"
    },
    "4057": {
      "jump": "i",
      "op": "JUMP"
    },
    "4058": {
      "op": "JUMPDEST"
    },
    "4059": {
      "op": "SWAP5"
    },
    "4060": {
      "op": "SWAP4"
    },
    "4061": {
      "op": "POP"
    },
    "4062": {
      "op": "POP"
    },
    "4063": {
      "op": "POP"
    },
    "4064": {
      "op": "POP"
    },
    "4065": {
      "jump": "o",
      "op": "JUMP"
    },
    "4066": {
      "op": "JUMPDEST"
    },
    "4067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4069": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4071": {
      "op": "DUP3"
    },
    "4072": {
      "op": "DUP5"
    },
    "4073": {
      "op": "SUB"
    },
    "4074": {
      "op": "SLT"
    },
    "4075": {
      "op": "ISZERO"
    },
    "4076": {
      "op": "PUSH2",
      "value": "0xFF3"
    },
    "4079": {
      "op": "JUMPI"
    },
    "4080": {
      "op": "DUP1"
    },
    "4081": {
      "op": "DUP2"
    },
    "4082": {
      "op": "REVERT"
    },
    "4083": {
      "op": "JUMPDEST"
    },
    "4084": {
      "op": "PUSH2",
      "value": "0xFFB"
    },
    "4087": {
      "op": "PUSH2",
      "value": "0x1550"
    },
    "4090": {
      "jump": "i",
      "op": "JUMP"
    },
    "4091": {
      "op": "JUMPDEST"
    },
    "4092": {
      "op": "DUP3"
    },
    "4093": {
      "op": "MLOAD"
    },
    "4094": {
      "op": "SWAP1"
    },
    "4095": {
      "op": "SWAP2"
    },
    "4096": {
      "op": "POP"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4101": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4103": {
      "op": "SHL"
    },
    "4104": {
      "op": "SUB"
    },
    "4105": {
      "op": "DUP1"
    },
    "4106": {
      "op": "DUP3"
    },
    "4107": {
      "op": "GT"
    },
    "4108": {
      "op": "ISZERO"
    },
    "4109": {
      "op": "PUSH2",
      "value": "0x1015"
    },
    "4112": {
      "op": "JUMPI"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4115": {
      "op": "DUP1"
    },
    "4116": {
      "op": "REVERT"
    },
    "4117": {
      "op": "JUMPDEST"
    },
    "4118": {
      "op": "PUSH2",
      "value": "0x1021"
    },
    "4121": {
      "op": "DUP6"
    },
    "4122": {
      "op": "DUP4"
    },
    "4123": {
      "op": "DUP7"
    },
    "4124": {
      "op": "ADD"
    },
    "4125": {
      "op": "PUSH2",
      "value": "0xF97"
    },
    "4128": {
      "jump": "i",
      "op": "JUMP"
    },
    "4129": {
      "op": "JUMPDEST"
    },
    "4130": {
      "op": "DUP4"
    },
    "4131": {
      "op": "MSTORE"
    },
    "4132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4134": {
      "op": "DUP5"
    },
    "4135": {
      "op": "ADD"
    },
    "4136": {
      "op": "MLOAD"
    },
    "4137": {
      "op": "SWAP2"
    },
    "4138": {
      "op": "POP"
    },
    "4139": {
      "op": "DUP1"
    },
    "4140": {
      "op": "DUP3"
    },
    "4141": {
      "op": "GT"
    },
    "4142": {
      "op": "ISZERO"
    },
    "4143": {
      "op": "PUSH2",
      "value": "0x1037"
    },
    "4146": {
      "op": "JUMPI"
    },
    "4147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4149": {
      "op": "DUP1"
    },
    "4150": {
      "op": "REVERT"
    },
    "4151": {
      "op": "JUMPDEST"
    },
    "4152": {
      "op": "POP"
    },
    "4153": {
      "op": "PUSH2",
      "value": "0x1044"
    },
    "4156": {
      "op": "DUP5"
    },
    "4157": {
      "op": "DUP3"
    },
    "4158": {
      "op": "DUP6"
    },
    "4159": {
      "op": "ADD"
    },
    "4160": {
      "op": "PUSH2",
      "value": "0xF97"
    },
    "4163": {
      "jump": "i",
      "op": "JUMP"
    },
    "4164": {
      "op": "JUMPDEST"
    },
    "4165": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4167": {
      "op": "DUP4"
    },
    "4168": {
      "op": "ADD"
    },
    "4169": {
      "op": "MSTORE"
    },
    "4170": {
      "op": "POP"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4173": {
      "op": "DUP3"
    },
    "4174": {
      "op": "ADD"
    },
    "4175": {
      "op": "MLOAD"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4178": {
      "op": "DUP2"
    },
    "4179": {
      "op": "AND"
    },
    "4180": {
      "op": "DUP2"
    },
    "4181": {
      "op": "EQ"
    },
    "4182": {
      "op": "PUSH2",
      "value": "0x105E"
    },
    "4185": {
      "op": "JUMPI"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4188": {
      "op": "DUP1"
    },
    "4189": {
      "op": "REVERT"
    },
    "4190": {
      "op": "JUMPDEST"
    },
    "4191": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4193": {
      "op": "DUP3"
    },
    "4194": {
      "op": "ADD"
    },
    "4195": {
      "op": "MSTORE"
    },
    "4196": {
      "op": "PUSH2",
      "value": "0x106F"
    },
    "4199": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4201": {
      "op": "DUP4"
    },
    "4202": {
      "op": "ADD"
    },
    "4203": {
      "op": "PUSH2",
      "value": "0xF8C"
    },
    "4206": {
      "jump": "i",
      "op": "JUMP"
    },
    "4207": {
      "op": "JUMPDEST"
    },
    "4208": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4210": {
      "op": "DUP3"
    },
    "4211": {
      "op": "ADD"
    },
    "4212": {
      "op": "MSTORE"
    },
    "4213": {
      "op": "SWAP3"
    },
    "4214": {
      "op": "SWAP2"
    },
    "4215": {
      "op": "POP"
    },
    "4216": {
      "op": "POP"
    },
    "4217": {
      "jump": "o",
      "op": "JUMP"
    },
    "4218": {
      "op": "JUMPDEST"
    },
    "4219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4221": {
      "op": "DUP1"
    },
    "4222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4224": {
      "op": "DUP1"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4229": {
      "op": "DUP7"
    },
    "4230": {
      "op": "DUP9"
    },
    "4231": {
      "op": "SUB"
    },
    "4232": {
      "op": "SLT"
    },
    "4233": {
      "op": "ISZERO"
    },
    "4234": {
      "op": "PUSH2",
      "value": "0x1091"
    },
    "4237": {
      "op": "JUMPI"
    },
    "4238": {
      "op": "DUP1"
    },
    "4239": {
      "op": "DUP2"
    },
    "4240": {
      "op": "REVERT"
    },
    "4241": {
      "op": "JUMPDEST"
    },
    "4242": {
      "op": "DUP6"
    },
    "4243": {
      "op": "CALLDATALOAD"
    },
    "4244": {
      "op": "PUSH2",
      "value": "0x109C"
    },
    "4247": {
      "op": "DUP2"
    },
    "4248": {
      "op": "PUSH2",
      "value": "0x1690"
    },
    "4251": {
      "jump": "i",
      "op": "JUMP"
    },
    "4252": {
      "op": "JUMPDEST"
    },
    "4253": {
      "op": "SWAP5"
    },
    "4254": {
      "op": "POP"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4257": {
      "op": "DUP7"
    },
    "4258": {
      "op": "ADD"
    },
    "4259": {
      "op": "CALLDATALOAD"
    },
    "4260": {
      "op": "PUSH2",
      "value": "0x10AC"
    },
    "4263": {
      "op": "DUP2"
    },
    "4264": {
      "op": "PUSH2",
      "value": "0x1690"
    },
    "4267": {
      "jump": "i",
      "op": "JUMP"
    },
    "4268": {
      "op": "JUMPDEST"
    },
    "4269": {
      "op": "SWAP4"
    },
    "4270": {
      "op": "POP"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4273": {
      "op": "DUP7"
    },
    "4274": {
      "op": "ADD"
    },
    "4275": {
      "op": "CALLDATALOAD"
    },
    "4276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4280": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4282": {
      "op": "SHL"
    },
    "4283": {
      "op": "SUB"
    },
    "4284": {
      "op": "DUP1"
    },
    "4285": {
      "op": "DUP3"
    },
    "4286": {
      "op": "GT"
    },
    "4287": {
      "op": "ISZERO"
    },
    "4288": {
      "op": "PUSH2",
      "value": "0x10C7"
    },
    "4291": {
      "op": "JUMPI"
    },
    "4292": {
      "op": "DUP3"
    },
    "4293": {
      "op": "DUP4"
    },
    "4294": {
      "op": "REVERT"
    },
    "4295": {
      "op": "JUMPDEST"
    },
    "4296": {
      "op": "PUSH2",
      "value": "0x10D3"
    },
    "4299": {
      "op": "DUP10"
    },
    "4300": {
      "op": "DUP4"
    },
    "4301": {
      "op": "DUP11"
    },
    "4302": {
      "op": "ADD"
    },
    "4303": {
      "op": "PUSH2",
      "value": "0xED6"
    },
    "4306": {
      "jump": "i",
      "op": "JUMP"
    },
    "4307": {
      "op": "JUMPDEST"
    },
    "4308": {
      "op": "SWAP5"
    },
    "4309": {
      "op": "POP"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4312": {
      "op": "DUP9"
    },
    "4313": {
      "op": "ADD"
    },
    "4314": {
      "op": "CALLDATALOAD"
    },
    "4315": {
      "op": "SWAP2"
    },
    "4316": {
      "op": "POP"
    },
    "4317": {
      "op": "DUP1"
    },
    "4318": {
      "op": "DUP3"
    },
    "4319": {
      "op": "GT"
    },
    "4320": {
      "op": "ISZERO"
    },
    "4321": {
      "op": "PUSH2",
      "value": "0x10E8"
    },
    "4324": {
      "op": "JUMPI"
    },
    "4325": {
      "op": "DUP3"
    },
    "4326": {
      "op": "DUP4"
    },
    "4327": {
      "op": "REVERT"
    },
    "4328": {
      "op": "JUMPDEST"
    },
    "4329": {
      "op": "PUSH2",
      "value": "0x10F4"
    },
    "4332": {
      "op": "DUP10"
    },
    "4333": {
      "op": "DUP4"
    },
    "4334": {
      "op": "DUP11"
    },
    "4335": {
      "op": "ADD"
    },
    "4336": {
      "op": "PUSH2",
      "value": "0xED6"
    },
    "4339": {
      "jump": "i",
      "op": "JUMP"
    },
    "4340": {
      "op": "JUMPDEST"
    },
    "4341": {
      "op": "SWAP4"
    },
    "4342": {
      "op": "POP"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4345": {
      "op": "DUP9"
    },
    "4346": {
      "op": "ADD"
    },
    "4347": {
      "op": "CALLDATALOAD"
    },
    "4348": {
      "op": "SWAP2"
    },
    "4349": {
      "op": "POP"
    },
    "4350": {
      "op": "DUP1"
    },
    "4351": {
      "op": "DUP3"
    },
    "4352": {
      "op": "GT"
    },
    "4353": {
      "op": "ISZERO"
    },
    "4354": {
      "op": "PUSH2",
      "value": "0x1109"
    },
    "4357": {
      "op": "JUMPI"
    },
    "4358": {
      "op": "DUP3"
    },
    "4359": {
      "op": "DUP4"
    },
    "4360": {
      "op": "REVERT"
    },
    "4361": {
      "op": "JUMPDEST"
    },
    "4362": {
      "op": "POP"
    },
    "4363": {
      "op": "PUSH2",
      "value": "0x1116"
    },
    "4366": {
      "op": "DUP9"
    },
    "4367": {
      "op": "DUP3"
    },
    "4368": {
      "op": "DUP10"
    },
    "4369": {
      "op": "ADD"
    },
    "4370": {
      "op": "PUSH2",
      "value": "0xF6D"
    },
    "4373": {
      "jump": "i",
      "op": "JUMP"
    },
    "4374": {
      "op": "JUMPDEST"
    },
    "4375": {
      "op": "SWAP2"
    },
    "4376": {
      "op": "POP"
    },
    "4377": {
      "op": "POP"
    },
    "4378": {
      "op": "SWAP3"
    },
    "4379": {
      "op": "SWAP6"
    },
    "4380": {
      "op": "POP"
    },
    "4381": {
      "op": "SWAP3"
    },
    "4382": {
      "op": "SWAP6"
    },
    "4383": {
      "op": "SWAP1"
    },
    "4384": {
      "op": "SWAP4"
    },
    "4385": {
      "op": "POP"
    },
    "4386": {
      "jump": "o",
      "op": "JUMP"
    },
    "4387": {
      "op": "JUMPDEST"
    },
    "4388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4390": {
      "op": "DUP1"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4393": {
      "op": "DUP1"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4398": {
      "op": "DUP7"
    },
    "4399": {
      "op": "DUP9"
    },
    "4400": {
      "op": "SUB"
    },
    "4401": {
      "op": "SLT"
    },
    "4402": {
      "op": "ISZERO"
    },
    "4403": {
      "op": "PUSH2",
      "value": "0x113A"
    },
    "4406": {
      "op": "JUMPI"
    },
    "4407": {
      "op": "DUP1"
    },
    "4408": {
      "op": "DUP2"
    },
    "4409": {
      "op": "REVERT"
    },
    "4410": {
      "op": "JUMPDEST"
    },
    "4411": {
      "op": "DUP6"
    },
    "4412": {
      "op": "CALLDATALOAD"
    },
    "4413": {
      "op": "PUSH2",
      "value": "0x1145"
    },
    "4416": {
      "op": "DUP2"
    },
    "4417": {
      "op": "PUSH2",
      "value": "0x1690"
    },
    "4420": {
      "jump": "i",
      "op": "JUMP"
    },
    "4421": {
      "op": "JUMPDEST"
    },
    "4422": {
      "op": "SWAP5"
    },
    "4423": {
      "op": "POP"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4426": {
      "op": "DUP7"
    },
    "4427": {
      "op": "ADD"
    },
    "4428": {
      "op": "CALLDATALOAD"
    },
    "4429": {
      "op": "PUSH2",
      "value": "0x1155"
    },
    "4432": {
      "op": "DUP2"
    },
    "4433": {
      "op": "PUSH2",
      "value": "0x1690"
    },
    "4436": {
      "jump": "i",
      "op": "JUMP"
    },
    "4437": {
      "op": "JUMPDEST"
    },
    "4438": {
      "op": "SWAP4"
    },
    "4439": {
      "op": "POP"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4442": {
      "op": "DUP7"
    },
    "4443": {
      "op": "ADD"
    },
    "4444": {
      "op": "CALLDATALOAD"
    },
    "4445": {
      "op": "SWAP3"
    },
    "4446": {
      "op": "POP"
    },
    "4447": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4449": {
      "op": "DUP7"
    },
    "4450": {
      "op": "ADD"
    },
    "4451": {
      "op": "CALLDATALOAD"
    },
    "4452": {
      "op": "SWAP2"
    },
    "4453": {
      "op": "POP"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4456": {
      "op": "DUP7"
    },
    "4457": {
      "op": "ADD"
    },
    "4458": {
      "op": "CALLDATALOAD"
    },
    "4459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4463": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4465": {
      "op": "SHL"
    },
    "4466": {
      "op": "SUB"
    },
    "4467": {
      "op": "DUP2"
    },
    "4468": {
      "op": "GT"
    },
    "4469": {
      "op": "ISZERO"
    },
    "4470": {
      "op": "PUSH2",
      "value": "0x117D"
    },
    "4473": {
      "op": "JUMPI"
    },
    "4474": {
      "op": "DUP2"
    },
    "4475": {
      "op": "DUP3"
    },
    "4476": {
      "op": "REVERT"
    },
    "4477": {
      "op": "JUMPDEST"
    },
    "4478": {
      "op": "PUSH2",
      "value": "0x1116"
    },
    "4481": {
      "op": "DUP9"
    },
    "4482": {
      "op": "DUP3"
    },
    "4483": {
      "op": "DUP10"
    },
    "4484": {
      "op": "ADD"
    },
    "4485": {
      "op": "PUSH2",
      "value": "0xF6D"
    },
    "4488": {
      "jump": "i",
      "op": "JUMP"
    },
    "4489": {
      "op": "JUMPDEST"
    },
    "4490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4492": {
      "op": "DUP1"
    },
    "4493": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4495": {
      "op": "DUP4"
    },
    "4496": {
      "op": "DUP6"
    },
    "4497": {
      "op": "SUB"
    },
    "4498": {
      "op": "SLT"
    },
    "4499": {
      "op": "ISZERO"
    },
    "4500": {
      "op": "PUSH2",
      "value": "0x119B"
    },
    "4503": {
      "op": "JUMPI"
    },
    "4504": {
      "op": "DUP2"
    },
    "4505": {
      "op": "DUP3"
    },
    "4506": {
      "op": "REVERT"
    },
    "4507": {
      "op": "JUMPDEST"
    },
    "4508": {
      "op": "DUP3"
    },
    "4509": {
      "op": "CALLDATALOAD"
    },
    "4510": {
      "op": "PUSH2",
      "value": "0x11A6"
    },
    "4513": {
      "op": "DUP2"
    },
    "4514": {
      "op": "PUSH2",
      "value": "0x1690"
    },
    "4517": {
      "jump": "i",
      "op": "JUMP"
    },
    "4518": {
      "op": "JUMPDEST"
    },
    "4519": {
      "op": "SWAP5"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4522": {
      "op": "SWAP4"
    },
    "4523": {
      "op": "SWAP1"
    },
    "4524": {
      "op": "SWAP4"
    },
    "4525": {
      "op": "ADD"
    },
    "4526": {
      "op": "CALLDATALOAD"
    },
    "4527": {
      "op": "SWAP4"
    },
    "4528": {
      "op": "POP"
    },
    "4529": {
      "op": "POP"
    },
    "4530": {
      "op": "POP"
    },
    "4531": {
      "jump": "o",
      "op": "JUMP"
    },
    "4532": {
      "op": "JUMPDEST"
    },
    "4533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4535": {
      "op": "DUP1"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4538": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4540": {
      "op": "DUP5"
    },
    "4541": {
      "op": "DUP7"
    },
    "4542": {
      "op": "SUB"
    },
    "4543": {
      "op": "SLT"
    },
    "4544": {
      "op": "ISZERO"
    },
    "4545": {
      "op": "PUSH2",
      "value": "0x11C8"
    },
    "4548": {
      "op": "JUMPI"
    },
    "4549": {
      "op": "DUP3"
    },
    "4550": {
      "op": "DUP4"
    },
    "4551": {
      "op": "REVERT"
    },
    "4552": {
      "op": "JUMPDEST"
    },
    "4553": {
      "op": "DUP4"
    },
    "4554": {
      "op": "CALLDATALOAD"
    },
    "4555": {
      "op": "PUSH2",
      "value": "0x11D3"
    },
    "4558": {
      "op": "DUP2"
    },
    "4559": {
      "op": "PUSH2",
      "value": "0x1690"
    },
    "4562": {
      "jump": "i",
      "op": "JUMP"
    },
    "4563": {
      "op": "JUMPDEST"
    },
    "4564": {
      "op": "SWAP6"
    },
    "4565": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4567": {
      "op": "DUP6"
    },
    "4568": {
      "op": "ADD"
    },
    "4569": {
      "op": "CALLDATALOAD"
    },
    "4570": {
      "op": "SWAP6"
    },
    "4571": {
      "op": "POP"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4574": {
      "op": "SWAP1"
    },
    "4575": {
      "op": "SWAP5"
    },
    "4576": {
      "op": "ADD"
    },
    "4577": {
      "op": "CALLDATALOAD"
    },
    "4578": {
      "op": "SWAP4"
    },
    "4579": {
      "op": "SWAP3"
    },
    "4580": {
      "op": "POP"
    },
    "4581": {
      "op": "POP"
    },
    "4582": {
      "op": "POP"
    },
    "4583": {
      "jump": "o",
      "op": "JUMP"
    },
    "4584": {
      "op": "JUMPDEST"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4589": {
      "op": "DUP3"
    },
    "4590": {
      "op": "DUP5"
    },
    "4591": {
      "op": "SUB"
    },
    "4592": {
      "op": "SLT"
    },
    "4593": {
      "op": "ISZERO"
    },
    "4594": {
      "op": "PUSH2",
      "value": "0x11F9"
    },
    "4597": {
      "op": "JUMPI"
    },
    "4598": {
      "op": "DUP1"
    },
    "4599": {
      "op": "DUP2"
    },
    "4600": {
      "op": "REVERT"
    },
    "4601": {
      "op": "JUMPDEST"
    },
    "4602": {
      "op": "PUSH2",
      "value": "0xE91"
    },
    "4605": {
      "op": "DUP3"
    },
    "4606": {
      "op": "PUSH2",
      "value": "0xF58"
    },
    "4609": {
      "jump": "i",
      "op": "JUMP"
    },
    "4610": {
      "op": "JUMPDEST"
    },
    "4611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4613": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4615": {
      "op": "DUP3"
    },
    "4616": {
      "op": "DUP5"
    },
    "4617": {
      "op": "SUB"
    },
    "4618": {
      "op": "SLT"
    },
    "4619": {
      "op": "ISZERO"
    },
    "4620": {
      "op": "PUSH2",
      "value": "0x1213"
    },
    "4623": {
      "op": "JUMPI"
    },
    "4624": {
      "op": "DUP1"
    },
    "4625": {
      "op": "DUP2"
    },
    "4626": {
      "op": "REVERT"
    },
    "4627": {
      "op": "JUMPDEST"
    },
    "4628": {
      "op": "POP"
    },
    "4629": {
      "op": "CALLDATALOAD"
    },
    "4630": {
      "op": "SWAP2"
    },
    "4631": {
      "op": "SWAP1"
    },
    "4632": {
      "op": "POP"
    },
    "4633": {
      "jump": "o",
      "op": "JUMP"
    },
    "4634": {
      "op": "JUMPDEST"
    },
    "4635": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4637": {
      "op": "DUP1"
    },
    "4638": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4640": {
      "op": "DUP4"
    },
    "4641": {
      "op": "DUP6"
    },
    "4642": {
      "op": "SUB"
    },
    "4643": {
      "op": "SLT"
    },
    "4644": {
      "op": "ISZERO"
    },
    "4645": {
      "op": "PUSH2",
      "value": "0x122C"
    },
    "4648": {
      "op": "JUMPI"
    },
    "4649": {
      "op": "DUP2"
    },
    "4650": {
      "op": "DUP3"
    },
    "4651": {
      "op": "REVERT"
    },
    "4652": {
      "op": "JUMPDEST"
    },
    "4653": {
      "op": "DUP3"
    },
    "4654": {
      "op": "CALLDATALOAD"
    },
    "4655": {
      "op": "SWAP2"
    },
    "4656": {
      "op": "POP"
    },
    "4657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4659": {
      "op": "DUP4"
    },
    "4660": {
      "op": "ADD"
    },
    "4661": {
      "op": "CALLDATALOAD"
    },
    "4662": {
      "op": "PUSH2",
      "value": "0x123E"
    },
    "4665": {
      "op": "DUP2"
    },
    "4666": {
      "op": "PUSH2",
      "value": "0x1690"
    },
    "4669": {
      "jump": "i",
      "op": "JUMP"
    },
    "4670": {
      "op": "JUMPDEST"
    },
    "4671": {
      "op": "DUP1"
    },
    "4672": {
      "op": "SWAP2"
    },
    "4673": {
      "op": "POP"
    },
    "4674": {
      "op": "POP"
    },
    "4675": {
      "op": "SWAP3"
    },
    "4676": {
      "op": "POP"
    },
    "4677": {
      "op": "SWAP3"
    },
    "4678": {
      "op": "SWAP1"
    },
    "4679": {
      "op": "POP"
    },
    "4680": {
      "jump": "o",
      "op": "JUMP"
    },
    "4681": {
      "op": "JUMPDEST"
    },
    "4682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4686": {
      "op": "DUP3"
    },
    "4687": {
      "op": "DUP5"
    },
    "4688": {
      "op": "SUB"
    },
    "4689": {
      "op": "SLT"
    },
    "4690": {
      "op": "ISZERO"
    },
    "4691": {
      "op": "PUSH2",
      "value": "0x125A"
    },
    "4694": {
      "op": "JUMPI"
    },
    "4695": {
      "op": "DUP1"
    },
    "4696": {
      "op": "DUP2"
    },
    "4697": {
      "op": "REVERT"
    },
    "4698": {
      "op": "JUMPDEST"
    },
    "4699": {
      "op": "DUP2"
    },
    "4700": {
      "op": "CALLDATALOAD"
    },
    "4701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4705": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4707": {
      "op": "SHL"
    },
    "4708": {
      "op": "SUB"
    },
    "4709": {
      "op": "NOT"
    },
    "4710": {
      "op": "DUP2"
    },
    "4711": {
      "op": "AND"
    },
    "4712": {
      "op": "DUP2"
    },
    "4713": {
      "op": "EQ"
    },
    "4714": {
      "op": "PUSH2",
      "value": "0xE91"
    },
    "4717": {
      "op": "JUMPI"
    },
    "4718": {
      "op": "DUP2"
    },
    "4719": {
      "op": "DUP3"
    },
    "4720": {
      "op": "REVERT"
    },
    "4721": {
      "op": "JUMPDEST"
    },
    "4722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4724": {
      "op": "DUP1"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4727": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4729": {
      "op": "DUP5"
    },
    "4730": {
      "op": "DUP7"
    },
    "4731": {
      "op": "SUB"
    },
    "4732": {
      "op": "SLT"
    },
    "4733": {
      "op": "ISZERO"
    },
    "4734": {
      "op": "PUSH2",
      "value": "0x1285"
    },
    "4737": {
      "op": "JUMPI"
    },
    "4738": {
      "op": "DUP1"
    },
    "4739": {
      "op": "DUP2"
    },
    "4740": {
      "op": "REVERT"
    },
    "4741": {
      "op": "JUMPDEST"
    },
    "4742": {
      "op": "DUP4"
    },
    "4743": {
      "op": "CALLDATALOAD"
    },
    "4744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4748": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4750": {
      "op": "SHL"
    },
    "4751": {
      "op": "SUB"
    },
    "4752": {
      "op": "DUP2"
    },
    "4753": {
      "op": "GT"
    },
    "4754": {
      "op": "ISZERO"
    },
    "4755": {
      "op": "PUSH2",
      "value": "0x129A"
    },
    "4758": {
      "op": "JUMPI"
    },
    "4759": {
      "op": "DUP2"
    },
    "4760": {
      "op": "DUP3"
    },
    "4761": {
      "op": "REVERT"
    },
    "4762": {
      "op": "JUMPDEST"
    },
    "4763": {
      "op": "DUP5"
    },
    "4764": {
      "op": "ADD"
    },
    "4765": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4767": {
      "op": "DUP2"
    },
    "4768": {
      "op": "ADD"
    },
    "4769": {
      "op": "DUP7"
    },
    "4770": {
      "op": "SGT"
    },
    "4771": {
      "op": "PUSH2",
      "value": "0x12AA"
    },
    "4774": {
      "op": "JUMPI"
    },
    "4775": {
      "op": "DUP2"
    },
    "4776": {
      "op": "DUP3"
    },
    "4777": {
      "op": "REVERT"
    },
    "4778": {
      "op": "JUMPDEST"
    },
    "4779": {
      "op": "PUSH2",
      "value": "0x12B9"
    },
    "4782": {
      "op": "DUP7"
    },
    "4783": {
      "op": "DUP3"
    },
    "4784": {
      "op": "CALLDATALOAD"
    },
    "4785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4787": {
      "op": "DUP5"
    },
    "4788": {
      "op": "ADD"
    },
    "4789": {
      "op": "PUSH2",
      "value": "0xE98"
    },
    "4792": {
      "jump": "i",
      "op": "JUMP"
    },
    "4793": {
      "op": "JUMPDEST"
    },
    "4794": {
      "op": "SWAP7"
    },
    "4795": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4797": {
      "op": "DUP7"
    },
    "4798": {
      "op": "ADD"
    },
    "4799": {
      "op": "CALLDATALOAD"
    },
    "4800": {
      "op": "SWAP7"
    },
    "4801": {
      "op": "POP"
    },
    "4802": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4804": {
      "op": "SWAP1"
    },
    "4805": {
      "op": "SWAP6"
    },
    "4806": {
      "op": "ADD"
    },
    "4807": {
      "op": "CALLDATALOAD"
    },
    "4808": {
      "op": "SWAP5"
    },
    "4809": {
      "op": "SWAP4"
    },
    "4810": {
      "op": "POP"
    },
    "4811": {
      "op": "POP"
    },
    "4812": {
      "op": "POP"
    },
    "4813": {
      "op": "POP"
    },
    "4814": {
      "jump": "o",
      "op": "JUMP"
    },
    "4815": {
      "op": "JUMPDEST"
    },
    "4816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4818": {
      "op": "DUP1"
    },
    "4819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4821": {
      "op": "DUP1"
    },
    "4822": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4824": {
      "op": "DUP1"
    },
    "4825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4827": {
      "op": "DUP1"
    },
    "4828": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4830": {
      "op": "DUP1"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4833": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "4836": {
      "op": "DUP13"
    },
    "4837": {
      "op": "DUP15"
    },
    "4838": {
      "op": "SUB"
    },
    "4839": {
      "op": "SLT"
    },
    "4840": {
      "op": "ISZERO"
    },
    "4841": {
      "op": "PUSH2",
      "value": "0x12F0"
    },
    "4844": {
      "op": "JUMPI"
    },
    "4845": {
      "op": "DUP9"
    },
    "4846": {
      "op": "DUP10"
    },
    "4847": {
      "op": "REVERT"
    },
    "4848": {
      "op": "JUMPDEST"
    },
    "4849": {
      "op": "DUP12"
    },
    "4850": {
      "op": "MLOAD"
    },
    "4851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4855": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4857": {
      "op": "SHL"
    },
    "4858": {
      "op": "SUB"
    },
    "4859": {
      "op": "DUP2"
    },
    "4860": {
      "op": "GT"
    },
    "4861": {
      "op": "ISZERO"
    },
    "4862": {
      "op": "PUSH2",
      "value": "0x1305"
    },
    "4865": {
      "op": "JUMPI"
    },
    "4866": {
      "op": "DUP10"
    },
    "4867": {
      "op": "DUP11"
    },
    "4868": {
      "op": "REVERT"
    },
    "4869": {
      "op": "JUMPDEST"
    },
    "4870": {
      "op": "PUSH2",
      "value": "0x1311"
    },
    "4873": {
      "op": "DUP15"
    },
    "4874": {
      "op": "DUP3"
    },
    "4875": {
      "op": "DUP16"
    },
    "4876": {
      "op": "ADD"
    },
    "4877": {
      "op": "PUSH2",
      "value": "0xF97"
    },
    "4880": {
      "jump": "i",
      "op": "JUMP"
    },
    "4881": {
      "op": "JUMPDEST"
    },
    "4882": {
      "op": "SWAP12"
    },
    "4883": {
      "op": "POP"
    },
    "4884": {
      "op": "POP"
    },
    "4885": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4887": {
      "op": "DUP13"
    },
    "4888": {
      "op": "ADD"
    },
    "4889": {
      "op": "MLOAD"
    },
    "4890": {
      "op": "SWAP10"
    },
    "4891": {
      "op": "POP"
    },
    "4892": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4894": {
      "op": "DUP13"
    },
    "4895": {
      "op": "ADD"
    },
    "4896": {
      "op": "MLOAD"
    },
    "4897": {
      "op": "SWAP9"
    },
    "4898": {
      "op": "POP"
    },
    "4899": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4901": {
      "op": "DUP13"
    },
    "4902": {
      "op": "ADD"
    },
    "4903": {
      "op": "MLOAD"
    },
    "4904": {
      "op": "SWAP8"
    },
    "4905": {
      "op": "POP"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4908": {
      "op": "DUP13"
    },
    "4909": {
      "op": "ADD"
    },
    "4910": {
      "op": "MLOAD"
    },
    "4911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4913": {
      "op": "DUP1"
    },
    "4914": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4916": {
      "op": "SHL"
    },
    "4917": {
      "op": "SUB"
    },
    "4918": {
      "op": "DUP2"
    },
    "4919": {
      "op": "GT"
    },
    "4920": {
      "op": "ISZERO"
    },
    "4921": {
      "op": "PUSH2",
      "value": "0x1340"
    },
    "4924": {
      "op": "JUMPI"
    },
    "4925": {
      "op": "DUP7"
    },
    "4926": {
      "op": "DUP8"
    },
    "4927": {
      "op": "REVERT"
    },
    "4928": {
      "op": "JUMPDEST"
    },
    "4929": {
      "op": "PUSH2",
      "value": "0x134C"
    },
    "4932": {
      "op": "DUP15"
    },
    "4933": {
      "op": "DUP3"
    },
    "4934": {
      "op": "DUP16"
    },
    "4935": {
      "op": "ADD"
    },
    "4936": {
      "op": "PUSH2",
      "value": "0xFE2"
    },
    "4939": {
      "jump": "i",
      "op": "JUMP"
    },
    "4940": {
      "op": "JUMPDEST"
    },
    "4941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4943": {
      "op": "DUP15"
    },
    "4944": {
      "op": "ADD"
    },
    "4945": {
      "op": "MLOAD"
    },
    "4946": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4948": {
      "op": "DUP16"
    },
    "4949": {
      "op": "ADD"
    },
    "4950": {
      "op": "MLOAD"
    },
    "4951": {
      "op": "SWAP2"
    },
    "4952": {
      "op": "SWAP10"
    },
    "4953": {
      "op": "POP"
    },
    "4954": {
      "op": "SWAP8"
    },
    "4955": {
      "op": "POP"
    },
    "4956": {
      "op": "SWAP1"
    },
    "4957": {
      "op": "POP"
    },
    "4958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4962": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4964": {
      "op": "SHL"
    },
    "4965": {
      "op": "SUB"
    },
    "4966": {
      "op": "DUP2"
    },
    "4967": {
      "op": "GT"
    },
    "4968": {
      "op": "ISZERO"
    },
    "4969": {
      "op": "PUSH2",
      "value": "0x1370"
    },
    "4972": {
      "op": "JUMPI"
    },
    "4973": {
      "op": "DUP6"
    },
    "4974": {
      "op": "DUP7"
    },
    "4975": {
      "op": "REVERT"
    },
    "4976": {
      "op": "JUMPDEST"
    },
    "4977": {
      "op": "PUSH2",
      "value": "0x137C"
    },
    "4980": {
      "op": "DUP15"
    },
    "4981": {
      "op": "DUP3"
    },
    "4982": {
      "op": "DUP16"
    },
    "4983": {
      "op": "ADD"
    },
    "4984": {
      "op": "PUSH2",
      "value": "0xFE2"
    },
    "4987": {
      "jump": "i",
      "op": "JUMP"
    },
    "4988": {
      "op": "JUMPDEST"
    },
    "4989": {
      "op": "SWAP6"
    },
    "4990": {
      "op": "POP"
    },
    "4991": {
      "op": "POP"
    },
    "4992": {
      "op": "PUSH2",
      "value": "0x138B"
    },
    "4995": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4997": {
      "op": "DUP14"
    },
    "4998": {
      "op": "ADD"
    },
    "4999": {
      "op": "PUSH2",
      "value": "0xF58"
    },
    "5002": {
      "jump": "i",
      "op": "JUMP"
    },
    "5003": {
      "op": "JUMPDEST"
    },
    "5004": {
      "op": "SWAP4"
    },
    "5005": {
      "op": "POP"
    },
    "5006": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "5009": {
      "op": "DUP13"
    },
    "5010": {
      "op": "ADD"
    },
    "5011": {
      "op": "MLOAD"
    },
    "5012": {
      "op": "SWAP3"
    },
    "5013": {
      "op": "POP"
    },
    "5014": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "5017": {
      "op": "DUP13"
    },
    "5018": {
      "op": "ADD"
    },
    "5019": {
      "op": "MLOAD"
    },
    "5020": {
      "op": "SWAP2"
    },
    "5021": {
      "op": "POP"
    },
    "5022": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "5025": {
      "op": "DUP13"
    },
    "5026": {
      "op": "ADD"
    },
    "5027": {
      "op": "MLOAD"
    },
    "5028": {
      "op": "SWAP1"
    },
    "5029": {
      "op": "POP"
    },
    "5030": {
      "op": "SWAP3"
    },
    "5031": {
      "op": "SWAP6"
    },
    "5032": {
      "op": "SWAP9"
    },
    "5033": {
      "op": "SWAP12"
    },
    "5034": {
      "op": "POP"
    },
    "5035": {
      "op": "SWAP3"
    },
    "5036": {
      "op": "SWAP6"
    },
    "5037": {
      "op": "SWAP9"
    },
    "5038": {
      "op": "SWAP12"
    },
    "5039": {
      "op": "SWAP1"
    },
    "5040": {
      "op": "SWAP4"
    },
    "5041": {
      "op": "SWAP7"
    },
    "5042": {
      "op": "SWAP10"
    },
    "5043": {
      "op": "POP"
    },
    "5044": {
      "jump": "o",
      "op": "JUMP"
    },
    "5045": {
      "op": "JUMPDEST"
    },
    "5046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5048": {
      "op": "DUP1"
    },
    "5049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5051": {
      "op": "DUP1"
    },
    "5052": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5054": {
      "op": "DUP6"
    },
    "5055": {
      "op": "DUP8"
    },
    "5056": {
      "op": "SUB"
    },
    "5057": {
      "op": "SLT"
    },
    "5058": {
      "op": "ISZERO"
    },
    "5059": {
      "op": "PUSH2",
      "value": "0x13CA"
    },
    "5062": {
      "op": "JUMPI"
    },
    "5063": {
      "op": "DUP2"
    },
    "5064": {
      "op": "DUP3"
    },
    "5065": {
      "op": "REVERT"
    },
    "5066": {
      "op": "JUMPDEST"
    },
    "5067": {
      "op": "DUP5"
    },
    "5068": {
      "op": "CALLDATALOAD"
    },
    "5069": {
      "op": "SWAP4"
    },
    "5070": {
      "op": "POP"
    },
    "5071": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5073": {
      "op": "DUP6"
    },
    "5074": {
      "op": "ADD"
    },
    "5075": {
      "op": "CALLDATALOAD"
    },
    "5076": {
      "op": "PUSH2",
      "value": "0x13DC"
    },
    "5079": {
      "op": "DUP2"
    },
    "5080": {
      "op": "PUSH2",
      "value": "0x1690"
    },
    "5083": {
      "jump": "i",
      "op": "JUMP"
    },
    "5084": {
      "op": "JUMPDEST"
    },
    "5085": {
      "op": "SWAP4"
    },
    "5086": {
      "op": "SWAP7"
    },
    "5087": {
      "op": "SWAP4"
    },
    "5088": {
      "op": "SWAP6"
    },
    "5089": {
      "op": "POP"
    },
    "5090": {
      "op": "POP"
    },
    "5091": {
      "op": "POP"
    },
    "5092": {
      "op": "POP"
    },
    "5093": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5095": {
      "op": "DUP3"
    },
    "5096": {
      "op": "ADD"
    },
    "5097": {
      "op": "CALLDATALOAD"
    },
    "5098": {
      "op": "SWAP2"
    },
    "5099": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5101": {
      "op": "ADD"
    },
    "5102": {
      "op": "CALLDATALOAD"
    },
    "5103": {
      "op": "SWAP1"
    },
    "5104": {
      "jump": "o",
      "op": "JUMP"
    },
    "5105": {
      "op": "JUMPDEST"
    },
    "5106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5108": {
      "op": "DUP1"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5111": {
      "op": "DUP1"
    },
    "5112": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5114": {
      "op": "DUP6"
    },
    "5115": {
      "op": "DUP8"
    },
    "5116": {
      "op": "SUB"
    },
    "5117": {
      "op": "SLT"
    },
    "5118": {
      "op": "ISZERO"
    },
    "5119": {
      "op": "PUSH2",
      "value": "0x1406"
    },
    "5122": {
      "op": "JUMPI"
    },
    "5123": {
      "op": "DUP2"
    },
    "5124": {
      "op": "DUP3"
    },
    "5125": {
      "op": "REVERT"
    },
    "5126": {
      "op": "JUMPDEST"
    },
    "5127": {
      "op": "POP"
    },
    "5128": {
      "op": "POP"
    },
    "5129": {
      "op": "DUP3"
    },
    "5130": {
      "op": "CALLDATALOAD"
    },
    "5131": {
      "op": "SWAP5"
    },
    "5132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5134": {
      "op": "DUP5"
    },
    "5135": {
      "op": "ADD"
    },
    "5136": {
      "op": "CALLDATALOAD"
    },
    "5137": {
      "op": "SWAP5"
    },
    "5138": {
      "op": "POP"
    },
    "5139": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5141": {
      "op": "DUP5"
    },
    "5142": {
      "op": "ADD"
    },
    "5143": {
      "op": "CALLDATALOAD"
    },
    "5144": {
      "op": "SWAP4"
    },
    "5145": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5147": {
      "op": "ADD"
    },
    "5148": {
      "op": "CALLDATALOAD"
    },
    "5149": {
      "op": "SWAP3"
    },
    "5150": {
      "op": "POP"
    },
    "5151": {
      "op": "SWAP1"
    },
    "5152": {
      "op": "POP"
    },
    "5153": {
      "jump": "o",
      "op": "JUMP"
    },
    "5154": {
      "op": "JUMPDEST"
    },
    "5155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5157": {
      "op": "DUP2"
    },
    "5158": {
      "op": "MLOAD"
    },
    "5159": {
      "op": "DUP1"
    },
    "5160": {
      "op": "DUP5"
    },
    "5161": {
      "op": "MSTORE"
    },
    "5162": {
      "op": "PUSH2",
      "value": "0x143A"
    },
    "5165": {
      "op": "DUP2"
    },
    "5166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5168": {
      "op": "DUP7"
    },
    "5169": {
      "op": "ADD"
    },
    "5170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5172": {
      "op": "DUP7"
    },
    "5173": {
      "op": "ADD"
    },
    "5174": {
      "op": "PUSH2",
      "value": "0x161D"
    },
    "5177": {
      "jump": "i",
      "op": "JUMP"
    },
    "5178": {
      "op": "JUMPDEST"
    },
    "5179": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5181": {
      "op": "ADD"
    },
    "5182": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5184": {
      "op": "NOT"
    },
    "5185": {
      "op": "AND"
    },
    "5186": {
      "op": "SWAP3"
    },
    "5187": {
      "op": "SWAP1"
    },
    "5188": {
      "op": "SWAP3"
    },
    "5189": {
      "op": "ADD"
    },
    "5190": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5192": {
      "op": "ADD"
    },
    "5193": {
      "op": "SWAP3"
    },
    "5194": {
      "op": "SWAP2"
    },
    "5195": {
      "op": "POP"
    },
    "5196": {
      "op": "POP"
    },
    "5197": {
      "jump": "o",
      "op": "JUMP"
    },
    "5198": {
      "op": "JUMPDEST"
    },
    "5199": {
      "op": "PUSH23",
      "value": "0x20B1B1B2B9B9A1B7B73A3937B61D1030B1B1B7BAB73A1"
    },
    "5223": {
      "op": "PUSH1",
      "value": "0x4D"
    },
    "5225": {
      "op": "SHL"
    },
    "5226": {
      "op": "DUP2"
    },
    "5227": {
      "op": "MSTORE"
    },
    "5228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5230": {
      "op": "DUP4"
    },
    "5231": {
      "op": "MLOAD"
    },
    "5232": {
      "op": "PUSH2",
      "value": "0x1480"
    },
    "5235": {
      "op": "DUP2"
    },
    "5236": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "5238": {
      "op": "DUP6"
    },
    "5239": {
      "op": "ADD"
    },
    "5240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5242": {
      "op": "DUP9"
    },
    "5243": {
      "op": "ADD"
    },
    "5244": {
      "op": "PUSH2",
      "value": "0x161D"
    },
    "5247": {
      "jump": "i",
      "op": "JUMP"
    },
    "5248": {
      "op": "JUMPDEST"
    },
    "5249": {
      "op": "PUSH17",
      "value": "0x1034B99036B4B9B9B4B733903937B6329"
    },
    "5267": {
      "op": "PUSH1",
      "value": "0x7D"
    },
    "5269": {
      "op": "SHL"
    },
    "5270": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "5272": {
      "op": "SWAP2"
    },
    "5273": {
      "op": "DUP5"
    },
    "5274": {
      "op": "ADD"
    },
    "5275": {
      "op": "SWAP2"
    },
    "5276": {
      "op": "DUP3"
    },
    "5277": {
      "op": "ADD"
    },
    "5278": {
      "op": "MSTORE"
    },
    "5279": {
      "op": "DUP4"
    },
    "5280": {
      "op": "MLOAD"
    },
    "5281": {
      "op": "PUSH2",
      "value": "0x14B1"
    },
    "5284": {
      "op": "DUP2"
    },
    "5285": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "5287": {
      "op": "DUP5"
    },
    "5288": {
      "op": "ADD"
    },
    "5289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5291": {
      "op": "DUP9"
    },
    "5292": {
      "op": "ADD"
    },
    "5293": {
      "op": "PUSH2",
      "value": "0x161D"
    },
    "5296": {
      "jump": "i",
      "op": "JUMP"
    },
    "5297": {
      "op": "JUMPDEST"
    },
    "5298": {
      "op": "ADD"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "5301": {
      "op": "ADD"
    },
    "5302": {
      "op": "SWAP5"
    },
    "5303": {
      "op": "SWAP4"
    },
    "5304": {
      "op": "POP"
    },
    "5305": {
      "op": "POP"
    },
    "5306": {
      "op": "POP"
    },
    "5307": {
      "op": "POP"
    },
    "5308": {
      "jump": "o",
      "op": "JUMP"
    },
    "5309": {
      "op": "JUMPDEST"
    },
    "5310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5316": {
      "op": "SHL"
    },
    "5317": {
      "op": "SUB"
    },
    "5318": {
      "op": "SWAP4"
    },
    "5319": {
      "op": "SWAP1"
    },
    "5320": {
      "op": "SWAP4"
    },
    "5321": {
      "op": "AND"
    },
    "5322": {
      "op": "DUP4"
    },
    "5323": {
      "op": "MSTORE"
    },
    "5324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5326": {
      "op": "DUP4"
    },
    "5327": {
      "op": "ADD"
    },
    "5328": {
      "op": "SWAP2"
    },
    "5329": {
      "op": "SWAP1"
    },
    "5330": {
      "op": "SWAP2"
    },
    "5331": {
      "op": "MSTORE"
    },
    "5332": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5334": {
      "op": "DUP3"
    },
    "5335": {
      "op": "ADD"
    },
    "5336": {
      "op": "MSTORE"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5339": {
      "op": "ADD"
    },
    "5340": {
      "op": "SWAP1"
    },
    "5341": {
      "jump": "o",
      "op": "JUMP"
    },
    "5342": {
      "op": "JUMPDEST"
    },
    "5343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5345": {
      "op": "DUP2"
    },
    "5346": {
      "op": "MSTORE"
    },
    "5347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5349": {
      "op": "PUSH2",
      "value": "0xE91"
    },
    "5352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5354": {
      "op": "DUP4"
    },
    "5355": {
      "op": "ADD"
    },
    "5356": {
      "op": "DUP5"
    },
    "5357": {
      "op": "PUSH2",
      "value": "0x1422"
    },
    "5360": {
      "jump": "i",
      "op": "JUMP"
    },
    "5361": {
      "op": "JUMPDEST"
    },
    "5362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5364": {
      "op": "DUP1"
    },
    "5365": {
      "op": "DUP3"
    },
    "5366": {
      "op": "MSTORE"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5369": {
      "op": "SWAP1"
    },
    "5370": {
      "op": "DUP3"
    },
    "5371": {
      "op": "ADD"
    },
    "5372": {
      "op": "MSTORE"
    },
    "5373": {
      "op": "PUSH32",
      "value": "0x506F6F6C3A206C6F636B6564416D6F756E7420697320616C726561647920756E"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5408": {
      "op": "DUP3"
    },
    "5409": {
      "op": "ADD"
    },
    "5410": {
      "op": "MSTORE"
    },
    "5411": {
      "op": "PUSH6",
      "value": "0x1B1BD8DAD959"
    },
    "5418": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "5420": {
      "op": "SHL"
    },
    "5421": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5423": {
      "op": "DUP3"
    },
    "5424": {
      "op": "ADD"
    },
    "5425": {
      "op": "MSTORE"
    },
    "5426": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5428": {
      "op": "ADD"
    },
    "5429": {
      "op": "SWAP1"
    },
    "5430": {
      "jump": "o",
      "op": "JUMP"
    },
    "5431": {
      "op": "JUMPDEST"
    },
    "5432": {
      "op": "DUP3"
    },
    "5433": {
      "op": "DUP2"
    },
    "5434": {
      "op": "MSTORE"
    },
    "5435": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5439": {
      "op": "DUP3"
    },
    "5440": {
      "op": "ADD"
    },
    "5441": {
      "op": "MSTORE"
    },
    "5442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5444": {
      "op": "PUSH2",
      "value": "0xFDA"
    },
    "5447": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5449": {
      "op": "DUP4"
    },
    "5450": {
      "op": "ADD"
    },
    "5451": {
      "op": "DUP5"
    },
    "5452": {
      "op": "PUSH2",
      "value": "0x1422"
    },
    "5455": {
      "jump": "i",
      "op": "JUMP"
    },
    "5456": {
      "op": "JUMPDEST"
    },
    "5457": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5459": {
      "op": "MLOAD"
    },
    "5460": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5462": {
      "op": "DUP2"
    },
    "5463": {
      "op": "ADD"
    },
    "5464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5468": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5470": {
      "op": "SHL"
    },
    "5471": {
      "op": "SUB"
    },
    "5472": {
      "op": "DUP2"
    },
    "5473": {
      "op": "GT"
    },
    "5474": {
      "op": "DUP3"
    },
    "5475": {
      "op": "DUP3"
    },
    "5476": {
      "op": "LT"
    },
    "5477": {
      "op": "OR"
    },
    "5478": {
      "op": "ISZERO"
    },
    "5479": {
      "op": "PUSH2",
      "value": "0x1572"
    },
    "5482": {
      "op": "JUMPI"
    },
    "5483": {
      "op": "PUSH2",
      "value": "0x1572"
    },
    "5486": {
      "op": "PUSH2",
      "value": "0x167A"
    },
    "5489": {
      "jump": "i",
      "op": "JUMP"
    },
    "5490": {
      "op": "JUMPDEST"
    },
    "5491": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5493": {
      "op": "MSTORE"
    },
    "5494": {
      "op": "SWAP1"
    },
    "5495": {
      "jump": "o",
      "op": "JUMP"
    },
    "5496": {
      "op": "JUMPDEST"
    },
    "5497": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5499": {
      "op": "MLOAD"
    },
    "5500": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5502": {
      "op": "DUP3"
    },
    "5503": {
      "op": "ADD"
    },
    "5504": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5506": {
      "op": "NOT"
    },
    "5507": {
      "op": "AND"
    },
    "5508": {
      "op": "DUP2"
    },
    "5509": {
      "op": "ADD"
    },
    "5510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5514": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5516": {
      "op": "SHL"
    },
    "5517": {
      "op": "SUB"
    },
    "5518": {
      "op": "DUP2"
    },
    "5519": {
      "op": "GT"
    },
    "5520": {
      "op": "DUP3"
    },
    "5521": {
      "op": "DUP3"
    },
    "5522": {
      "op": "LT"
    },
    "5523": {
      "op": "OR"
    },
    "5524": {
      "op": "ISZERO"
    },
    "5525": {
      "op": "PUSH2",
      "value": "0x15A0"
    },
    "5528": {
      "op": "JUMPI"
    },
    "5529": {
      "op": "PUSH2",
      "value": "0x15A0"
    },
    "5532": {
      "op": "PUSH2",
      "value": "0x167A"
    },
    "5535": {
      "jump": "i",
      "op": "JUMP"
    },
    "5536": {
      "op": "JUMPDEST"
    },
    "5537": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5539": {
      "op": "MSTORE"
    },
    "5540": {
      "op": "SWAP2"
    },
    "5541": {
      "op": "SWAP1"
    },
    "5542": {
      "op": "POP"
    },
    "5543": {
      "jump": "o",
      "op": "JUMP"
    },
    "5544": {
      "op": "JUMPDEST"
    },
    "5545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5551": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5553": {
      "op": "SHL"
    },
    "5554": {
      "op": "SUB"
    },
    "5555": {
      "op": "DUP3"
    },
    "5556": {
      "op": "GT"
    },
    "5557": {
      "op": "ISZERO"
    },
    "5558": {
      "op": "PUSH2",
      "value": "0x15C1"
    },
    "5561": {
      "op": "JUMPI"
    },
    "5562": {
      "op": "PUSH2",
      "value": "0x15C1"
    },
    "5565": {
      "op": "PUSH2",
      "value": "0x167A"
    },
    "5568": {
      "jump": "i",
      "op": "JUMP"
    },
    "5569": {
      "op": "JUMPDEST"
    },
    "5570": {
      "op": "POP"
    },
    "5571": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5573": {
      "op": "ADD"
    },
    "5574": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5576": {
      "op": "NOT"
    },
    "5577": {
      "op": "AND"
    },
    "5578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5580": {
      "op": "ADD"
    },
    "5581": {
      "op": "SWAP1"
    },
    "5582": {
      "jump": "o",
      "op": "JUMP"
    },
    "5583": {
      "op": "JUMPDEST"
    },
    "5584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5586": {
      "op": "DUP3"
    },
    "5587": {
      "op": "NOT"
    },
    "5588": {
      "op": "DUP3"
    },
    "5589": {
      "op": "GT"
    },
    "5590": {
      "op": "ISZERO"
    },
    "5591": {
      "op": "PUSH2",
      "value": "0x15E2"
    },
    "5594": {
      "op": "JUMPI"
    },
    "5595": {
      "op": "PUSH2",
      "value": "0x15E2"
    },
    "5598": {
      "op": "PUSH2",
      "value": "0x1664"
    },
    "5601": {
      "jump": "i",
      "op": "JUMP"
    },
    "5602": {
      "op": "JUMPDEST"
    },
    "5603": {
      "op": "POP"
    },
    "5604": {
      "op": "ADD"
    },
    "5605": {
      "op": "SWAP1"
    },
    "5606": {
      "jump": "o",
      "op": "JUMP"
    },
    "5607": {
      "op": "JUMPDEST"
    },
    "5608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5610": {
      "op": "DUP2"
    },
    "5611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5613": {
      "op": "NOT"
    },
    "5614": {
      "op": "DIV"
    },
    "5615": {
      "op": "DUP4"
    },
    "5616": {
      "op": "GT"
    },
    "5617": {
      "op": "DUP3"
    },
    "5618": {
      "op": "ISZERO"
    },
    "5619": {
      "op": "ISZERO"
    },
    "5620": {
      "op": "AND"
    },
    "5621": {
      "op": "ISZERO"
    },
    "5622": {
      "op": "PUSH2",
      "value": "0x1601"
    },
    "5625": {
      "op": "JUMPI"
    },
    "5626": {
      "op": "PUSH2",
      "value": "0x1601"
    },
    "5629": {
      "op": "PUSH2",
      "value": "0x1664"
    },
    "5632": {
      "jump": "i",
      "op": "JUMP"
    },
    "5633": {
      "op": "JUMPDEST"
    },
    "5634": {
      "op": "POP"
    },
    "5635": {
      "op": "MUL"
    },
    "5636": {
      "op": "SWAP1"
    },
    "5637": {
      "jump": "o",
      "op": "JUMP"
    },
    "5638": {
      "op": "JUMPDEST"
    },
    "5639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5641": {
      "op": "DUP3"
    },
    "5642": {
      "op": "DUP3"
    },
    "5643": {
      "op": "LT"
    },
    "5644": {
      "op": "ISZERO"
    },
    "5645": {
      "op": "PUSH2",
      "value": "0x1618"
    },
    "5648": {
      "op": "JUMPI"
    },
    "5649": {
      "op": "PUSH2",
      "value": "0x1618"
    },
    "5652": {
      "op": "PUSH2",
      "value": "0x1664"
    },
    "5655": {
      "jump": "i",
      "op": "JUMP"
    },
    "5656": {
      "op": "JUMPDEST"
    },
    "5657": {
      "op": "POP"
    },
    "5658": {
      "op": "SUB"
    },
    "5659": {
      "op": "SWAP1"
    },
    "5660": {
      "jump": "o",
      "op": "JUMP"
    },
    "5661": {
      "op": "JUMPDEST"
    },
    "5662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5664": {
      "op": "JUMPDEST"
    },
    "5665": {
      "op": "DUP4"
    },
    "5666": {
      "op": "DUP2"
    },
    "5667": {
      "op": "LT"
    },
    "5668": {
      "op": "ISZERO"
    },
    "5669": {
      "op": "PUSH2",
      "value": "0x1638"
    },
    "5672": {
      "op": "JUMPI"
    },
    "5673": {
      "op": "DUP2"
    },
    "5674": {
      "op": "DUP2"
    },
    "5675": {
      "op": "ADD"
    },
    "5676": {
      "op": "MLOAD"
    },
    "5677": {
      "op": "DUP4"
    },
    "5678": {
      "op": "DUP3"
    },
    "5679": {
      "op": "ADD"
    },
    "5680": {
      "op": "MSTORE"
    },
    "5681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5683": {
      "op": "ADD"
    },
    "5684": {
      "op": "PUSH2",
      "value": "0x1620"
    },
    "5687": {
      "op": "JUMP"
    },
    "5688": {
      "op": "JUMPDEST"
    },
    "5689": {
      "op": "DUP4"
    },
    "5690": {
      "op": "DUP2"
    },
    "5691": {
      "op": "GT"
    },
    "5692": {
      "op": "ISZERO"
    },
    "5693": {
      "op": "PUSH2",
      "value": "0x1647"
    },
    "5696": {
      "op": "JUMPI"
    },
    "5697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5699": {
      "op": "DUP5"
    },
    "5700": {
      "op": "DUP5"
    },
    "5701": {
      "op": "ADD"
    },
    "5702": {
      "op": "MSTORE"
    },
    "5703": {
      "op": "JUMPDEST"
    },
    "5704": {
      "op": "POP"
    },
    "5705": {
      "op": "POP"
    },
    "5706": {
      "op": "POP"
    },
    "5707": {
      "op": "POP"
    },
    "5708": {
      "jump": "o",
      "op": "JUMP"
    },
    "5709": {
      "op": "JUMPDEST"
    },
    "5710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5712": {
      "op": "DUP2"
    },
    "5713": {
      "op": "PUSH2",
      "value": "0x165C"
    },
    "5716": {
      "op": "JUMPI"
    },
    "5717": {
      "op": "PUSH2",
      "value": "0x165C"
    },
    "5720": {
      "op": "PUSH2",
      "value": "0x1664"
    },
    "5723": {
      "jump": "i",
      "op": "JUMP"
    },
    "5724": {
      "op": "JUMPDEST"
    },
    "5725": {
      "op": "POP"
    },
    "5726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5728": {
      "op": "NOT"
    },
    "5729": {
      "op": "ADD"
    },
    "5730": {
      "op": "SWAP1"
    },
    "5731": {
      "jump": "o",
      "op": "JUMP"
    },
    "5732": {
      "op": "JUMPDEST"
    },
    "5733": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5738": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5740": {
      "op": "SHL"
    },
    "5741": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5743": {
      "op": "MSTORE"
    },
    "5744": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5746": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5748": {
      "op": "MSTORE"
    },
    "5749": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5753": {
      "op": "REVERT"
    },
    "5754": {
      "op": "JUMPDEST"
    },
    "5755": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5760": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5762": {
      "op": "SHL"
    },
    "5763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5765": {
      "op": "MSTORE"
    },
    "5766": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "5768": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5770": {
      "op": "MSTORE"
    },
    "5771": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5775": {
      "op": "REVERT"
    },
    "5776": {
      "op": "JUMPDEST"
    },
    "5777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5781": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5783": {
      "op": "SHL"
    },
    "5784": {
      "op": "SUB"
    },
    "5785": {
      "op": "DUP2"
    },
    "5786": {
      "op": "AND"
    },
    "5787": {
      "op": "DUP2"
    },
    "5788": {
      "op": "EQ"
    },
    "5789": {
      "op": "PUSH2",
      "value": "0x16A5"
    },
    "5792": {
      "op": "JUMPI"
    },
    "5793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5795": {
      "op": "DUP1"
    },
    "5796": {
      "op": "REVERT"
    },
    "5797": {
      "op": "JUMPDEST"
    },
    "5798": {
      "op": "POP"
    },
    "5799": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "93789f18968a16e7d48116af0a28c505de743b04",
  "source": "pragma solidity ^0.8.0;\n\n// SPDX-License-Identifier: BUSL-1.1\n\nimport \"../Interfaces/Interfaces.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\n\n/**\n * @author Heisenberg\n * @title Buffer TokenX Liquidity Pool\n * @notice Accumulates liquidity in TokenX from LPs and distributes P&L in TokenX\n */\ncontract BufferBinaryIBFRPoolBinary is\n    AccessControl,\n    ILiquidityPool,\n    ERC1155Holder\n{\n    address public owner;\n    ITournamentManager public tournamentManager;\n    mapping(address => LockedLiquidity[]) public lockedLiquidity;\n\n    bytes32 public constant OPTION_ISSUER_ROLE =\n        keccak256(\"OPTION_ISSUER_ROLE\");\n\n    constructor(address _tournamentManager) {\n        owner = msg.sender;\n        tournamentManager = ITournamentManager(_tournamentManager);\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n    }\n\n    function chargeFee(\n        address user,\n        uint256 fee,\n        uint256 tournamentId\n    ) external override onlyRole(OPTION_ISSUER_ROLE) {\n        tournamentManager.burn(user, tournamentId, fee);\n    }\n\n    function checkParams(\n        string memory asset,\n        uint256 tournamentId,\n        uint256 expiration\n    ) external view override {\n        require(\n            tournamentManager.isTradable(tournamentId, asset),\n            \"Trading isn't allowed on this asset\"\n        );\n        (, uint256 start, uint256 close, , , , , , , , ) = tournamentManager\n            .tournaments(tournamentId);\n        require(block.timestamp > start, \"This tournament has not started yet\");\n        require(expiration < close, \"Option expiry is out of bounds\");\n    }\n\n    /**\n     * @notice Called by BufferCallOptions to lock the funds\n     * @param amountToLock Amount of funds that should be locked in an option\n     * @param premium Fee that the user paid\n     * @param tournamentId Id of the tournament the option is bought for\n     */\n    function lock(\n        uint256 id,\n        uint256 amountToLock,\n        uint256 premium,\n        uint256 tournamentId\n    ) external override onlyRole(OPTION_ISSUER_ROLE) {\n        require(id == lockedLiquidity[msg.sender].length, \"Wrong id\");\n\n        lockedLiquidity[msg.sender].push(\n            LockedLiquidity(amountToLock, premium, true)\n        );\n        tournamentManager.mint(address(this), tournamentId, amountToLock);\n    }\n\n    /**\n     * @notice Called by BufferOptions to unlock the funds\n     * @param id Id of LockedLiquidity that should be unlocked\n     */\n    function _unlock(uint256 id)\n        internal\n        onlyRole(OPTION_ISSUER_ROLE)\n        returns (uint256 premium)\n    {\n        LockedLiquidity storage ll = lockedLiquidity[msg.sender][id];\n        require(ll.locked, \"Pool: lockedAmount is already unlocked\");\n        ll.locked = false;\n\n        premium = ll.premium;\n    }\n\n    /**\n     * @notice Called by BufferOptions to unlock the funds\n     * @param id Id of LockedLiquidity that should be unlocked\n     */\n    function unlock(uint256 id) external override {\n        uint256 premium = _unlock(id);\n        emit Profit(id, premium);\n    }\n\n    /**\n     * @notice Called by BufferOptions to unlock the funds\n     * @param id Id of LockedLiquidity that should be unlocked\n     */\n    function unlockWithoutProfit(uint256 id) external override {\n        _unlock(id);\n    }\n\n    /**\n     * @notice Called by BufferCallOptions to send funds to liquidity providers after an option's expiration\n     * @param to Provider\n     * @param profit Funds that should be sent\n     * @param tournamentId Id of the tournament the option is bought for\n     */\n    function send(\n        uint256 id,\n        address to,\n        uint256 profit,\n        uint256 tournamentId\n    ) external override onlyRole(OPTION_ISSUER_ROLE) {\n        LockedLiquidity storage ll = lockedLiquidity[msg.sender][id];\n        require(ll.locked, \"Pool: lockedAmount is already unlocked\");\n        require(to != address(0));\n\n        ll.locked = false;\n\n        uint256 transferrableProfit = profit > ll.amount ? ll.amount : profit;\n\n        tournamentManager.safeTransferFrom(\n            address(this),\n            to,\n            tournamentId,\n            transferrableProfit,\n            \"\"\n        );\n        tournamentManager.updateUserRank(to, tournamentId);\n\n        if (transferrableProfit <= ll.premium)\n            emit Profit(id, ll.premium - transferrableProfit);\n        else emit Loss(id, transferrableProfit - ll.premium);\n    }\n\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(AccessControl, ERC1155Receiver)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n}\n",
  "sourceMap": "385:4344:23:-:0;;;720:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;770:5;:18;;778:10;-1:-1:-1;;;;;;770:18:23;;;;;;;;798:17;:58;;;;;-1:-1:-1;;;;;798:58:23;;;;;866:42;;-1:-1:-1;;866:10:23;:42::i;:::-;720:195;385:4344;;6084:110:0;6162:25;6173:4;6179:7;6162:10;:25::i;:::-;6084:110;;:::o;6572:224::-;2912:4;2935:12;;;;;;;;;;;-1:-1:-1;;;;;2935:29:0;;;;;;;;;;;;6641:149;;6684:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6684:29:0;;;;;;;;;:36;;-1:-1:-1;;6684:36:0;6716:4;6684:36;;;6766:12;666:10:17;;587:96;6766:12:0;-1:-1:-1;;;;;6739:40:0;6757:7;-1:-1:-1;;;;;6739:40:0;6751:4;6739:40;;;;;;;;;;6572:224;;:::o;14:310:27:-;84:6;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:27;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:27:o;:::-;385:4344:23;;;;;;",
  "sourcePath": "contracts/Binary ATM Options/BufferBinaryIBFRPoolBinary.sol",
  "type": "contract"
}