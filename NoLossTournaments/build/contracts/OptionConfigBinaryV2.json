{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staking",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialImpliedVolRate",
          "type": "uint256"
        },
        {
          "internalType": "contract BufferBinaryIBFRPoolBinary",
          "name": "_pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateImpliedVolatility",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateMaxPeriod",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateNFTSaleRoyaltyPercentage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateOptionCollaterizationRatio",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateOptionSizePerBlockLimitPercent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateReferralRewardPercentage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateSettlementFeePercentage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "UpdateSettlementFeeRecipient",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateStakingFeePercentage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateStrike",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IOptionsConfig.PermittedTradingType",
          "name": "permissionType",
          "type": "uint8"
        }
      ],
      "name": "UpdateTradingPermission",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdateUnits",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "impliedVolRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftSaleRoyaltyPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "optionCollateralizationRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "optionSizePerBlockLimitPercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permittedTradingType",
      "outputs": [
        {
          "internalType": "enum IOptionsConfig.PermittedTradingType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract BufferBinaryIBFRPoolBinary",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "referralRewardPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setImpliedVolRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setMaxPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setNFTSaleRoyaltyPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setOptionCollaterizationRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setReferralRewardPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setSettlementFeePercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "setSettlementFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setStakingFeePercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IOptionsConfig.PermittedTradingType",
          "name": "permissionType",
          "type": "uint8"
        }
      ],
      "name": "setTradingPermission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setUtilizationRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settlementFeePercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settlementFeeRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingFeePercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "utilizationRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/AccessControl.sol",
    "1": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/IAccessControl.sol",
    "10": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
    "17": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
    "18": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Strings.sol",
    "19": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/ERC165.sol",
    "2": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/Ownable.sol",
    "20": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/IERC165.sol",
    "23": "contracts/Binary ATM Options/BufferBinaryIBFRPoolBinary.sol",
    "24": "contracts/Binary ATM Options/OptionConfigBinaryV2.sol",
    "25": "contracts/Interfaces/Interfaces.sol",
    "6": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/IERC1155Receiver.sol",
    "8": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/utils/ERC1155Holder.sol",
    "9": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/utils/ERC1155Receiver.sol"
  },
  "ast": {
    "absolutePath": "contracts/Binary ATM Options/OptionConfigBinaryV2.sol",
    "exportedSymbols": {
      "AccessControl": [
        3733
      ],
      "BufferBinaryIBFRPoolBinary": [
        1270
      ],
      "Context": [
        7022
      ],
      "ERC1155Holder": [
        5471
      ],
      "ERC1155Receiver": [
        7444
      ],
      "ERC165": [
        7249
      ],
      "IAccessControl": [
        7000
      ],
      "IBufferBinaryOptions": [
        1671
      ],
      "IBufferOptions": [
        1730
      ],
      "IERC1155Receiver": [
        7607
      ],
      "IERC165": [
        7634
      ],
      "IERC20": [
        5549
      ],
      "ILiquidityPool": [
        1854
      ],
      "IOptionsConfig": [
        1913
      ],
      "IPriceProvider": [
        1952
      ],
      "ITournamentManager": [
        2207
      ],
      "OptionConfigBinaryV2": [
        1574
      ],
      "Ownable": [
        3837
      ],
      "Strings": [
        7225
      ]
    },
    "id": 1575,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1272,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:24"
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1273,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1575,
        "sourceUnit": 3838,
        "src": "63:52:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Binary ATM Options/BufferBinaryIBFRPoolBinary.sol",
        "file": "./BufferBinaryIBFRPoolBinary.sol",
        "id": 1274,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1575,
        "sourceUnit": 1271,
        "src": "116:42:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1276,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3837,
              "src": "320:7:24"
            },
            "id": 1277,
            "nodeType": "InheritanceSpecifier",
            "src": "320:7:24"
          },
          {
            "baseName": {
              "id": 1278,
              "name": "IOptionsConfig",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1913,
              "src": "329:14:24"
            },
            "id": 1279,
            "nodeType": "InheritanceSpecifier",
            "src": "329:14:24"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1275,
          "nodeType": "StructuredDocumentation",
          "src": "160:126:24",
          "text": " @author Heisenberg\n @title Buffer BNB Bidirectional (Call and Put) Options\n @notice Buffer BNB Options Contract"
        },
        "fullyImplemented": true,
        "id": 1574,
        "linearizedBaseContracts": [
          1574,
          1913,
          3837,
          7022
        ],
        "name": "OptionConfigBinaryV2",
        "nameLocation": "296:20:24",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "18f88e5b",
            "id": 1281,
            "mutability": "mutable",
            "name": "impliedVolRate",
            "nameLocation": "365:14:24",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "350:29:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1280,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "350:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "302ce651",
            "id": 1284,
            "mutability": "mutable",
            "name": "optionCollateralizationRatio",
            "nameLocation": "400:28:24",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "385:49:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1282,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "385:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030",
              "id": 1283,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "431:3:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f3fa3495",
            "id": 1287,
            "mutability": "mutable",
            "name": "settlementFeePercentage",
            "nameLocation": "455:23:24",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "440:44:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1285,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "440:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "356532",
              "id": 1286,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "481:3:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500_by_1",
                "typeString": "int_const 500"
              },
              "value": "5e2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ca535c3b",
            "id": 1290,
            "mutability": "mutable",
            "name": "stakingFeePercentage",
            "nameLocation": "505:20:24",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "490:40:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1288,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "490:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530",
              "id": 1289,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "528:2:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "920a253e",
            "id": 1293,
            "mutability": "mutable",
            "name": "referralRewardPercentage",
            "nameLocation": "551:24:24",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "536:43:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1291,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "536:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1292,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "578:1:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ed0974c7",
            "id": 1296,
            "mutability": "mutable",
            "name": "nftSaleRoyaltyPercentage",
            "nameLocation": "600:24:24",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "585:43:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1294,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "585:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 1295,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "627:1:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1299,
            "mutability": "constant",
            "name": "PRICE_DECIMALS",
            "nameLocation": "660:14:24",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "634:46:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1297,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "634:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "316538",
              "id": 1298,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "677:3:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000_by_1",
                "typeString": "int_const 100000000"
              },
              "value": "1e8"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "181731dc",
            "id": 1301,
            "mutability": "mutable",
            "name": "settlementFeeRecipient",
            "nameLocation": "701:22:24",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "686:37:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1300,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "686:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6c321c8a",
            "id": 1304,
            "mutability": "mutable",
            "name": "utilizationRate",
            "nameLocation": "744:15:24",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "729:37:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1302,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "729:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "36306538",
              "id": 1303,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "762:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_6000000000_by_1",
                "typeString": "int_const 6000000000"
              },
              "value": "60e8"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "71bf7e25",
            "id": 1307,
            "mutability": "mutable",
            "name": "optionSizePerBlockLimitPercent",
            "nameLocation": "787:30:24",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "772:49:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1305,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "772:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 1306,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "820:1:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "49b9a67f",
            "id": 1310,
            "mutability": "mutable",
            "name": "maxPeriod",
            "nameLocation": "842:9:24",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "827:35:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1308,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "827:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3234",
              "id": 1309,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "854:8:24",
              "subdenomination": "hours",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "24"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 1313,
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "902:4:24",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "868:38:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BufferBinaryIBFRPoolBinary_$1270",
              "typeString": "contract BufferBinaryIBFRPoolBinary"
            },
            "typeName": {
              "id": 1312,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1311,
                "name": "BufferBinaryIBFRPoolBinary",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1270,
                "src": "868:26:24"
              },
              "referencedDeclaration": 1270,
              "src": "868:26:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BufferBinaryIBFRPoolBinary_$1270",
                "typeString": "contract BufferBinaryIBFRPoolBinary"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f12a0466",
            "id": 1316,
            "mutability": "mutable",
            "name": "permittedTradingType",
            "nameLocation": "940:20:24",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "912:48:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_PermittedTradingType_$1859",
              "typeString": "enum IOptionsConfig.PermittedTradingType"
            },
            "typeName": {
              "id": 1315,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1314,
                "name": "PermittedTradingType",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1859,
                "src": "912:20:24"
              },
              "referencedDeclaration": 1859,
              "src": "912:20:24",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_PermittedTradingType_$1859",
                "typeString": "enum IOptionsConfig.PermittedTradingType"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1338,
              "nodeType": "Block",
              "src": "1091:119:24",
              "statements": [
                {
                  "expression": {
                    "id": 1328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1326,
                      "name": "settlementFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1301,
                      "src": "1101:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1327,
                      "name": "staking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1318,
                      "src": "1126:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1101:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1329,
                  "nodeType": "ExpressionStatement",
                  "src": "1101:32:24"
                },
                {
                  "expression": {
                    "id": 1332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1330,
                      "name": "impliedVolRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1281,
                      "src": "1143:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1331,
                      "name": "initialImpliedVolRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1320,
                      "src": "1160:21:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1143:38:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1333,
                  "nodeType": "ExpressionStatement",
                  "src": "1143:38:24"
                },
                {
                  "expression": {
                    "id": 1336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1334,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1313,
                      "src": "1191:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BufferBinaryIBFRPoolBinary_$1270",
                        "typeString": "contract BufferBinaryIBFRPoolBinary"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1335,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1323,
                      "src": "1198:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BufferBinaryIBFRPoolBinary_$1270",
                        "typeString": "contract BufferBinaryIBFRPoolBinary"
                      }
                    },
                    "src": "1191:12:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BufferBinaryIBFRPoolBinary_$1270",
                      "typeString": "contract BufferBinaryIBFRPoolBinary"
                    }
                  },
                  "id": 1337,
                  "nodeType": "ExpressionStatement",
                  "src": "1191:12:24"
                }
              ]
            },
            "id": 1339,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1318,
                  "mutability": "mutable",
                  "name": "staking",
                  "nameLocation": "996:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1339,
                  "src": "988:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "988:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1320,
                  "mutability": "mutable",
                  "name": "initialImpliedVolRate",
                  "nameLocation": "1021:21:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1339,
                  "src": "1013:29:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1323,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "1079:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1339,
                  "src": "1052:32:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BufferBinaryIBFRPoolBinary_$1270",
                    "typeString": "contract BufferBinaryIBFRPoolBinary"
                  },
                  "typeName": {
                    "id": 1322,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1321,
                      "name": "BufferBinaryIBFRPoolBinary",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1270,
                      "src": "1052:26:24"
                    },
                    "referencedDeclaration": 1270,
                    "src": "1052:26:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BufferBinaryIBFRPoolBinary_$1270",
                      "typeString": "contract BufferBinaryIBFRPoolBinary"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "978:112:24"
            },
            "returnParameters": {
              "id": 1325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1091:0:24"
            },
            "scope": 1574,
            "src": "967:243:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1362,
              "nodeType": "Block",
              "src": "1370:190:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1348,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1342,
                          "src": "1401:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 1349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1410:9:24",
                          "subdenomination": "minutes",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_300_by_1",
                            "typeString": "int_const 300"
                          },
                          "value": "5"
                        },
                        "src": "1401:18:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178506572696f64206e6565647320746f2062652067726561746572207468616e2035206d696e75746573",
                        "id": 1351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1433:46:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f27ee8eb57e19a7140ed11c234d489e275e21256425de73098381b81d1120547",
                          "typeString": "literal_string \"MaxPeriod needs to be greater than 5 minutes\""
                        },
                        "value": "MaxPeriod needs to be greater than 5 minutes"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f27ee8eb57e19a7140ed11c234d489e275e21256425de73098381b81d1120547",
                          "typeString": "literal_string \"MaxPeriod needs to be greater than 5 minutes\""
                        }
                      ],
                      "id": 1347,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1380:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1380:109:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1353,
                  "nodeType": "ExpressionStatement",
                  "src": "1380:109:24"
                },
                {
                  "expression": {
                    "id": 1356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1354,
                      "name": "maxPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1310,
                      "src": "1499:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1355,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1342,
                      "src": "1511:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1499:17:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1357,
                  "nodeType": "ExpressionStatement",
                  "src": "1499:17:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1359,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1342,
                        "src": "1547:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1358,
                      "name": "UpdateMaxPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1904,
                      "src": "1531:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1531:22:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1361,
                  "nodeType": "EmitStatement",
                  "src": "1526:27:24"
                }
              ]
            },
            "documentation": {
              "id": 1340,
              "nodeType": "StructuredDocumentation",
              "src": "1216:93:24",
              "text": " @notice Used for adjusting the maxPeriod\n @param value New maxPeriod"
            },
            "functionSelector": "ae1c9fc1",
            "id": 1363,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1345,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1344,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3780,
                  "src": "1360:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "1360:9:24"
              }
            ],
            "name": "setMaxPeriod",
            "nameLocation": "1323:12:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1342,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1344:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1363,
                  "src": "1336:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1336:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1335:15:24"
            },
            "returnParameters": {
              "id": 1346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1370:0:24"
            },
            "scope": 1574,
            "src": "1314:246:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1386,
              "nodeType": "Block",
              "src": "1781:152:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1372,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1366,
                          "src": "1799:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 1373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1808:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "1799:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496d706c696564566f6c52617465206c696d697420697320746f6f20736d616c6c",
                        "id": 1375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1813:35:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e57454b21ce65a63b8011f369bea0d36d60a55f04baa91c83795124af1ef1101",
                          "typeString": "literal_string \"ImpliedVolRate limit is too small\""
                        },
                        "value": "ImpliedVolRate limit is too small"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e57454b21ce65a63b8011f369bea0d36d60a55f04baa91c83795124af1ef1101",
                          "typeString": "literal_string \"ImpliedVolRate limit is too small\""
                        }
                      ],
                      "id": 1371,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1791:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1791:58:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1377,
                  "nodeType": "ExpressionStatement",
                  "src": "1791:58:24"
                },
                {
                  "expression": {
                    "id": 1380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1378,
                      "name": "impliedVolRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1281,
                      "src": "1859:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1379,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1366,
                      "src": "1876:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1859:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1381,
                  "nodeType": "ExpressionStatement",
                  "src": "1859:22:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1383,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1366,
                        "src": "1920:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1382,
                      "name": "UpdateImpliedVolatility",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1863,
                      "src": "1896:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1896:30:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1385,
                  "nodeType": "EmitStatement",
                  "src": "1891:35:24"
                }
              ]
            },
            "documentation": {
              "id": 1364,
              "nodeType": "StructuredDocumentation",
              "src": "1566:149:24",
              "text": " @notice Used for adjusting the options prices while balancing asset's implied volatility rate\n @param value New IVRate value"
            },
            "functionSelector": "ceaeeba9",
            "id": 1387,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1369,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1368,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3780,
                  "src": "1771:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "1771:9:24"
              }
            ],
            "name": "setImpliedVolRate",
            "nameLocation": "1729:17:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1366,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1755:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1387,
                  "src": "1747:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1747:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1746:15:24"
            },
            "returnParameters": {
              "id": 1370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1781:0:24"
            },
            "scope": 1574,
            "src": "1720:213:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1403,
              "nodeType": "Block",
              "src": "2045:108:24",
              "statements": [
                {
                  "expression": {
                    "id": 1397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1395,
                      "name": "permittedTradingType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1316,
                      "src": "2055:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PermittedTradingType_$1859",
                        "typeString": "enum IOptionsConfig.PermittedTradingType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1396,
                      "name": "permissionType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1390,
                      "src": "2078:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PermittedTradingType_$1859",
                        "typeString": "enum IOptionsConfig.PermittedTradingType"
                      }
                    },
                    "src": "2055:37:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermittedTradingType_$1859",
                      "typeString": "enum IOptionsConfig.PermittedTradingType"
                    }
                  },
                  "id": 1398,
                  "nodeType": "ExpressionStatement",
                  "src": "2055:37:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1400,
                        "name": "permissionType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1390,
                        "src": "2131:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PermittedTradingType_$1859",
                          "typeString": "enum IOptionsConfig.PermittedTradingType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_PermittedTradingType_$1859",
                          "typeString": "enum IOptionsConfig.PermittedTradingType"
                        }
                      ],
                      "id": 1399,
                      "name": "UpdateTradingPermission",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1892,
                      "src": "2107:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_PermittedTradingType_$1859_$returns$__$",
                        "typeString": "function (enum IOptionsConfig.PermittedTradingType)"
                      }
                    },
                    "id": 1401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2107:39:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1402,
                  "nodeType": "EmitStatement",
                  "src": "2102:44:24"
                }
              ]
            },
            "functionSelector": "ff0b025d",
            "id": 1404,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1393,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1392,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3780,
                  "src": "2031:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "2031:9:24"
              }
            ],
            "name": "setTradingPermission",
            "nameLocation": "1948:20:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1390,
                  "mutability": "mutable",
                  "name": "permissionType",
                  "nameLocation": "1990:14:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1404,
                  "src": "1969:35:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PermittedTradingType_$1859",
                    "typeString": "enum IOptionsConfig.PermittedTradingType"
                  },
                  "typeName": {
                    "id": 1389,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1388,
                      "name": "PermittedTradingType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1859,
                      "src": "1969:20:24"
                    },
                    "referencedDeclaration": 1859,
                    "src": "1969:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PermittedTradingType_$1859",
                      "typeString": "enum IOptionsConfig.PermittedTradingType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1968:37:24"
            },
            "returnParameters": {
              "id": 1394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2045:0:24"
            },
            "scope": 1574,
            "src": "1939:214:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1427,
              "nodeType": "Block",
              "src": "2380:169:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1413,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1407,
                          "src": "2398:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "32306532",
                          "id": 1414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2406:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2000_by_1",
                            "typeString": "int_const 2000"
                          },
                          "value": "20e2"
                        },
                        "src": "2398:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536574746c656d656e7446656550657263656e7461676520697320746f6f2068696768",
                        "id": 1416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2412:37:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68db5f560e1121556839568ce23c996485a908c1b279b9f62286871b1d48ff48",
                          "typeString": "literal_string \"SettlementFeePercentage is too high\""
                        },
                        "value": "SettlementFeePercentage is too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68db5f560e1121556839568ce23c996485a908c1b279b9f62286871b1d48ff48",
                          "typeString": "literal_string \"SettlementFeePercentage is too high\""
                        }
                      ],
                      "id": 1412,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2390:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2390:60:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1418,
                  "nodeType": "ExpressionStatement",
                  "src": "2390:60:24"
                },
                {
                  "expression": {
                    "id": 1421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1419,
                      "name": "settlementFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1287,
                      "src": "2460:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1420,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1407,
                      "src": "2486:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2460:31:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1422,
                  "nodeType": "ExpressionStatement",
                  "src": "2460:31:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1424,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1407,
                        "src": "2536:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1423,
                      "name": "UpdateSettlementFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1867,
                      "src": "2506:29:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2506:36:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1426,
                  "nodeType": "EmitStatement",
                  "src": "2501:41:24"
                }
              ]
            },
            "documentation": {
              "id": 1405,
              "nodeType": "StructuredDocumentation",
              "src": "2159:146:24",
              "text": " @notice Used for adjusting the settlement fee percentage with a factor of 100\n @param value New Settlement Fee Percentage"
            },
            "functionSelector": "1ec3ad1d",
            "id": 1428,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1410,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1409,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3780,
                  "src": "2370:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "2370:9:24"
              }
            ],
            "name": "setSettlementFeePercentage",
            "nameLocation": "2319:26:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1407,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2354:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1428,
                  "src": "2346:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1406,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2346:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2345:15:24"
            },
            "returnParameters": {
              "id": 1411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2380:0:24"
            },
            "scope": 1574,
            "src": "2310:239:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1459,
              "nodeType": "Block",
              "src": "2760:165:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1439,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1431,
                              "src": "2786:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2778:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1437,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2778:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2778:18:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2808:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2800:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1441,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2800:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2800:10:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2778:32:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2770:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2770:41:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1447,
                  "nodeType": "ExpressionStatement",
                  "src": "2770:41:24"
                },
                {
                  "expression": {
                    "id": 1450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1448,
                      "name": "settlementFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1301,
                      "src": "2821:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1449,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1431,
                      "src": "2846:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2821:34:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1451,
                  "nodeType": "ExpressionStatement",
                  "src": "2821:34:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1455,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1431,
                            "src": "2907:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2899:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1453,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2899:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2899:18:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1452,
                      "name": "UpdateSettlementFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1871,
                      "src": "2870:28:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2870:48:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1458,
                  "nodeType": "EmitStatement",
                  "src": "2865:53:24"
                }
              ]
            },
            "documentation": {
              "id": 1429,
              "nodeType": "StructuredDocumentation",
              "src": "2555:127:24",
              "text": " @notice Used for changing settlementFeeRecipient\n @param recipient New settlementFee recipient address"
            },
            "functionSelector": "96350a85",
            "id": 1460,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1434,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1433,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3780,
                  "src": "2750:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "2750:9:24"
              }
            ],
            "name": "setSettlementFeeRecipient",
            "nameLocation": "2696:25:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1431,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2730:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "2722:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2722:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2721:19:24"
            },
            "returnParameters": {
              "id": 1435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2760:0:24"
            },
            "scope": 1574,
            "src": "2687:238:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1483,
              "nodeType": "Block",
              "src": "3122:160:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1469,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1463,
                          "src": "3140:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 1470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3149:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "3140:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e6746656550657263656e7461676520697320746f6f2068696768",
                        "id": 1472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3154:34:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4b1c7901206557d81400f1c220be507688798c0917d45d32e4c87834d6ce2686",
                          "typeString": "literal_string \"StakingFeePercentage is too high\""
                        },
                        "value": "StakingFeePercentage is too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4b1c7901206557d81400f1c220be507688798c0917d45d32e4c87834d6ce2686",
                          "typeString": "literal_string \"StakingFeePercentage is too high\""
                        }
                      ],
                      "id": 1468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3132:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3132:57:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1474,
                  "nodeType": "ExpressionStatement",
                  "src": "3132:57:24"
                },
                {
                  "expression": {
                    "id": 1477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1475,
                      "name": "stakingFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1290,
                      "src": "3199:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1476,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1463,
                      "src": "3222:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3199:28:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1478,
                  "nodeType": "ExpressionStatement",
                  "src": "3199:28:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1480,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1463,
                        "src": "3269:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1479,
                      "name": "UpdateStakingFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1875,
                      "src": "3242:26:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3242:33:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1482,
                  "nodeType": "EmitStatement",
                  "src": "3237:38:24"
                }
              ]
            },
            "documentation": {
              "id": 1461,
              "nodeType": "StructuredDocumentation",
              "src": "2931:119:24",
              "text": " @notice Used for adjusting the staking fee percentage\n @param value New Staking Fee Percentage"
            },
            "functionSelector": "180acf6e",
            "id": 1484,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1466,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1465,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3780,
                  "src": "3112:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "3112:9:24"
              }
            ],
            "name": "setStakingFeePercentage",
            "nameLocation": "3064:23:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1463,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "3096:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1484,
                  "src": "3088:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3088:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3087:15:24"
            },
            "returnParameters": {
              "id": 1467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3122:0:24"
            },
            "scope": 1574,
            "src": "3055:227:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1507,
              "nodeType": "Block",
              "src": "3491:172:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1493,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1487,
                          "src": "3509:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 1494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3518:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "3509:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566657272616c52657761726450657263656e7461676520697320746f6f2068696768",
                        "id": 1496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3523:38:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1da31f3e92683ccf307f76a6e644c62e20ad864159c618e57b4cedda250113b",
                          "typeString": "literal_string \"ReferralRewardPercentage is too high\""
                        },
                        "value": "ReferralRewardPercentage is too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1da31f3e92683ccf307f76a6e644c62e20ad864159c618e57b4cedda250113b",
                          "typeString": "literal_string \"ReferralRewardPercentage is too high\""
                        }
                      ],
                      "id": 1492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3501:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3501:61:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1498,
                  "nodeType": "ExpressionStatement",
                  "src": "3501:61:24"
                },
                {
                  "expression": {
                    "id": 1501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1499,
                      "name": "referralRewardPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1293,
                      "src": "3572:24:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1500,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1487,
                      "src": "3599:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3572:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1502,
                  "nodeType": "ExpressionStatement",
                  "src": "3572:32:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1504,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1487,
                        "src": "3650:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1503,
                      "name": "UpdateReferralRewardPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1879,
                      "src": "3619:30:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3619:37:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1506,
                  "nodeType": "EmitStatement",
                  "src": "3614:42:24"
                }
              ]
            },
            "documentation": {
              "id": 1485,
              "nodeType": "StructuredDocumentation",
              "src": "3288:127:24",
              "text": " @notice Used for adjusting the referral reward percentage\n @param value New Referral Reward Percentage"
            },
            "functionSelector": "cedcc6da",
            "id": 1508,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1490,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1489,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3780,
                  "src": "3481:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "3481:9:24"
              }
            ],
            "name": "setReferralRewardPercentage",
            "nameLocation": "3429:27:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1487,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "3465:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1508,
                  "src": "3457:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3457:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3456:15:24"
            },
            "returnParameters": {
              "id": 1491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3491:0:24"
            },
            "scope": 1574,
            "src": "3420:243:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1535,
              "nodeType": "Block",
              "src": "3881:168:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3530",
                            "id": 1517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3899:2:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            },
                            "value": "50"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1518,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1511,
                            "src": "3905:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3899:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1520,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1511,
                            "src": "3914:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3923:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "3914:12:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3899:27:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77726f6e672076616c7565",
                        "id": 1524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3928:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7de3d80ebd6048d4e9c1f046c51b626b3a2eba87a2525845afff65fe89a8b494",
                          "typeString": "literal_string \"wrong value\""
                        },
                        "value": "wrong value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7de3d80ebd6048d4e9c1f046c51b626b3a2eba87a2525845afff65fe89a8b494",
                          "typeString": "literal_string \"wrong value\""
                        }
                      ],
                      "id": 1516,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3891:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3891:51:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1526,
                  "nodeType": "ExpressionStatement",
                  "src": "3891:51:24"
                },
                {
                  "expression": {
                    "id": 1529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1527,
                      "name": "optionCollateralizationRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1284,
                      "src": "3952:28:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1528,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1511,
                      "src": "3983:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3952:36:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1530,
                  "nodeType": "ExpressionStatement",
                  "src": "3952:36:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1532,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1511,
                        "src": "4036:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1531,
                      "name": "UpdateOptionCollaterizationRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1883,
                      "src": "4003:32:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4003:39:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1534,
                  "nodeType": "EmitStatement",
                  "src": "3998:44:24"
                }
              ]
            },
            "documentation": {
              "id": 1509,
              "nodeType": "StructuredDocumentation",
              "src": "3669:134:24",
              "text": " @notice Used for changing option collateralization ratio\n @param value New optionCollateralizationRatio value"
            },
            "functionSelector": "e2bef754",
            "id": 1536,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1514,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1513,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3780,
                  "src": "3871:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "3871:9:24"
              }
            ],
            "name": "setOptionCollaterizationRatio",
            "nameLocation": "3817:29:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1511,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "3855:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1536,
                  "src": "3847:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3847:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3846:15:24"
            },
            "returnParameters": {
              "id": 1515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3881:0:24"
            },
            "scope": 1574,
            "src": "3808:241:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1559,
              "nodeType": "Block",
              "src": "4255:146:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1545,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1539,
                          "src": "4273:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 1546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4282:2:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "4273:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77726f6e672076616c7565",
                        "id": 1548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4286:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7de3d80ebd6048d4e9c1f046c51b626b3a2eba87a2525845afff65fe89a8b494",
                          "typeString": "literal_string \"wrong value\""
                        },
                        "value": "wrong value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7de3d80ebd6048d4e9c1f046c51b626b3a2eba87a2525845afff65fe89a8b494",
                          "typeString": "literal_string \"wrong value\""
                        }
                      ],
                      "id": 1544,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4265:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4265:35:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1550,
                  "nodeType": "ExpressionStatement",
                  "src": "4265:35:24"
                },
                {
                  "expression": {
                    "id": 1553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1551,
                      "name": "nftSaleRoyaltyPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1296,
                      "src": "4310:24:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1552,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1539,
                      "src": "4337:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4310:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1554,
                  "nodeType": "ExpressionStatement",
                  "src": "4310:32:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1556,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1539,
                        "src": "4388:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1555,
                      "name": "UpdateNFTSaleRoyaltyPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1887,
                      "src": "4357:30:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4357:37:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1558,
                  "nodeType": "EmitStatement",
                  "src": "4352:42:24"
                }
              ]
            },
            "documentation": {
              "id": 1537,
              "nodeType": "StructuredDocumentation",
              "src": "4055:124:24",
              "text": " @notice Used for changing nftSaleRoyaltyPercentage\n @param value New nftSaleRoyaltyPercentage value"
            },
            "functionSelector": "5cb6bc81",
            "id": 1560,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1542,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1541,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3780,
                  "src": "4245:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "4245:9:24"
              }
            ],
            "name": "setNFTSaleRoyaltyPercentage",
            "nameLocation": "4193:27:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1539,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "4229:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1560,
                  "src": "4221:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4221:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4220:15:24"
            },
            "returnParameters": {
              "id": 1543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4255:0:24"
            },
            "scope": 1574,
            "src": "4184:217:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1572,
              "nodeType": "Block",
              "src": "4587:40:24",
              "statements": [
                {
                  "expression": {
                    "id": 1570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1568,
                      "name": "utilizationRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1304,
                      "src": "4597:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1569,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1563,
                      "src": "4615:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4597:23:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1571,
                  "nodeType": "ExpressionStatement",
                  "src": "4597:23:24"
                }
              ]
            },
            "documentation": {
              "id": 1561,
              "nodeType": "StructuredDocumentation",
              "src": "4407:113:24",
              "text": " @notice Used for updating utilizationRate value\n @param value New utilizationRate value*"
            },
            "functionSelector": "40774ff6",
            "id": 1573,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1566,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1565,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3780,
                  "src": "4577:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "4577:9:24"
              }
            ],
            "name": "setUtilizationRate",
            "nameLocation": "4534:18:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1563,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "4561:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "4553:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4553:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4552:15:24"
            },
            "returnParameters": {
              "id": 1567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4587:0:24"
            },
            "scope": 1574,
            "src": "4525:102:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1575,
        "src": "287:4342:24",
        "usedErrors": []
      }
    ],
    "src": "0:4630:24"
  },
  "bytecode": "608060405260646002556101f4600355603260045560006005556005600655640165a0bc00600855600560095562015180600a5534801561003f57600080fd5b50604051610cd8380380610cd883398101604081905261005e916100ee565b6100673361009e565b600780546001600160a01b039485166001600160a01b031991821617909155600192909255600b8054919093169116179055610148565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060608486031215610102578283fd5b835161010d81610130565b60208501516040860151919450925061012581610130565b809150509250925092565b6001600160a01b038116811461014557600080fd5b50565b610b81806101576000396000f3fe608060405234801561001057600080fd5b50600436106101335760003560e01c806316f0115b14610138578063180acf6e14610161578063181731dc1461017657806318f88e5b146101895780631ec3ad1d146101a0578063302ce651146101b357806340774ff6146101bc57806349b9a67f146101cf5780635cb6bc81146101d85780636c321c8a146101eb578063715018a6146101f457806371bf7e25146101fc5780638da5cb5b14610205578063920a253e1461020d57806396350a8514610216578063ae1c9fc114610229578063ca535c3b1461023c578063ceaeeba914610245578063cedcc6da14610258578063e2bef7541461026b578063ed0974c71461027e578063f12a046614610287578063f2fde38b146102a8578063f3fa3495146102bb578063ff0b025d146102c4575b600080fd5b600b5461014b906001600160a01b031681565b6040516101589190610ab5565b60405180910390f35b61017461016f366004610a9d565b6102d7565b005b60075461014b906001600160a01b031681565b61019260015481565b604051908152602001610158565b6101746101ae366004610a9d565b61039c565b61019260025481565b6101746101ca366004610a9d565b61045d565b610192600a5481565b6101746101e6366004610a9d565b610491565b61019260085481565b610174610516565b61019260095481565b61014b610551565b61019260055481565b610174610224366004610a50565b610560565b610174610237366004610a9d565b6105ed565b61019260045481565b610174610253366004610a9d565b6106b8565b610174610266366004610a9d565b610777565b610174610279366004610a9d565b610838565b61019260065481565b600b5461029b90600160a01b900460ff1681565b6040516101589190610ac9565b6101746102b6366004610a50565b6108ca565b61019260035481565b6101746102d2366004610a7e565b61096a565b336102e0610551565b6001600160a01b03161461030f5760405162461bcd60e51b815260040161030690610b16565b60405180910390fd5b60648111156103605760405162461bcd60e51b815260206004820181905260248201527f5374616b696e6746656550657263656e7461676520697320746f6f20686967686044820152606401610306565b60048190556040518181527f7ab3467fb06d3d8716698bece5f22a665374115bd3d0a43d6e11b76fcec1dfbb906020015b60405180910390a150565b336103a5610551565b6001600160a01b0316146103cb5760405162461bcd60e51b815260040161030690610b16565b6107d081106104285760405162461bcd60e51b815260206004820152602360248201527f536574746c656d656e7446656550657263656e7461676520697320746f6f20686044820152620d2ced60eb1b6064820152608401610306565b60038190556040518181527f803e7bbaebadbda418ec6dd788e57c29c1cf3faeb7e139d21247e624c9e6d11990602001610391565b33610466610551565b6001600160a01b03161461048c5760405162461bcd60e51b815260040161030690610b16565b600855565b3361049a610551565b6001600160a01b0316146104c05760405162461bcd60e51b815260040161030690610b16565b600a8111156104e15760405162461bcd60e51b815260040161030690610af1565b60068190556040518181527f8fb679aa627958fc7143b0829745d581e0f5e98599847e7097749ce89d8c88e090602001610391565b3361051f610551565b6001600160a01b0316146105455760405162461bcd60e51b815260040161030690610b16565b61054f6000610a00565b565b6000546001600160a01b031690565b33610569610551565b6001600160a01b03161461058f5760405162461bcd60e51b815260040161030690610b16565b6001600160a01b0381166105a257600080fd5b600780546001600160a01b0319166001600160a01b0383161790556040517f92f6c1e8df34c666f737a2407b4e63d3a77f133b69fdf70f01b5e3b8072551f690610391908390610ab5565b336105f6610551565b6001600160a01b03161461061c5760405162461bcd60e51b815260040161030690610b16565b61012c8110156106835760405162461bcd60e51b815260206004820152602c60248201527f4d6178506572696f64206e6565647320746f206265206772656174657220746860448201526b616e2035206d696e7574657360a01b6064820152608401610306565b600a8190556040518181527f0967eeac7ccaa5705556859408ddb017bac37afa817dd8ff3d27cf4ea1171a6690602001610391565b336106c1610551565b6001600160a01b0316146106e75760405162461bcd60e51b815260040161030690610b16565b60648110156107425760405162461bcd60e51b815260206004820152602160248201527f496d706c696564566f6c52617465206c696d697420697320746f6f20736d616c6044820152601b60fa1b6064820152608401610306565b60018190556040518181527f3e0c59249d1a9c5f08383bdbdfbc45517a71b76e72223ae649c576e4d125869690602001610391565b33610780610551565b6001600160a01b0316146107a65760405162461bcd60e51b815260040161030690610b16565b60648111156108035760405162461bcd60e51b8152602060048201526024808201527f526566657272616c52657761726450657263656e7461676520697320746f6f206044820152630d0d2ced60e31b6064820152608401610306565b60058190556040518181527f0c089466003b94ffb5787d1d1affe1c743f8ca63f949d2296cfa4d7986601ade90602001610391565b33610841610551565b6001600160a01b0316146108675760405162461bcd60e51b815260040161030690610b16565b80603211158015610879575060648111155b6108955760405162461bcd60e51b815260040161030690610af1565b60028190556040518181527f66b26a0dfaa5fc9f5c7432381208aa4bd7f13f4489299b52f09f1af7669bb93b90602001610391565b336108d3610551565b6001600160a01b0316146108f95760405162461bcd60e51b815260040161030690610b16565b6001600160a01b03811661095e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610306565b61096781610a00565b50565b33610973610551565b6001600160a01b0316146109995760405162461bcd60e51b815260040161030690610b16565b600b805482919060ff60a01b1916600160a01b8360038111156109cc57634e487b7160e01b600052602160045260246000fd5b02179055507f75e98309d621801fc34e8ce7fa6eaa10b82599a58639171fe865e39bb4728d48816040516103919190610ac9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610a61578081fd5b81356001600160a01b0381168114610a77578182fd5b9392505050565b600060208284031215610a8f578081fd5b813560048110610a77578182fd5b600060208284031215610aae578081fd5b5035919050565b6001600160a01b0391909116815260200190565b6020810160048310610aeb57634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252600b908201526a77726f6e672076616c756560a81b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212206b13f03740514f6993d3278d099f4f1e674245b5991724cc3e6a7bc9ceb7bfa564736f6c63430008040033",
  "bytecodeSha1": "720a43fa800843688adba091135852cfec31df2d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 1
    },
    "version": "0.8.4+commit.c7e474f2"
  },
  "contractName": "OptionConfigBinaryV2",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "10": {},
      "17": {},
      "18": {},
      "19": {},
      "2": {
        "Context._msgSender": {
          "44": [
            1185,
            1208,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "43": [
            1934,
            1956,
            true
          ]
        }
      },
      "20": {},
      "23": {},
      "24": {
        "OptionConfigBinaryV2.setImpliedVolRate": {
          "39": [
            1799,
            1811,
            true
          ]
        },
        "OptionConfigBinaryV2.setMaxPeriod": {
          "38": [
            1401,
            1419,
            true
          ]
        },
        "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage": {
          "36": [
            4273,
            4284,
            true
          ]
        },
        "OptionConfigBinaryV2.setOptionCollaterizationRatio": {
          "41": [
            3899,
            3910,
            false
          ],
          "42": [
            3914,
            3926,
            true
          ]
        },
        "OptionConfigBinaryV2.setReferralRewardPercentage": {
          "40": [
            3509,
            3521,
            true
          ]
        },
        "OptionConfigBinaryV2.setSettlementFeePercentage": {
          "35": [
            2398,
            2410,
            true
          ]
        },
        "OptionConfigBinaryV2.setSettlementFeeRecipient": {
          "37": [
            2778,
            2810,
            true
          ]
        },
        "OptionConfigBinaryV2.setStakingFeePercentage": {
          "34": [
            3140,
            3152,
            true
          ]
        }
      },
      "25": {},
      "6": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "10": {},
      "17": {
        "Context._msgSender": {
          "0": [
            659,
            676
          ]
        }
      },
      "18": {},
      "19": {},
      "2": {
        "Ownable._setOwner": {
          "32": [
            2131,
            2148
          ],
          "33": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "12": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "11": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "28": [
            1926,
            1999
          ],
          "29": [
            2009,
            2028
          ]
        }
      },
      "20": {},
      "23": {},
      "24": {
        "OptionConfigBinaryV2.setImpliedVolRate": {
          "19": [
            1791,
            1849
          ],
          "20": [
            1859,
            1881
          ],
          "21": [
            1891,
            1926
          ]
        },
        "OptionConfigBinaryV2.setMaxPeriod": {
          "16": [
            1380,
            1489
          ],
          "17": [
            1499,
            1516
          ],
          "18": [
            1526,
            1553
          ]
        },
        "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage": {
          "8": [
            4265,
            4300
          ],
          "9": [
            4310,
            4342
          ],
          "10": [
            4352,
            4394
          ]
        },
        "OptionConfigBinaryV2.setOptionCollaterizationRatio": {
          "25": [
            3891,
            3942
          ],
          "26": [
            3952,
            3988
          ],
          "27": [
            3998,
            4042
          ]
        },
        "OptionConfigBinaryV2.setReferralRewardPercentage": {
          "22": [
            3501,
            3562
          ],
          "23": [
            3572,
            3604
          ],
          "24": [
            3614,
            3656
          ]
        },
        "OptionConfigBinaryV2.setSettlementFeePercentage": {
          "4": [
            2390,
            2450
          ],
          "5": [
            2460,
            2491
          ],
          "6": [
            2501,
            2542
          ]
        },
        "OptionConfigBinaryV2.setSettlementFeeRecipient": {
          "13": [
            2770,
            2811
          ],
          "14": [
            2821,
            2855
          ],
          "15": [
            2865,
            2918
          ]
        },
        "OptionConfigBinaryV2.setStakingFeePercentage": {
          "1": [
            3132,
            3189
          ],
          "2": [
            3199,
            3227
          ],
          "3": [
            3237,
            3275
          ]
        },
        "OptionConfigBinaryV2.setTradingPermission": {
          "30": [
            2055,
            2092
          ],
          "31": [
            2102,
            2146
          ]
        },
        "OptionConfigBinaryV2.setUtilizationRate": {
          "7": [
            4597,
            4620
          ]
        }
      },
      "25": {},
      "6": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/AccessControl",
    "BufferBinaryIBFRPoolBinary",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC1155Holder",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IAccessControl",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20",
    "ILiquidityPool",
    "IOptionsConfig",
    "ITournamentManager",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101335760003560e01c806316f0115b14610138578063180acf6e14610161578063181731dc1461017657806318f88e5b146101895780631ec3ad1d146101a0578063302ce651146101b357806340774ff6146101bc57806349b9a67f146101cf5780635cb6bc81146101d85780636c321c8a146101eb578063715018a6146101f457806371bf7e25146101fc5780638da5cb5b14610205578063920a253e1461020d57806396350a8514610216578063ae1c9fc114610229578063ca535c3b1461023c578063ceaeeba914610245578063cedcc6da14610258578063e2bef7541461026b578063ed0974c71461027e578063f12a046614610287578063f2fde38b146102a8578063f3fa3495146102bb578063ff0b025d146102c4575b600080fd5b600b5461014b906001600160a01b031681565b6040516101589190610ab5565b60405180910390f35b61017461016f366004610a9d565b6102d7565b005b60075461014b906001600160a01b031681565b61019260015481565b604051908152602001610158565b6101746101ae366004610a9d565b61039c565b61019260025481565b6101746101ca366004610a9d565b61045d565b610192600a5481565b6101746101e6366004610a9d565b610491565b61019260085481565b610174610516565b61019260095481565b61014b610551565b61019260055481565b610174610224366004610a50565b610560565b610174610237366004610a9d565b6105ed565b61019260045481565b610174610253366004610a9d565b6106b8565b610174610266366004610a9d565b610777565b610174610279366004610a9d565b610838565b61019260065481565b600b5461029b90600160a01b900460ff1681565b6040516101589190610ac9565b6101746102b6366004610a50565b6108ca565b61019260035481565b6101746102d2366004610a7e565b61096a565b336102e0610551565b6001600160a01b03161461030f5760405162461bcd60e51b815260040161030690610b16565b60405180910390fd5b60648111156103605760405162461bcd60e51b815260206004820181905260248201527f5374616b696e6746656550657263656e7461676520697320746f6f20686967686044820152606401610306565b60048190556040518181527f7ab3467fb06d3d8716698bece5f22a665374115bd3d0a43d6e11b76fcec1dfbb906020015b60405180910390a150565b336103a5610551565b6001600160a01b0316146103cb5760405162461bcd60e51b815260040161030690610b16565b6107d081106104285760405162461bcd60e51b815260206004820152602360248201527f536574746c656d656e7446656550657263656e7461676520697320746f6f20686044820152620d2ced60eb1b6064820152608401610306565b60038190556040518181527f803e7bbaebadbda418ec6dd788e57c29c1cf3faeb7e139d21247e624c9e6d11990602001610391565b33610466610551565b6001600160a01b03161461048c5760405162461bcd60e51b815260040161030690610b16565b600855565b3361049a610551565b6001600160a01b0316146104c05760405162461bcd60e51b815260040161030690610b16565b600a8111156104e15760405162461bcd60e51b815260040161030690610af1565b60068190556040518181527f8fb679aa627958fc7143b0829745d581e0f5e98599847e7097749ce89d8c88e090602001610391565b3361051f610551565b6001600160a01b0316146105455760405162461bcd60e51b815260040161030690610b16565b61054f6000610a00565b565b6000546001600160a01b031690565b33610569610551565b6001600160a01b03161461058f5760405162461bcd60e51b815260040161030690610b16565b6001600160a01b0381166105a257600080fd5b600780546001600160a01b0319166001600160a01b0383161790556040517f92f6c1e8df34c666f737a2407b4e63d3a77f133b69fdf70f01b5e3b8072551f690610391908390610ab5565b336105f6610551565b6001600160a01b03161461061c5760405162461bcd60e51b815260040161030690610b16565b61012c8110156106835760405162461bcd60e51b815260206004820152602c60248201527f4d6178506572696f64206e6565647320746f206265206772656174657220746860448201526b616e2035206d696e7574657360a01b6064820152608401610306565b600a8190556040518181527f0967eeac7ccaa5705556859408ddb017bac37afa817dd8ff3d27cf4ea1171a6690602001610391565b336106c1610551565b6001600160a01b0316146106e75760405162461bcd60e51b815260040161030690610b16565b60648110156107425760405162461bcd60e51b815260206004820152602160248201527f496d706c696564566f6c52617465206c696d697420697320746f6f20736d616c6044820152601b60fa1b6064820152608401610306565b60018190556040518181527f3e0c59249d1a9c5f08383bdbdfbc45517a71b76e72223ae649c576e4d125869690602001610391565b33610780610551565b6001600160a01b0316146107a65760405162461bcd60e51b815260040161030690610b16565b60648111156108035760405162461bcd60e51b8152602060048201526024808201527f526566657272616c52657761726450657263656e7461676520697320746f6f206044820152630d0d2ced60e31b6064820152608401610306565b60058190556040518181527f0c089466003b94ffb5787d1d1affe1c743f8ca63f949d2296cfa4d7986601ade90602001610391565b33610841610551565b6001600160a01b0316146108675760405162461bcd60e51b815260040161030690610b16565b80603211158015610879575060648111155b6108955760405162461bcd60e51b815260040161030690610af1565b60028190556040518181527f66b26a0dfaa5fc9f5c7432381208aa4bd7f13f4489299b52f09f1af7669bb93b90602001610391565b336108d3610551565b6001600160a01b0316146108f95760405162461bcd60e51b815260040161030690610b16565b6001600160a01b03811661095e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610306565b61096781610a00565b50565b33610973610551565b6001600160a01b0316146109995760405162461bcd60e51b815260040161030690610b16565b600b805482919060ff60a01b1916600160a01b8360038111156109cc57634e487b7160e01b600052602160045260246000fd5b02179055507f75e98309d621801fc34e8ce7fa6eaa10b82599a58639171fe865e39bb4728d48816040516103919190610ac9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610a61578081fd5b81356001600160a01b0381168114610a77578182fd5b9392505050565b600060208284031215610a8f578081fd5b813560048110610a77578182fd5b600060208284031215610aae578081fd5b5035919050565b6001600160a01b0391909116815260200190565b6020810160048310610aeb57634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252600b908201526a77726f6e672076616c756560a81b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212206b13f03740514f6993d3278d099f4f1e674245b5991724cc3e6a7bc9ceb7bfa564736f6c63430008040033",
  "deployedSourceMap": "287:4342:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;868:38;;;;;-1:-1:-1;;;;;868:38:24;;;;;;;;;;:::i;:::-;;;;;;;;3055:227;;;;;;:::i;:::-;;:::i;:::-;;686:37;;;;;-1:-1:-1;;;;;686:37:24;;;350:29;;;;;;;;;4874:25:27;;;4862:2;4847:18;350:29:24;4829:76:27;2310:239:24;;;;;;:::i;:::-;;:::i;385:49::-;;;;;;4525:102;;;;;;:::i;:::-;;:::i;827:35::-;;;;;;4184:217;;;;;;:::i;:::-;;:::i;729:37::-;;;;;;1605:92:2;;;:::i;772:49:24:-;;;;;;973:85:2;;;:::i;536:43:24:-;;;;;;2687:238;;;;;;:::i;:::-;;:::i;1314:246::-;;;;;;:::i;:::-;;:::i;490:40::-;;;;;;1720:213;;;;;;:::i;:::-;;:::i;3420:243::-;;;;;;:::i;:::-;;:::i;3808:241::-;;;;;;:::i;:::-;;:::i;585:43::-;;;;;;912:48;;;;;-1:-1:-1;;;912:48:24;;;;;;;;;;;;;:::i;1846:189:2:-;;;;;;:::i;:::-;;:::i;440:44:24:-;;;;;;1939:214;;;;;;:::i;:::-;;:::i;3055:227::-;666:10:17;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;;;;;;;;;3149:3:24::1;3140:5;:12;;3132:57;;;::::0;-1:-1:-1;;;3132:57:24;;2244:2:27;3132:57:24::1;::::0;::::1;2226:21:27::0;;;2263:18;;;2256:30;2322:34;2302:18;;;2295:62;2374:18;;3132:57:24::1;2216:182:27::0;3132:57:24::1;3199:20;:28:::0;;;3242:33:::1;::::0;4874:25:27;;;3242:33:24::1;::::0;4862:2:27;4847:18;3242:33:24::1;;;;;;;;3055:227:::0;:::o;2310:239::-;666:10:17;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;2406:4:24::1;2398:5;:12;2390:60;;;::::0;-1:-1:-1;;;2390:60:24;;2605:2:27;2390:60:24::1;::::0;::::1;2587:21:27::0;2644:2;2624:18;;;2617:30;2683:34;2663:18;;;2656:62;-1:-1:-1;;;2734:18:27;;;2727:33;2777:19;;2390:60:24::1;2577:225:27::0;2390:60:24::1;2460:23;:31:::0;;;2506:36:::1;::::0;4874:25:27;;;2506:36:24::1;::::0;4862:2:27;4847:18;2506:36:24::1;4829:76:27::0;4525:102:24;666:10:17;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;4597:15:24::1;:23:::0;4525:102::o;4184:217::-;666:10:17;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;4282:2:24::1;4273:5;:11;;4265:35;;;;-1:-1:-1::0;;;4265:35:24::1;;;;;;;:::i;:::-;4310:24;:32:::0;;;4357:37:::1;::::0;4874:25:27;;;4357:37:24::1;::::0;4862:2:27;4847:18;4357:37:24::1;4829:76:27::0;1605:92:2;666:10:17;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;973:85::-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:2;;973:85::o;2687:238:24:-;666:10:17;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;2778:32:24;::::1;2770:41;;;::::0;::::1;;2821:22;:34:::0;;-1:-1:-1;;;;;;2821:34:24::1;-1:-1:-1::0;;;;;2821:34:24;::::1;;::::0;;2870:48:::1;::::0;::::1;::::0;::::1;::::0;2821:34;;2870:48:::1;:::i;1314:246::-:0;666:10:17;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;1410:9:24::1;1401:5;:18;;1380:109;;;::::0;-1:-1:-1;;;1380:109:24;;4517:2:27;1380:109:24::1;::::0;::::1;4499:21:27::0;4556:2;4536:18;;;4529:30;4595:34;4575:18;;;4568:62;-1:-1:-1;;;4646:18:27;;;4639:42;4698:19;;1380:109:24::1;4489:234:27::0;1380:109:24::1;1499:9;:17:::0;;;1531:22:::1;::::0;4874:25:27;;;1531:22:24::1;::::0;4862:2:27;4847:18;1531:22:24::1;4829:76:27::0;1720:213:24;666:10:17;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;1808:3:24::1;1799:5;:12;;1791:58;;;::::0;-1:-1:-1;;;1791:58:24;;4115:2:27;1791:58:24::1;::::0;::::1;4097:21:27::0;4154:2;4134:18;;;4127:30;4193:34;4173:18;;;4166:62;-1:-1:-1;;;4244:18:27;;;4237:31;4285:19;;1791:58:24::1;4087:223:27::0;1791:58:24::1;1859:14;:22:::0;;;1896:30:::1;::::0;4874:25:27;;;1896:30:24::1;::::0;4862:2:27;4847:18;1896:30:24::1;4829:76:27::0;3420:243:24;666:10:17;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;3518:3:24::1;3509:5;:12;;3501:61;;;::::0;-1:-1:-1;;;3501:61:24;;3710:2:27;3501:61:24::1;::::0;::::1;3692:21:27::0;3749:2;3729:18;;;3722:30;3788:34;3768:18;;;3761:62;-1:-1:-1;;;3839:18:27;;;3832:34;3883:19;;3501:61:24::1;3682:226:27::0;3501:61:24::1;3572:24;:32:::0;;;3619:37:::1;::::0;4874:25:27;;;3619:37:24::1;::::0;4862:2:27;4847:18;3619:37:24::1;4829:76:27::0;3808:241:24;666:10:17;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;3905:5:24::1;3899:2;:11;;:27;;;;;3923:3;3914:5;:12;;3899:27;3891:51;;;;-1:-1:-1::0;;;3891:51:24::1;;;;;;;:::i;:::-;3952:28;:36:::0;;;4003:39:::1;::::0;4874:25:27;;;4003:39:24::1;::::0;4862:2:27;4847:18;4003:39:24::1;4829:76:27::0;1846:189:2;666:10:17;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:2;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:2;;1837:2:27;1926:73:2::1;::::0;::::1;1819:21:27::0;1876:2;1856:18;;;1849:30;1915:34;1895:18;;;1888:62;-1:-1:-1;;;1966:18:27;;;1959:36;2012:19;;1926:73:2::1;1809:228:27::0;1926:73:2::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;1939:214:24:-;666:10:17;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;2055:20:24::1;:37:::0;;2078:14;;2055:20;-1:-1:-1;;;;2055:37:24::1;-1:-1:-1::0;;;2078:14:24;2055:37:::1;::::0;::::1;;;;-1:-1:-1::0;;;2055:37:24::1;;;;;;;;;;;;;;2107:39;2131:14;2107:39;;;;;;:::i;2041:169:2:-:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;14:306:27:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:27;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:27:o;325:301::-;409:6;462:2;450:9;441:7;437:23;433:32;430:2;;;483:6;475;468:22;430:2;527:9;514:23;566:1;559:5;556:12;546:2;;587:6;579;572:22;631:190;690:6;743:2;731:9;722:7;718:23;714:32;711:2;;;764:6;756;749:22;711:2;-1:-1:-1;792:23:27;;701:120;-1:-1:-1;701:120:27:o;826:203::-;-1:-1:-1;;;;;990:32:27;;;;972:51;;960:2;945:18;;927:102::o;1277:353::-;1434:2;1419:18;;1467:1;1456:13;;1446:2;;1512:10;1507:3;1503:20;1500:1;1493:31;1547:4;1544:1;1537:15;1575:4;1572:1;1565:15;1446:2;1599:25;;;1401:229;:::o;2807:335::-;3009:2;2991:21;;;3048:2;3028:18;;;3021:30;-1:-1:-1;;;3082:2:27;3067:18;;3060:41;3133:2;3118:18;;2981:161::o;3147:356::-;3349:2;3331:21;;;3368:18;;;3361:30;3427:34;3422:2;3407:18;;3400:62;3494:2;3479:18;;3321:182::o",
  "language": "Solidity",
  "natspec": {
    "author": "Heisenberg",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setImpliedVolRate(uint256)": {
        "notice": "Used for adjusting the options prices while balancing asset's implied volatility rate",
        "params": {
          "value": "New IVRate value"
        }
      },
      "setMaxPeriod(uint256)": {
        "notice": "Used for adjusting the maxPeriod",
        "params": {
          "value": "New maxPeriod"
        }
      },
      "setNFTSaleRoyaltyPercentage(uint256)": {
        "notice": "Used for changing nftSaleRoyaltyPercentage",
        "params": {
          "value": "New nftSaleRoyaltyPercentage value"
        }
      },
      "setOptionCollaterizationRatio(uint256)": {
        "notice": "Used for changing option collateralization ratio",
        "params": {
          "value": "New optionCollateralizationRatio value"
        }
      },
      "setReferralRewardPercentage(uint256)": {
        "notice": "Used for adjusting the referral reward percentage",
        "params": {
          "value": "New Referral Reward Percentage"
        }
      },
      "setSettlementFeePercentage(uint256)": {
        "notice": "Used for adjusting the settlement fee percentage with a factor of 100",
        "params": {
          "value": "New Settlement Fee Percentage"
        }
      },
      "setSettlementFeeRecipient(address)": {
        "notice": "Used for changing settlementFeeRecipient",
        "params": {
          "recipient": "New settlementFee recipient address"
        }
      },
      "setStakingFeePercentage(uint256)": {
        "notice": "Used for adjusting the staking fee percentage",
        "params": {
          "value": "New Staking Fee Percentage"
        }
      },
      "setUtilizationRate(uint256)": {
        "notice": "Used for updating utilizationRate value",
        "params": {
          "value": "New utilizationRate value*"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "notice": "Buffer BNB Options Contract",
    "title": "Buffer BNB Bidirectional (Call and Put) Options",
    "version": 1
  },
  "offset": [
    287,
    4629
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x133 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16F0115B EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x180ACF6E EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x181731DC EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x18F88E5B EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x1EC3AD1D EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x302CE651 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x40774FF6 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x49B9A67F EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x5CB6BC81 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x6C321C8A EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x71BF7E25 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x920A253E EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x96350A85 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xAE1C9FC1 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xCA535C3B EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xCEAEEBA9 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0xCEDCC6DA EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xE2BEF754 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xED0974C7 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0xF12A0466 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xF3FA3495 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xFF0B025D EQ PUSH2 0x2C4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0x14B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0xA9D JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x14B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x192 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x158 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0xA9D JUMP JUMPDEST PUSH2 0x39C JUMP JUMPDEST PUSH2 0x192 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0xA9D JUMP JUMPDEST PUSH2 0x45D JUMP JUMPDEST PUSH2 0x192 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x1E6 CALLDATASIZE PUSH1 0x4 PUSH2 0xA9D JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH2 0x192 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x516 JUMP JUMPDEST PUSH2 0x192 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x14B PUSH2 0x551 JUMP JUMPDEST PUSH2 0x192 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x560 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0xA9D JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x192 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0xA9D JUMP JUMPDEST PUSH2 0x6B8 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0xA9D JUMP JUMPDEST PUSH2 0x777 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0xA9D JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST PUSH2 0x192 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x29B SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x8CA JUMP JUMPDEST PUSH2 0x192 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH2 0xA7E JUMP JUMPDEST PUSH2 0x96A JUMP JUMPDEST CALLER PUSH2 0x2E0 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x30F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x360 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E6746656550657263656E7461676520697320746F6F2068696768 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x7AB3467FB06D3D8716698BECE5F22A665374115BD3D0A43D6E11B76FCEC1DFBB SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH2 0x3A5 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x7D0 DUP2 LT PUSH2 0x428 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536574746C656D656E7446656550657263656E7461676520697320746F6F2068 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0xD2CED PUSH1 0xEB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x803E7BBAEBADBDA418EC6DD788E57C29C1CF3FAEB7E139D21247E624C9E6D119 SWAP1 PUSH1 0x20 ADD PUSH2 0x391 JUMP JUMPDEST CALLER PUSH2 0x466 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x48C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST CALLER PUSH2 0x49A PUSH2 0x551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x8FB679AA627958FC7143B0829745D581E0F5E98599847E7097749CE89D8C88E0 SWAP1 PUSH1 0x20 ADD PUSH2 0x391 JUMP JUMPDEST CALLER PUSH2 0x51F PUSH2 0x551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x545 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x54F PUSH1 0x0 PUSH2 0xA00 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH2 0x569 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x58F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x92F6C1E8DF34C666F737A2407B4E63D3A77F133B69FDF70F01B5E3B8072551F6 SWAP1 PUSH2 0x391 SWAP1 DUP4 SWAP1 PUSH2 0xAB5 JUMP JUMPDEST CALLER PUSH2 0x5F6 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x12C DUP2 LT ISZERO PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178506572696F64206E6565647320746F2062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x616E2035206D696E75746573 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x967EEAC7CCAA5705556859408DDB017BAC37AFA817DD8FF3D27CF4EA1171A66 SWAP1 PUSH1 0x20 ADD PUSH2 0x391 JUMP JUMPDEST CALLER PUSH2 0x6C1 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0x742 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496D706C696564566F6C52617465206C696D697420697320746F6F20736D616C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x3E0C59249D1A9C5F08383BDBDFBC45517A71B76E72223AE649C576E4D1258696 SWAP1 PUSH1 0x20 ADD PUSH2 0x391 JUMP JUMPDEST CALLER PUSH2 0x780 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x803 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x526566657272616C52657761726450657263656E7461676520697320746F6F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0xD0D2CED PUSH1 0xE3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xC089466003B94FFB5787D1D1AFFE1C743F8CA63F949D2296CFA4D7986601ADE SWAP1 PUSH1 0x20 ADD PUSH2 0x391 JUMP JUMPDEST CALLER PUSH2 0x841 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x867 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0xB16 JUMP JUMPDEST DUP1 PUSH1 0x32 GT ISZERO DUP1 ISZERO PUSH2 0x879 JUMPI POP PUSH1 0x64 DUP2 GT ISZERO JUMPDEST PUSH2 0x895 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x66B26A0DFAA5FC9F5C7432381208AA4BD7F13F4489299B52F09F1AF7669BB93B SWAP1 PUSH1 0x20 ADD PUSH2 0x391 JUMP JUMPDEST CALLER PUSH2 0x8D3 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x95E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x306 JUMP JUMPDEST PUSH2 0x967 DUP2 PUSH2 0xA00 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 0x973 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x999 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9CC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x75E98309D621801FC34E8CE7FA6EAA10B82599A58639171FE865E39BB4728D48 DUP2 PUSH1 0x40 MLOAD PUSH2 0x391 SWAP2 SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA61 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA77 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA8F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0xA77 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAE JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x4 DUP4 LT PUSH2 0xAEB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x77726F6E672076616C7565 PUSH1 0xA8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x13F03740514F6993D3278D09 SWAP16 0x4F 0x1E PUSH8 0x4245B5991724CC3E PUSH11 0x7BC9CEB7BFA564736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        287,
        4629
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "6": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "7": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "8": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "12": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "REVERT",
      "path": "24"
    },
    "16": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "17": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "POP",
      "path": "24"
    },
    "18": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "21": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "LT",
      "path": "24"
    },
    "22": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x133"
    },
    "25": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "26": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "29": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "SHR",
      "path": "24"
    },
    "32": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "33": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x16F0115B"
    },
    "38": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "39": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x138"
    },
    "42": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "43": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "44": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x180ACF6E"
    },
    "49": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "50": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x161"
    },
    "53": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "54": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "55": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x181731DC"
    },
    "60": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "61": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x176"
    },
    "64": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "65": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "66": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x18F88E5B"
    },
    "71": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "72": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x189"
    },
    "75": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "76": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "77": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x1EC3AD1D"
    },
    "82": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "83": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A0"
    },
    "86": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "87": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "88": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x302CE651"
    },
    "93": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "94": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1B3"
    },
    "97": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "98": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "99": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x40774FF6"
    },
    "104": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "105": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1BC"
    },
    "108": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "109": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "110": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x49B9A67F"
    },
    "115": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "116": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1CF"
    },
    "119": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "120": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "121": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x5CB6BC81"
    },
    "126": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "127": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1D8"
    },
    "130": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "131": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "132": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x6C321C8A"
    },
    "137": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "138": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1EB"
    },
    "141": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "142": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "143": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x715018A6"
    },
    "148": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "149": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F4"
    },
    "152": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "153": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "154": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x71BF7E25"
    },
    "159": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "160": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1FC"
    },
    "163": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "164": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "165": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x8DA5CB5B"
    },
    "170": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "171": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x205"
    },
    "174": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "175": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "176": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x920A253E"
    },
    "181": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "182": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x20D"
    },
    "185": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "186": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "187": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x96350A85"
    },
    "192": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "193": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x216"
    },
    "196": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "197": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "198": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xAE1C9FC1"
    },
    "203": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "204": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x229"
    },
    "207": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "208": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "209": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xCA535C3B"
    },
    "214": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "215": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x23C"
    },
    "218": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "219": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "220": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xCEAEEBA9"
    },
    "225": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "226": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x245"
    },
    "229": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "230": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "231": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xCEDCC6DA"
    },
    "236": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "237": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x258"
    },
    "240": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "241": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "242": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xE2BEF754"
    },
    "247": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "248": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x26B"
    },
    "251": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "252": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "253": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xED0974C7"
    },
    "258": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "259": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x27E"
    },
    "262": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "263": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "264": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xF12A0466"
    },
    "269": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "270": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x287"
    },
    "273": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "274": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "275": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xF2FDE38B"
    },
    "280": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "281": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2A8"
    },
    "284": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "285": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "286": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xF3FA3495"
    },
    "291": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "292": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2BB"
    },
    "295": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "296": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "297": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xFF0B025D"
    },
    "302": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "EQ",
      "path": "24"
    },
    "303": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2C4"
    },
    "306": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "307": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "308": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "310": {
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "DUP1",
      "path": "24"
    },
    "311": {
      "first_revert": true,
      "fn": null,
      "offset": [
        287,
        4629
      ],
      "op": "REVERT",
      "path": "24"
    },
    "312": {
      "offset": [
        868,
        906
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "313": {
      "fn": null,
      "offset": [
        868,
        906
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xB"
    },
    "315": {
      "fn": null,
      "offset": [
        868,
        906
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "316": {
      "fn": null,
      "offset": [
        868,
        906
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x14B"
    },
    "319": {
      "fn": null,
      "offset": [
        868,
        906
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "326": {
      "op": "SHL"
    },
    "327": {
      "op": "SUB"
    },
    "328": {
      "offset": [
        868,
        906
      ],
      "op": "AND",
      "path": "24"
    },
    "329": {
      "fn": null,
      "offset": [
        868,
        906
      ],
      "op": "DUP2",
      "path": "24"
    },
    "330": {
      "fn": null,
      "offset": [
        868,
        906
      ],
      "op": "JUMP",
      "path": "24"
    },
    "331": {
      "fn": null,
      "offset": [
        868,
        906
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "332": {
      "fn": null,
      "offset": [
        868,
        906
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "334": {
      "fn": null,
      "offset": [
        868,
        906
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "335": {
      "fn": null,
      "offset": [
        868,
        906
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x158"
    },
    "338": {
      "fn": null,
      "offset": [
        868,
        906
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "339": {
      "fn": null,
      "offset": [
        868,
        906
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "340": {
      "fn": null,
      "offset": [
        868,
        906
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAB5"
    },
    "343": {
      "fn": null,
      "jump": "i",
      "offset": [
        868,
        906
      ],
      "op": "JUMP",
      "path": "24"
    },
    "344": {
      "fn": null,
      "offset": [
        868,
        906
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "345": {
      "fn": null,
      "offset": [
        868,
        906
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "347": {
      "fn": null,
      "offset": [
        868,
        906
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "348": {
      "fn": null,
      "offset": [
        868,
        906
      ],
      "op": "DUP1",
      "path": "24"
    },
    "349": {
      "fn": null,
      "offset": [
        868,
        906
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "350": {
      "fn": null,
      "offset": [
        868,
        906
      ],
      "op": "SUB",
      "path": "24"
    },
    "351": {
      "fn": null,
      "offset": [
        868,
        906
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "352": {
      "fn": null,
      "offset": [
        868,
        906
      ],
      "op": "RETURN",
      "path": "24"
    },
    "353": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3055,
        3282
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "354": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3055,
        3282
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x174"
    },
    "357": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3055,
        3282
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x16F"
    },
    "360": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3055,
        3282
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "361": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3055,
        3282
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "363": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3055,
        3282
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA9D"
    },
    "366": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "jump": "i",
      "offset": [
        3055,
        3282
      ],
      "op": "JUMP",
      "path": "24"
    },
    "367": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3055,
        3282
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "368": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3055,
        3282
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2D7"
    },
    "371": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "jump": "i",
      "offset": [
        3055,
        3282
      ],
      "op": "JUMP",
      "path": "24"
    },
    "372": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3055,
        3282
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "373": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3055,
        3282
      ],
      "op": "STOP",
      "path": "24"
    },
    "374": {
      "offset": [
        686,
        723
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "375": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        686,
        723
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x7"
    },
    "377": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        686,
        723
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "378": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        686,
        723
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x14B"
    },
    "381": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        686,
        723
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "388": {
      "op": "SHL"
    },
    "389": {
      "op": "SUB"
    },
    "390": {
      "offset": [
        686,
        723
      ],
      "op": "AND",
      "path": "24"
    },
    "391": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        686,
        723
      ],
      "op": "DUP2",
      "path": "24"
    },
    "392": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        686,
        723
      ],
      "op": "JUMP",
      "path": "24"
    },
    "393": {
      "offset": [
        350,
        379
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "394": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        350,
        379
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x192"
    },
    "397": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        350,
        379
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "399": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        350,
        379
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "400": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        350,
        379
      ],
      "op": "DUP2",
      "path": "24"
    },
    "401": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        350,
        379
      ],
      "op": "JUMP",
      "path": "24"
    },
    "402": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        350,
        379
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "403": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        350,
        379
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "405": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        350,
        379
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "406": {
      "op": "SWAP1"
    },
    "407": {
      "op": "DUP2"
    },
    "408": {
      "op": "MSTORE"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "411": {
      "op": "ADD"
    },
    "412": {
      "offset": [
        350,
        379
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x158"
    },
    "415": {
      "op": "JUMP"
    },
    "416": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2310,
        2549
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "417": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2310,
        2549
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x174"
    },
    "420": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2310,
        2549
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1AE"
    },
    "423": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2310,
        2549
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "424": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2310,
        2549
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "426": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2310,
        2549
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA9D"
    },
    "429": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "jump": "i",
      "offset": [
        2310,
        2549
      ],
      "op": "JUMP",
      "path": "24"
    },
    "430": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2310,
        2549
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "431": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2310,
        2549
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x39C"
    },
    "434": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "jump": "i",
      "offset": [
        2310,
        2549
      ],
      "op": "JUMP",
      "path": "24"
    },
    "435": {
      "offset": [
        385,
        434
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "436": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        385,
        434
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x192"
    },
    "439": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        385,
        434
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "441": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        385,
        434
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "442": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        385,
        434
      ],
      "op": "DUP2",
      "path": "24"
    },
    "443": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        385,
        434
      ],
      "op": "JUMP",
      "path": "24"
    },
    "444": {
      "fn": "OptionConfigBinaryV2.setUtilizationRate",
      "offset": [
        4525,
        4627
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "445": {
      "fn": "OptionConfigBinaryV2.setUtilizationRate",
      "offset": [
        4525,
        4627
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x174"
    },
    "448": {
      "fn": "OptionConfigBinaryV2.setUtilizationRate",
      "offset": [
        4525,
        4627
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1CA"
    },
    "451": {
      "fn": "OptionConfigBinaryV2.setUtilizationRate",
      "offset": [
        4525,
        4627
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "452": {
      "fn": "OptionConfigBinaryV2.setUtilizationRate",
      "offset": [
        4525,
        4627
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "454": {
      "fn": "OptionConfigBinaryV2.setUtilizationRate",
      "offset": [
        4525,
        4627
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA9D"
    },
    "457": {
      "fn": "OptionConfigBinaryV2.setUtilizationRate",
      "jump": "i",
      "offset": [
        4525,
        4627
      ],
      "op": "JUMP",
      "path": "24"
    },
    "458": {
      "fn": "OptionConfigBinaryV2.setUtilizationRate",
      "offset": [
        4525,
        4627
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "459": {
      "fn": "OptionConfigBinaryV2.setUtilizationRate",
      "offset": [
        4525,
        4627
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x45D"
    },
    "462": {
      "fn": "OptionConfigBinaryV2.setUtilizationRate",
      "jump": "i",
      "offset": [
        4525,
        4627
      ],
      "op": "JUMP",
      "path": "24"
    },
    "463": {
      "offset": [
        827,
        862
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "464": {
      "fn": "OptionConfigBinaryV2.setUtilizationRate",
      "offset": [
        827,
        862
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x192"
    },
    "467": {
      "fn": "OptionConfigBinaryV2.setUtilizationRate",
      "offset": [
        827,
        862
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xA"
    },
    "469": {
      "fn": "OptionConfigBinaryV2.setUtilizationRate",
      "offset": [
        827,
        862
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "470": {
      "fn": "OptionConfigBinaryV2.setUtilizationRate",
      "offset": [
        827,
        862
      ],
      "op": "DUP2",
      "path": "24"
    },
    "471": {
      "fn": "OptionConfigBinaryV2.setUtilizationRate",
      "offset": [
        827,
        862
      ],
      "op": "JUMP",
      "path": "24"
    },
    "472": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4184,
        4401
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "473": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4184,
        4401
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x174"
    },
    "476": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4184,
        4401
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E6"
    },
    "479": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4184,
        4401
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "480": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4184,
        4401
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "482": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4184,
        4401
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA9D"
    },
    "485": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "jump": "i",
      "offset": [
        4184,
        4401
      ],
      "op": "JUMP",
      "path": "24"
    },
    "486": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4184,
        4401
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "487": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4184,
        4401
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x491"
    },
    "490": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "jump": "i",
      "offset": [
        4184,
        4401
      ],
      "op": "JUMP",
      "path": "24"
    },
    "491": {
      "offset": [
        729,
        766
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "492": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        729,
        766
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x192"
    },
    "495": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        729,
        766
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x8"
    },
    "497": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        729,
        766
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "498": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        729,
        766
      ],
      "op": "DUP2",
      "path": "24"
    },
    "499": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        729,
        766
      ],
      "op": "JUMP",
      "path": "24"
    },
    "500": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "501": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x174"
    },
    "504": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x516"
    },
    "507": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "2"
    },
    "508": {
      "offset": [
        772,
        821
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "509": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        772,
        821
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x192"
    },
    "512": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        772,
        821
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x9"
    },
    "514": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        772,
        821
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "515": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        772,
        821
      ],
      "op": "DUP2",
      "path": "24"
    },
    "516": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        772,
        821
      ],
      "op": "JUMP",
      "path": "24"
    },
    "517": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "518": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14B"
    },
    "521": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x551"
    },
    "524": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "2"
    },
    "525": {
      "offset": [
        536,
        579
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "526": {
      "fn": "Ownable.owner",
      "offset": [
        536,
        579
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x192"
    },
    "529": {
      "fn": "Ownable.owner",
      "offset": [
        536,
        579
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x5"
    },
    "531": {
      "fn": "Ownable.owner",
      "offset": [
        536,
        579
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "532": {
      "fn": "Ownable.owner",
      "offset": [
        536,
        579
      ],
      "op": "DUP2",
      "path": "24"
    },
    "533": {
      "fn": "Ownable.owner",
      "offset": [
        536,
        579
      ],
      "op": "JUMP",
      "path": "24"
    },
    "534": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2687,
        2925
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "535": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2687,
        2925
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x174"
    },
    "538": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2687,
        2925
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x224"
    },
    "541": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2687,
        2925
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "542": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2687,
        2925
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "544": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2687,
        2925
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA50"
    },
    "547": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "jump": "i",
      "offset": [
        2687,
        2925
      ],
      "op": "JUMP",
      "path": "24"
    },
    "548": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2687,
        2925
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "549": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2687,
        2925
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x560"
    },
    "552": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "jump": "i",
      "offset": [
        2687,
        2925
      ],
      "op": "JUMP",
      "path": "24"
    },
    "553": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1314,
        1560
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "554": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1314,
        1560
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x174"
    },
    "557": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1314,
        1560
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x237"
    },
    "560": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1314,
        1560
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "561": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1314,
        1560
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "563": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1314,
        1560
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA9D"
    },
    "566": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "jump": "i",
      "offset": [
        1314,
        1560
      ],
      "op": "JUMP",
      "path": "24"
    },
    "567": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1314,
        1560
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "568": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1314,
        1560
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5ED"
    },
    "571": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "jump": "i",
      "offset": [
        1314,
        1560
      ],
      "op": "JUMP",
      "path": "24"
    },
    "572": {
      "offset": [
        490,
        530
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "573": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        490,
        530
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x192"
    },
    "576": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        490,
        530
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "578": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        490,
        530
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "579": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        490,
        530
      ],
      "op": "DUP2",
      "path": "24"
    },
    "580": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        490,
        530
      ],
      "op": "JUMP",
      "path": "24"
    },
    "581": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1720,
        1933
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "582": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1720,
        1933
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x174"
    },
    "585": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1720,
        1933
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x253"
    },
    "588": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1720,
        1933
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "589": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1720,
        1933
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "591": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1720,
        1933
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA9D"
    },
    "594": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "jump": "i",
      "offset": [
        1720,
        1933
      ],
      "op": "JUMP",
      "path": "24"
    },
    "595": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1720,
        1933
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "596": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1720,
        1933
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6B8"
    },
    "599": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "jump": "i",
      "offset": [
        1720,
        1933
      ],
      "op": "JUMP",
      "path": "24"
    },
    "600": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3420,
        3663
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "601": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3420,
        3663
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x174"
    },
    "604": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3420,
        3663
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x266"
    },
    "607": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3420,
        3663
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "608": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3420,
        3663
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "610": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3420,
        3663
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA9D"
    },
    "613": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "jump": "i",
      "offset": [
        3420,
        3663
      ],
      "op": "JUMP",
      "path": "24"
    },
    "614": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3420,
        3663
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "615": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3420,
        3663
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x777"
    },
    "618": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "jump": "i",
      "offset": [
        3420,
        3663
      ],
      "op": "JUMP",
      "path": "24"
    },
    "619": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3808,
        4049
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "620": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3808,
        4049
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x174"
    },
    "623": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3808,
        4049
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x279"
    },
    "626": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3808,
        4049
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "627": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3808,
        4049
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "629": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3808,
        4049
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA9D"
    },
    "632": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "jump": "i",
      "offset": [
        3808,
        4049
      ],
      "op": "JUMP",
      "path": "24"
    },
    "633": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3808,
        4049
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "634": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3808,
        4049
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x838"
    },
    "637": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "jump": "i",
      "offset": [
        3808,
        4049
      ],
      "op": "JUMP",
      "path": "24"
    },
    "638": {
      "offset": [
        585,
        628
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "639": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        585,
        628
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x192"
    },
    "642": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        585,
        628
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6"
    },
    "644": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        585,
        628
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "645": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        585,
        628
      ],
      "op": "DUP2",
      "path": "24"
    },
    "646": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        585,
        628
      ],
      "op": "JUMP",
      "path": "24"
    },
    "647": {
      "offset": [
        912,
        960
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "648": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        912,
        960
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xB"
    },
    "650": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        912,
        960
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "651": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        912,
        960
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x29B"
    },
    "654": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        912,
        960
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "659": {
      "op": "SHL"
    },
    "660": {
      "offset": [
        912,
        960
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "661": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        912,
        960
      ],
      "op": "DIV",
      "path": "24"
    },
    "662": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        912,
        960
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xFF"
    },
    "664": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        912,
        960
      ],
      "op": "AND",
      "path": "24"
    },
    "665": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        912,
        960
      ],
      "op": "DUP2",
      "path": "24"
    },
    "666": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        912,
        960
      ],
      "op": "JUMP",
      "path": "24"
    },
    "667": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        912,
        960
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "668": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        912,
        960
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "670": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        912,
        960
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "671": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        912,
        960
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x158"
    },
    "674": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        912,
        960
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "675": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        912,
        960
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "676": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        912,
        960
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAC9"
    },
    "679": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "jump": "i",
      "offset": [
        912,
        960
      ],
      "op": "JUMP",
      "path": "24"
    },
    "680": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "681": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x174"
    },
    "684": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B6"
    },
    "687": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "688": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "690": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA50"
    },
    "693": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "694": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "695": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8CA"
    },
    "698": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "699": {
      "offset": [
        440,
        484
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "700": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        440,
        484
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x192"
    },
    "703": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        440,
        484
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "705": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        440,
        484
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "706": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        440,
        484
      ],
      "op": "DUP2",
      "path": "24"
    },
    "707": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        440,
        484
      ],
      "op": "JUMP",
      "path": "24"
    },
    "708": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        1939,
        2153
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "709": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        1939,
        2153
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x174"
    },
    "712": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        1939,
        2153
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2D2"
    },
    "715": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        1939,
        2153
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "716": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        1939,
        2153
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "718": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        1939,
        2153
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA7E"
    },
    "721": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "jump": "i",
      "offset": [
        1939,
        2153
      ],
      "op": "JUMP",
      "path": "24"
    },
    "722": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        1939,
        2153
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "723": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        1939,
        2153
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x96A"
    },
    "726": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "jump": "i",
      "offset": [
        1939,
        2153
      ],
      "op": "JUMP",
      "path": "24"
    },
    "727": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3055,
        3282
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "728": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17",
      "statement": 0
    },
    "729": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E0"
    },
    "732": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x551"
    },
    "735": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "736": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "743": {
      "op": "SHL"
    },
    "744": {
      "op": "SUB"
    },
    "745": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "746": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "747": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30F"
    },
    "750": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "751": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "753": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "754": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "758": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "760": {
      "op": "SHL"
    },
    "761": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "762": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "763": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "765": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "766": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x306"
    },
    "769": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "770": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB16"
    },
    "773": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "774": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "775": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "777": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "778": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "779": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "780": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "2"
    },
    "781": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "782": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "783": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "784": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3149,
        3152
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 1,
      "value": "0x64"
    },
    "786": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3140,
        3145
      ],
      "op": "DUP2",
      "path": "24"
    },
    "787": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3140,
        3152
      ],
      "op": "GT",
      "path": "24"
    },
    "788": {
      "branch": 34,
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3140,
        3152
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "789": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3132,
        3189
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x360"
    },
    "792": {
      "branch": 34,
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3132,
        3189
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "793": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3132,
        3189
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "795": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3132,
        3189
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "796": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "800": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "802": {
      "op": "SHL"
    },
    "803": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3132,
        3189
      ],
      "op": "DUP2",
      "path": "24"
    },
    "804": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3132,
        3189
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "807": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3132,
        3189
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "809": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3132,
        3189
      ],
      "op": "DUP3",
      "path": "24"
    },
    "810": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3132,
        3189
      ],
      "op": "ADD",
      "path": "24"
    },
    "811": {
      "op": "DUP2"
    },
    "812": {
      "op": "SWAP1"
    },
    "813": {
      "op": "MSTORE"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "816": {
      "op": "DUP3"
    },
    "817": {
      "op": "ADD"
    },
    "818": {
      "op": "MSTORE"
    },
    "819": {
      "op": "PUSH32",
      "value": "0x5374616B696E6746656550657263656E7461676520697320746F6F2068696768"
    },
    "852": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "854": {
      "op": "DUP3"
    },
    "855": {
      "op": "ADD"
    },
    "856": {
      "op": "MSTORE"
    },
    "857": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "859": {
      "op": "ADD"
    },
    "860": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3132,
        3189
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x306"
    },
    "863": {
      "op": "JUMP"
    },
    "864": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3132,
        3189
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "865": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3199,
        3219
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 2,
      "value": "0x4"
    },
    "867": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3199,
        3227
      ],
      "op": "DUP2",
      "path": "24"
    },
    "868": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3199,
        3227
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "869": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3199,
        3227
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "870": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3242,
        3275
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 3,
      "value": "0x40"
    },
    "872": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3242,
        3275
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "873": {
      "op": "DUP2"
    },
    "874": {
      "op": "DUP2"
    },
    "875": {
      "op": "MSTORE"
    },
    "876": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3242,
        3275
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x7AB3467FB06D3D8716698BECE5F22A665374115BD3D0A43D6E11B76FCEC1DFBB"
    },
    "909": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3242,
        3275
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "912": {
      "op": "ADD"
    },
    "913": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3242,
        3275
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "914": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3242,
        3275
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "916": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3242,
        3275
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "917": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3242,
        3275
      ],
      "op": "DUP1",
      "path": "24"
    },
    "918": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3242,
        3275
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "919": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3242,
        3275
      ],
      "op": "SUB",
      "path": "24"
    },
    "920": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3242,
        3275
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "921": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3242,
        3275
      ],
      "op": "LOG1",
      "path": "24"
    },
    "922": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "offset": [
        3055,
        3282
      ],
      "op": "POP",
      "path": "24"
    },
    "923": {
      "fn": "OptionConfigBinaryV2.setStakingFeePercentage",
      "jump": "o",
      "offset": [
        3055,
        3282
      ],
      "op": "JUMP",
      "path": "24"
    },
    "924": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2310,
        2549
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "925": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "926": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A5"
    },
    "929": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x551"
    },
    "932": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "933": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "940": {
      "op": "SHL"
    },
    "941": {
      "op": "SUB"
    },
    "942": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "943": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "944": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CB"
    },
    "947": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "948": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "950": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "951": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "955": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "957": {
      "op": "SHL"
    },
    "958": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "959": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "960": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "962": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "963": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x306"
    },
    "966": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "967": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB16"
    },
    "970": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "971": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "972": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2406,
        2410
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 4,
      "value": "0x7D0"
    },
    "975": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2398,
        2403
      ],
      "op": "DUP2",
      "path": "24"
    },
    "976": {
      "branch": 35,
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2398,
        2410
      ],
      "op": "LT",
      "path": "24"
    },
    "977": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2390,
        2450
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x428"
    },
    "980": {
      "branch": 35,
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2390,
        2450
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "981": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2390,
        2450
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "983": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2390,
        2450
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "984": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "988": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "990": {
      "op": "SHL"
    },
    "991": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2390,
        2450
      ],
      "op": "DUP2",
      "path": "24"
    },
    "992": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2390,
        2450
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "995": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2390,
        2450
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "997": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2390,
        2450
      ],
      "op": "DUP3",
      "path": "24"
    },
    "998": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2390,
        2450
      ],
      "op": "ADD",
      "path": "24"
    },
    "999": {
      "op": "MSTORE"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1004": {
      "op": "DUP3"
    },
    "1005": {
      "op": "ADD"
    },
    "1006": {
      "op": "MSTORE"
    },
    "1007": {
      "op": "PUSH32",
      "value": "0x536574746C656D656E7446656550657263656E7461676520697320746F6F2068"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1042": {
      "op": "DUP3"
    },
    "1043": {
      "op": "ADD"
    },
    "1044": {
      "op": "MSTORE"
    },
    "1045": {
      "op": "PUSH3",
      "value": "0xD2CED"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0xEB"
    },
    "1051": {
      "op": "SHL"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1054": {
      "op": "DUP3"
    },
    "1055": {
      "op": "ADD"
    },
    "1056": {
      "op": "MSTORE"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1059": {
      "op": "ADD"
    },
    "1060": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2390,
        2450
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x306"
    },
    "1063": {
      "op": "JUMP"
    },
    "1064": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2390,
        2450
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1065": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2460,
        2483
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 5,
      "value": "0x3"
    },
    "1067": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2460,
        2491
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1068": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2460,
        2491
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1069": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2460,
        2491
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "1070": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2506,
        2542
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 6,
      "value": "0x40"
    },
    "1072": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2506,
        2542
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1073": {
      "op": "DUP2"
    },
    "1074": {
      "op": "DUP2"
    },
    "1075": {
      "op": "MSTORE"
    },
    "1076": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2506,
        2542
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x803E7BBAEBADBDA418EC6DD788E57C29C1CF3FAEB7E139D21247E624C9E6D119"
    },
    "1109": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2506,
        2542
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1112": {
      "op": "ADD"
    },
    "1113": {
      "fn": "OptionConfigBinaryV2.setSettlementFeePercentage",
      "offset": [
        2506,
        2542
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x391"
    },
    "1116": {
      "op": "JUMP"
    },
    "1117": {
      "fn": "OptionConfigBinaryV2.setUtilizationRate",
      "offset": [
        4525,
        4627
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1118": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1119": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x466"
    },
    "1122": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x551"
    },
    "1125": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1126": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1133": {
      "op": "SHL"
    },
    "1134": {
      "op": "SUB"
    },
    "1135": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "1136": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1137": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x48C"
    },
    "1140": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1141": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1143": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1144": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1150": {
      "op": "SHL"
    },
    "1151": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1152": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1153": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1155": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1156": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x306"
    },
    "1159": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1160": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB16"
    },
    "1163": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1164": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1165": {
      "fn": "OptionConfigBinaryV2.setUtilizationRate",
      "offset": [
        4597,
        4612
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 7,
      "value": "0x8"
    },
    "1167": {
      "fn": "OptionConfigBinaryV2.setUtilizationRate",
      "offset": [
        4597,
        4620
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "1168": {
      "fn": "OptionConfigBinaryV2.setUtilizationRate",
      "jump": "o",
      "offset": [
        4525,
        4627
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1169": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4184,
        4401
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1170": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1171": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x49A"
    },
    "1174": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x551"
    },
    "1177": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1178": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1185": {
      "op": "SHL"
    },
    "1186": {
      "op": "SUB"
    },
    "1187": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "1188": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1189": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C0"
    },
    "1192": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1193": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1195": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1196": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1202": {
      "op": "SHL"
    },
    "1203": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1204": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1205": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1207": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1208": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x306"
    },
    "1211": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1212": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB16"
    },
    "1215": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1216": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1217": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4282,
        4284
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 8,
      "value": "0xA"
    },
    "1219": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4273,
        4278
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1220": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4273,
        4284
      ],
      "op": "GT",
      "path": "24"
    },
    "1221": {
      "branch": 36,
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4273,
        4284
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1222": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4265,
        4300
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4E1"
    },
    "1225": {
      "branch": 36,
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4265,
        4300
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1226": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4265,
        4300
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1228": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4265,
        4300
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1229": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1235": {
      "op": "SHL"
    },
    "1236": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4265,
        4300
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1237": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4265,
        4300
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1238": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4265,
        4300
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1240": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4265,
        4300
      ],
      "op": "ADD",
      "path": "24"
    },
    "1241": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4265,
        4300
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x306"
    },
    "1244": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4265,
        4300
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1245": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4265,
        4300
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAF1"
    },
    "1248": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "jump": "i",
      "offset": [
        4265,
        4300
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1249": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4265,
        4300
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1250": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4310,
        4334
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 9,
      "value": "0x6"
    },
    "1252": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4310,
        4342
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1253": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4310,
        4342
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1254": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4310,
        4342
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "1255": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4357,
        4394
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 10,
      "value": "0x40"
    },
    "1257": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4357,
        4394
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1258": {
      "op": "DUP2"
    },
    "1259": {
      "op": "DUP2"
    },
    "1260": {
      "op": "MSTORE"
    },
    "1261": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4357,
        4394
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x8FB679AA627958FC7143B0829745D581E0F5E98599847E7097749CE89D8C88E0"
    },
    "1294": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4357,
        4394
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1297": {
      "op": "ADD"
    },
    "1298": {
      "fn": "OptionConfigBinaryV2.setNFTSaleRoyaltyPercentage",
      "offset": [
        4357,
        4394
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x391"
    },
    "1301": {
      "op": "JUMP"
    },
    "1302": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1303": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1304": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x51F"
    },
    "1307": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x551"
    },
    "1310": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1311": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1318": {
      "op": "SHL"
    },
    "1319": {
      "op": "SUB"
    },
    "1320": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "1321": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1322": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x545"
    },
    "1325": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1326": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1328": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1329": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1335": {
      "op": "SHL"
    },
    "1336": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1337": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1338": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1340": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1341": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x306"
    },
    "1344": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1345": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB16"
    },
    "1348": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1349": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1350": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 11,
      "value": "0x54F"
    },
    "1353": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1355": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA00"
    },
    "1358": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1359": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1360": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1361": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1362": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1364": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "2",
      "statement": 12
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1371": {
      "op": "SHL"
    },
    "1372": {
      "op": "SUB"
    },
    "1373": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "2"
    },
    "1374": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1375": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1376": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2687,
        2925
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1377": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1378": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x569"
    },
    "1381": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x551"
    },
    "1384": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1385": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1392": {
      "op": "SHL"
    },
    "1393": {
      "op": "SUB"
    },
    "1394": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "1395": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1396": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x58F"
    },
    "1399": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1400": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1402": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1403": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1409": {
      "op": "SHL"
    },
    "1410": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1411": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1412": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1414": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1415": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x306"
    },
    "1418": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1419": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB16"
    },
    "1422": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1423": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1430": {
      "op": "SHL"
    },
    "1431": {
      "op": "SUB"
    },
    "1432": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2778,
        2810
      ],
      "op": "DUP2",
      "path": "24",
      "statement": 13
    },
    "1433": {
      "branch": 37,
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2778,
        2810
      ],
      "op": "AND",
      "path": "24"
    },
    "1434": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2770,
        2811
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5A2"
    },
    "1437": {
      "branch": 37,
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2770,
        2811
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1438": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2770,
        2811
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1440": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2770,
        2811
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1441": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2770,
        2811
      ],
      "op": "REVERT",
      "path": "24"
    },
    "1442": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2770,
        2811
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1443": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2821,
        2843
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 14,
      "value": "0x7"
    },
    "1445": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2821,
        2855
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1446": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2821,
        2855
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1453": {
      "op": "SHL"
    },
    "1454": {
      "op": "SUB"
    },
    "1455": {
      "op": "NOT"
    },
    "1456": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2821,
        2855
      ],
      "op": "AND",
      "path": "24"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1463": {
      "op": "SHL"
    },
    "1464": {
      "op": "SUB"
    },
    "1465": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2821,
        2855
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1466": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2821,
        2855
      ],
      "op": "AND",
      "path": "24"
    },
    "1467": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2821,
        2855
      ],
      "op": "OR",
      "path": "24"
    },
    "1468": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2821,
        2855
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1469": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2821,
        2855
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "1470": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2870,
        2918
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 15,
      "value": "0x40"
    },
    "1472": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2870,
        2918
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1473": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2870,
        2918
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x92F6C1E8DF34C666F737A2407B4E63D3A77F133B69FDF70F01B5E3B8072551F6"
    },
    "1506": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2870,
        2918
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1507": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2870,
        2918
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x391"
    },
    "1510": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2870,
        2918
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1511": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2821,
        2855
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1512": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2821,
        2855
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1513": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "offset": [
        2870,
        2918
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAB5"
    },
    "1516": {
      "fn": "OptionConfigBinaryV2.setSettlementFeeRecipient",
      "jump": "i",
      "offset": [
        2870,
        2918
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1517": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1314,
        1560
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1518": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1519": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5F6"
    },
    "1522": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x551"
    },
    "1525": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1526": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1533": {
      "op": "SHL"
    },
    "1534": {
      "op": "SUB"
    },
    "1535": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "1536": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1537": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x61C"
    },
    "1540": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1541": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1543": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1544": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1550": {
      "op": "SHL"
    },
    "1551": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1552": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1553": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1555": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1556": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x306"
    },
    "1559": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1560": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB16"
    },
    "1563": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1564": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1565": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1410,
        1419
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 16,
      "value": "0x12C"
    },
    "1568": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1401,
        1406
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1569": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1401,
        1419
      ],
      "op": "LT",
      "path": "24"
    },
    "1570": {
      "branch": 38,
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1401,
        1419
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1571": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1380,
        1489
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x683"
    },
    "1574": {
      "branch": 38,
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1380,
        1489
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1575": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1380,
        1489
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1577": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1380,
        1489
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1578": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1584": {
      "op": "SHL"
    },
    "1585": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1380,
        1489
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1586": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1380,
        1489
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1589": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1380,
        1489
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1591": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1380,
        1489
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1592": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1380,
        1489
      ],
      "op": "ADD",
      "path": "24"
    },
    "1593": {
      "op": "MSTORE"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1598": {
      "op": "DUP3"
    },
    "1599": {
      "op": "ADD"
    },
    "1600": {
      "op": "MSTORE"
    },
    "1601": {
      "op": "PUSH32",
      "value": "0x4D6178506572696F64206E6565647320746F2062652067726561746572207468"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1636": {
      "op": "DUP3"
    },
    "1637": {
      "op": "ADD"
    },
    "1638": {
      "op": "MSTORE"
    },
    "1639": {
      "op": "PUSH12",
      "value": "0x616E2035206D696E75746573"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1654": {
      "op": "SHL"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1657": {
      "op": "DUP3"
    },
    "1658": {
      "op": "ADD"
    },
    "1659": {
      "op": "MSTORE"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1662": {
      "op": "ADD"
    },
    "1663": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1380,
        1489
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x306"
    },
    "1666": {
      "op": "JUMP"
    },
    "1667": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1380,
        1489
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1668": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1499,
        1508
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 17,
      "value": "0xA"
    },
    "1670": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1499,
        1516
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1671": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1499,
        1516
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1672": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1499,
        1516
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "1673": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1531,
        1553
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 18,
      "value": "0x40"
    },
    "1675": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1531,
        1553
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1676": {
      "op": "DUP2"
    },
    "1677": {
      "op": "DUP2"
    },
    "1678": {
      "op": "MSTORE"
    },
    "1679": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1531,
        1553
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x967EEAC7CCAA5705556859408DDB017BAC37AFA817DD8FF3D27CF4EA1171A66"
    },
    "1712": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1531,
        1553
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1715": {
      "op": "ADD"
    },
    "1716": {
      "fn": "OptionConfigBinaryV2.setMaxPeriod",
      "offset": [
        1531,
        1553
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x391"
    },
    "1719": {
      "op": "JUMP"
    },
    "1720": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1720,
        1933
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1721": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1722": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6C1"
    },
    "1725": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x551"
    },
    "1728": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1729": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1736": {
      "op": "SHL"
    },
    "1737": {
      "op": "SUB"
    },
    "1738": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "1739": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1740": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6E7"
    },
    "1743": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1744": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1746": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1747": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1753": {
      "op": "SHL"
    },
    "1754": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1755": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1756": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1758": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1759": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x306"
    },
    "1762": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1763": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB16"
    },
    "1766": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1767": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1768": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1808,
        1811
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 19,
      "value": "0x64"
    },
    "1770": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1799,
        1804
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1771": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1799,
        1811
      ],
      "op": "LT",
      "path": "24"
    },
    "1772": {
      "branch": 39,
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1799,
        1811
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1773": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1791,
        1849
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x742"
    },
    "1776": {
      "branch": 39,
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1791,
        1849
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1777": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1791,
        1849
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1779": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1791,
        1849
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1780": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1786": {
      "op": "SHL"
    },
    "1787": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1791,
        1849
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1788": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1791,
        1849
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1791": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1791,
        1849
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1793": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1791,
        1849
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1794": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1791,
        1849
      ],
      "op": "ADD",
      "path": "24"
    },
    "1795": {
      "op": "MSTORE"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1800": {
      "op": "DUP3"
    },
    "1801": {
      "op": "ADD"
    },
    "1802": {
      "op": "MSTORE"
    },
    "1803": {
      "op": "PUSH32",
      "value": "0x496D706C696564566F6C52617465206C696D697420697320746F6F20736D616C"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1838": {
      "op": "DUP3"
    },
    "1839": {
      "op": "ADD"
    },
    "1840": {
      "op": "MSTORE"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "1845": {
      "op": "SHL"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1848": {
      "op": "DUP3"
    },
    "1849": {
      "op": "ADD"
    },
    "1850": {
      "op": "MSTORE"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1853": {
      "op": "ADD"
    },
    "1854": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1791,
        1849
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x306"
    },
    "1857": {
      "op": "JUMP"
    },
    "1858": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1791,
        1849
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1859": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1859,
        1873
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 20,
      "value": "0x1"
    },
    "1861": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1859,
        1881
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1862": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1859,
        1881
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1863": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1859,
        1881
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "1864": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1896,
        1926
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 21,
      "value": "0x40"
    },
    "1866": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1896,
        1926
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1867": {
      "op": "DUP2"
    },
    "1868": {
      "op": "DUP2"
    },
    "1869": {
      "op": "MSTORE"
    },
    "1870": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1896,
        1926
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x3E0C59249D1A9C5F08383BDBDFBC45517A71B76E72223AE649C576E4D1258696"
    },
    "1903": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1896,
        1926
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1906": {
      "op": "ADD"
    },
    "1907": {
      "fn": "OptionConfigBinaryV2.setImpliedVolRate",
      "offset": [
        1896,
        1926
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x391"
    },
    "1910": {
      "op": "JUMP"
    },
    "1911": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3420,
        3663
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1912": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1913": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x780"
    },
    "1916": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x551"
    },
    "1919": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1920": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1927": {
      "op": "SHL"
    },
    "1928": {
      "op": "SUB"
    },
    "1929": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "1930": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1931": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7A6"
    },
    "1934": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1935": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1937": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1938": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1944": {
      "op": "SHL"
    },
    "1945": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1946": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1947": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1949": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1950": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x306"
    },
    "1953": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1954": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB16"
    },
    "1957": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1958": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1959": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3518,
        3521
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 22,
      "value": "0x64"
    },
    "1961": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3509,
        3514
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1962": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3509,
        3521
      ],
      "op": "GT",
      "path": "24"
    },
    "1963": {
      "branch": 40,
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3509,
        3521
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1964": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3501,
        3562
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x803"
    },
    "1967": {
      "branch": 40,
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3501,
        3562
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1968": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3501,
        3562
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1970": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3501,
        3562
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1971": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1977": {
      "op": "SHL"
    },
    "1978": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3501,
        3562
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1979": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3501,
        3562
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1982": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3501,
        3562
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1984": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3501,
        3562
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1985": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3501,
        3562
      ],
      "op": "ADD",
      "path": "24"
    },
    "1986": {
      "op": "MSTORE"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1989": {
      "op": "DUP1"
    },
    "1990": {
      "op": "DUP3"
    },
    "1991": {
      "op": "ADD"
    },
    "1992": {
      "op": "MSTORE"
    },
    "1993": {
      "op": "PUSH32",
      "value": "0x526566657272616C52657761726450657263656E7461676520697320746F6F20"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2028": {
      "op": "DUP3"
    },
    "2029": {
      "op": "ADD"
    },
    "2030": {
      "op": "MSTORE"
    },
    "2031": {
      "op": "PUSH4",
      "value": "0xD0D2CED"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2038": {
      "op": "SHL"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2041": {
      "op": "DUP3"
    },
    "2042": {
      "op": "ADD"
    },
    "2043": {
      "op": "MSTORE"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2046": {
      "op": "ADD"
    },
    "2047": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3501,
        3562
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x306"
    },
    "2050": {
      "op": "JUMP"
    },
    "2051": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3501,
        3562
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2052": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3572,
        3596
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 23,
      "value": "0x5"
    },
    "2054": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3572,
        3604
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2055": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3572,
        3604
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2056": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3572,
        3604
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2057": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3619,
        3656
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 24,
      "value": "0x40"
    },
    "2059": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3619,
        3656
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2060": {
      "op": "DUP2"
    },
    "2061": {
      "op": "DUP2"
    },
    "2062": {
      "op": "MSTORE"
    },
    "2063": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3619,
        3656
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0xC089466003B94FFB5787D1D1AFFE1C743F8CA63F949D2296CFA4D7986601ADE"
    },
    "2096": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3619,
        3656
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2099": {
      "op": "ADD"
    },
    "2100": {
      "fn": "OptionConfigBinaryV2.setReferralRewardPercentage",
      "offset": [
        3619,
        3656
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x391"
    },
    "2103": {
      "op": "JUMP"
    },
    "2104": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3808,
        4049
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2105": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "2106": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x841"
    },
    "2109": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x551"
    },
    "2112": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2113": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2120": {
      "op": "SHL"
    },
    "2121": {
      "op": "SUB"
    },
    "2122": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "2123": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "2124": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x867"
    },
    "2127": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2128": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2130": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2131": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2137": {
      "op": "SHL"
    },
    "2138": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2139": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2140": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2142": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "2143": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x306"
    },
    "2146": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2147": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB16"
    },
    "2150": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2151": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2152": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3905,
        3910
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 25
    },
    "2153": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3899,
        3901
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x32"
    },
    "2155": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3899,
        3910
      ],
      "op": "GT",
      "path": "24"
    },
    "2156": {
      "branch": 41,
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3899,
        3910
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2157": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3899,
        3926
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2158": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3899,
        3926
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2159": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3899,
        3926
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x879"
    },
    "2162": {
      "branch": 41,
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3899,
        3926
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2163": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3899,
        3926
      ],
      "op": "POP",
      "path": "24"
    },
    "2164": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3923,
        3926
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x64"
    },
    "2166": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3914,
        3919
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2167": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3914,
        3926
      ],
      "op": "GT",
      "path": "24"
    },
    "2168": {
      "branch": 42,
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3914,
        3926
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2169": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3899,
        3926
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2170": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3891,
        3942
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x895"
    },
    "2173": {
      "branch": 42,
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3891,
        3942
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2174": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3891,
        3942
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2176": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3891,
        3942
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2177": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2183": {
      "op": "SHL"
    },
    "2184": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3891,
        3942
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2185": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3891,
        3942
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2186": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3891,
        3942
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2188": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3891,
        3942
      ],
      "op": "ADD",
      "path": "24"
    },
    "2189": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3891,
        3942
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x306"
    },
    "2192": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3891,
        3942
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2193": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3891,
        3942
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAF1"
    },
    "2196": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "jump": "i",
      "offset": [
        3891,
        3942
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2197": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3891,
        3942
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2198": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3952,
        3980
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 26,
      "value": "0x2"
    },
    "2200": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3952,
        3988
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2201": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3952,
        3988
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2202": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        3952,
        3988
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2203": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        4003,
        4042
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 27,
      "value": "0x40"
    },
    "2205": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        4003,
        4042
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2206": {
      "op": "DUP2"
    },
    "2207": {
      "op": "DUP2"
    },
    "2208": {
      "op": "MSTORE"
    },
    "2209": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        4003,
        4042
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x66B26A0DFAA5FC9F5C7432381208AA4BD7F13F4489299B52F09F1AF7669BB93B"
    },
    "2242": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        4003,
        4042
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2245": {
      "op": "ADD"
    },
    "2246": {
      "fn": "OptionConfigBinaryV2.setOptionCollaterizationRatio",
      "offset": [
        4003,
        4042
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x391"
    },
    "2249": {
      "op": "JUMP"
    },
    "2250": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2251": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "2252": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8D3"
    },
    "2255": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x551"
    },
    "2258": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2259": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2266": {
      "op": "SHL"
    },
    "2267": {
      "op": "SUB"
    },
    "2268": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "2269": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "2270": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8F9"
    },
    "2273": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2274": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2276": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2277": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2283": {
      "op": "SHL"
    },
    "2284": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2285": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2286": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2288": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "2289": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x306"
    },
    "2292": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2293": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB16"
    },
    "2296": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2297": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2304": {
      "op": "SHL"
    },
    "2305": {
      "op": "SUB"
    },
    "2306": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 28
    },
    "2307": {
      "branch": 43,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "2"
    },
    "2308": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x95E"
    },
    "2311": {
      "branch": 43,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2312": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2314": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2315": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2321": {
      "op": "SHL"
    },
    "2322": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2323": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2326": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2328": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2329": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "2"
    },
    "2330": {
      "op": "MSTORE"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2335": {
      "op": "DUP3"
    },
    "2336": {
      "op": "ADD"
    },
    "2337": {
      "op": "MSTORE"
    },
    "2338": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2373": {
      "op": "DUP3"
    },
    "2374": {
      "op": "ADD"
    },
    "2375": {
      "op": "MSTORE"
    },
    "2376": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2385": {
      "op": "SHL"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2388": {
      "op": "DUP3"
    },
    "2389": {
      "op": "ADD"
    },
    "2390": {
      "op": "MSTORE"
    },
    "2391": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2393": {
      "op": "ADD"
    },
    "2394": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x306"
    },
    "2397": {
      "op": "JUMP"
    },
    "2398": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2399": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 29,
      "value": "0x967"
    },
    "2402": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2403": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA00"
    },
    "2406": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2407": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2408": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "2"
    },
    "2409": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2410": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        1939,
        2153
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2411": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "2412": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x973"
    },
    "2415": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x551"
    },
    "2418": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2419": {
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2426": {
      "op": "SHL"
    },
    "2427": {
      "op": "SUB"
    },
    "2428": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "2"
    },
    "2429": {
      "branch": 44,
      "fn": "Context._msgSender",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "2430": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x999"
    },
    "2433": {
      "branch": 44,
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2434": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2436": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2437": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2443": {
      "op": "SHL"
    },
    "2444": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2445": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2446": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2448": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "2449": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x306"
    },
    "2452": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2453": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB16"
    },
    "2456": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2457": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2458": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2075
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 30,
      "value": "0xB"
    },
    "2460": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2461": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2462": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2078,
        2092
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2463": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2078,
        2092
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2464": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2075
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2465": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2469": {
      "op": "SHL"
    },
    "2470": {
      "op": "NOT"
    },
    "2471": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "AND",
      "path": "24"
    },
    "2472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2476": {
      "op": "SHL"
    },
    "2477": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2078,
        2092
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2478": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "2480": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2481": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "GT",
      "path": "24"
    },
    "2482": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2483": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9CC"
    },
    "2486": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2487": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2494": {
      "op": "SHL"
    },
    "2495": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2497": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2498": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x21"
    },
    "2500": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2502": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2503": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x24"
    },
    "2505": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2507": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "REVERT",
      "path": "24"
    },
    "2508": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2509": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "MUL",
      "path": "24"
    },
    "2510": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "OR",
      "path": "24"
    },
    "2511": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2512": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2513": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2055,
        2092
      ],
      "op": "POP",
      "path": "24"
    },
    "2514": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2107,
        2146
      ],
      "op": "PUSH32",
      "path": "24",
      "statement": 31,
      "value": "0x75E98309D621801FC34E8CE7FA6EAA10B82599A58639171FE865E39BB4728D48"
    },
    "2547": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2131,
        2145
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2548": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2107,
        2146
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2550": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2107,
        2146
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2551": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2107,
        2146
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x391"
    },
    "2554": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2107,
        2146
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2555": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2107,
        2146
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2556": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "offset": [
        2107,
        2146
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAC9"
    },
    "2559": {
      "fn": "OptionConfigBinaryV2.setTradingPermission",
      "jump": "i",
      "offset": [
        2107,
        2146
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2560": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2561": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2563": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2564": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2571": {
      "op": "SHL"
    },
    "2572": {
      "op": "SUB"
    },
    "2573": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 32
    },
    "2574": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2575": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "2"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2582": {
      "op": "SHL"
    },
    "2583": {
      "op": "SUB"
    },
    "2584": {
      "op": "NOT"
    },
    "2585": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2586": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "2"
    },
    "2587": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2588": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "2"
    },
    "2589": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2590": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2591": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 33,
      "value": "0x40"
    },
    "2593": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2594": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2595": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2596": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2597": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "2"
    },
    "2598": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2599": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2600": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2601": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2634": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2635": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2636": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "2"
    },
    "2637": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "2"
    },
    "2638": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "2"
    },
    "2639": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2640": {
      "op": "JUMPDEST"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2645": {
      "op": "DUP3"
    },
    "2646": {
      "op": "DUP5"
    },
    "2647": {
      "op": "SUB"
    },
    "2648": {
      "op": "SLT"
    },
    "2649": {
      "op": "ISZERO"
    },
    "2650": {
      "op": "PUSH2",
      "value": "0xA61"
    },
    "2653": {
      "op": "JUMPI"
    },
    "2654": {
      "op": "DUP1"
    },
    "2655": {
      "op": "DUP2"
    },
    "2656": {
      "op": "REVERT"
    },
    "2657": {
      "op": "JUMPDEST"
    },
    "2658": {
      "op": "DUP2"
    },
    "2659": {
      "op": "CALLDATALOAD"
    },
    "2660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2666": {
      "op": "SHL"
    },
    "2667": {
      "op": "SUB"
    },
    "2668": {
      "op": "DUP2"
    },
    "2669": {
      "op": "AND"
    },
    "2670": {
      "op": "DUP2"
    },
    "2671": {
      "op": "EQ"
    },
    "2672": {
      "op": "PUSH2",
      "value": "0xA77"
    },
    "2675": {
      "op": "JUMPI"
    },
    "2676": {
      "op": "DUP2"
    },
    "2677": {
      "op": "DUP3"
    },
    "2678": {
      "op": "REVERT"
    },
    "2679": {
      "op": "JUMPDEST"
    },
    "2680": {
      "op": "SWAP4"
    },
    "2681": {
      "op": "SWAP3"
    },
    "2682": {
      "op": "POP"
    },
    "2683": {
      "op": "POP"
    },
    "2684": {
      "op": "POP"
    },
    "2685": {
      "jump": "o",
      "op": "JUMP"
    },
    "2686": {
      "op": "JUMPDEST"
    },
    "2687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2691": {
      "op": "DUP3"
    },
    "2692": {
      "op": "DUP5"
    },
    "2693": {
      "op": "SUB"
    },
    "2694": {
      "op": "SLT"
    },
    "2695": {
      "op": "ISZERO"
    },
    "2696": {
      "op": "PUSH2",
      "value": "0xA8F"
    },
    "2699": {
      "op": "JUMPI"
    },
    "2700": {
      "op": "DUP1"
    },
    "2701": {
      "op": "DUP2"
    },
    "2702": {
      "op": "REVERT"
    },
    "2703": {
      "op": "JUMPDEST"
    },
    "2704": {
      "op": "DUP2"
    },
    "2705": {
      "op": "CALLDATALOAD"
    },
    "2706": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2708": {
      "op": "DUP2"
    },
    "2709": {
      "op": "LT"
    },
    "2710": {
      "op": "PUSH2",
      "value": "0xA77"
    },
    "2713": {
      "op": "JUMPI"
    },
    "2714": {
      "op": "DUP2"
    },
    "2715": {
      "op": "DUP3"
    },
    "2716": {
      "op": "REVERT"
    },
    "2717": {
      "op": "JUMPDEST"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2722": {
      "op": "DUP3"
    },
    "2723": {
      "op": "DUP5"
    },
    "2724": {
      "op": "SUB"
    },
    "2725": {
      "op": "SLT"
    },
    "2726": {
      "op": "ISZERO"
    },
    "2727": {
      "op": "PUSH2",
      "value": "0xAAE"
    },
    "2730": {
      "op": "JUMPI"
    },
    "2731": {
      "op": "DUP1"
    },
    "2732": {
      "op": "DUP2"
    },
    "2733": {
      "op": "REVERT"
    },
    "2734": {
      "op": "JUMPDEST"
    },
    "2735": {
      "op": "POP"
    },
    "2736": {
      "op": "CALLDATALOAD"
    },
    "2737": {
      "op": "SWAP2"
    },
    "2738": {
      "op": "SWAP1"
    },
    "2739": {
      "op": "POP"
    },
    "2740": {
      "jump": "o",
      "op": "JUMP"
    },
    "2741": {
      "op": "JUMPDEST"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2748": {
      "op": "SHL"
    },
    "2749": {
      "op": "SUB"
    },
    "2750": {
      "op": "SWAP2"
    },
    "2751": {
      "op": "SWAP1"
    },
    "2752": {
      "op": "SWAP2"
    },
    "2753": {
      "op": "AND"
    },
    "2754": {
      "op": "DUP2"
    },
    "2755": {
      "op": "MSTORE"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2758": {
      "op": "ADD"
    },
    "2759": {
      "op": "SWAP1"
    },
    "2760": {
      "jump": "o",
      "op": "JUMP"
    },
    "2761": {
      "op": "JUMPDEST"
    },
    "2762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2764": {
      "op": "DUP2"
    },
    "2765": {
      "op": "ADD"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2768": {
      "op": "DUP4"
    },
    "2769": {
      "op": "LT"
    },
    "2770": {
      "op": "PUSH2",
      "value": "0xAEB"
    },
    "2773": {
      "op": "JUMPI"
    },
    "2774": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2779": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2781": {
      "op": "SHL"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2784": {
      "op": "MSTORE"
    },
    "2785": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2789": {
      "op": "MSTORE"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2794": {
      "op": "REVERT"
    },
    "2795": {
      "op": "JUMPDEST"
    },
    "2796": {
      "op": "SWAP2"
    },
    "2797": {
      "op": "SWAP1"
    },
    "2798": {
      "op": "MSTORE"
    },
    "2799": {
      "op": "SWAP1"
    },
    "2800": {
      "jump": "o",
      "op": "JUMP"
    },
    "2801": {
      "op": "JUMPDEST"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2804": {
      "op": "DUP1"
    },
    "2805": {
      "op": "DUP3"
    },
    "2806": {
      "op": "MSTORE"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "2809": {
      "op": "SWAP1"
    },
    "2810": {
      "op": "DUP3"
    },
    "2811": {
      "op": "ADD"
    },
    "2812": {
      "op": "MSTORE"
    },
    "2813": {
      "op": "PUSH11",
      "value": "0x77726F6E672076616C7565"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2827": {
      "op": "SHL"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2830": {
      "op": "DUP3"
    },
    "2831": {
      "op": "ADD"
    },
    "2832": {
      "op": "MSTORE"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2835": {
      "op": "ADD"
    },
    "2836": {
      "op": "SWAP1"
    },
    "2837": {
      "jump": "o",
      "op": "JUMP"
    },
    "2838": {
      "op": "JUMPDEST"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2841": {
      "op": "DUP1"
    },
    "2842": {
      "op": "DUP3"
    },
    "2843": {
      "op": "MSTORE"
    },
    "2844": {
      "op": "DUP2"
    },
    "2845": {
      "op": "DUP2"
    },
    "2846": {
      "op": "ADD"
    },
    "2847": {
      "op": "MSTORE"
    },
    "2848": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2883": {
      "op": "DUP3"
    },
    "2884": {
      "op": "ADD"
    },
    "2885": {
      "op": "MSTORE"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2888": {
      "op": "ADD"
    },
    "2889": {
      "op": "SWAP1"
    },
    "2890": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "cd621981ce3c738807e3d74a48ad3dd1f0941967",
  "source": "pragma solidity ^0.8.0;\n\n// SPDX-License-Identifier: BUSL-1.1\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./BufferBinaryIBFRPoolBinary.sol\";\n\n/**\n * @author Heisenberg\n * @title Buffer BNB Bidirectional (Call and Put) Options\n * @notice Buffer BNB Options Contract\n */\ncontract OptionConfigBinaryV2 is Ownable, IOptionsConfig {\n    uint256 public impliedVolRate;\n    uint256 public optionCollateralizationRatio = 100;\n    uint256 public settlementFeePercentage = 5e2;\n    uint256 public stakingFeePercentage = 50;\n    uint256 public referralRewardPercentage = 0;\n    uint256 public nftSaleRoyaltyPercentage = 5;\n    uint256 internal constant PRICE_DECIMALS = 1e8;\n    address public settlementFeeRecipient;\n    uint256 public utilizationRate = 60e8;\n    uint256 public optionSizePerBlockLimitPercent = 5;\n    uint256 public maxPeriod = 24 hours;\n    BufferBinaryIBFRPoolBinary public pool;\n    PermittedTradingType public permittedTradingType;\n\n    constructor(\n        address staking,\n        uint256 initialImpliedVolRate,\n        BufferBinaryIBFRPoolBinary _pool\n    ) {\n        settlementFeeRecipient = staking;\n        impliedVolRate = initialImpliedVolRate;\n        pool = _pool;\n    }\n\n    /**\n     * @notice Used for adjusting the maxPeriod\n     * @param value New maxPeriod\n     */\n    function setMaxPeriod(uint256 value) external onlyOwner {\n        require(\n            value >= 5 minutes,\n            \"MaxPeriod needs to be greater than 5 minutes\"\n        );\n        maxPeriod = value;\n        emit UpdateMaxPeriod(value);\n    }\n\n    /**\n     * @notice Used for adjusting the options prices while balancing asset's implied volatility rate\n     * @param value New IVRate value\n     */\n    function setImpliedVolRate(uint256 value) external onlyOwner {\n        require(value >= 100, \"ImpliedVolRate limit is too small\");\n        impliedVolRate = value;\n        emit UpdateImpliedVolatility(value);\n    }\n\n    function setTradingPermission(PermittedTradingType permissionType)\n        external\n        onlyOwner\n    {\n        permittedTradingType = permissionType;\n        emit UpdateTradingPermission(permissionType);\n    }\n\n    /**\n     * @notice Used for adjusting the settlement fee percentage with a factor of 100\n     * @param value New Settlement Fee Percentage\n     */\n    function setSettlementFeePercentage(uint256 value) external onlyOwner {\n        require(value < 20e2, \"SettlementFeePercentage is too high\");\n        settlementFeePercentage = value;\n        emit UpdateSettlementFeePercentage(value);\n    }\n\n    /**\n     * @notice Used for changing settlementFeeRecipient\n     * @param recipient New settlementFee recipient address\n     */\n    function setSettlementFeeRecipient(address recipient) external onlyOwner {\n        require(address(recipient) != address(0));\n        settlementFeeRecipient = recipient;\n        emit UpdateSettlementFeeRecipient(address(recipient));\n    }\n\n    /**\n     * @notice Used for adjusting the staking fee percentage\n     * @param value New Staking Fee Percentage\n     */\n    function setStakingFeePercentage(uint256 value) external onlyOwner {\n        require(value <= 100, \"StakingFeePercentage is too high\");\n        stakingFeePercentage = value;\n        emit UpdateStakingFeePercentage(value);\n    }\n\n    /**\n     * @notice Used for adjusting the referral reward percentage\n     * @param value New Referral Reward Percentage\n     */\n    function setReferralRewardPercentage(uint256 value) external onlyOwner {\n        require(value <= 100, \"ReferralRewardPercentage is too high\");\n        referralRewardPercentage = value;\n        emit UpdateReferralRewardPercentage(value);\n    }\n\n    /**\n     * @notice Used for changing option collateralization ratio\n     * @param value New optionCollateralizationRatio value\n     */\n    function setOptionCollaterizationRatio(uint256 value) external onlyOwner {\n        require(50 <= value && value <= 100, \"wrong value\");\n        optionCollateralizationRatio = value;\n        emit UpdateOptionCollaterizationRatio(value);\n    }\n\n    /**\n     * @notice Used for changing nftSaleRoyaltyPercentage\n     * @param value New nftSaleRoyaltyPercentage value\n     */\n    function setNFTSaleRoyaltyPercentage(uint256 value) external onlyOwner {\n        require(value <= 10, \"wrong value\");\n        nftSaleRoyaltyPercentage = value;\n        emit UpdateNFTSaleRoyaltyPercentage(value);\n    }\n\n    /**\n     * @notice Used for updating utilizationRate value\n     * @param value New utilizationRate value\n     **/\n    function setUtilizationRate(uint256 value) external onlyOwner {\n        utilizationRate = value;\n    }\n}\n",
  "sourceMap": "287:4342:24:-:0;;;431:3;385:49;;481:3;440:44;;528:2;490:40;;578:1;536:43;;627:1;585:43;;762:4;729:37;;820:1;772:49;;854:8;827:35;;967:243;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:2;666:10:17;867:9:2;:23::i;:::-;1101:22:24;:32;;-1:-1:-1;;;;;1101:32:24;;;-1:-1:-1;;;;;;1101:32:24;;;;;;;;1143:38;;;;1191:4;:12;;;;;;;;;;;287:4342;;2041:169:2;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;14:491:27:-;137:6;145;153;206:2;194:9;185:7;181:23;177:32;174:2;;;227:6;219;212:22;174:2;264:9;258:16;283:31;308:5;283:31;:::i;:::-;378:2;363:18;;357:25;427:2;412:18;;406:25;333:5;;-1:-1:-1;357:25:27;-1:-1:-1;440:33:27;406:25;440:33;:::i;:::-;492:7;482:17;;;164:341;;;;;:::o;510:131::-;-1:-1:-1;;;;;585:31:27;;575:42;;565:2;;631:1;628;621:12;565:2;555:86;:::o;:::-;287:4342:24;;;;;;",
  "sourcePath": "contracts/Binary ATM Options/OptionConfigBinaryV2.sol",
  "type": "contract"
}