{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uri_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/ERC165.sol",
    "12": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/IERC165.sol",
    "3": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/ERC1155.sol",
    "4": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/IERC1155.sol",
    "5": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/IERC1155Receiver.sol",
    "6": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
    "8": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Address.sol",
    "9": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/ERC1155.sol",
    "exportedSymbols": {
      "Address": [
        3007
      ],
      "Context": [
        3735
      ],
      "ERC1155": [
        2710
      ],
      "ERC165": [
        3962
      ],
      "IERC1155": [
        4084
      ],
      "IERC1155MetadataURI": [
        4140
      ],
      "IERC1155Receiver": [
        4125
      ],
      "IERC165": [
        4230
      ]
    },
    "id": 2711,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1631,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:3"
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/IERC1155.sol",
        "file": "./IERC1155.sol",
        "id": 1632,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2711,
        "sourceUnit": 4085,
        "src": "58:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/IERC1155Receiver.sol",
        "file": "./IERC1155Receiver.sol",
        "id": 1633,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2711,
        "sourceUnit": 4126,
        "src": "83:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "file": "./extensions/IERC1155MetadataURI.sol",
        "id": 1634,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2711,
        "sourceUnit": 4141,
        "src": "116:46:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 1635,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2711,
        "sourceUnit": 3008,
        "src": "163:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 1636,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2711,
        "sourceUnit": 3736,
        "src": "197:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 1637,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2711,
        "sourceUnit": 3963,
        "src": "231:46:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1639,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3735,
              "src": "514:7:3"
            },
            "id": 1640,
            "nodeType": "InheritanceSpecifier",
            "src": "514:7:3"
          },
          {
            "baseName": {
              "id": 1641,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3962,
              "src": "523:6:3"
            },
            "id": 1642,
            "nodeType": "InheritanceSpecifier",
            "src": "523:6:3"
          },
          {
            "baseName": {
              "id": 1643,
              "name": "IERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4084,
              "src": "531:8:3"
            },
            "id": 1644,
            "nodeType": "InheritanceSpecifier",
            "src": "531:8:3"
          },
          {
            "baseName": {
              "id": 1645,
              "name": "IERC1155MetadataURI",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4140,
              "src": "541:19:3"
            },
            "id": 1646,
            "nodeType": "InheritanceSpecifier",
            "src": "541:19:3"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1638,
          "nodeType": "StructuredDocumentation",
          "src": "279:214:3",
          "text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
        },
        "fullyImplemented": true,
        "id": 2710,
        "linearizedBaseContracts": [
          2710,
          4140,
          4084,
          3962,
          4230,
          3735
        ],
        "name": "ERC1155",
        "nameLocation": "503:7:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1649,
            "libraryName": {
              "id": 1647,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3007,
              "src": "573:7:3"
            },
            "nodeType": "UsingForDirective",
            "src": "567:26:3",
            "typeName": {
              "id": 1648,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "585:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 1655,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "704:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 2710,
            "src": "648:65:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(address => uint256))"
            },
            "typeName": {
              "id": 1654,
              "keyType": {
                "id": 1650,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "656:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "648:47:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(address => uint256))"
              },
              "valueType": {
                "id": 1653,
                "keyType": {
                  "id": 1651,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "675:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "667:27:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 1652,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "686:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1661,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "823:18:3",
            "nodeType": "VariableDeclaration",
            "scope": 2710,
            "src": "770:71:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 1660,
              "keyType": {
                "id": 1656,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "778:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "770:44:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 1659,
                "keyType": {
                  "id": 1657,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "797:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "789:24:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 1658,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "808:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1663,
            "mutability": "mutable",
            "name": "_uri",
            "nameLocation": "977:4:3",
            "nodeType": "VariableDeclaration",
            "scope": 2710,
            "src": "962:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1662,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "962:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1673,
              "nodeType": "Block",
              "src": "1063:30:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1670,
                        "name": "uri_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1666,
                        "src": "1081:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1669,
                      "name": "_setURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2170,
                      "src": "1073:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 1671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1073:13:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1672,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:13:3"
                }
              ]
            },
            "documentation": {
              "id": 1664,
              "nodeType": "StructuredDocumentation",
              "src": "988:38:3",
              "text": " @dev See {_setURI}."
            },
            "id": 1674,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1666,
                  "mutability": "mutable",
                  "name": "uri_",
                  "nameLocation": "1057:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1674,
                  "src": "1043:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1665,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1042:20:3"
            },
            "returnParameters": {
              "id": 1668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1063:0:3"
            },
            "scope": 2710,
            "src": "1031:62:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3961,
              4229
            ],
            "body": {
              "id": 1704,
              "nodeType": "Block",
              "src": "1268:197:3",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 1690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1685,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1677,
                          "src": "1297:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1687,
                                "name": "IERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4084,
                                "src": "1317:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$4084_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$4084_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              ],
                              "id": 1686,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1312:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1312:14:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$4084",
                              "typeString": "type(contract IERC1155)"
                            }
                          },
                          "id": 1689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1312:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1297:41:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 1696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1691,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1677,
                          "src": "1354:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1693,
                                "name": "IERC1155MetadataURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4140,
                                "src": "1374:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$4140_$",
                                  "typeString": "type(contract IERC1155MetadataURI)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$4140_$",
                                  "typeString": "type(contract IERC1155MetadataURI)"
                                }
                              ],
                              "id": 1692,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1369:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1369:25:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$4140",
                              "typeString": "type(contract IERC1155MetadataURI)"
                            }
                          },
                          "id": 1695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1369:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1354:52:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1297:109:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1700,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1677,
                          "src": "1446:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 1698,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1422:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC1155_$2710_$",
                            "typeString": "type(contract super ERC1155)"
                          }
                        },
                        "id": 1699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3961,
                        "src": "1422:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 1701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1422:36:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1297:161:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1684,
                  "id": 1703,
                  "nodeType": "Return",
                  "src": "1278:180:3"
                }
              ]
            },
            "documentation": {
              "id": 1675,
              "nodeType": "StructuredDocumentation",
              "src": "1099:56:3",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 1705,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1169:17:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1681,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1679,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3962,
                  "src": "1236:6:3"
                },
                {
                  "id": 1680,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4230,
                  "src": "1244:7:3"
                }
              ],
              "src": "1227:25:3"
            },
            "parameters": {
              "id": 1678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1677,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1194:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1705,
                  "src": "1187:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1676,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1186:20:3"
            },
            "returnParameters": {
              "id": 1684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1683,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1705,
                  "src": "1262:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1682,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1262:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1261:6:3"
            },
            "scope": 2710,
            "src": "1160:305:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4139
            ],
            "body": {
              "id": 1716,
              "nodeType": "Block",
              "src": "1939:28:3",
              "statements": [
                {
                  "expression": {
                    "id": 1714,
                    "name": "_uri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1663,
                    "src": "1956:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1713,
                  "id": 1715,
                  "nodeType": "Return",
                  "src": "1949:11:3"
                }
              ]
            },
            "documentation": {
              "id": 1706,
              "nodeType": "StructuredDocumentation",
              "src": "1471:388:3",
              "text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
            },
            "functionSelector": "0e89341c",
            "id": 1717,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nameLocation": "1873:3:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1710,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1906:8:3"
            },
            "parameters": {
              "id": 1709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1708,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1717,
                  "src": "1877:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1877:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1876:9:3"
            },
            "returnParameters": {
              "id": 1713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1712,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1717,
                  "src": "1924:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1711,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1924:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1923:15:3"
            },
            "scope": 2710,
            "src": "1864:103:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4022
            ],
            "body": {
              "id": 1744,
              "nodeType": "Block",
              "src": "2204:133:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1729,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1720,
                          "src": "2222:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2241:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2233:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1730,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2233:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2233:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2222:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 1735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2245:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        },
                        "value": "ERC1155: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        }
                      ],
                      "id": 1728,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2214:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2214:77:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1737,
                  "nodeType": "ExpressionStatement",
                  "src": "2214:77:3"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1738,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1655,
                        "src": "2308:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 1740,
                      "indexExpression": {
                        "id": 1739,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1722,
                        "src": "2318:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2308:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1742,
                    "indexExpression": {
                      "id": 1741,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1720,
                      "src": "2322:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2308:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1727,
                  "id": 1743,
                  "nodeType": "Return",
                  "src": "2301:29:3"
                }
              ]
            },
            "documentation": {
              "id": 1718,
              "nodeType": "StructuredDocumentation",
              "src": "1973:131:3",
              "text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
            },
            "functionSelector": "00fdd58e",
            "id": 1745,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "2118:9:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1724,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2177:8:3"
            },
            "parameters": {
              "id": 1723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1720,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2136:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1745,
                  "src": "2128:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1719,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2128:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1722,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2153:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1745,
                  "src": "2145:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1721,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2145:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2127:29:3"
            },
            "returnParameters": {
              "id": 1727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1726,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1745,
                  "src": "2195:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1725,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2195:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2194:9:3"
            },
            "scope": 2710,
            "src": "2109:228:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4035
            ],
            "body": {
              "id": 1808,
              "nodeType": "Block",
              "src": "2667:335:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1760,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1749,
                            "src": "2685:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 1761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2685:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1762,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1752,
                            "src": "2704:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 1763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2704:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2685:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
                        "id": 1765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2716:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
                          "typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
                        },
                        "value": "ERC1155: accounts and ids length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
                          "typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
                        }
                      ],
                      "id": 1759,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2677:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2677:83:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1767,
                  "nodeType": "ExpressionStatement",
                  "src": "2677:83:3"
                },
                {
                  "assignments": [
                    1772
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1772,
                      "mutability": "mutable",
                      "name": "batchBalances",
                      "nameLocation": "2788:13:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1808,
                      "src": "2771:30:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1770,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1771,
                        "nodeType": "ArrayTypeName",
                        "src": "2771:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1779,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1776,
                          "name": "accounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1749,
                          "src": "2818:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 1777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2818:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2804:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1773,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2808:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1774,
                        "nodeType": "ArrayTypeName",
                        "src": "2808:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 1778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2804:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2771:63:3"
                },
                {
                  "body": {
                    "id": 1804,
                    "nodeType": "Block",
                    "src": "2891:74:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1791,
                              "name": "batchBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1772,
                              "src": "2905:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 1793,
                            "indexExpression": {
                              "id": 1792,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1781,
                              "src": "2919:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2905:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 1795,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1749,
                                  "src": "2934:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 1797,
                                "indexExpression": {
                                  "id": 1796,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1781,
                                  "src": "2943:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2934:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 1798,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1752,
                                  "src": "2947:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 1800,
                                "indexExpression": {
                                  "id": 1799,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1781,
                                  "src": "2951:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2947:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1794,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1745,
                              "src": "2924:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 1801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2924:30:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2905:49:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1803,
                        "nodeType": "ExpressionStatement",
                        "src": "2905:49:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1784,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1781,
                      "src": "2865:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1785,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1749,
                        "src": "2869:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2869:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2865:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1805,
                  "initializationExpression": {
                    "assignments": [
                      1781
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1781,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2858:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1805,
                        "src": "2850:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1780,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2850:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1783,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2862:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2850:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2886:3:3",
                      "subExpression": {
                        "id": 1788,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1781,
                        "src": "2888:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1790,
                    "nodeType": "ExpressionStatement",
                    "src": "2886:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "2845:120:3"
                },
                {
                  "expression": {
                    "id": 1806,
                    "name": "batchBalances",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1772,
                    "src": "2982:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 1758,
                  "id": 1807,
                  "nodeType": "Return",
                  "src": "2975:20:3"
                }
              ]
            },
            "documentation": {
              "id": 1746,
              "nodeType": "StructuredDocumentation",
              "src": "2343:146:3",
              "text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
            },
            "functionSelector": "4e1273f4",
            "id": 1809,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfBatch",
            "nameLocation": "2503:14:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1754,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2619:8:3"
            },
            "parameters": {
              "id": 1753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1749,
                  "mutability": "mutable",
                  "name": "accounts",
                  "nameLocation": "2535:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1809,
                  "src": "2518:25:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1747,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2518:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1748,
                    "nodeType": "ArrayTypeName",
                    "src": "2518:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1752,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "2562:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1809,
                  "src": "2545:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1750,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2545:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1751,
                    "nodeType": "ArrayTypeName",
                    "src": "2545:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2517:49:3"
            },
            "returnParameters": {
              "id": 1758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1757,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1809,
                  "src": "2645:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1755,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2645:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1756,
                    "nodeType": "ArrayTypeName",
                    "src": "2645:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2644:18:3"
            },
            "scope": 2710,
            "src": "2494:508:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4043
            ],
            "body": {
              "id": 1842,
              "nodeType": "Block",
              "src": "3154:222:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1819,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3725,
                            "src": "3172:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3172:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1821,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1812,
                          "src": "3188:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3172:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
                        "id": 1823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3198:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
                          "typeString": "literal_string \"ERC1155: setting approval status for self\""
                        },
                        "value": "ERC1155: setting approval status for self"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
                          "typeString": "literal_string \"ERC1155: setting approval status for self\""
                        }
                      ],
                      "id": 1818,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3164:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3164:78:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1825,
                  "nodeType": "ExpressionStatement",
                  "src": "3164:78:3"
                },
                {
                  "expression": {
                    "id": 1833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1826,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1661,
                          "src": "3253:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 1830,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1827,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3725,
                            "src": "3272:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3272:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3253:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1831,
                      "indexExpression": {
                        "id": 1829,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1812,
                        "src": "3286:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3253:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1832,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1814,
                      "src": "3298:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3253:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1834,
                  "nodeType": "ExpressionStatement",
                  "src": "3253:53:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1836,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3725,
                          "src": "3336:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3336:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1838,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1812,
                        "src": "3350:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1839,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "3360:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1835,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4005,
                      "src": "3321:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 1840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3321:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1841,
                  "nodeType": "EmitStatement",
                  "src": "3316:53:3"
                }
              ]
            },
            "documentation": {
              "id": 1810,
              "nodeType": "StructuredDocumentation",
              "src": "3008:57:3",
              "text": " @dev See {IERC1155-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 1843,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "3079:17:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1816,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3145:8:3"
            },
            "parameters": {
              "id": 1815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1812,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3105:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1843,
                  "src": "3097:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3097:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1814,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "3120:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1843,
                  "src": "3115:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1813,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3115:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3096:33:3"
            },
            "returnParameters": {
              "id": 1817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3154:0:3"
            },
            "scope": 2710,
            "src": "3070:306:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4053
            ],
            "body": {
              "id": 1860,
              "nodeType": "Block",
              "src": "3548:61:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1854,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1661,
                        "src": "3565:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 1856,
                      "indexExpression": {
                        "id": 1855,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1846,
                        "src": "3584:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3565:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1858,
                    "indexExpression": {
                      "id": 1857,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1848,
                      "src": "3593:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3565:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1853,
                  "id": 1859,
                  "nodeType": "Return",
                  "src": "3558:44:3"
                }
              ]
            },
            "documentation": {
              "id": 1844,
              "nodeType": "StructuredDocumentation",
              "src": "3382:56:3",
              "text": " @dev See {IERC1155-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 1861,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "3452:16:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1850,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3524:8:3"
            },
            "parameters": {
              "id": 1849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1846,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3477:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1861,
                  "src": "3469:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3469:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1848,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3494:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1861,
                  "src": "3486:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3486:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3468:35:3"
            },
            "returnParameters": {
              "id": 1853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1852,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1861,
                  "src": "3542:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1851,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3542:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3541:6:3"
            },
            "scope": 2710,
            "src": "3443:166:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4067
            ],
            "body": {
              "id": 1898,
              "nodeType": "Block",
              "src": "3845:220:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1877,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1864,
                            "src": "3876:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1878,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3725,
                              "src": "3884:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3884:12:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3876:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1882,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1864,
                              "src": "3917:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1883,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3725,
                                "src": "3923:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1884,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3923:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1881,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1861,
                            "src": "3900:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 1885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3900:36:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3876:60:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 1887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3950:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
                        },
                        "value": "ERC1155: caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
                        }
                      ],
                      "id": 1876,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3855:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3855:148:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1889,
                  "nodeType": "ExpressionStatement",
                  "src": "3855:148:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1891,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1864,
                        "src": "4031:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1892,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1866,
                        "src": "4037:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1893,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1868,
                        "src": "4041:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1894,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1870,
                        "src": "4045:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1895,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1872,
                        "src": "4053:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1890,
                      "name": "_safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2033,
                      "src": "4013:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 1896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4013:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1897,
                  "nodeType": "ExpressionStatement",
                  "src": "4013:45:3"
                }
              ]
            },
            "documentation": {
              "id": 1862,
              "nodeType": "StructuredDocumentation",
              "src": "3615:56:3",
              "text": " @dev See {IERC1155-safeTransferFrom}."
            },
            "functionSelector": "f242432a",
            "id": 1899,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "3685:16:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1874,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3836:8:3"
            },
            "parameters": {
              "id": 1873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1864,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3719:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "3711:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3711:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1866,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3741:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "3733:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3733:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1868,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3761:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "3753:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3753:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1870,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3781:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "3773:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3773:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1872,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3810:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "3797:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1871,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3797:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3701:119:3"
            },
            "returnParameters": {
              "id": 1875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3845:0:3"
            },
            "scope": 2710,
            "src": "3676:389:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4083
            ],
            "body": {
              "id": 1938,
              "nodeType": "Block",
              "src": "4331:236:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1917,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1902,
                            "src": "4362:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1918,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3725,
                              "src": "4370:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4370:12:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4362:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1922,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1902,
                              "src": "4403:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1923,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3725,
                                "src": "4409:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1924,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4409:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1921,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1861,
                            "src": "4386:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 1925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4386:36:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4362:60:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 1927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4436:52:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
                          "typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC1155: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
                          "typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 1916,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4341:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4341:157:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1929,
                  "nodeType": "ExpressionStatement",
                  "src": "4341:157:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1931,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1902,
                        "src": "4531:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1932,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1904,
                        "src": "4537:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1933,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1907,
                        "src": "4541:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 1934,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1910,
                        "src": "4546:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 1935,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1912,
                        "src": "4555:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1930,
                      "name": "_safeBatchTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2159,
                      "src": "4508:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 1936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4508:52:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1937,
                  "nodeType": "ExpressionStatement",
                  "src": "4508:52:3"
                }
              ]
            },
            "documentation": {
              "id": 1900,
              "nodeType": "StructuredDocumentation",
              "src": "4071:61:3",
              "text": " @dev See {IERC1155-safeBatchTransferFrom}."
            },
            "functionSelector": "2eb2c2d6",
            "id": 1939,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeBatchTransferFrom",
            "nameLocation": "4146:21:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1914,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4322:8:3"
            },
            "parameters": {
              "id": 1913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1902,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4185:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1939,
                  "src": "4177:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4177:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1904,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4207:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1939,
                  "src": "4199:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4199:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1907,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "4236:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1939,
                  "src": "4219:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1905,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4219:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1906,
                    "nodeType": "ArrayTypeName",
                    "src": "4219:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1910,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "4266:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1939,
                  "src": "4249:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1908,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4249:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1909,
                    "nodeType": "ArrayTypeName",
                    "src": "4249:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1912,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4296:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1939,
                  "src": "4283:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1911,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4283:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4167:139:3"
            },
            "returnParameters": {
              "id": 1915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4331:0:3"
            },
            "scope": 2710,
            "src": "4137:430:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2032,
              "nodeType": "Block",
              "src": "5180:634:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1954,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1944,
                          "src": "5198:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5212:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5204:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1955,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5204:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5204:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5198:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 1960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5216:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        },
                        "value": "ERC1155: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        }
                      ],
                      "id": 1953,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5190:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5190:66:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1962,
                  "nodeType": "ExpressionStatement",
                  "src": "5190:66:3"
                },
                {
                  "assignments": [
                    1964
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1964,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "5275:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2032,
                      "src": "5267:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1963,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5267:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1967,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1965,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3725,
                      "src": "5286:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5286:12:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5267:31:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1969,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1964,
                        "src": "5330:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1970,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1942,
                        "src": "5340:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1971,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1944,
                        "src": "5346:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1973,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1946,
                            "src": "5368:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1972,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2709,
                          "src": "5350:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 1974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5350:21:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1976,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1948,
                            "src": "5391:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1975,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2709,
                          "src": "5373:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 1977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5373:25:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 1978,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1950,
                        "src": "5400:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1968,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2553,
                      "src": "5309:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 1979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5309:96:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1980,
                  "nodeType": "ExpressionStatement",
                  "src": "5309:96:3"
                },
                {
                  "assignments": [
                    1982
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1982,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "5424:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2032,
                      "src": "5416:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1981,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5416:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1988,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1983,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1655,
                        "src": "5438:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 1985,
                      "indexExpression": {
                        "id": 1984,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1946,
                        "src": "5448:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5438:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1987,
                    "indexExpression": {
                      "id": 1986,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1942,
                      "src": "5452:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5438:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5416:41:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1990,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1982,
                          "src": "5475:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1991,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1948,
                          "src": "5490:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5475:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
                        "id": 1993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5498:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                          "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                        },
                        "value": "ERC1155: insufficient balance for transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                          "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                        }
                      ],
                      "id": 1989,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5467:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5467:76:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1995,
                  "nodeType": "ExpressionStatement",
                  "src": "5467:76:3"
                },
                {
                  "id": 2006,
                  "nodeType": "UncheckedBlock",
                  "src": "5553:77:3",
                  "statements": [
                    {
                      "expression": {
                        "id": 2004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1996,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1655,
                              "src": "5577:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 1999,
                            "indexExpression": {
                              "id": 1997,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1946,
                              "src": "5587:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5577:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2000,
                          "indexExpression": {
                            "id": 1998,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1942,
                            "src": "5591:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "5577:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2001,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1982,
                            "src": "5599:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2002,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1948,
                            "src": "5613:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5599:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5577:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2005,
                      "nodeType": "ExpressionStatement",
                      "src": "5577:42:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 2013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2007,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1655,
                          "src": "5639:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 2010,
                        "indexExpression": {
                          "id": 2008,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1946,
                          "src": "5649:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5639:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2011,
                      "indexExpression": {
                        "id": 2009,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1944,
                        "src": "5653:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5639:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2012,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1948,
                      "src": "5660:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5639:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2014,
                  "nodeType": "ExpressionStatement",
                  "src": "5639:27:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2016,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1964,
                        "src": "5697:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2017,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1942,
                        "src": "5707:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2018,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1944,
                        "src": "5713:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2019,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1946,
                        "src": "5717:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2020,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1948,
                        "src": "5721:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2015,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3981,
                      "src": "5682:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 2021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5682:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2022,
                  "nodeType": "EmitStatement",
                  "src": "5677:51:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2024,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1964,
                        "src": "5770:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2025,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1942,
                        "src": "5780:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2026,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1944,
                        "src": "5786:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2027,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1946,
                        "src": "5790:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2028,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1948,
                        "src": "5794:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2029,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1950,
                        "src": "5802:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2023,
                      "name": "_doSafeTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2616,
                      "src": "5739:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 2030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5739:68:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2031,
                  "nodeType": "ExpressionStatement",
                  "src": "5739:68:3"
                }
              ]
            },
            "documentation": {
              "id": 1940,
              "nodeType": "StructuredDocumentation",
              "src": "4573:439:3",
              "text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
            },
            "id": 2033,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransferFrom",
            "nameLocation": "5026:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1942,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5061:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2033,
                  "src": "5053:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1941,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5053:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1944,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5083:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2033,
                  "src": "5075:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1943,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5075:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1946,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5103:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2033,
                  "src": "5095:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1945,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5095:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1948,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5123:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2033,
                  "src": "5115:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1947,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5115:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1950,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5152:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2033,
                  "src": "5139:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1949,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5139:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5043:119:3"
            },
            "returnParameters": {
              "id": 1952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5180:0:3"
            },
            "scope": 2710,
            "src": "5017:797:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2158,
              "nodeType": "Block",
              "src": "6348:857:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2050,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2041,
                            "src": "6366:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6366:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2052,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2044,
                            "src": "6380:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6380:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6366:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 2055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6396:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 2049,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6358:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6358:81:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2057,
                  "nodeType": "ExpressionStatement",
                  "src": "6358:81:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2059,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2038,
                          "src": "6457:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6471:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6463:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2060,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6463:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6463:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6457:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 2065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6475:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        },
                        "value": "ERC1155: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        }
                      ],
                      "id": 2058,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6449:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6449:66:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2067,
                  "nodeType": "ExpressionStatement",
                  "src": "6449:66:3"
                },
                {
                  "assignments": [
                    2069
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2069,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "6534:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2158,
                      "src": "6526:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2068,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6526:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2072,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2070,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3725,
                      "src": "6545:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6545:12:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6526:31:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2074,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2069,
                        "src": "6589:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2075,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2036,
                        "src": "6599:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2076,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2038,
                        "src": "6605:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2077,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2041,
                        "src": "6609:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2078,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2044,
                        "src": "6614:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2079,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2046,
                        "src": "6623:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2073,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2553,
                      "src": "6568:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 2080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6568:60:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2081,
                  "nodeType": "ExpressionStatement",
                  "src": "6568:60:3"
                },
                {
                  "body": {
                    "id": 2139,
                    "nodeType": "Block",
                    "src": "6680:370:3",
                    "statements": [
                      {
                        "assignments": [
                          2094
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2094,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "6702:2:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 2139,
                            "src": "6694:10:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2093,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6694:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2098,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2095,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2041,
                            "src": "6707:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2097,
                          "indexExpression": {
                            "id": 2096,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2083,
                            "src": "6711:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6707:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6694:19:3"
                      },
                      {
                        "assignments": [
                          2100
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2100,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "6735:6:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 2139,
                            "src": "6727:14:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2099,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6727:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2104,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2101,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2044,
                            "src": "6744:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2103,
                          "indexExpression": {
                            "id": 2102,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2083,
                            "src": "6752:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6744:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6727:27:3"
                      },
                      {
                        "assignments": [
                          2106
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2106,
                            "mutability": "mutable",
                            "name": "fromBalance",
                            "nameLocation": "6777:11:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 2139,
                            "src": "6769:19:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2105,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6769:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2112,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2107,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1655,
                              "src": "6791:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 2109,
                            "indexExpression": {
                              "id": 2108,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2094,
                              "src": "6801:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6791:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2111,
                          "indexExpression": {
                            "id": 2110,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2036,
                            "src": "6805:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6791:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6769:41:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2114,
                                "name": "fromBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2106,
                                "src": "6832:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2115,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2100,
                                "src": "6847:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6832:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
                              "id": 2117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6855:44:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                                "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                              },
                              "value": "ERC1155: insufficient balance for transfer"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                                "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                              }
                            ],
                            "id": 2113,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6824:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6824:76:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2119,
                        "nodeType": "ExpressionStatement",
                        "src": "6824:76:3"
                      },
                      {
                        "id": 2130,
                        "nodeType": "UncheckedBlock",
                        "src": "6914:85:3",
                        "statements": [
                          {
                            "expression": {
                              "id": 2128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 2120,
                                    "name": "_balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1655,
                                    "src": "6942:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 2123,
                                  "indexExpression": {
                                    "id": 2121,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2094,
                                    "src": "6952:2:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6942:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 2124,
                                "indexExpression": {
                                  "id": 2122,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2036,
                                  "src": "6956:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "6942:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2125,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2106,
                                  "src": "6964:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 2126,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2100,
                                  "src": "6978:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6964:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6942:42:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2129,
                            "nodeType": "ExpressionStatement",
                            "src": "6942:42:3"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 2137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2131,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1655,
                                "src": "7012:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                }
                              },
                              "id": 2134,
                              "indexExpression": {
                                "id": 2132,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2094,
                                "src": "7022:2:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7012:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2135,
                            "indexExpression": {
                              "id": 2133,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2038,
                              "src": "7026:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7012:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 2136,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2100,
                            "src": "7033:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7012:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2138,
                        "nodeType": "ExpressionStatement",
                        "src": "7012:27:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2086,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2083,
                      "src": "6659:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2087,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2041,
                        "src": "6663:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 2088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6663:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6659:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2140,
                  "initializationExpression": {
                    "assignments": [
                      2083
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2083,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6652:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 2140,
                        "src": "6644:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2082,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6644:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2085,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6656:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6644:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "6675:3:3",
                      "subExpression": {
                        "id": 2090,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2083,
                        "src": "6677:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2092,
                    "nodeType": "ExpressionStatement",
                    "src": "6675:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "6639:411:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2142,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2069,
                        "src": "7079:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2143,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2036,
                        "src": "7089:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2144,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2038,
                        "src": "7095:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2145,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2041,
                        "src": "7099:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2146,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2044,
                        "src": "7104:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 2141,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3996,
                      "src": "7065:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 2147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7065:47:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2148,
                  "nodeType": "EmitStatement",
                  "src": "7060:52:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2150,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2069,
                        "src": "7159:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2151,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2036,
                        "src": "7169:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2152,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2038,
                        "src": "7175:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2153,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2041,
                        "src": "7179:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2154,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2044,
                        "src": "7184:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2155,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2046,
                        "src": "7193:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2149,
                      "name": "_doSafeBatchTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2681,
                      "src": "7123:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 2156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7123:75:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2157,
                  "nodeType": "ExpressionStatement",
                  "src": "7123:75:3"
                }
              ]
            },
            "documentation": {
              "id": 2034,
              "nodeType": "StructuredDocumentation",
              "src": "5820:335:3",
              "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
            },
            "id": 2159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeBatchTransferFrom",
            "nameLocation": "6169:22:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2036,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6209:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2159,
                  "src": "6201:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6201:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2038,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6231:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2159,
                  "src": "6223:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6223:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2041,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "6260:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2159,
                  "src": "6243:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2039,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6243:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2040,
                    "nodeType": "ArrayTypeName",
                    "src": "6243:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2044,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "6290:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2159,
                  "src": "6273:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2042,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6273:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2043,
                    "nodeType": "ArrayTypeName",
                    "src": "6273:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2046,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "6320:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2159,
                  "src": "6307:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2045,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6307:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6191:139:3"
            },
            "returnParameters": {
              "id": 2048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6348:0:3"
            },
            "scope": 2710,
            "src": "6160:1045:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2169,
              "nodeType": "Block",
              "src": "8084:30:3",
              "statements": [
                {
                  "expression": {
                    "id": 2167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2165,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1663,
                      "src": "8094:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2166,
                      "name": "newuri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2162,
                      "src": "8101:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8094:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2168,
                  "nodeType": "ExpressionStatement",
                  "src": "8094:13:3"
                }
              ]
            },
            "documentation": {
              "id": 2160,
              "nodeType": "StructuredDocumentation",
              "src": "7211:812:3",
              "text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
            },
            "id": 2170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setURI",
            "nameLocation": "8037:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2162,
                  "mutability": "mutable",
                  "name": "newuri",
                  "nameLocation": "8059:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2170,
                  "src": "8045:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2161,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8045:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8044:22:3"
            },
            "returnParameters": {
              "id": 2164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8084:0:3"
            },
            "scope": 2710,
            "src": "8028:86:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2244,
              "nodeType": "Block",
              "src": "8636:449:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2183,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2173,
                          "src": "8654:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8673:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8665:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2184,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8665:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8665:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8654:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 2189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8677:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        },
                        "value": "ERC1155: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        }
                      ],
                      "id": 2182,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8646:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8646:67:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2191,
                  "nodeType": "ExpressionStatement",
                  "src": "8646:67:3"
                },
                {
                  "assignments": [
                    2193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2193,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "8732:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2244,
                      "src": "8724:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2192,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8724:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2196,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2194,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3725,
                      "src": "8743:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8743:12:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8724:31:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2198,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2193,
                        "src": "8787:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8805:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8797:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2199,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8797:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8797:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2203,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2173,
                        "src": "8809:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2205,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2175,
                            "src": "8836:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2204,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2709,
                          "src": "8818:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 2206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8818:21:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2208,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2177,
                            "src": "8859:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2207,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2709,
                          "src": "8841:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 2209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8841:25:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2210,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2179,
                        "src": "8868:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2197,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2553,
                      "src": "8766:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 2211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8766:107:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2212,
                  "nodeType": "ExpressionStatement",
                  "src": "8766:107:3"
                },
                {
                  "expression": {
                    "id": 2219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2213,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1655,
                          "src": "8884:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 2216,
                        "indexExpression": {
                          "id": 2214,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2175,
                          "src": "8894:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8884:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2217,
                      "indexExpression": {
                        "id": 2215,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2173,
                        "src": "8898:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8884:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2218,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2177,
                      "src": "8910:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8884:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2220,
                  "nodeType": "ExpressionStatement",
                  "src": "8884:32:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2222,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2193,
                        "src": "8946:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8964:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8956:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2223,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8956:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8956:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2227,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2173,
                        "src": "8968:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2228,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2175,
                        "src": "8977:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2229,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2177,
                        "src": "8981:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2221,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3981,
                      "src": "8931:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 2230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8931:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2231,
                  "nodeType": "EmitStatement",
                  "src": "8926:62:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2233,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2193,
                        "src": "9030:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9048:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9040:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2234,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9040:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9040:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2238,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2173,
                        "src": "9052:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2239,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2175,
                        "src": "9061:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2240,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2177,
                        "src": "9065:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2241,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2179,
                        "src": "9073:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2232,
                      "name": "_doSafeTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2616,
                      "src": "8999:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 2242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8999:79:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2243,
                  "nodeType": "ExpressionStatement",
                  "src": "8999:79:3"
                }
              ]
            },
            "documentation": {
              "id": 2171,
              "nodeType": "StructuredDocumentation",
              "src": "8120:377:3",
              "text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n Emits a {TransferSingle} event.\n Requirements:\n - `account` cannot be the zero address.\n - If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
            },
            "id": 2245,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8511:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2173,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8534:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2245,
                  "src": "8526:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8526:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2175,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "8559:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2245,
                  "src": "8551:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8551:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2177,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8579:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2245,
                  "src": "8571:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8571:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2179,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "8608:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2245,
                  "src": "8595:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2178,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8595:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8516:102:3"
            },
            "returnParameters": {
              "id": 2181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8636:0:3"
            },
            "scope": 2710,
            "src": "8502:583:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2343,
              "nodeType": "Block",
              "src": "9584:561:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2260,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2248,
                          "src": "9602:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9616:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9608:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2261,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9608:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9608:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9602:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 2266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9620:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        },
                        "value": "ERC1155: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        }
                      ],
                      "id": 2259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9594:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9594:62:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2268,
                  "nodeType": "ExpressionStatement",
                  "src": "9594:62:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2270,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2251,
                            "src": "9674:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9674:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2272,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2254,
                            "src": "9688:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9688:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9674:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 2275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9704:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 2269,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9666:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9666:81:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2277,
                  "nodeType": "ExpressionStatement",
                  "src": "9666:81:3"
                },
                {
                  "assignments": [
                    2279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2279,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "9766:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2343,
                      "src": "9758:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2278,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9758:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2282,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2280,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3725,
                      "src": "9777:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9777:12:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9758:31:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2284,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2279,
                        "src": "9821:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9839:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9831:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2285,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9831:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9831:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2289,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2248,
                        "src": "9843:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2290,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2251,
                        "src": "9847:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2291,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2254,
                        "src": "9852:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2292,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2256,
                        "src": "9861:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2283,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2553,
                      "src": "9800:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 2293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9800:66:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2294,
                  "nodeType": "ExpressionStatement",
                  "src": "9800:66:3"
                },
                {
                  "body": {
                    "id": 2318,
                    "nodeType": "Block",
                    "src": "9918:60:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 2316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2306,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1655,
                                "src": "9932:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                }
                              },
                              "id": 2311,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2307,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2251,
                                  "src": "9942:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 2309,
                                "indexExpression": {
                                  "id": 2308,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2296,
                                  "src": "9946:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9942:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9932:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2312,
                            "indexExpression": {
                              "id": 2310,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2248,
                              "src": "9950:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9932:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 2313,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2254,
                              "src": "9957:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2315,
                            "indexExpression": {
                              "id": 2314,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2296,
                              "src": "9965:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9957:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9932:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2317,
                        "nodeType": "ExpressionStatement",
                        "src": "9932:35:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2299,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2296,
                      "src": "9897:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2300,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2251,
                        "src": "9901:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 2301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9901:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9897:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2319,
                  "initializationExpression": {
                    "assignments": [
                      2296
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2296,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9890:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 2319,
                        "src": "9882:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2295,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9882:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2298,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9894:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9882:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9913:3:3",
                      "subExpression": {
                        "id": 2303,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2296,
                        "src": "9913:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2305,
                    "nodeType": "ExpressionStatement",
                    "src": "9913:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "9877:101:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2321,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2279,
                        "src": "10007:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10025:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10017:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2322,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10017:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10017:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2326,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2248,
                        "src": "10029:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2327,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2251,
                        "src": "10033:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2328,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2254,
                        "src": "10038:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 2320,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3996,
                      "src": "9993:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 2329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9993:53:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2330,
                  "nodeType": "EmitStatement",
                  "src": "9988:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2332,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2279,
                        "src": "10093:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10111:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10103:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2333,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10103:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10103:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2337,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2248,
                        "src": "10115:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2338,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2251,
                        "src": "10119:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2339,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2254,
                        "src": "10124:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2340,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2256,
                        "src": "10133:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2331,
                      "name": "_doSafeBatchTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2681,
                      "src": "10057:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 2341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10057:81:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2342,
                  "nodeType": "ExpressionStatement",
                  "src": "10057:81:3"
                }
              ]
            },
            "documentation": {
              "id": 2246,
              "nodeType": "StructuredDocumentation",
              "src": "9091:334:3",
              "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
            },
            "id": 2344,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintBatch",
            "nameLocation": "9439:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2248,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9467:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2344,
                  "src": "9459:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9459:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2251,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "9496:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2344,
                  "src": "9479:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2249,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9479:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2250,
                    "nodeType": "ArrayTypeName",
                    "src": "9479:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2254,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "9526:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2344,
                  "src": "9509:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2252,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9509:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2253,
                    "nodeType": "ArrayTypeName",
                    "src": "9509:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2256,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "9556:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2344,
                  "src": "9543:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2255,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9543:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9449:117:3"
            },
            "returnParameters": {
              "id": 2258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9584:0:3"
            },
            "scope": 2710,
            "src": "9430:715:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2422,
              "nodeType": "Block",
              "src": "10501:550:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2355,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2347,
                          "src": "10519:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10538:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10530:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2356,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10530:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10530:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10519:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 2361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10542:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        },
                        "value": "ERC1155: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        }
                      ],
                      "id": 2354,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10511:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10511:69:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2363,
                  "nodeType": "ExpressionStatement",
                  "src": "10511:69:3"
                },
                {
                  "assignments": [
                    2365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2365,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "10599:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2422,
                      "src": "10591:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2364,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10591:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2368,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2366,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3725,
                      "src": "10610:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10610:12:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10591:31:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2370,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2365,
                        "src": "10654:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2371,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2347,
                        "src": "10664:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10681:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10673:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2372,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10673:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10673:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2377,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2349,
                            "src": "10703:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2376,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2709,
                          "src": "10685:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 2378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10685:21:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2380,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2351,
                            "src": "10726:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2379,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2709,
                          "src": "10708:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 2381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10708:25:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10735:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 2369,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2553,
                      "src": "10633:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 2383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10633:105:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2384,
                  "nodeType": "ExpressionStatement",
                  "src": "10633:105:3"
                },
                {
                  "assignments": [
                    2386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2386,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "10757:14:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2422,
                      "src": "10749:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2385,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10749:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2392,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2387,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1655,
                        "src": "10774:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 2389,
                      "indexExpression": {
                        "id": 2388,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2349,
                        "src": "10784:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10774:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2391,
                    "indexExpression": {
                      "id": 2390,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2347,
                      "src": "10788:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10774:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10749:47:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2394,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2386,
                          "src": "10814:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2395,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2351,
                          "src": "10832:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10814:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 2397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10840:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                          "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                        },
                        "value": "ERC1155: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                          "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                        }
                      ],
                      "id": 2393,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10806:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10806:73:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2399,
                  "nodeType": "ExpressionStatement",
                  "src": "10806:73:3"
                },
                {
                  "id": 2410,
                  "nodeType": "UncheckedBlock",
                  "src": "10889:83:3",
                  "statements": [
                    {
                      "expression": {
                        "id": 2408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2400,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1655,
                              "src": "10913:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 2403,
                            "indexExpression": {
                              "id": 2401,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2349,
                              "src": "10923:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10913:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2404,
                          "indexExpression": {
                            "id": 2402,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2347,
                            "src": "10927:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "10913:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2405,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2386,
                            "src": "10938:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2406,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2351,
                            "src": "10955:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10938:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10913:48:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2409,
                      "nodeType": "ExpressionStatement",
                      "src": "10913:48:3"
                    }
                  ]
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2412,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2365,
                        "src": "11002:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2413,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2347,
                        "src": "11012:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11029:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11021:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2414,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11021:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11021:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2418,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2349,
                        "src": "11033:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2419,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2351,
                        "src": "11037:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2411,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3981,
                      "src": "10987:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 2420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10987:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2421,
                  "nodeType": "EmitStatement",
                  "src": "10982:62:3"
                }
              ]
            },
            "documentation": {
              "id": 2345,
              "nodeType": "StructuredDocumentation",
              "src": "10151:238:3",
              "text": " @dev Destroys `amount` tokens of token type `id` from `account`\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens of token type `id`."
            },
            "id": 2423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "10403:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2347,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10426:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2423,
                  "src": "10418:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10418:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2349,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "10451:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2423,
                  "src": "10443:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10443:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2351,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10471:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2423,
                  "src": "10463:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2350,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10463:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10408:75:3"
            },
            "returnParameters": {
              "id": 2353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10501:0:3"
            },
            "scope": 2710,
            "src": "10394:657:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2533,
              "nodeType": "Block",
              "src": "11377:762:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2436,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2426,
                          "src": "11395:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11414:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11406:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2437,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11406:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11406:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11395:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 2442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11418:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        },
                        "value": "ERC1155: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        }
                      ],
                      "id": 2435,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11387:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11387:69:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2444,
                  "nodeType": "ExpressionStatement",
                  "src": "11387:69:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2446,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2429,
                            "src": "11474:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "11474:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2448,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2432,
                            "src": "11488:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "11488:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11474:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 2451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11504:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 2445,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11466:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11466:81:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2453,
                  "nodeType": "ExpressionStatement",
                  "src": "11466:81:3"
                },
                {
                  "assignments": [
                    2455
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2455,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "11566:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2533,
                      "src": "11558:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2454,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11558:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2458,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2456,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3725,
                      "src": "11577:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11577:12:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11558:31:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2460,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2455,
                        "src": "11621:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2461,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2426,
                        "src": "11631:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11648:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11640:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2462,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11640:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11640:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2466,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2429,
                        "src": "11652:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2467,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2432,
                        "src": "11657:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11666:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 2459,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2553,
                      "src": "11600:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 2469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11600:69:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2470,
                  "nodeType": "ExpressionStatement",
                  "src": "11600:69:3"
                },
                {
                  "body": {
                    "id": 2520,
                    "nodeType": "Block",
                    "src": "11721:338:3",
                    "statements": [
                      {
                        "assignments": [
                          2483
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2483,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "11743:2:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 2520,
                            "src": "11735:10:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2482,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11735:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2487,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2484,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2429,
                            "src": "11748:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2486,
                          "indexExpression": {
                            "id": 2485,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2472,
                            "src": "11752:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11748:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11735:19:3"
                      },
                      {
                        "assignments": [
                          2489
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2489,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "11776:6:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 2520,
                            "src": "11768:14:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2488,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11768:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2493,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2490,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2432,
                            "src": "11785:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2492,
                          "indexExpression": {
                            "id": 2491,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2472,
                            "src": "11793:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11785:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11768:27:3"
                      },
                      {
                        "assignments": [
                          2495
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2495,
                            "mutability": "mutable",
                            "name": "accountBalance",
                            "nameLocation": "11818:14:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 2520,
                            "src": "11810:22:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2494,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11810:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2501,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2496,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1655,
                              "src": "11835:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 2498,
                            "indexExpression": {
                              "id": 2497,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2483,
                              "src": "11845:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11835:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2500,
                          "indexExpression": {
                            "id": 2499,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2426,
                            "src": "11849:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11835:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11810:47:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2503,
                                "name": "accountBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2495,
                                "src": "11879:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2504,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2489,
                                "src": "11897:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11879:24:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
                              "id": 2506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11905:38:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                                "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                              },
                              "value": "ERC1155: burn amount exceeds balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                                "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                              }
                            ],
                            "id": 2502,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11871:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11871:73:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2508,
                        "nodeType": "ExpressionStatement",
                        "src": "11871:73:3"
                      },
                      {
                        "id": 2519,
                        "nodeType": "UncheckedBlock",
                        "src": "11958:91:3",
                        "statements": [
                          {
                            "expression": {
                              "id": 2517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 2509,
                                    "name": "_balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1655,
                                    "src": "11986:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 2512,
                                  "indexExpression": {
                                    "id": 2510,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2483,
                                    "src": "11996:2:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11986:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 2513,
                                "indexExpression": {
                                  "id": 2511,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2426,
                                  "src": "12000:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "11986:22:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2516,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2514,
                                  "name": "accountBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2495,
                                  "src": "12011:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 2515,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2489,
                                  "src": "12028:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12011:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11986:48:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2518,
                            "nodeType": "ExpressionStatement",
                            "src": "11986:48:3"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2475,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2472,
                      "src": "11700:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2476,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2429,
                        "src": "11704:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 2477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11704:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11700:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2521,
                  "initializationExpression": {
                    "assignments": [
                      2472
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2472,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11693:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 2521,
                        "src": "11685:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2471,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11685:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2474,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11697:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11685:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11716:3:3",
                      "subExpression": {
                        "id": 2479,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2472,
                        "src": "11716:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2481,
                    "nodeType": "ExpressionStatement",
                    "src": "11716:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "11680:379:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2523,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2455,
                        "src": "12088:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2524,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2426,
                        "src": "12098:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12115:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12107:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2525,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12107:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12107:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2529,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2429,
                        "src": "12119:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2530,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2432,
                        "src": "12124:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 2522,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3996,
                      "src": "12074:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 2531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12074:58:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2532,
                  "nodeType": "EmitStatement",
                  "src": "12069:63:3"
                }
              ]
            },
            "documentation": {
              "id": 2424,
              "nodeType": "StructuredDocumentation",
              "src": "11057:183:3",
              "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
            },
            "id": 2534,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnBatch",
            "nameLocation": "11254:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2426,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "11282:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2534,
                  "src": "11274:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11274:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2429,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "11316:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2534,
                  "src": "11299:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2427,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11299:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2428,
                    "nodeType": "ArrayTypeName",
                    "src": "11299:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2432,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "11346:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2534,
                  "src": "11329:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2430,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11329:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2431,
                    "nodeType": "ArrayTypeName",
                    "src": "11329:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11264:95:3"
            },
            "returnParameters": {
              "id": 2434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11377:0:3"
            },
            "scope": 2710,
            "src": "11245:894:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2552,
              "nodeType": "Block",
              "src": "13285:2:3",
              "statements": []
            },
            "documentation": {
              "id": 2535,
              "nodeType": "StructuredDocumentation",
              "src": "12145:923:3",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 2553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "13082:20:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2537,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "13120:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2553,
                  "src": "13112:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13112:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2539,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13146:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2553,
                  "src": "13138:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13138:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2541,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13168:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2553,
                  "src": "13160:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13160:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2544,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "13197:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2553,
                  "src": "13180:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2542,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13180:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2543,
                    "nodeType": "ArrayTypeName",
                    "src": "13180:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2547,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "13227:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2553,
                  "src": "13210:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2545,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13210:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2546,
                    "nodeType": "ArrayTypeName",
                    "src": "13210:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2549,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13257:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2553,
                  "src": "13244:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2548,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13244:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13102:165:3"
            },
            "returnParameters": {
              "id": 2551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13285:0:3"
            },
            "scope": 2710,
            "src": "13073:214:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2615,
              "nodeType": "Block",
              "src": "13486:532:3",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2568,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2559,
                        "src": "13500:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2730,
                      "src": "13500:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 2570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13500:15:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2614,
                  "nodeType": "IfStatement",
                  "src": "13496:516:3",
                  "trueBody": {
                    "id": 2613,
                    "nodeType": "Block",
                    "src": "13517:495:3",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 2595,
                              "nodeType": "Block",
                              "src": "13634:184:3",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 2588,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2584,
                                      "name": "response",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2582,
                                      "src": "13656:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 2585,
                                          "name": "IERC1155Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4125,
                                          "src": "13668:16:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$4125_$",
                                            "typeString": "type(contract IERC1155Receiver)"
                                          }
                                        },
                                        "id": 2586,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC1155Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4106,
                                        "src": "13668:34:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 2587,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "13668:43:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "13656:55:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 2594,
                                  "nodeType": "IfStatement",
                                  "src": "13652:152:3",
                                  "trueBody": {
                                    "id": 2593,
                                    "nodeType": "Block",
                                    "src": "13713:91:3",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
                                              "id": 2590,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "13742:42:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              },
                                              "value": "ERC1155: ERC1155Receiver rejected tokens"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              }
                                            ],
                                            "id": 2589,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "13735:6:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 2591,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13735:50:3",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 2592,
                                        "nodeType": "ExpressionStatement",
                                        "src": "13735:50:3"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 2596,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 2583,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 2582,
                                  "mutability": "mutable",
                                  "name": "response",
                                  "nameLocation": "13624:8:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2596,
                                  "src": "13617:15:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 2581,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13617:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "13616:17:3"
                            },
                            "src": "13608:210:3"
                          },
                          {
                            "block": {
                              "id": 2604,
                              "nodeType": "Block",
                              "src": "13853:47:3",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2601,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2598,
                                        "src": "13878:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 2600,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "13871:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 2602,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13871:14:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 2603,
                                  "nodeType": "ExpressionStatement",
                                  "src": "13871:14:3"
                                }
                              ]
                            },
                            "errorName": "Error",
                            "id": 2605,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 2599,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 2598,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "13845:6:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2605,
                                  "src": "13831:20:3",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 2597,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13831:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "13830:22:3"
                            },
                            "src": "13819:81:3"
                          },
                          {
                            "block": {
                              "id": 2610,
                              "nodeType": "Block",
                              "src": "13907:95:3",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
                                        "id": 2607,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13932:54:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        },
                                        "value": "ERC1155: transfer to non ERC1155Receiver implementer"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        }
                                      ],
                                      "id": 2606,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "13925:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 2608,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13925:62:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 2609,
                                  "nodeType": "ExpressionStatement",
                                  "src": "13925:62:3"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 2611,
                            "nodeType": "TryCatchClause",
                            "src": "13901:101:3"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 2575,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2555,
                              "src": "13574:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2576,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2557,
                              "src": "13584:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2577,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2561,
                              "src": "13590:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2578,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2563,
                              "src": "13594:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2579,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2565,
                              "src": "13602:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2572,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2559,
                                  "src": "13552:2:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2571,
                                "name": "IERC1155Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4125,
                                "src": "13535:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$4125_$",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              },
                              "id": 2573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13535:20:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155Receiver_$4125",
                                "typeString": "contract IERC1155Receiver"
                              }
                            },
                            "id": 2574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC1155Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4106,
                            "src": "13535:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 2580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13535:72:3",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 2612,
                        "nodeType": "TryStatement",
                        "src": "13531:471:3"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 2616,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_doSafeTransferAcceptanceCheck",
            "nameLocation": "13302:30:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2555,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "13350:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2616,
                  "src": "13342:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13342:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2557,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13376:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2616,
                  "src": "13368:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13368:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2559,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13398:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2616,
                  "src": "13390:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13390:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2561,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "13418:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2616,
                  "src": "13410:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2560,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13410:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2563,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13438:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2616,
                  "src": "13430:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13430:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2565,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13467:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2616,
                  "src": "13454:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2564,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13454:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13332:145:3"
            },
            "returnParameters": {
              "id": 2567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13486:0:3"
            },
            "scope": 2710,
            "src": "13293:725:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2680,
              "nodeType": "Block",
              "src": "14242:574:3",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2633,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2622,
                        "src": "14256:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2730,
                      "src": "14256:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 2635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14256:15:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2679,
                  "nodeType": "IfStatement",
                  "src": "14252:558:3",
                  "trueBody": {
                    "id": 2678,
                    "nodeType": "Block",
                    "src": "14273:537:3",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 2660,
                              "nodeType": "Block",
                              "src": "14427:189:3",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 2653,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2649,
                                      "name": "response",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2647,
                                      "src": "14449:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 2650,
                                          "name": "IERC1155Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4125,
                                          "src": "14461:16:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$4125_$",
                                            "typeString": "type(contract IERC1155Receiver)"
                                          }
                                        },
                                        "id": 2651,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC1155BatchReceived",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4124,
                                        "src": "14461:39:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 2652,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "14461:48:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "14449:60:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 2659,
                                  "nodeType": "IfStatement",
                                  "src": "14445:157:3",
                                  "trueBody": {
                                    "id": 2658,
                                    "nodeType": "Block",
                                    "src": "14511:91:3",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
                                              "id": 2655,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "14540:42:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              },
                                              "value": "ERC1155: ERC1155Receiver rejected tokens"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              }
                                            ],
                                            "id": 2654,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "14533:6:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 2656,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "14533:50:3",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 2657,
                                        "nodeType": "ExpressionStatement",
                                        "src": "14533:50:3"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 2661,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 2648,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 2647,
                                  "mutability": "mutable",
                                  "name": "response",
                                  "nameLocation": "14404:8:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2661,
                                  "src": "14397:15:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 2646,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14397:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "14379:47:3"
                            },
                            "src": "14371:245:3"
                          },
                          {
                            "block": {
                              "id": 2669,
                              "nodeType": "Block",
                              "src": "14651:47:3",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2666,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2663,
                                        "src": "14676:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 2665,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "14669:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 2667,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14669:14:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 2668,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14669:14:3"
                                }
                              ]
                            },
                            "errorName": "Error",
                            "id": 2670,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 2664,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 2663,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "14643:6:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2670,
                                  "src": "14629:20:3",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 2662,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14629:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "14628:22:3"
                            },
                            "src": "14617:81:3"
                          },
                          {
                            "block": {
                              "id": 2675,
                              "nodeType": "Block",
                              "src": "14705:95:3",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
                                        "id": 2672,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14730:54:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        },
                                        "value": "ERC1155: transfer to non ERC1155Receiver implementer"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        }
                                      ],
                                      "id": 2671,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "14723:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 2673,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14723:62:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 2674,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14723:62:3"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 2676,
                            "nodeType": "TryCatchClause",
                            "src": "14699:101:3"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 2640,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2618,
                              "src": "14335:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2641,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2620,
                              "src": "14345:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2642,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2625,
                              "src": "14351:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 2643,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2628,
                              "src": "14356:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 2644,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2630,
                              "src": "14365:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2637,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2622,
                                  "src": "14308:2:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2636,
                                "name": "IERC1155Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4125,
                                "src": "14291:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$4125_$",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              },
                              "id": 2638,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14291:20:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155Receiver_$4125",
                                "typeString": "contract IERC1155Receiver"
                              }
                            },
                            "id": 2639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC1155BatchReceived",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4124,
                            "src": "14291:43:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 2645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14291:79:3",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 2677,
                        "nodeType": "TryStatement",
                        "src": "14287:513:3"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 2681,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_doSafeBatchTransferAcceptanceCheck",
            "nameLocation": "14033:35:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2618,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "14086:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2681,
                  "src": "14078:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2617,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14078:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2620,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14112:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2681,
                  "src": "14104:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14104:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2622,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14134:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2681,
                  "src": "14126:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14126:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2625,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "14163:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2681,
                  "src": "14146:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2623,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14146:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2624,
                    "nodeType": "ArrayTypeName",
                    "src": "14146:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2628,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "14193:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2681,
                  "src": "14176:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2626,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14176:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2627,
                    "nodeType": "ArrayTypeName",
                    "src": "14176:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2630,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "14223:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2681,
                  "src": "14210:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2629,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14210:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14068:165:3"
            },
            "returnParameters": {
              "id": 2632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14242:0:3"
            },
            "scope": 2710,
            "src": "14024:792:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2708,
              "nodeType": "Block",
              "src": "14906:109:3",
              "statements": [
                {
                  "assignments": [
                    2693
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2693,
                      "mutability": "mutable",
                      "name": "array",
                      "nameLocation": "14933:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2708,
                      "src": "14916:22:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2691,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14916:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2692,
                        "nodeType": "ArrayTypeName",
                        "src": "14916:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2699,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 2697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14955:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 2696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "14941:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2694,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14945:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2695,
                        "nodeType": "ArrayTypeName",
                        "src": "14945:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 2698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14941:16:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14916:41:3"
                },
                {
                  "expression": {
                    "id": 2704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2700,
                        "name": "array",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2693,
                        "src": "14967:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 2702,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 2701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14973:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14967:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2703,
                      "name": "element",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2683,
                      "src": "14978:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14967:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2705,
                  "nodeType": "ExpressionStatement",
                  "src": "14967:18:3"
                },
                {
                  "expression": {
                    "id": 2706,
                    "name": "array",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2693,
                    "src": "15003:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 2688,
                  "id": 2707,
                  "nodeType": "Return",
                  "src": "14996:12:3"
                }
              ]
            },
            "id": 2709,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_asSingletonArray",
            "nameLocation": "14831:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2683,
                  "mutability": "mutable",
                  "name": "element",
                  "nameLocation": "14857:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2709,
                  "src": "14849:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14849:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14848:17:3"
            },
            "returnParameters": {
              "id": 2688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2687,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2709,
                  "src": "14888:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2685,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14888:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2686,
                    "nodeType": "ArrayTypeName",
                    "src": "14888:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14887:18:3"
            },
            "scope": 2710,
            "src": "14822:193:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 2711,
        "src": "494:14523:3",
        "usedErrors": []
      }
    ],
    "src": "33:14985:3"
  },
  "bytecode": "",
  "bytecodeSha1": "cd1098d85c2951c34c3b2bbd640f4989eeb5cb4f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 1
    },
    "version": "0.8.4+commit.c7e474f2"
  },
  "contractName": "ERC1155",
  "coverageMap": {
    "branches": {
      "11": {},
      "12": {},
      "3": {
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "52": [
            14449,
            14509,
            false
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "53": [
            13656,
            13711,
            false
          ]
        },
        "ERC1155._safeBatchTransferFrom": {
          "47": [
            6366,
            6394,
            true
          ],
          "48": [
            6457,
            6473,
            true
          ],
          "49": [
            6832,
            6853,
            true
          ]
        },
        "ERC1155._safeTransferFrom": {
          "50": [
            5198,
            5214,
            true
          ],
          "51": [
            5475,
            5496,
            true
          ]
        },
        "ERC1155.balanceOf": {
          "40": [
            2222,
            2243,
            true
          ]
        },
        "ERC1155.balanceOfBatch": {
          "43": [
            2685,
            2714,
            true
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "41": [
            4362,
            4382,
            true
          ],
          "42": [
            4386,
            4422,
            true
          ]
        },
        "ERC1155.safeTransferFrom": {
          "45": [
            3876,
            3896,
            true
          ],
          "46": [
            3900,
            3936,
            true
          ]
        },
        "ERC1155.setApprovalForAll": {
          "44": [
            3172,
            3196,
            true
          ]
        }
      },
      "4": {},
      "5": {},
      "6": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "11": {
        "ERC165.supportsInterface": {
          "4": [
            864,
            911
          ]
        }
      },
      "12": {},
      "3": {
        "ERC1155._asSingletonArray": {
          "37": [
            14967,
            14985
          ],
          "38": [
            14996,
            15008
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "34": [
            14669,
            14683
          ],
          "35": [
            14723,
            14785
          ],
          "36": [
            14533,
            14583
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "39": [
            13735,
            13785
          ]
        },
        "ERC1155._safeBatchTransferFrom": {
          "18": [
            6358,
            6439
          ],
          "19": [
            6449,
            6515
          ],
          "20": [
            6824,
            6900
          ],
          "21": [
            6942,
            6984
          ],
          "22": [
            7012,
            7039
          ],
          "23": [
            6675,
            6678
          ],
          "24": [
            7060,
            7112
          ],
          "25": [
            7123,
            7198
          ]
        },
        "ERC1155._safeTransferFrom": {
          "26": [
            5190,
            5256
          ],
          "27": [
            5309,
            5405
          ],
          "28": [
            5467,
            5543
          ],
          "29": [
            5577,
            5619
          ],
          "30": [
            5639,
            5666
          ],
          "31": [
            5677,
            5728
          ],
          "32": [
            5739,
            5807
          ]
        },
        "ERC1155.balanceOf": {
          "1": [
            2214,
            2291
          ],
          "2": [
            2301,
            2330
          ]
        },
        "ERC1155.balanceOfBatch": {
          "9": [
            2677,
            2760
          ],
          "10": [
            2905,
            2954
          ],
          "11": [
            2886,
            2889
          ],
          "12": [
            2975,
            2995
          ]
        },
        "ERC1155.isApprovedForAll": {
          "0": [
            3558,
            3602
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "6": [
            4341,
            4498
          ],
          "8": [
            4508,
            4560
          ]
        },
        "ERC1155.safeTransferFrom": {
          "16": [
            3855,
            4003
          ],
          "17": [
            4013,
            4058
          ]
        },
        "ERC1155.setApprovalForAll": {
          "13": [
            3164,
            3242
          ],
          "14": [
            3253,
            3306
          ],
          "15": [
            3316,
            3369
          ]
        },
        "ERC1155.supportsInterface": {
          "3": [
            1278,
            1458
          ]
        },
        "ERC1155.uri": {
          "5": [
            1949,
            1960
          ]
        }
      },
      "4": {},
      "5": {},
      "6": {},
      "8": {
        "Address.isContract": {
          "33": [
            1073,
            1088
          ]
        }
      },
      "9": {
        "Context._msgSender": {
          "7": [
            659,
            676
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC1155",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC1155MetadataURI",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC165"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "494:14523:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2109:228;;;;;;:::i;:::-;;:::i;:::-;;;13798:25:15;;;13786:2;13771:18;2109:228:3;;;;;;;;1160:305;;;;;;:::i;:::-;;:::i;:::-;;;9284:14:15;;9277:22;9259:41;;9247:2;9232:18;1160:305:3;9214:92:15;1864:103:3;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4137:430::-;;;;;;:::i;:::-;;:::i;:::-;;2494:508;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3070:306::-;;;;;;:::i;:::-;;:::i;3443:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3565:27:3;;;3542:4;3565:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3443:166;3676:389;;;;;;:::i;:::-;;:::i;2109:228::-;2195:7;-1:-1:-1;;;;;2222:21:3;;2214:77;;;;-1:-1:-1;;;2214:77:3;;10567:2:15;2214:77:3;;;10549:21:15;10606:2;10586:18;;;10579:30;10645:34;10625:18;;;10618:62;-1:-1:-1;;;10696:18:15;;;10689:41;10747:19;;2214:77:3;;;;;;;;;-1:-1:-1;2308:9:3;:13;;;;;;;;;;;-1:-1:-1;;;;;2308:22:3;;;;;;;;;;;;2109:228::o;1160:305::-;1262:4;-1:-1:-1;;;;;;1297:41:3;;-1:-1:-1;;;1297:41:3;;:109;;-1:-1:-1;;;;;;;1354:52:3;;-1:-1:-1;;;1354:52:3;1297:109;:161;;;-1:-1:-1;;;;;;;;;;871:40:11;;;1422:36:3;1278:180;1160:305;-1:-1:-1;;1160:305:3:o;1864:103::-;1924:13;1956:4;1949:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1864:103;;;:::o;4137:430::-;-1:-1:-1;;;;;4362:20:3;;666:10:9;4362:20:3;;:60;;-1:-1:-1;4386:36:3;4403:4;666:10:9;3443:166:3;:::i;4386:36::-;4341:157;;;;-1:-1:-1;;;4341:157:3;;11795:2:15;4341:157:3;;;11777:21:15;11834:2;11814:18;;;11807:30;11873:34;11853:18;;;11846:62;-1:-1:-1;;;11924:18:15;;;11917:48;11982:19;;4341:157:3;11767:240:15;4341:157:3;4508:52;4531:4;4537:2;4541:3;4546:7;4555:4;4508:22;:52::i;:::-;4137:430;;;;;:::o;2494:508::-;2645:16;2704:3;:10;2685:8;:15;:29;2677:83;;;;-1:-1:-1;;;2677:83:3;;13035:2:15;2677:83:3;;;13017:21:15;13074:2;13054:18;;;13047:30;13113:34;13093:18;;;13086:62;-1:-1:-1;;;13164:18:15;;;13157:39;13213:19;;2677:83:3;13007:231:15;2677:83:3;2771:30;2818:8;:15;-1:-1:-1;;;;;2804:30:3;;;;;-1:-1:-1;;;2804:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2804:30:3;;2771:63;;2850:9;2845:120;2869:8;:15;2865:1;:19;2845:120;;;2924:30;2934:8;2943:1;2934:11;;;;;;-1:-1:-1;;;2934:11:3;;;;;;;;;;;;;;;2947:3;2951:1;2947:6;;;;;;-1:-1:-1;;;2947:6:3;;;;;;;;;;;;;;;2924:9;:30::i;:::-;2905:13;2919:1;2905:16;;;;;;-1:-1:-1;;;2905:16:3;;;;;;;;;;;;;;;;;;:49;2886:3;;;:::i;:::-;;;2845:120;;;-1:-1:-1;2982:13:3;2494:508;-1:-1:-1;;;2494:508:3:o;3070:306::-;666:10:9;-1:-1:-1;;;;;3172:24:3;;;;3164:78;;;;-1:-1:-1;;;3164:78:3;;12625:2:15;3164:78:3;;;12607:21:15;12664:2;12644:18;;;12637:30;12703:34;12683:18;;;12676:62;-1:-1:-1;;;12754:18:15;;;12747:39;12803:19;;3164:78:3;12597:231:15;3164:78:3;666:10:9;3253:32:3;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;3253:42:3;;;;;;;;;;;;:53;;-1:-1:-1;;3253:53:3;;;;;;;;;;3321:48;;9259:41:15;;;3253:42:3;;666:10:9;3321:48:3;;9232:18:15;3321:48:3;;;;;;;3070:306;;:::o;3676:389::-;-1:-1:-1;;;;;3876:20:3;;666:10:9;3876:20:3;;:60;;-1:-1:-1;3900:36:3;3917:4;666:10:9;3443:166:3;:::i;3900:36::-;3855:148;;;;-1:-1:-1;;;3855:148:3;;10979:2:15;3855:148:3;;;10961:21:15;11018:2;10998:18;;;10991:30;11057:34;11037:18;;;11030:62;-1:-1:-1;;;11108:18:15;;;11101:39;11157:19;;3855:148:3;10951:231:15;3855:148:3;4013:45;4031:4;4037:2;4041;4045:6;4053:4;4013:17;:45::i;6160:1045::-;6380:7;:14;6366:3;:10;:28;6358:81;;;;-1:-1:-1;;;6358:81:3;;13445:2:15;6358:81:3;;;13427:21:15;13484:2;13464:18;;;13457:30;13523:34;13503:18;;;13496:62;-1:-1:-1;;;13574:18:15;;;13567:38;13622:19;;6358:81:3;13417:230:15;6358:81:3;-1:-1:-1;;;;;6457:16:3;;6449:66;;;;-1:-1:-1;;;6449:66:3;;;;;;;:::i;:::-;666:10:9;6526:16:3;6639:411;6663:3;:10;6659:1;:14;6639:411;;;6694:10;6707:3;6711:1;6707:6;;;;;;-1:-1:-1;;;6707:6:3;;;;;;;;;;;;;;;6694:19;;6727:14;6744:7;6752:1;6744:10;;;;;;-1:-1:-1;;;6744:10:3;;;;;;;;;;;;;;;;;;;;6769:19;6791:13;;;;;;;;;;-1:-1:-1;;;;;6791:19:3;;;;;;;;;;;;6744:10;;-1:-1:-1;6832:21:3;;;;6824:76;;;;-1:-1:-1;;;6824:76:3;;;;;;;:::i;:::-;6942:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6942:19:3;;;;;;;;;;6964:20;;;6942:42;;7012:17;;;;;;;:27;;6964:20;;6942:9;7012:27;;6964:20;;7012:27;:::i;:::-;;;;;;;;6639:411;;;6675:3;;;;:::i;:::-;;;6639:411;;;;7095:2;-1:-1:-1;;;;;7065:47:3;7089:4;-1:-1:-1;;;;;7065:47:3;7079:8;-1:-1:-1;;;;;7065:47:3;;7099:3;7104:7;7065:47;;;;;;;:::i;:::-;;;;;;;;7123:75;7159:8;7169:4;7175:2;7179:3;7184:7;7193:4;7123:35;:75::i;:::-;6160:1045;;;;;;:::o;5017:797::-;-1:-1:-1;;;;;5198:16:3;;5190:66;;;;-1:-1:-1;;;5190:66:3;;;;;;;:::i;:::-;666:10:9;5309:96:3;666:10:9;5340:4:3;5346:2;5350:21;5368:2;5350:17;:21::i;:::-;5373:25;5391:6;5373:17;:25::i;5309:96::-;5416:19;5438:13;;;;;;;;;;;-1:-1:-1;;;;;5438:19:3;;;;;;;;;;5475:21;;;;5467:76;;;;-1:-1:-1;;;5467:76:3;;;;;;;:::i;:::-;5577:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5577:19:3;;;;;;;;;;5599:20;;;5577:42;;5639:17;;;;;;;:27;;5599:20;;5577:9;5639:27;;5599:20;;5639:27;:::i;:::-;;;;-1:-1:-1;;5682:46:3;;;14008:25:15;;;14064:2;14049:18;;14042:34;;;-1:-1:-1;;;;;5682:46:3;;;;;;;;;;;;;;13981:18:15;5682:46:3;;;;;;;5739:68;5770:8;5780:4;5786:2;5790;5794:6;5802:4;5739:30;:68::i;:::-;5017:797;;;;;;;:::o;14024:792::-;-1:-1:-1;;;;;14256:13:3;;1034:20:8;1080:8;14252:558:3;;14291:79;;-1:-1:-1;;;14291:79:3;;-1:-1:-1;;;;;14291:43:3;;;;;:79;;14335:8;;14345:4;;14351:3;;14356:7;;14365:4;;14291:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14291:79:3;;;;;;;;-1:-1:-1;;14291:79:3;;;;;;;;;;;;:::i;:::-;;;14287:513;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;14676:6;14669:14;;-1:-1:-1;;;14669:14:3;;;;;;;;:::i;14287:513::-;;;14723:62;;-1:-1:-1;;;14723:62:3;;9737:2:15;14723:62:3;;;9719:21:15;9776:2;9756:18;;;9749:30;9815:34;9795:18;;;9788:62;-1:-1:-1;;;9866:18:15;;;9859:50;9926:19;;14723:62:3;9709:242:15;14287:513:3;-1:-1:-1;;;;;;14449:60:3;;-1:-1:-1;;;14449:60:3;14445:157;;14533:50;;-1:-1:-1;;;14533:50:3;;;;;;;:::i;14822:193::-;14941:16;;;14955:1;14941:16;;;;;;;;;14888;;14916:22;;14941:16;;;;;;;;;;;;-1:-1:-1;14941:16:3;14916:41;;14978:7;14967:5;14973:1;14967:8;;;;;;-1:-1:-1;;;14967:8:3;;;;;;;;;;;;;;;;;;:18;15003:5;14822:193;-1:-1:-1;;14822:193:3:o;13293:725::-;-1:-1:-1;;;;;13500:13:3;;1034:20:8;1080:8;13496:516:3;;13535:72;;-1:-1:-1;;;13535:72:3;;-1:-1:-1;;;;;13535:38:3;;;;;:72;;13574:8;;13584:4;;13590:2;;13594:6;;13602:4;;13535:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13535:72:3;;;;;;;;-1:-1:-1;;13535:72:3;;;;;;;;;;;;:::i;:::-;;;13531:471;;;;:::i;:::-;-1:-1:-1;;;;;;13656:55:3;;-1:-1:-1;;;13656:55:3;13652:152;;13735:50;;-1:-1:-1;;;13735:50:3;;;;;;;:::i;14:173:15:-;82:20;;-1:-1:-1;;;;;131:31:15;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:755::-;246:5;299:3;292:4;284:6;280:17;276:27;266:2;;321:5;314;307:20;266:2;361:6;348:20;387:4;410:43;450:2;410:43;:::i;:::-;482:2;476:9;494:31;522:2;514:6;494:31;:::i;:::-;560:18;;;594:15;;;;-1:-1:-1;629:15:15;;;679:1;675:10;;;663:23;;659:32;;656:41;-1:-1:-1;653:2:15;;;714:5;707;700:20;653:2;740:5;754:163;768:2;765:1;762:9;754:163;;;825:17;;813:30;;863:12;;;;895;;;;786:1;779:9;754:163;;;-1:-1:-1;935:6:15;;256:691;-1:-1:-1;;;;;;;256:691:15:o;952:575::-;994:5;1047:3;1040:4;1032:6;1028:17;1024:27;1014:2;;1069:5;1062;1055:20;1014:2;1096:20;;-1:-1:-1;;;;;1128:26:15;;1125:2;;;1157:18;;:::i;:::-;1206:2;1200:9;1218:67;1273:2;1254:13;;-1:-1:-1;;1250:27:15;1279:4;1246:38;1200:9;1218:67;:::i;:::-;1309:2;1301:6;1294:18;1355:3;1348:4;1343:2;1335:6;1331:15;1327:26;1324:35;1321:2;;;1376:5;1369;1362:20;1321:2;1444;1437:4;1429:6;1425:17;1418:4;1410:6;1406:17;1393:54;1467:15;;;1484:4;1463:26;1456:41;;;;1471:6;1004:523;-1:-1:-1;;1004:523:15:o;1532:270::-;1600:6;1608;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1682:6;1674;1667:22;1629:2;1710:29;1729:9;1710:29;:::i;:::-;1700:39;;1758:38;1792:2;1781:9;1777:18;1758:38;:::i;:::-;1748:48;;1619:183;;;;;:::o;1807:983::-;1961:6;1969;1977;1985;1993;2046:3;2034:9;2025:7;2021:23;2017:33;2014:2;;;2068:6;2060;2053:22;2014:2;2096:29;2115:9;2096:29;:::i;:::-;2086:39;;2144:38;2178:2;2167:9;2163:18;2144:38;:::i;:::-;2134:48;-1:-1:-1;2233:2:15;2218:18;;2205:32;-1:-1:-1;;;;;2286:14:15;;;2283:2;;;2318:6;2310;2303:22;2283:2;2346:61;2399:7;2390:6;2379:9;2375:22;2346:61;:::i;:::-;2336:71;;2460:2;2449:9;2445:18;2432:32;2416:48;;2489:2;2479:8;2476:16;2473:2;;;2510:6;2502;2495:22;2473:2;2538:63;2593:7;2582:8;2571:9;2567:24;2538:63;:::i;:::-;2528:73;;2654:3;2643:9;2639:19;2626:33;2610:49;;2684:2;2674:8;2671:16;2668:2;;;2705:6;2697;2690:22;2668:2;;2733:51;2776:7;2765:8;2754:9;2750:24;2733:51;:::i;:::-;2723:61;;;2004:786;;;;;;;;:::o;2795:626::-;2899:6;2907;2915;2923;2931;2984:3;2972:9;2963:7;2959:23;2955:33;2952:2;;;3006:6;2998;2991:22;2952:2;3034:29;3053:9;3034:29;:::i;:::-;3024:39;;3082:38;3116:2;3105:9;3101:18;3082:38;:::i;:::-;3072:48;-1:-1:-1;3167:2:15;3152:18;;3139:32;;-1:-1:-1;3218:2:15;3203:18;;3190:32;;-1:-1:-1;3273:3:15;3258:19;;3245:33;-1:-1:-1;;;;;3290:30:15;;3287:2;;;3338:6;3330;3323:22;3287:2;3366:49;3407:7;3398:6;3387:9;3383:22;3366:49;:::i;3426:367::-;3491:6;3499;3552:2;3540:9;3531:7;3527:23;3523:32;3520:2;;;3573:6;3565;3558:22;3520:2;3601:29;3620:9;3601:29;:::i;:::-;3591:39;;3680:2;3669:9;3665:18;3652:32;3727:5;3720:13;3713:21;3706:5;3703:32;3693:2;;3754:6;3746;3739:22;3693:2;3782:5;3772:15;;;3510:283;;;;;:::o;3798:264::-;3866:6;3874;3927:2;3915:9;3906:7;3902:23;3898:32;3895:2;;;3948:6;3940;3933:22;3895:2;3976:29;3995:9;3976:29;:::i;:::-;3966:39;4052:2;4037:18;;;;4024:32;;-1:-1:-1;;;3885:177:15:o;4067:1274::-;4185:6;4193;4246:2;4234:9;4225:7;4221:23;4217:32;4214:2;;;4267:6;4259;4252:22;4214:2;4299:23;;-1:-1:-1;;;;;4371:14:15;;;4368:2;;;4403:6;4395;4388:22;4368:2;4446:6;4435:9;4431:22;4421:32;;4491:7;4484:4;4480:2;4476:13;4472:27;4462:2;;4518:6;4510;4503:22;4462:2;4559;4546:16;4581:4;4604:43;4644:2;4604:43;:::i;:::-;4676:2;4670:9;4688:31;4716:2;4708:6;4688:31;:::i;:::-;4754:18;;;4788:15;;;;-1:-1:-1;4823:11:15;;;4865:1;4861:10;;;4853:19;;4849:28;;4846:41;-1:-1:-1;4843:2:15;;;4905:6;4897;4890:22;4843:2;4932:6;4923:15;;4947:169;4961:2;4958:1;4955:9;4947:169;;;5018:23;5037:3;5018:23;:::i;:::-;5006:36;;4979:1;4972:9;;;;;5062:12;;;;5094;;4947:169;;;-1:-1:-1;5135:6:15;-1:-1:-1;;5179:18:15;;5166:32;;-1:-1:-1;;5210:16:15;;;5207:2;;;5244:6;5236;5229:22;5207:2;;5272:63;5327:7;5316:8;5305:9;5301:24;5272:63;:::i;:::-;5262:73;;;4204:1137;;;;;:::o;5346:255::-;5404:6;5457:2;5445:9;5436:7;5432:23;5428:32;5425:2;;;5478:6;5470;5463:22;5425:2;5522:9;5509:23;5541:30;5565:5;5541:30;:::i;:::-;5590:5;5415:186;-1:-1:-1;;;5415:186:15:o;5606:259::-;5675:6;5728:2;5716:9;5707:7;5703:23;5699:32;5696:2;;;5749:6;5741;5734:22;5696:2;5786:9;5780:16;5805:30;5829:5;5805:30;:::i;5870:190::-;5929:6;5982:2;5970:9;5961:7;5957:23;5953:32;5950:2;;;6003:6;5995;5988:22;5950:2;-1:-1:-1;6031:23:15;;5940:120;-1:-1:-1;5940:120:15:o;6065:437::-;6118:3;6156:5;6150:12;6183:6;6178:3;6171:19;6209:4;6238:2;6233:3;6229:12;6222:19;;6275:2;6268:5;6264:14;6296:3;6308:169;6322:6;6319:1;6316:13;6308:169;;;6383:13;;6371:26;;6417:12;;;;6452:15;;;;6344:1;6337:9;6308:169;;;-1:-1:-1;6493:3:15;;6126:376;-1:-1:-1;;;;;6126:376:15:o;6507:475::-;6548:3;6586:5;6580:12;6613:6;6608:3;6601:19;6638:3;6650:162;6664:6;6661:1;6658:13;6650:162;;;6726:4;6782:13;;;6778:22;;6772:29;6754:11;;;6750:20;;6743:59;6679:12;6650:162;;;6830:6;6827:1;6824:13;6821:2;;;6896:3;6889:4;6880:6;6875:3;6871:16;6867:27;6860:40;6821:2;-1:-1:-1;6964:2:15;6943:15;-1:-1:-1;;6939:29:15;6930:39;;;;6971:4;6926:50;;6556:426;-1:-1:-1;;6556:426:15:o;6987:826::-;-1:-1:-1;;;;;7384:15:15;;;7366:34;;7436:15;;7431:2;7416:18;;7409:43;7346:3;7483:2;7468:18;;7461:31;;;7309:4;;7515:57;;7552:19;;7544:6;7515:57;:::i;:::-;7620:9;7612:6;7608:22;7603:2;7592:9;7588:18;7581:50;7654:44;7691:6;7683;7654:44;:::i;:::-;7640:58;;7747:9;7739:6;7735:22;7729:3;7718:9;7714:19;7707:51;7775:32;7800:6;7792;7775:32;:::i;:::-;7767:40;7318:495;-1:-1:-1;;;;;;;;7318:495:15:o;7818:560::-;-1:-1:-1;;;;;8115:15:15;;;8097:34;;8167:15;;8162:2;8147:18;;8140:43;8214:2;8199:18;;8192:34;;;8257:2;8242:18;;8235:34;;;8077:3;8300;8285:19;;8278:32;;;8040:4;;8327:45;;8352:19;;8344:6;8327:45;:::i;:::-;8319:53;8049:329;-1:-1:-1;;;;;;;8049:329:15:o;8383:261::-;8562:2;8551:9;8544:21;8525:4;8582:56;8634:2;8623:9;8619:18;8611:6;8582:56;:::i;8649:465::-;8906:2;8895:9;8888:21;8869:4;8932:56;8984:2;8973:9;8969:18;8961:6;8932:56;:::i;:::-;9036:9;9028:6;9024:22;9019:2;9008:9;9004:18;8997:50;9064:44;9101:6;9093;9064:44;:::i;:::-;9056:52;8878:236;-1:-1:-1;;;;;8878:236:15:o;9311:219::-;9460:2;9449:9;9442:21;9423:4;9480:44;9520:2;9509:9;9505:18;9497:6;9480:44;:::i;9956:404::-;10158:2;10140:21;;;10197:2;10177:18;;;10170:30;10236:34;10231:2;10216:18;;10209:62;-1:-1:-1;;;10302:2:15;10287:18;;10280:38;10350:3;10335:19;;10130:230::o;11187:401::-;11389:2;11371:21;;;11428:2;11408:18;;;11401:30;11467:34;11462:2;11447:18;;11440:62;-1:-1:-1;;;11533:2:15;11518:18;;11511:35;11578:3;11563:19;;11361:227::o;12012:406::-;12214:2;12196:21;;;12253:2;12233:18;;;12226:30;12292:34;12287:2;12272:18;;12265:62;-1:-1:-1;;;12358:2:15;12343:18;;12336:40;12408:3;12393:19;;12186:232::o;14087:183::-;14147:4;-1:-1:-1;;;;;14169:30:15;;14166:2;;;14202:18;;:::i;:::-;-1:-1:-1;14247:1:15;14243:14;14259:4;14239:25;;14156:114::o;14275:128::-;14315:3;14346:1;14342:6;14339:1;14336:13;14333:2;;;14352:18;;:::i;:::-;-1:-1:-1;14388:9:15;;14323:80::o;14408:380::-;14487:1;14483:12;;;;14530;;;14551:2;;14605:4;14597:6;14593:17;14583:27;;14551:2;14658;14650:6;14647:14;14627:18;14624:38;14621:2;;;14704:10;14699:3;14695:20;14692:1;14685:31;14739:4;14736:1;14729:15;14767:4;14764:1;14757:15;14621:2;;14463:325;;;:::o;14793:249::-;14903:2;14884:13;;-1:-1:-1;;14880:27:15;14868:40;;-1:-1:-1;;;;;14923:34:15;;14959:22;;;14920:62;14917:2;;;14985:18;;:::i;:::-;15021:2;15014:22;-1:-1:-1;;14840:202:15:o;15047:135::-;15086:3;-1:-1:-1;;15107:17:15;;15104:2;;;15127:18;;:::i;:::-;-1:-1:-1;15174:1:15;15163:13;;15094:88::o;15187:127::-;15248:10;15243:3;15239:20;15236:1;15229:31;15279:4;15276:1;15269:15;15303:4;15300:1;15293:15;15319:127;15380:10;15375:3;15371:20;15368:1;15361:31;15411:4;15408:1;15401:15;15435:4;15432:1;15425:15;15451:185;15486:3;15528:1;15510:16;15507:23;15504:2;;;15578:1;15573:3;15568;15553:27;15609:10;15604:3;15600:20;15504:2;15494:142;:::o;15641:671::-;15680:3;15722:4;15704:16;15701:26;15698:2;;;15688:624;:::o;15698:2::-;15764;15758:9;-1:-1:-1;;15829:16:15;15825:25;;15822:1;15758:9;15801:50;15874:11;;15904:16;-1:-1:-1;;;;;15972:14:15;;;16003:4;15991:17;;15988:25;-1:-1:-1;15969:45:15;15966:2;;;16017:5;;;;;15688:624;:::o;15966:2::-;16054:6;16048:4;16044:17;16033:28;;16090:3;16084:10;16117:2;16109:6;16106:14;16103:2;;;16123:5;;;;;;15688:624;:::o;16103:2::-;16207;16188:16;16182:4;16178:27;16174:36;16167:4;16158:6;16153:3;16149:16;16145:27;16142:69;16139:2;;;16214:5;;;;;;15688:624;:::o;16139:2::-;16230:57;16281:4;16272:6;16264;16260:19;16256:30;16250:4;16230:57;:::i;:::-;-1:-1:-1;16303:3:15;;15688:624;-1:-1:-1;;;;;15688:624:15:o;16317:131::-;-1:-1:-1;;;;;;16391:32:15;;16381:43;;16371:2;;16438:1;16435;16428:12;16371:2;16361:87;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "constructor": {
        "details": "See {_setURI}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "uri(uint256)": {
        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
      }
    },
    "version": 1
  },
  "offset": [
    494,
    15017
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x77 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x169 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8F PUSH2 0x8A CALLDATASIZE PUSH1 0x4 PUSH2 0xE6D JUMP JUMPDEST PUSH2 0x17C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0xF60 JUMP JUMPDEST PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x99 JUMP JUMPDEST PUSH2 0xD8 PUSH2 0xD3 CALLDATASIZE PUSH1 0x4 PUSH2 0xF9F JUMP JUMPDEST PUSH2 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x1120 JUMP JUMPDEST PUSH2 0xF8 PUSH2 0xF3 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2C JUMP JUMPDEST PUSH2 0x2F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0xE96 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH2 0xF8 PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0xE33 JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST PUSH2 0xB5 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xF8 PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x244 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x25F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x274 SWAP1 PUSH2 0x1245 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2A0 SWAP1 PUSH2 0x1245 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x315 JUMPI POP PUSH2 0x315 DUP6 CALLER PUSH2 0x13B JUMP JUMPDEST PUSH2 0x37C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E4 JUMP JUMPDEST PUSH2 0x389 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x64F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x41E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x447 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4E9 JUMPI PUSH2 0x4AE DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x479 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x17C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4CE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4E2 DUP2 PUSH2 0x12AC JUMP JUMPDEST SWAP1 POP PUSH2 0x44D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E4 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x5E4 JUMPI POP PUSH2 0x5E4 DUP6 CALLER PUSH2 0x13B JUMP JUMPDEST PUSH2 0x642 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E4 JUMP JUMPDEST PUSH2 0x389 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x848 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x6B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E4 SWAP1 PUSH2 0x117B JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x7DA JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x706 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x732 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x782 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E4 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7BF SWAP1 DUP5 SWAP1 PUSH2 0x122D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x7D3 SWAP1 PUSH2 0x12AC JUMP JUMPDEST SWAP1 POP PUSH2 0x6DB JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x82A SWAP3 SWAP2 SWAP1 PUSH2 0x10F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x840 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x96E JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E4 SWAP1 PUSH2 0x117B JUMP JUMPDEST CALLER PUSH2 0x887 DUP2 DUP8 DUP8 PUSH2 0x87E DUP9 PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x389 DUP9 PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x8C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E4 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x905 SWAP1 DUP5 SWAP1 PUSH2 0x122D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x965 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xB32 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x840 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x9B2 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x103C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9FC JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9F9 SWAP2 DUP2 ADD SWAP1 PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAA9 JUMPI PUSH2 0xA08 PUSH2 0x12F3 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xA42 JUMPI POP PUSH2 0xA1D PUSH2 0x130B JUMP JUMPDEST DUP1 PUSH2 0xA28 JUMPI POP PUSH2 0xA44 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x1120 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x965 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E4 SWAP1 PUSH2 0x1133 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB21 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x840 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB76 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x109A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBC0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBBD SWAP2 DUP2 ADD SWAP1 PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBCC JUMPI PUSH2 0xA08 PUSH2 0x12F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x965 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E4 SWAP1 PUSH2 0x1133 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC28 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xC35 DUP3 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC42 DUP3 DUP3 PUSH2 0x1280 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0xC61 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xC7F JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xC63 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC9C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xCB5 JUMPI PUSH2 0xCB5 PUSH2 0x12DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCCC PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x1280 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xCE0 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD0C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xD15 DUP4 PUSH2 0xBFC JUMP JUMPDEST SWAP2 POP PUSH2 0xD23 PUSH1 0x20 DUP5 ADD PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD43 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xD4C DUP7 PUSH2 0xBFC JUMP JUMPDEST SWAP5 POP PUSH2 0xD5A PUSH1 0x20 DUP8 ADD PUSH2 0xBFC JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xD75 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xD81 DUP10 DUP4 DUP11 ADD PUSH2 0xC18 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD96 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xDA2 DUP10 DUP4 DUP11 ADD PUSH2 0xC18 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDB7 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xDC4 DUP9 DUP3 DUP10 ADD PUSH2 0xC8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xDE8 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xDF1 DUP7 PUSH2 0xBFC JUMP JUMPDEST SWAP5 POP PUSH2 0xDFF PUSH1 0x20 DUP8 ADD PUSH2 0xBFC JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xE27 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xDC4 DUP9 DUP3 DUP10 ADD PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE45 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xE4E DUP4 PUSH2 0xBFC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE62 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE7F JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xE88 DUP4 PUSH2 0xBFC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA8 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xEBE JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xED1 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEDE DUP3 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEEB DUP3 DUP3 PUSH2 0x1280 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0xF0A JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0xF33 JUMPI PUSH2 0xF1F DUP2 PUSH2 0xBFC JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xF0E JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF49 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xF56 DUP6 DUP3 DUP7 ADD PUSH2 0xC18 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF71 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF7C DUP2 PUSH2 0x1394 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF94 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF7C DUP2 PUSH2 0x1394 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFB0 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFE6 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xFCA JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1016 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xFFA JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1027 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1068 SWAP1 DUP4 ADD DUP7 PUSH2 0xFB7 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x107A DUP2 DUP7 PUSH2 0xFB7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x108E DUP2 DUP6 PUSH2 0xFF1 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x10D4 SWAP1 DUP4 ADD DUP5 PUSH2 0xFF1 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF7C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1105 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xFB7 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1117 DUP2 DUP6 PUSH2 0xFB7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF7C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFF1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1223 JUMPI PUSH2 0x1223 PUSH2 0x12DD JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1240 JUMPI PUSH2 0x1240 PUSH2 0x12C7 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1259 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x127A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x12A5 JUMPI PUSH2 0x12A5 PUSH2 0x12DD JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x12C0 JUMPI PUSH2 0x12C0 PUSH2 0x12C7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1308 JUMPI PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1319 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 GT PUSH1 0x24 DUP5 ADD DUP4 LT OR ISZERO PUSH2 0x1348 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1360 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x137A JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1389 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1280 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x13AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED DUP9 DUP15 ORIGIN PUSH14 0x2397FF2BB3E92986B92EA6E3FF19 0x26 0xD9 LOG3 0xD4 0x4B 0xDF 0xBF 0xD5 0xE2 CREATE2 PUSH4 0x4E2D6473 PUSH16 0x6C634300080400330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        494,
        15017
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x77"
    },
    "25": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0xFDD58E"
    },
    "37": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "EQ",
      "path": "3"
    },
    "38": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7C"
    },
    "41": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "42": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1FFC9A7"
    },
    "48": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "EQ",
      "path": "3"
    },
    "49": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA2"
    },
    "52": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "53": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE89341C"
    },
    "59": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "EQ",
      "path": "3"
    },
    "60": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC5"
    },
    "63": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "64": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x2EB2C2D6"
    },
    "70": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "EQ",
      "path": "3"
    },
    "71": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE5"
    },
    "74": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "75": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4E1273F4"
    },
    "81": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "EQ",
      "path": "3"
    },
    "82": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFA"
    },
    "85": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "86": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA22CB465"
    },
    "92": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "EQ",
      "path": "3"
    },
    "93": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11A"
    },
    "96": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "97": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "3"
    },
    "98": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE985E9C5"
    },
    "103": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "EQ",
      "path": "3"
    },
    "104": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12D"
    },
    "107": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "108": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "3"
    },
    "109": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF242432A"
    },
    "114": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "EQ",
      "path": "3"
    },
    "115": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x169"
    },
    "118": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "119": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "120": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "3"
    },
    "123": {
      "first_revert": true,
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "REVERT",
      "path": "3"
    },
    "124": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "125": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8F"
    },
    "128": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8A"
    },
    "131": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "132": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "134": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE6D"
    },
    "137": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMP",
      "path": "3"
    },
    "138": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "139": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17C"
    },
    "142": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMP",
      "path": "3"
    },
    "143": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "144": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "146": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "147": {
      "op": "SWAP1"
    },
    "148": {
      "op": "DUP2"
    },
    "149": {
      "op": "MSTORE"
    },
    "150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "152": {
      "op": "ADD"
    },
    "153": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "154": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "156": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "157": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "DUP1",
      "path": "3"
    },
    "158": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "159": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "SUB",
      "path": "3"
    },
    "160": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "161": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "RETURN",
      "path": "3"
    },
    "162": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "163": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB5"
    },
    "166": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB0"
    },
    "169": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "170": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "172": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF60"
    },
    "175": {
      "fn": "ERC1155.supportsInterface",
      "jump": "i",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMP",
      "path": "3"
    },
    "176": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "177": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x213"
    },
    "180": {
      "fn": "ERC1155.supportsInterface",
      "jump": "i",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMP",
      "path": "3"
    },
    "181": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "182": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "184": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "185": {
      "op": "SWAP1"
    },
    "186": {
      "op": "ISZERO"
    },
    "187": {
      "op": "ISZERO"
    },
    "188": {
      "op": "DUP2"
    },
    "189": {
      "op": "MSTORE"
    },
    "190": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "192": {
      "op": "ADD"
    },
    "193": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x99"
    },
    "196": {
      "op": "JUMP"
    },
    "197": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "198": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD8"
    },
    "201": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD3"
    },
    "204": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "205": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "207": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF9F"
    },
    "210": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMP",
      "path": "3"
    },
    "211": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "212": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x265"
    },
    "215": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMP",
      "path": "3"
    },
    "216": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "217": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "219": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "220": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x99"
    },
    "223": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "224": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "225": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1120"
    },
    "228": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMP",
      "path": "3"
    },
    "229": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "230": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF8"
    },
    "233": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF3"
    },
    "236": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "237": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "239": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD2C"
    },
    "242": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMP",
      "path": "3"
    },
    "243": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "244": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F9"
    },
    "247": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMP",
      "path": "3"
    },
    "248": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "249": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "STOP",
      "path": "3"
    },
    "250": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "251": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10D"
    },
    "254": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x108"
    },
    "257": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "258": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "260": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE96"
    },
    "263": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "3"
    },
    "264": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "265": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x390"
    },
    "268": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "3"
    },
    "269": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "270": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "272": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "273": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x99"
    },
    "276": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "277": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "278": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10DF"
    },
    "281": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "3"
    },
    "282": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "283": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF8"
    },
    "286": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x128"
    },
    "289": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "290": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "292": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE33"
    },
    "295": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMP",
      "path": "3"
    },
    "296": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "297": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F1"
    },
    "300": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMP",
      "path": "3"
    },
    "301": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "302": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB5"
    },
    "305": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13B"
    },
    "308": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "309": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "311": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCFA"
    },
    "314": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMP",
      "path": "3"
    },
    "315": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "322": {
      "op": "SHL"
    },
    "323": {
      "op": "SUB"
    },
    "324": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 0
    },
    "325": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP3",
      "path": "3"
    },
    "326": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "AND",
      "path": "3"
    },
    "327": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3542,
        3546
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "329": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "330": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP2",
      "path": "3"
    },
    "331": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "332": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3583
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "334": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "336": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "337": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP2",
      "path": "3"
    },
    "338": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "339": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "341": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "342": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP4",
      "path": "3"
    },
    "343": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "344": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "345": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "346": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "347": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "AND",
      "path": "3"
    },
    "348": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "DUP3",
      "path": "3"
    },
    "349": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "350": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "351": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "352": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "353": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "354": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "355": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "356": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "358": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "AND",
      "path": "3"
    },
    "359": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "360": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMP",
      "path": "3"
    },
    "361": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "362": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF8"
    },
    "365": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x177"
    },
    "368": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "369": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "371": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDD1"
    },
    "374": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMP",
      "path": "3"
    },
    "375": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "376": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5C8"
    },
    "379": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMP",
      "path": "3"
    },
    "380": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "381": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2195,
        2202
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "389": {
      "op": "SHL"
    },
    "390": {
      "op": "SUB"
    },
    "391": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2222,
        2243
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 1
    },
    "392": {
      "branch": 40,
      "fn": "ERC1155.balanceOf",
      "offset": [
        2222,
        2243
      ],
      "op": "AND",
      "path": "3"
    },
    "393": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1ED"
    },
    "396": {
      "branch": 40,
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "397": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "399": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "400": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "404": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "406": {
      "op": "SHL"
    },
    "407": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "DUP2",
      "path": "3"
    },
    "408": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "411": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "413": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "DUP3",
      "path": "3"
    },
    "414": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "ADD",
      "path": "3"
    },
    "415": {
      "op": "MSTORE"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "420": {
      "op": "DUP3"
    },
    "421": {
      "op": "ADD"
    },
    "422": {
      "op": "MSTORE"
    },
    "423": {
      "op": "PUSH32",
      "value": "0x455243313135353A2062616C616E636520717565727920666F7220746865207A"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "458": {
      "op": "DUP3"
    },
    "459": {
      "op": "ADD"
    },
    "460": {
      "op": "MSTORE"
    },
    "461": {
      "op": "PUSH11",
      "value": "0x65726F2061646472657373"
    },
    "473": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "475": {
      "op": "SHL"
    },
    "476": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "478": {
      "op": "DUP3"
    },
    "479": {
      "op": "ADD"
    },
    "480": {
      "op": "MSTORE"
    },
    "481": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "483": {
      "op": "ADD"
    },
    "484": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "485": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "487": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "488": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "489": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "490": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "SUB",
      "path": "3"
    },
    "491": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "492": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "493": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "494": {
      "op": "POP"
    },
    "495": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2317
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x0"
    },
    "497": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "498": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP2",
      "path": "3"
    },
    "499": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "500": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "502": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP2",
      "path": "3"
    },
    "503": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP2",
      "path": "3"
    },
    "504": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "505": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "507": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP1",
      "path": "3"
    },
    "508": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP4",
      "path": "3"
    },
    "509": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "516": {
      "op": "SHL"
    },
    "517": {
      "op": "SUB"
    },
    "518": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "519": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "520": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "521": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "AND",
      "path": "3"
    },
    "522": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "DUP4",
      "path": "3"
    },
    "523": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "524": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "525": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "526": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "527": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "528": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "529": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "530": {
      "fn": "ERC1155.balanceOf",
      "jump": "o",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMP",
      "path": "3"
    },
    "531": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "532": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1262,
        1266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "538": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "540": {
      "op": "SHL"
    },
    "541": {
      "op": "SUB"
    },
    "542": {
      "op": "NOT"
    },
    "543": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 3
    },
    "544": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "AND",
      "path": "3"
    },
    "545": {
      "op": "PUSH4",
      "value": "0x6CDB3D13"
    },
    "550": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "552": {
      "op": "SHL"
    },
    "553": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "EQ",
      "path": "3"
    },
    "554": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "DUP1",
      "path": "3"
    },
    "555": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1406
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x244"
    },
    "558": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1406
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "559": {
      "op": "POP"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "564": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "566": {
      "op": "SHL"
    },
    "567": {
      "op": "SUB"
    },
    "568": {
      "op": "NOT"
    },
    "569": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1354,
        1406
      ],
      "op": "DUP3",
      "path": "3"
    },
    "570": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1354,
        1406
      ],
      "op": "AND",
      "path": "3"
    },
    "571": {
      "op": "PUSH4",
      "value": "0x3A24D07"
    },
    "576": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "578": {
      "op": "SHL"
    },
    "579": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1354,
        1406
      ],
      "op": "EQ",
      "path": "3"
    },
    "580": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1406
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "581": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1458
      ],
      "op": "DUP1",
      "path": "3"
    },
    "582": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1458
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25F"
    },
    "585": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1458
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "586": {
      "op": "POP"
    },
    "587": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "592": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "594": {
      "op": "SHL"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "599": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "601": {
      "op": "SHL"
    },
    "602": {
      "op": "SUB"
    },
    "603": {
      "op": "NOT"
    },
    "604": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 4
    },
    "605": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "11"
    },
    "606": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "11"
    },
    "607": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1422,
        1458
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "608": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1278,
        1458
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "609": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "610": {
      "op": "POP"
    },
    "611": {
      "op": "POP"
    },
    "612": {
      "fn": "ERC1155.supportsInterface",
      "jump": "o",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMP",
      "path": "3"
    },
    "613": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "614": {
      "fn": "ERC1155.uri",
      "offset": [
        1924,
        1937
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "616": {
      "fn": "ERC1155.uri",
      "offset": [
        1956,
        1960
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x2"
    },
    "618": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "3"
    },
    "619": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "620": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x274"
    },
    "623": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "624": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1245"
    },
    "627": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMP",
      "path": "3"
    },
    "628": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "629": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "3"
    },
    "630": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "632": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "3"
    },
    "633": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "635": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "3"
    },
    "636": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "637": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DIV",
      "path": "3"
    },
    "638": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MUL",
      "path": "3"
    },
    "639": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "641": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "3"
    },
    "642": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "644": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "645": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "646": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "3"
    },
    "647": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "3"
    },
    "648": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "650": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "651": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "3"
    },
    "652": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "653": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "654": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "655": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "3"
    },
    "656": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "3"
    },
    "657": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "658": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "660": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "3"
    },
    "661": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP3",
      "path": "3"
    },
    "662": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "3"
    },
    "663": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "664": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A0"
    },
    "667": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "668": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1245"
    },
    "671": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMP",
      "path": "3"
    },
    "672": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "673": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "3"
    },
    "674": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "675": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ED"
    },
    "678": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "679": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "3"
    },
    "680": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "682": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "LT",
      "path": "3"
    },
    "683": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C2"
    },
    "686": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "687": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "690": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "3"
    },
    "691": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP4",
      "path": "3"
    },
    "692": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "693": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DIV",
      "path": "3"
    },
    "694": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MUL",
      "path": "3"
    },
    "695": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP4",
      "path": "3"
    },
    "696": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "697": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "698": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "700": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "3"
    },
    "701": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "702": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ED"
    },
    "705": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMP",
      "path": "3"
    },
    "706": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "707": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP3",
      "path": "3"
    },
    "708": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "3"
    },
    "709": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "710": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "711": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "713": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "714": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "716": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "718": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "719": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "720": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "721": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "3"
    },
    "722": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "723": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "3"
    },
    "724": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "725": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "726": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "728": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "3"
    },
    "729": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "730": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "732": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "3"
    },
    "733": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "3"
    },
    "734": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP4",
      "path": "3"
    },
    "735": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "GT",
      "path": "3"
    },
    "736": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D0"
    },
    "739": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "740": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP3",
      "path": "3"
    },
    "741": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "742": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SUB",
      "path": "3"
    },
    "743": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "745": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "AND",
      "path": "3"
    },
    "746": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP3",
      "path": "3"
    },
    "747": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "3"
    },
    "748": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "749": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "750": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "3"
    },
    "751": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "3"
    },
    "752": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "3"
    },
    "753": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "3"
    },
    "754": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "3"
    },
    "755": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "756": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "3"
    },
    "757": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "758": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "759": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "POP",
      "path": "3"
    },
    "760": {
      "fn": "ERC1155.uri",
      "jump": "o",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMP",
      "path": "3"
    },
    "761": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "766": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "768": {
      "op": "SHL"
    },
    "769": {
      "op": "SUB"
    },
    "770": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 6
    },
    "771": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "AND",
      "path": "3"
    },
    "772": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 7
    },
    "773": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "EQ",
      "path": "3"
    },
    "774": {
      "branch": 41,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "DUP1",
      "path": "3"
    },
    "775": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4422
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x315"
    },
    "778": {
      "branch": 41,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4422
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "779": {
      "op": "POP"
    },
    "780": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4386,
        4422
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x315"
    },
    "783": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4403,
        4407
      ],
      "op": "DUP6",
      "path": "3"
    },
    "784": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "9"
    },
    "785": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13B"
    },
    "788": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMP",
      "path": "3"
    },
    "789": {
      "branch": 42,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4386,
        4422
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "790": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37C"
    },
    "793": {
      "branch": 42,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "794": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "796": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "797": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "801": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "803": {
      "op": "SHL"
    },
    "804": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "DUP2",
      "path": "3"
    },
    "805": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "808": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "810": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "DUP3",
      "path": "3"
    },
    "811": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "ADD",
      "path": "3"
    },
    "812": {
      "op": "MSTORE"
    },
    "813": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "817": {
      "op": "DUP3"
    },
    "818": {
      "op": "ADD"
    },
    "819": {
      "op": "MSTORE"
    },
    "820": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "855": {
      "op": "DUP3"
    },
    "856": {
      "op": "ADD"
    },
    "857": {
      "op": "MSTORE"
    },
    "858": {
      "op": "PUSH18",
      "value": "0x1BDDDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "877": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "879": {
      "op": "SHL"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "882": {
      "op": "DUP3"
    },
    "883": {
      "op": "ADD"
    },
    "884": {
      "op": "MSTORE"
    },
    "885": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "887": {
      "op": "ADD"
    },
    "888": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E4"
    },
    "891": {
      "op": "JUMP"
    },
    "892": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "893": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4508,
        4560
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 8,
      "value": "0x389"
    },
    "896": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4531,
        4535
      ],
      "op": "DUP6",
      "path": "3"
    },
    "897": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4537,
        4539
      ],
      "op": "DUP6",
      "path": "3"
    },
    "898": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4541,
        4544
      ],
      "op": "DUP6",
      "path": "3"
    },
    "899": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4546,
        4553
      ],
      "op": "DUP6",
      "path": "3"
    },
    "900": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4555,
        4559
      ],
      "op": "DUP6",
      "path": "3"
    },
    "901": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4508,
        4530
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x64F"
    },
    "904": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4508,
        4560
      ],
      "op": "JUMP",
      "path": "3"
    },
    "905": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4508,
        4560
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "906": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "3"
    },
    "907": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "3"
    },
    "908": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "3"
    },
    "909": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "3"
    },
    "910": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "3"
    },
    "911": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMP",
      "path": "3"
    },
    "912": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "913": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2645,
        2661
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "915": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2704,
        2707
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 9
    },
    "916": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2704,
        2714
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "917": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2685,
        2693
      ],
      "op": "DUP4",
      "path": "3"
    },
    "918": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2685,
        2700
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "919": {
      "branch": 43,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2685,
        2714
      ],
      "op": "EQ",
      "path": "3"
    },
    "920": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F5"
    },
    "923": {
      "branch": 43,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "924": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "926": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "927": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "931": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "933": {
      "op": "SHL"
    },
    "934": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "DUP2",
      "path": "3"
    },
    "935": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "936": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "938": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "940": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "DUP3",
      "path": "3"
    },
    "941": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "ADD",
      "path": "3"
    },
    "942": {
      "op": "MSTORE"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "947": {
      "op": "DUP3"
    },
    "948": {
      "op": "ADD"
    },
    "949": {
      "op": "MSTORE"
    },
    "950": {
      "op": "PUSH32",
      "value": "0x455243313135353A206163636F756E747320616E6420696473206C656E677468"
    },
    "983": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "985": {
      "op": "DUP3"
    },
    "986": {
      "op": "ADD"
    },
    "987": {
      "op": "MSTORE"
    },
    "988": {
      "op": "PUSH9",
      "value": "0x40DAD2E6DAC2E8C6D"
    },
    "998": {
      "op": "PUSH1",
      "value": "0xBB"
    },
    "1000": {
      "op": "SHL"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1003": {
      "op": "DUP3"
    },
    "1004": {
      "op": "ADD"
    },
    "1005": {
      "op": "MSTORE"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1008": {
      "op": "ADD"
    },
    "1009": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E4"
    },
    "1012": {
      "op": "JUMP"
    },
    "1013": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1014": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2771,
        2801
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1016": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2818,
        2826
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1017": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2818,
        2833
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1024": {
      "op": "SHL"
    },
    "1025": {
      "op": "SUB"
    },
    "1026": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1027": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "GT",
      "path": "3"
    },
    "1028": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1029": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x41E"
    },
    "1032": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1033": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1040": {
      "op": "SHL"
    },
    "1041": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1043": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1044": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x41"
    },
    "1046": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1048": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1049": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1051": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1053": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1054": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1055": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1057": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1058": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1059": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1060": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1061": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1062": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1063": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1065": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MUL",
      "path": "3"
    },
    "1066": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1068": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "3"
    },
    "1069": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1070": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "3"
    },
    "1071": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1073": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1074": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1075": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1076": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x447"
    },
    "1079": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1080": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1081": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1083": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "3"
    },
    "1084": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1086": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1087": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MUL",
      "path": "3"
    },
    "1088": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1089": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1090": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1091": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "CALLDATACOPY",
      "path": "3"
    },
    "1092": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "3"
    },
    "1093": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1094": {
      "op": "POP"
    },
    "1095": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1096": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "POP",
      "path": "3"
    },
    "1097": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2771,
        2834
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1098": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2771,
        2834
      ],
      "op": "POP",
      "path": "3"
    },
    "1099": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2850,
        2859
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1101": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1102": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2869,
        2877
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1103": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2869,
        2884
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1104": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1105": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2884
      ],
      "op": "LT",
      "path": "3"
    },
    "1106": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1107": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E9"
    },
    "1110": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1111": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2924,
        2954
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 10,
      "value": "0x4AE"
    },
    "1114": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2942
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1115": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2943,
        2944
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1116": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1117": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1118": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1119": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "LT",
      "path": "3"
    },
    "1120": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x479"
    },
    "1123": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1124": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1131": {
      "op": "SHL"
    },
    "1132": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1134": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1135": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x32"
    },
    "1137": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1139": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1140": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1142": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1144": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1145": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1146": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1148": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "MUL",
      "path": "3"
    },
    "1149": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1151": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "ADD",
      "path": "3"
    },
    "1152": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "ADD",
      "path": "3"
    },
    "1153": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1154": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1155": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2951,
        2952
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1156": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1157": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1158": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1159": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "LT",
      "path": "3"
    },
    "1160": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4A1"
    },
    "1163": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1164": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1171": {
      "op": "SHL"
    },
    "1172": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1174": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1175": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x32"
    },
    "1177": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1179": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1180": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1182": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1184": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1185": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1186": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1188": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "MUL",
      "path": "3"
    },
    "1189": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1191": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "ADD",
      "path": "3"
    },
    "1192": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "ADD",
      "path": "3"
    },
    "1193": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1194": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2924,
        2933
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17C"
    },
    "1197": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2924,
        2954
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1198": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2924,
        2954
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1199": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2918
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1200": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2919,
        2920
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1201": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1202": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1203": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1204": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "LT",
      "path": "3"
    },
    "1205": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4CE"
    },
    "1208": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1209": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1216": {
      "op": "SHL"
    },
    "1217": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1219": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1220": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x32"
    },
    "1222": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1224": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1225": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1227": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1229": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1230": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1231": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1233": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1234": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1235": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "MUL",
      "path": "3"
    },
    "1236": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1237": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1238": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1239": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "ADD",
      "path": "3"
    },
    "1240": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "ADD",
      "path": "3"
    },
    "1241": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2954
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1242": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 11,
      "value": "0x4E2"
    },
    "1245": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1246": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12AC"
    },
    "1249": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2886,
        2889
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1250": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1251": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1252": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "POP",
      "path": "3"
    },
    "1253": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x44D"
    },
    "1256": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1257": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1258": {
      "op": "POP"
    },
    "1259": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2982,
        2995
      ],
      "op": "SWAP4",
      "path": "3",
      "statement": 12
    },
    "1260": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1261": {
      "op": "POP"
    },
    "1262": {
      "op": "POP"
    },
    "1263": {
      "op": "POP"
    },
    "1264": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "o",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1265": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1266": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1273": {
      "op": "SHL"
    },
    "1274": {
      "op": "SUB"
    },
    "1275": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3172,
        3196
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 13
    },
    "1276": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3172,
        3196
      ],
      "op": "AND",
      "path": "3"
    },
    "1277": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3172,
        3196
      ],
      "op": "EQ",
      "path": "3"
    },
    "1278": {
      "branch": 44,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3172,
        3196
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1279": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x55C"
    },
    "1282": {
      "branch": 44,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1283": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1285": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1286": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1292": {
      "op": "SHL"
    },
    "1293": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1294": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1297": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1299": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1300": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "ADD",
      "path": "3"
    },
    "1301": {
      "op": "MSTORE"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1306": {
      "op": "DUP3"
    },
    "1307": {
      "op": "ADD"
    },
    "1308": {
      "op": "MSTORE"
    },
    "1309": {
      "op": "PUSH32",
      "value": "0x455243313135353A2073657474696E6720617070726F76616C20737461747573"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1344": {
      "op": "DUP3"
    },
    "1345": {
      "op": "ADD"
    },
    "1346": {
      "op": "MSTORE"
    },
    "1347": {
      "op": "PUSH9",
      "value": "0x103337B91039B2B633"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1359": {
      "op": "SHL"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1362": {
      "op": "DUP3"
    },
    "1363": {
      "op": "ADD"
    },
    "1364": {
      "op": "MSTORE"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1367": {
      "op": "ADD"
    },
    "1368": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E4"
    },
    "1371": {
      "op": "JUMP"
    },
    "1372": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1373": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1374": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 14,
      "value": "0x0"
    },
    "1376": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1377": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1378": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1379": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3271
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1381": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1383": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1384": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1385": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1386": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1388": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1389": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1390": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1397": {
      "op": "SHL"
    },
    "1398": {
      "op": "SUB"
    },
    "1399": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1400": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "AND",
      "path": "3"
    },
    "1401": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1402": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1403": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1404": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1405": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1406": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1407": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1408": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1409": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1410": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1411": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1412": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1415": {
      "op": "NOT"
    },
    "1416": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "AND",
      "path": "3"
    },
    "1417": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1418": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1419": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1420": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1421": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1422": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "OR",
      "path": "3"
    },
    "1423": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1424": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1425": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1426": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 15
    },
    "1427": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1428": {
      "op": "SWAP1"
    },
    "1429": {
      "op": "DUP2"
    },
    "1430": {
      "op": "MSTORE"
    },
    "1431": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1432": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1433": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1434": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "1467": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1468": {
      "op": "ADD"
    },
    "1469": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1471": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1472": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1473": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1474": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SUB",
      "path": "3"
    },
    "1475": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1476": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "LOG3",
      "path": "3"
    },
    "1477": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "POP",
      "path": "3"
    },
    "1478": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "POP",
      "path": "3"
    },
    "1479": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "o",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1480": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1487": {
      "op": "SHL"
    },
    "1488": {
      "op": "SUB"
    },
    "1489": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 16
    },
    "1490": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "AND",
      "path": "3"
    },
    "1491": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1492": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "EQ",
      "path": "3"
    },
    "1493": {
      "branch": 45,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1494": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3936
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5E4"
    },
    "1497": {
      "branch": 45,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3936
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1498": {
      "op": "POP"
    },
    "1499": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3900,
        3936
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5E4"
    },
    "1502": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3917,
        3921
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1503": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1504": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13B"
    },
    "1507": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1508": {
      "branch": 46,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3900,
        3936
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1509": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x642"
    },
    "1512": {
      "branch": 46,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1513": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1515": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1516": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1522": {
      "op": "SHL"
    },
    "1523": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1524": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1527": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1529": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1530": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "ADD",
      "path": "3"
    },
    "1531": {
      "op": "MSTORE"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1536": {
      "op": "DUP3"
    },
    "1537": {
      "op": "ADD"
    },
    "1538": {
      "op": "MSTORE"
    },
    "1539": {
      "op": "PUSH32",
      "value": "0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1574": {
      "op": "DUP3"
    },
    "1575": {
      "op": "ADD"
    },
    "1576": {
      "op": "MSTORE"
    },
    "1577": {
      "op": "PUSH9",
      "value": "0x8185C1C1C9BDD9959"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "1589": {
      "op": "SHL"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1592": {
      "op": "DUP3"
    },
    "1593": {
      "op": "ADD"
    },
    "1594": {
      "op": "MSTORE"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1597": {
      "op": "ADD"
    },
    "1598": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E4"
    },
    "1601": {
      "op": "JUMP"
    },
    "1602": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1603": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4013,
        4058
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 17,
      "value": "0x389"
    },
    "1606": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4031,
        4035
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1607": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4037,
        4039
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1608": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4041,
        4043
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1609": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4045,
        4051
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1610": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4053,
        4057
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1611": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4013,
        4030
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x848"
    },
    "1614": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4013,
        4058
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1615": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1616": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6380,
        6387
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 18
    },
    "1617": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6380,
        6394
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1618": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6366,
        6369
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1619": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6366,
        6376
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1620": {
      "branch": 47,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6366,
        6394
      ],
      "op": "EQ",
      "path": "3"
    },
    "1621": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6B1"
    },
    "1624": {
      "branch": 47,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1625": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1627": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1628": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1634": {
      "op": "SHL"
    },
    "1635": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1636": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1639": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1641": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1642": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "ADD",
      "path": "3"
    },
    "1643": {
      "op": "MSTORE"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1648": {
      "op": "DUP3"
    },
    "1649": {
      "op": "ADD"
    },
    "1650": {
      "op": "MSTORE"
    },
    "1651": {
      "op": "PUSH32",
      "value": "0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1686": {
      "op": "DUP3"
    },
    "1687": {
      "op": "ADD"
    },
    "1688": {
      "op": "MSTORE"
    },
    "1689": {
      "op": "PUSH8",
      "value": "0xDAD2E6DAC2E8C6D"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "1700": {
      "op": "SHL"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1703": {
      "op": "DUP3"
    },
    "1704": {
      "op": "ADD"
    },
    "1705": {
      "op": "MSTORE"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1708": {
      "op": "ADD"
    },
    "1709": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E4"
    },
    "1712": {
      "op": "JUMP"
    },
    "1713": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1720": {
      "op": "SHL"
    },
    "1721": {
      "op": "SUB"
    },
    "1722": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6457,
        6473
      ],
      "op": "DUP5",
      "path": "3",
      "statement": 19
    },
    "1723": {
      "branch": 48,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6457,
        6473
      ],
      "op": "AND",
      "path": "3"
    },
    "1724": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6D7"
    },
    "1727": {
      "branch": 48,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1728": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1730": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1731": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1737": {
      "op": "SHL"
    },
    "1738": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1739": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1740": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1742": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "ADD",
      "path": "3"
    },
    "1743": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E4"
    },
    "1746": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1747": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x117B"
    },
    "1750": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6449,
        6515
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1751": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1752": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1753": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6526,
        6542
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1755": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1756": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6663,
        6666
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1757": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6663,
        6673
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1758": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6659,
        6660
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1759": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6659,
        6673
      ],
      "op": "LT",
      "path": "3"
    },
    "1760": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1761": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7DA"
    },
    "1764": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1765": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6694,
        6704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1767": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6710
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1768": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6711,
        6712
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1769": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1770": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1771": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1772": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "LT",
      "path": "3"
    },
    "1773": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x706"
    },
    "1776": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1777": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1784": {
      "op": "SHL"
    },
    "1785": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1787": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1788": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x32"
    },
    "1790": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1792": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1793": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1795": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1797": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1798": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1799": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1801": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "MUL",
      "path": "3"
    },
    "1802": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1804": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "ADD",
      "path": "3"
    },
    "1805": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "ADD",
      "path": "3"
    },
    "1806": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1807": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6694,
        6713
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1808": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6694,
        6713
      ],
      "op": "POP",
      "path": "3"
    },
    "1809": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6727,
        6741
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1811": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6751
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1812": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6752,
        6753
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1813": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1814": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1815": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1816": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "LT",
      "path": "3"
    },
    "1817": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "1820": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1821": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1828": {
      "op": "SHL"
    },
    "1829": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1831": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1832": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x32"
    },
    "1834": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1836": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1837": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1839": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1841": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1842": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1843": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1845": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1846": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1847": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "MUL",
      "path": "3"
    },
    "1848": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1849": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1850": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1851": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "ADD",
      "path": "3"
    },
    "1852": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1853": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "ADD",
      "path": "3"
    },
    "1854": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1855": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6769,
        6788
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1857": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1858": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1859": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1860": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1861": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1862": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1863": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1865": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1866": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1867": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1874": {
      "op": "SHL"
    },
    "1875": {
      "op": "SUB"
    },
    "1876": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "DUP15",
      "path": "3"
    },
    "1877": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "AND",
      "path": "3"
    },
    "1878": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1879": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1880": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1881": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1882": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1883": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1884": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1885": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1886": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1887": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1888": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1889": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1890": {
      "op": "POP"
    },
    "1891": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 20
    },
    "1892": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1893": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "LT",
      "path": "3"
    },
    "1894": {
      "branch": 49,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1895": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x782"
    },
    "1898": {
      "branch": 49,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1899": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1901": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1902": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1908": {
      "op": "SHL"
    },
    "1909": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1910": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1911": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1913": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "ADD",
      "path": "3"
    },
    "1914": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E4"
    },
    "1917": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1918": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11C0"
    },
    "1921": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6824,
        6900
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1922": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1923": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6951
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 21,
      "value": "0x0"
    },
    "1925": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1926": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1927": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1928": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1930": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1931": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1932": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1933": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1935": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1936": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1937": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1944": {
      "op": "SHL"
    },
    "1945": {
      "op": "SUB"
    },
    "1946": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP15",
      "path": "3"
    },
    "1947": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1948": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "AND",
      "path": "3"
    },
    "1949": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1950": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1951": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1952": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1953": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1954": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1955": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1956": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1957": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1958": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "SUB",
      "path": "3"
    },
    "1959": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1960": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6984
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1961": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 22
    },
    "1962": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "DUP12",
      "path": "3"
    },
    "1963": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "AND",
      "path": "3"
    },
    "1964": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1965": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1966": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1967": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1968": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1969": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1970": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1971": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1972": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6951
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1973": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7BF"
    },
    "1976": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1977": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1978": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1979": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x122D"
    },
    "1982": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7012,
        7039
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1983": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1984": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1985": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "POP",
      "path": "3"
    },
    "1986": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "POP",
      "path": "3"
    },
    "1987": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1988": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1989": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1990": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "POP",
      "path": "3"
    },
    "1991": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "POP",
      "path": "3"
    },
    "1992": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "POP",
      "path": "3"
    },
    "1993": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "POP",
      "path": "3"
    },
    "1994": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 23
    },
    "1995": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7D3"
    },
    "1998": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1999": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12AC"
    },
    "2002": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6675,
        6678
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2003": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2004": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2005": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "POP",
      "path": "3"
    },
    "2006": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6DB"
    },
    "2009": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2010": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2011": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "POP",
      "path": "3"
    },
    "2012": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7095,
        7097
      ],
      "op": "DUP5",
      "path": "3",
      "statement": 24
    },
    "2013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2019": {
      "op": "SHL"
    },
    "2020": {
      "op": "SUB"
    },
    "2021": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "AND",
      "path": "3"
    },
    "2022": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7089,
        7093
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2029": {
      "op": "SHL"
    },
    "2030": {
      "op": "SUB"
    },
    "2031": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "AND",
      "path": "3"
    },
    "2032": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7079,
        7087
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2039": {
      "op": "SHL"
    },
    "2040": {
      "op": "SUB"
    },
    "2041": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "AND",
      "path": "3"
    },
    "2042": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "2075": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7099,
        7102
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2076": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7104,
        7111
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2077": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2079": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2080": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x82A"
    },
    "2083": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2084": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2085": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2086": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10F2"
    },
    "2089": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7065,
        7112
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2090": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2091": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2093": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2094": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2095": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2096": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SUB",
      "path": "3"
    },
    "2097": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2098": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "LOG4",
      "path": "3"
    },
    "2099": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7123,
        7198
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 25,
      "value": "0x840"
    },
    "2102": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7159,
        7167
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2103": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7169,
        7173
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2104": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7175,
        7177
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2105": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7179,
        7182
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2106": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7184,
        7191
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2107": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7193,
        7197
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2108": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7123,
        7158
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x96E"
    },
    "2111": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7123,
        7198
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2112": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7123,
        7198
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2113": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "3"
    },
    "2114": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "3"
    },
    "2115": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "3"
    },
    "2116": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "3"
    },
    "2117": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "3"
    },
    "2118": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "3"
    },
    "2119": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        6160,
        7205
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2120": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2127": {
      "op": "SHL"
    },
    "2128": {
      "op": "SUB"
    },
    "2129": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5198,
        5214
      ],
      "op": "DUP5",
      "path": "3",
      "statement": 26
    },
    "2130": {
      "branch": 50,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5198,
        5214
      ],
      "op": "AND",
      "path": "3"
    },
    "2131": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x86E"
    },
    "2134": {
      "branch": 50,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2135": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2137": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2138": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2144": {
      "op": "SHL"
    },
    "2145": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2146": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2147": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2149": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "ADD",
      "path": "3"
    },
    "2150": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E4"
    },
    "2153": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2154": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x117B"
    },
    "2157": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5190,
        5256
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2158": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2159": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2160": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5309,
        5405
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 27,
      "value": "0x887"
    },
    "2163": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2164": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5340,
        5344
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2165": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5348
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2166": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5350,
        5371
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x87E"
    },
    "2169": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5368,
        5370
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2170": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5350,
        5367
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAD9"
    },
    "2173": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5350,
        5371
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2174": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5350,
        5371
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2175": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5373,
        5398
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x389"
    },
    "2178": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5391,
        5397
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2179": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5373,
        5390
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAD9"
    },
    "2182": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5373,
        5398
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2183": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5309,
        5405
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2184": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5416,
        5435
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2186": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2187": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2188": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2189": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2191": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2192": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2193": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2194": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2196": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2197": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2198": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2205": {
      "op": "SHL"
    },
    "2206": {
      "op": "SUB"
    },
    "2207": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "DUP11",
      "path": "3"
    },
    "2208": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "AND",
      "path": "3"
    },
    "2209": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2210": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2211": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2212": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2213": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2214": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2215": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2216": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2217": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 28
    },
    "2218": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2219": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "LT",
      "path": "3"
    },
    "2220": {
      "branch": 51,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2221": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8C8"
    },
    "2224": {
      "branch": 51,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2225": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2227": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2228": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2234": {
      "op": "SHL"
    },
    "2235": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2236": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2237": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2239": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "ADD",
      "path": "3"
    },
    "2240": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E4"
    },
    "2243": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2244": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11C0"
    },
    "2247": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5467,
        5543
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2248": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2249": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5586
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 29,
      "value": "0x0"
    },
    "2251": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2252": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2253": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2254": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2256": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2257": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2258": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2259": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2261": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2262": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2263": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2268": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2270": {
      "op": "SHL"
    },
    "2271": {
      "op": "SUB"
    },
    "2272": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP12",
      "path": "3"
    },
    "2273": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2274": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "AND",
      "path": "3"
    },
    "2275": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2276": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2277": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2278": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2279": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2280": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2281": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2282": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2283": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2284": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "SUB",
      "path": "3"
    },
    "2285": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5619
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2286": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5619
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2287": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 30
    },
    "2288": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2289": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "AND",
      "path": "3"
    },
    "2290": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2291": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2292": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2293": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2294": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2295": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2296": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2297": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2298": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5586
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2299": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x905"
    },
    "2302": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2303": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2304": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2305": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x122D"
    },
    "2308": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5639,
        5666
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2309": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2310": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2311": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2312": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2313": {
      "op": "POP"
    },
    "2314": {
      "op": "POP"
    },
    "2315": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 31,
      "value": "0x40"
    },
    "2317": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2318": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2319": {
      "op": "DUP7"
    },
    "2320": {
      "op": "DUP2"
    },
    "2321": {
      "op": "MSTORE"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2324": {
      "op": "DUP2"
    },
    "2325": {
      "op": "ADD"
    },
    "2326": {
      "op": "DUP7"
    },
    "2327": {
      "op": "SWAP1"
    },
    "2328": {
      "op": "MSTORE"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2335": {
      "op": "SHL"
    },
    "2336": {
      "op": "SUB"
    },
    "2337": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2338": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP10",
      "path": "3"
    },
    "2339": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "AND",
      "path": "3"
    },
    "2340": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2341": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP11",
      "path": "3"
    },
    "2342": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2343": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "AND",
      "path": "3"
    },
    "2344": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2345": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2346": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2347": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "AND",
      "path": "3"
    },
    "2348": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2349": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "2382": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2383": {
      "op": "ADD"
    },
    "2384": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2386": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2387": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2388": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2389": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SUB",
      "path": "3"
    },
    "2390": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2391": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "LOG4",
      "path": "3"
    },
    "2392": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5739,
        5807
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 32,
      "value": "0x965"
    },
    "2395": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5770,
        5778
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2396": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5780,
        5784
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2397": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5786,
        5788
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2398": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5790,
        5792
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2399": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5794,
        5800
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2400": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5802,
        5806
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2401": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5739,
        5769
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB32"
    },
    "2404": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5739,
        5807
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2405": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5739,
        5807
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2406": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "3"
    },
    "2407": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "3"
    },
    "2408": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "3"
    },
    "2409": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "3"
    },
    "2410": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "3"
    },
    "2411": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "3"
    },
    "2412": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "3"
    },
    "2413": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "o",
      "offset": [
        5017,
        5814
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2414": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14024,
        14816
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2421": {
      "op": "SHL"
    },
    "2422": {
      "op": "SUB"
    },
    "2423": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14256,
        14269
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2424": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14256,
        14269
      ],
      "op": "AND",
      "path": "3"
    },
    "2425": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "2426": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "8",
      "statement": 33
    },
    "2427": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14252,
        14810
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x840"
    },
    "2430": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14252,
        14810
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2431": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2433": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2434": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2441": {
      "op": "SHL"
    },
    "2442": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2443": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2450": {
      "op": "SHL"
    },
    "2451": {
      "op": "SUB"
    },
    "2452": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2453": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "AND",
      "path": "3"
    },
    "2454": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2455": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xBC197C81"
    },
    "2460": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2461": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B2"
    },
    "2464": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2465": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14335,
        14343
      ],
      "op": "DUP10",
      "path": "3"
    },
    "2466": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14335,
        14343
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2467": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14345,
        14349
      ],
      "op": "DUP10",
      "path": "3"
    },
    "2468": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14345,
        14349
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2469": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14351,
        14354
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2470": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14351,
        14354
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2471": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14356,
        14363
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2472": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14356,
        14363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2473": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14365,
        14369
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2474": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14365,
        14369
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2475": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2477": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ADD",
      "path": "3"
    },
    "2478": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x103C"
    },
    "2481": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2482": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2483": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2485": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2487": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2488": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2489": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2490": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SUB",
      "path": "3"
    },
    "2491": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2492": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2494": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2495": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2496": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "2497": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2498": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2499": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2500": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9CC"
    },
    "2503": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2504": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2506": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2507": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2508": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2509": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "POP",
      "path": "3"
    },
    "2510": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "GAS",
      "path": "3"
    },
    "2511": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "CALL",
      "path": "3"
    },
    "2512": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2513": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "POP",
      "path": "3"
    },
    "2514": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "POP",
      "path": "3"
    },
    "2515": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "POP",
      "path": "3"
    },
    "2516": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2517": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2518": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9FC"
    },
    "2521": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2522": {
      "op": "POP"
    },
    "2523": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2525": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2526": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2527": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2529": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2530": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2531": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2532": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ADD",
      "path": "3"
    },
    "2533": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2535": {
      "op": "NOT"
    },
    "2536": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "AND",
      "path": "3"
    },
    "2537": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2538": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ADD",
      "path": "3"
    },
    "2539": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2540": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2541": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2542": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9F9"
    },
    "2545": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2546": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2547": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ADD",
      "path": "3"
    },
    "2548": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2549": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF83"
    },
    "2552": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2553": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2554": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2556": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2557": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAA9"
    },
    "2560": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2561": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA08"
    },
    "2564": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12F3"
    },
    "2567": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2568": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2569": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2570": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8C379A0"
    },
    "2575": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "EQ",
      "path": "3"
    },
    "2576": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2577": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA42"
    },
    "2580": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2581": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "POP",
      "path": "3"
    },
    "2582": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA1D"
    },
    "2585": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x130B"
    },
    "2588": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2589": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2590": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2591": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA28"
    },
    "2594": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2595": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "POP",
      "path": "3"
    },
    "2596": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA44"
    },
    "2599": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2600": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2601": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14676,
        14682
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 34
    },
    "2602": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2604": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2605": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2611": {
      "op": "SHL"
    },
    "2612": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2613": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2614": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2616": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "ADD",
      "path": "3"
    },
    "2617": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E4"
    },
    "2620": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2621": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2622": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1120"
    },
    "2625": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14669,
        14683
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2626": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2627": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "POP",
      "path": "3"
    },
    "2628": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2629": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 35,
      "value": "0x40"
    },
    "2631": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2632": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2638": {
      "op": "SHL"
    },
    "2639": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2640": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2643": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2645": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2646": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "ADD",
      "path": "3"
    },
    "2647": {
      "op": "MSTORE"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2652": {
      "op": "DUP3"
    },
    "2653": {
      "op": "ADD"
    },
    "2654": {
      "op": "MSTORE"
    },
    "2655": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2690": {
      "op": "DUP3"
    },
    "2691": {
      "op": "ADD"
    },
    "2692": {
      "op": "MSTORE"
    },
    "2693": {
      "op": "PUSH20",
      "value": "0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "2716": {
      "op": "SHL"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2719": {
      "op": "DUP3"
    },
    "2720": {
      "op": "ADD"
    },
    "2721": {
      "op": "MSTORE"
    },
    "2722": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2724": {
      "op": "ADD"
    },
    "2725": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E4"
    },
    "2728": {
      "op": "JUMP"
    },
    "2729": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2736": {
      "op": "SHL"
    },
    "2737": {
      "op": "SUB"
    },
    "2738": {
      "op": "NOT"
    },
    "2739": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14449,
        14509
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2740": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14449,
        14509
      ],
      "op": "AND",
      "path": "3"
    },
    "2741": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "2746": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2748": {
      "op": "SHL"
    },
    "2749": {
      "branch": 52,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14449,
        14509
      ],
      "op": "EQ",
      "path": "3"
    },
    "2750": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14445,
        14602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x965"
    },
    "2753": {
      "branch": 52,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14445,
        14602
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2754": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 36,
      "value": "0x40"
    },
    "2756": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2757": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2763": {
      "op": "SHL"
    },
    "2764": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2765": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2766": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2768": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "ADD",
      "path": "3"
    },
    "2769": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E4"
    },
    "2772": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2773": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1133"
    },
    "2776": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14533,
        14583
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2777": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14822,
        15015
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2778": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2780": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2781": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2782": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14955,
        14956
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2784": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2785": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2786": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2787": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2788": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2789": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "ADD",
      "path": "3"
    },
    "2790": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2791": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2792": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2793": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14888,
        14904
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2795": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14888,
        14904
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2796": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14916,
        14938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2798": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14916,
        14938
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2799": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2800": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2802": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2803": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2804": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "ADD",
      "path": "3"
    },
    "2805": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2806": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2807": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2808": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2809": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "CALLDATACOPY",
      "path": "3"
    },
    "2810": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "ADD",
      "path": "3"
    },
    "2811": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2812": {
      "op": "POP"
    },
    "2813": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "POP",
      "path": "3"
    },
    "2814": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14916,
        14957
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2815": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14916,
        14957
      ],
      "op": "POP",
      "path": "3"
    },
    "2816": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14978,
        14985
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 37
    },
    "2817": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14972
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2818": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14973,
        14974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2820": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2821": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2822": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2823": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "LT",
      "path": "3"
    },
    "2824": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB21"
    },
    "2827": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2828": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2835": {
      "op": "SHL"
    },
    "2836": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2838": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2839": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x32"
    },
    "2841": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2843": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2844": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "2846": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2848": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2849": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2850": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2852": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2853": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2854": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "MUL",
      "path": "3"
    },
    "2855": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2856": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2857": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2858": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "ADD",
      "path": "3"
    },
    "2859": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "ADD",
      "path": "3"
    },
    "2860": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14985
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2861": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15003,
        15008
      ],
      "op": "SWAP3",
      "path": "3",
      "statement": 38
    },
    "2862": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14822,
        15015
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2863": {
      "op": "POP"
    },
    "2864": {
      "op": "POP"
    },
    "2865": {
      "fn": "ERC1155._asSingletonArray",
      "jump": "o",
      "offset": [
        14822,
        15015
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2866": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13293,
        14018
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2873": {
      "op": "SHL"
    },
    "2874": {
      "op": "SUB"
    },
    "2875": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13500,
        13513
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2876": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13500,
        13513
      ],
      "op": "AND",
      "path": "3"
    },
    "2877": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "2878": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2879": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13496,
        14012
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x840"
    },
    "2882": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13496,
        14012
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2883": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2885": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2886": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2893": {
      "op": "SHL"
    },
    "2894": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2895": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2900": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2902": {
      "op": "SHL"
    },
    "2903": {
      "op": "SUB"
    },
    "2904": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2905": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "AND",
      "path": "3"
    },
    "2906": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2907": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF23A6E61"
    },
    "2912": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2913": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB76"
    },
    "2916": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2917": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13574,
        13582
      ],
      "op": "DUP10",
      "path": "3"
    },
    "2918": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13574,
        13582
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2919": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13584,
        13588
      ],
      "op": "DUP10",
      "path": "3"
    },
    "2920": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13584,
        13588
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2921": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13590,
        13592
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2922": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13590,
        13592
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2923": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13594,
        13600
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2924": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13594,
        13600
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2925": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13602,
        13606
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2926": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13602,
        13606
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2927": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2929": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "3"
    },
    "2930": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x109A"
    },
    "2933": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2934": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2935": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2937": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2939": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2940": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2941": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2942": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SUB",
      "path": "3"
    },
    "2943": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2944": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2946": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2947": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2948": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "2949": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2950": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2951": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2952": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB90"
    },
    "2955": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2956": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2958": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2959": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2960": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2961": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "POP",
      "path": "3"
    },
    "2962": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "GAS",
      "path": "3"
    },
    "2963": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "CALL",
      "path": "3"
    },
    "2964": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2965": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "POP",
      "path": "3"
    },
    "2966": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "POP",
      "path": "3"
    },
    "2967": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "POP",
      "path": "3"
    },
    "2968": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2969": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2970": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBC0"
    },
    "2973": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2974": {
      "op": "POP"
    },
    "2975": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2977": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2978": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2979": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2981": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2982": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2983": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2984": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "3"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2987": {
      "op": "NOT"
    },
    "2988": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "AND",
      "path": "3"
    },
    "2989": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2990": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "3"
    },
    "2991": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2992": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2993": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2994": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBBD"
    },
    "2997": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2998": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2999": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "3"
    },
    "3000": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3001": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF83"
    },
    "3004": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3005": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3006": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3008": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3009": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBCC"
    },
    "3012": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3013": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA08"
    },
    "3016": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12F3"
    },
    "3019": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3020": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3025": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3027": {
      "op": "SHL"
    },
    "3028": {
      "op": "SUB"
    },
    "3029": {
      "op": "NOT"
    },
    "3030": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13656,
        13711
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3031": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13656,
        13711
      ],
      "op": "AND",
      "path": "3"
    },
    "3032": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3039": {
      "op": "SHL"
    },
    "3040": {
      "branch": 53,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13656,
        13711
      ],
      "op": "EQ",
      "path": "3"
    },
    "3041": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13652,
        13804
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x965"
    },
    "3044": {
      "branch": 53,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13652,
        13804
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3045": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 39,
      "value": "0x40"
    },
    "3047": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3048": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3054": {
      "op": "SHL"
    },
    "3055": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3056": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3057": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3059": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "ADD",
      "path": "3"
    },
    "3060": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E4"
    },
    "3063": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3064": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1133"
    },
    "3067": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13735,
        13785
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3068": {
      "op": "JUMPDEST"
    },
    "3069": {
      "op": "DUP1"
    },
    "3070": {
      "op": "CALLDATALOAD"
    },
    "3071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3077": {
      "op": "SHL"
    },
    "3078": {
      "op": "SUB"
    },
    "3079": {
      "op": "DUP2"
    },
    "3080": {
      "op": "AND"
    },
    "3081": {
      "op": "DUP2"
    },
    "3082": {
      "op": "EQ"
    },
    "3083": {
      "op": "PUSH2",
      "value": "0xC13"
    },
    "3086": {
      "op": "JUMPI"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3089": {
      "op": "DUP1"
    },
    "3090": {
      "op": "REVERT"
    },
    "3091": {
      "op": "JUMPDEST"
    },
    "3092": {
      "op": "SWAP2"
    },
    "3093": {
      "op": "SWAP1"
    },
    "3094": {
      "op": "POP"
    },
    "3095": {
      "jump": "o",
      "op": "JUMP"
    },
    "3096": {
      "op": "JUMPDEST"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3099": {
      "op": "DUP3"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3102": {
      "op": "DUP4"
    },
    "3103": {
      "op": "ADD"
    },
    "3104": {
      "op": "SLT"
    },
    "3105": {
      "op": "PUSH2",
      "value": "0xC28"
    },
    "3108": {
      "op": "JUMPI"
    },
    "3109": {
      "op": "DUP1"
    },
    "3110": {
      "op": "DUP2"
    },
    "3111": {
      "op": "REVERT"
    },
    "3112": {
      "op": "JUMPDEST"
    },
    "3113": {
      "op": "DUP2"
    },
    "3114": {
      "op": "CALLDATALOAD"
    },
    "3115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3117": {
      "op": "PUSH2",
      "value": "0xC35"
    },
    "3120": {
      "op": "DUP3"
    },
    "3121": {
      "op": "PUSH2",
      "value": "0x120A"
    },
    "3124": {
      "jump": "i",
      "op": "JUMP"
    },
    "3125": {
      "op": "JUMPDEST"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3128": {
      "op": "MLOAD"
    },
    "3129": {
      "op": "PUSH2",
      "value": "0xC42"
    },
    "3132": {
      "op": "DUP3"
    },
    "3133": {
      "op": "DUP3"
    },
    "3134": {
      "op": "PUSH2",
      "value": "0x1280"
    },
    "3137": {
      "jump": "i",
      "op": "JUMP"
    },
    "3138": {
      "op": "JUMPDEST"
    },
    "3139": {
      "op": "DUP4"
    },
    "3140": {
      "op": "DUP2"
    },
    "3141": {
      "op": "MSTORE"
    },
    "3142": {
      "op": "DUP3"
    },
    "3143": {
      "op": "DUP2"
    },
    "3144": {
      "op": "ADD"
    },
    "3145": {
      "op": "SWAP2"
    },
    "3146": {
      "op": "POP"
    },
    "3147": {
      "op": "DUP6"
    },
    "3148": {
      "op": "DUP4"
    },
    "3149": {
      "op": "ADD"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3152": {
      "op": "DUP6"
    },
    "3153": {
      "op": "SWAP1"
    },
    "3154": {
      "op": "SHL"
    },
    "3155": {
      "op": "DUP8"
    },
    "3156": {
      "op": "ADD"
    },
    "3157": {
      "op": "DUP5"
    },
    "3158": {
      "op": "ADD"
    },
    "3159": {
      "op": "DUP9"
    },
    "3160": {
      "op": "LT"
    },
    "3161": {
      "op": "ISZERO"
    },
    "3162": {
      "op": "PUSH2",
      "value": "0xC61"
    },
    "3165": {
      "op": "JUMPI"
    },
    "3166": {
      "op": "DUP6"
    },
    "3167": {
      "op": "DUP7"
    },
    "3168": {
      "op": "REVERT"
    },
    "3169": {
      "op": "JUMPDEST"
    },
    "3170": {
      "op": "DUP6"
    },
    "3171": {
      "op": "JUMPDEST"
    },
    "3172": {
      "op": "DUP6"
    },
    "3173": {
      "op": "DUP2"
    },
    "3174": {
      "op": "LT"
    },
    "3175": {
      "op": "ISZERO"
    },
    "3176": {
      "op": "PUSH2",
      "value": "0xC7F"
    },
    "3179": {
      "op": "JUMPI"
    },
    "3180": {
      "op": "DUP2"
    },
    "3181": {
      "op": "CALLDATALOAD"
    },
    "3182": {
      "op": "DUP5"
    },
    "3183": {
      "op": "MSTORE"
    },
    "3184": {
      "op": "SWAP3"
    },
    "3185": {
      "op": "DUP5"
    },
    "3186": {
      "op": "ADD"
    },
    "3187": {
      "op": "SWAP3"
    },
    "3188": {
      "op": "SWAP1"
    },
    "3189": {
      "op": "DUP5"
    },
    "3190": {
      "op": "ADD"
    },
    "3191": {
      "op": "SWAP1"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3194": {
      "op": "ADD"
    },
    "3195": {
      "op": "PUSH2",
      "value": "0xC63"
    },
    "3198": {
      "op": "JUMP"
    },
    "3199": {
      "op": "JUMPDEST"
    },
    "3200": {
      "op": "POP"
    },
    "3201": {
      "op": "SWAP1"
    },
    "3202": {
      "op": "SWAP8"
    },
    "3203": {
      "op": "SWAP7"
    },
    "3204": {
      "op": "POP"
    },
    "3205": {
      "op": "POP"
    },
    "3206": {
      "op": "POP"
    },
    "3207": {
      "op": "POP"
    },
    "3208": {
      "op": "POP"
    },
    "3209": {
      "op": "POP"
    },
    "3210": {
      "op": "POP"
    },
    "3211": {
      "jump": "o",
      "op": "JUMP"
    },
    "3212": {
      "op": "JUMPDEST"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3215": {
      "op": "DUP3"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3218": {
      "op": "DUP4"
    },
    "3219": {
      "op": "ADD"
    },
    "3220": {
      "op": "SLT"
    },
    "3221": {
      "op": "PUSH2",
      "value": "0xC9C"
    },
    "3224": {
      "op": "JUMPI"
    },
    "3225": {
      "op": "DUP1"
    },
    "3226": {
      "op": "DUP2"
    },
    "3227": {
      "op": "REVERT"
    },
    "3228": {
      "op": "JUMPDEST"
    },
    "3229": {
      "op": "DUP2"
    },
    "3230": {
      "op": "CALLDATALOAD"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3237": {
      "op": "SHL"
    },
    "3238": {
      "op": "SUB"
    },
    "3239": {
      "op": "DUP2"
    },
    "3240": {
      "op": "GT"
    },
    "3241": {
      "op": "ISZERO"
    },
    "3242": {
      "op": "PUSH2",
      "value": "0xCB5"
    },
    "3245": {
      "op": "JUMPI"
    },
    "3246": {
      "op": "PUSH2",
      "value": "0xCB5"
    },
    "3249": {
      "op": "PUSH2",
      "value": "0x12DD"
    },
    "3252": {
      "jump": "i",
      "op": "JUMP"
    },
    "3253": {
      "op": "JUMPDEST"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3256": {
      "op": "MLOAD"
    },
    "3257": {
      "op": "PUSH2",
      "value": "0xCCC"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3262": {
      "op": "DUP4"
    },
    "3263": {
      "op": "ADD"
    },
    "3264": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3266": {
      "op": "NOT"
    },
    "3267": {
      "op": "AND"
    },
    "3268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3270": {
      "op": "ADD"
    },
    "3271": {
      "op": "DUP3"
    },
    "3272": {
      "op": "PUSH2",
      "value": "0x1280"
    },
    "3275": {
      "jump": "i",
      "op": "JUMP"
    },
    "3276": {
      "op": "JUMPDEST"
    },
    "3277": {
      "op": "DUP2"
    },
    "3278": {
      "op": "DUP2"
    },
    "3279": {
      "op": "MSTORE"
    },
    "3280": {
      "op": "DUP5"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3283": {
      "op": "DUP4"
    },
    "3284": {
      "op": "DUP7"
    },
    "3285": {
      "op": "ADD"
    },
    "3286": {
      "op": "ADD"
    },
    "3287": {
      "op": "GT"
    },
    "3288": {
      "op": "ISZERO"
    },
    "3289": {
      "op": "PUSH2",
      "value": "0xCE0"
    },
    "3292": {
      "op": "JUMPI"
    },
    "3293": {
      "op": "DUP3"
    },
    "3294": {
      "op": "DUP4"
    },
    "3295": {
      "op": "REVERT"
    },
    "3296": {
      "op": "JUMPDEST"
    },
    "3297": {
      "op": "DUP2"
    },
    "3298": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3300": {
      "op": "DUP6"
    },
    "3301": {
      "op": "ADD"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3304": {
      "op": "DUP4"
    },
    "3305": {
      "op": "ADD"
    },
    "3306": {
      "op": "CALLDATACOPY"
    },
    "3307": {
      "op": "SWAP1"
    },
    "3308": {
      "op": "DUP2"
    },
    "3309": {
      "op": "ADD"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3312": {
      "op": "ADD"
    },
    "3313": {
      "op": "SWAP2"
    },
    "3314": {
      "op": "SWAP1"
    },
    "3315": {
      "op": "SWAP2"
    },
    "3316": {
      "op": "MSTORE"
    },
    "3317": {
      "op": "SWAP3"
    },
    "3318": {
      "op": "SWAP2"
    },
    "3319": {
      "op": "POP"
    },
    "3320": {
      "op": "POP"
    },
    "3321": {
      "jump": "o",
      "op": "JUMP"
    },
    "3322": {
      "op": "JUMPDEST"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3325": {
      "op": "DUP1"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3328": {
      "op": "DUP4"
    },
    "3329": {
      "op": "DUP6"
    },
    "3330": {
      "op": "SUB"
    },
    "3331": {
      "op": "SLT"
    },
    "3332": {
      "op": "ISZERO"
    },
    "3333": {
      "op": "PUSH2",
      "value": "0xD0C"
    },
    "3336": {
      "op": "JUMPI"
    },
    "3337": {
      "op": "DUP2"
    },
    "3338": {
      "op": "DUP3"
    },
    "3339": {
      "op": "REVERT"
    },
    "3340": {
      "op": "JUMPDEST"
    },
    "3341": {
      "op": "PUSH2",
      "value": "0xD15"
    },
    "3344": {
      "op": "DUP4"
    },
    "3345": {
      "op": "PUSH2",
      "value": "0xBFC"
    },
    "3348": {
      "jump": "i",
      "op": "JUMP"
    },
    "3349": {
      "op": "JUMPDEST"
    },
    "3350": {
      "op": "SWAP2"
    },
    "3351": {
      "op": "POP"
    },
    "3352": {
      "op": "PUSH2",
      "value": "0xD23"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3357": {
      "op": "DUP5"
    },
    "3358": {
      "op": "ADD"
    },
    "3359": {
      "op": "PUSH2",
      "value": "0xBFC"
    },
    "3362": {
      "jump": "i",
      "op": "JUMP"
    },
    "3363": {
      "op": "JUMPDEST"
    },
    "3364": {
      "op": "SWAP1"
    },
    "3365": {
      "op": "POP"
    },
    "3366": {
      "op": "SWAP3"
    },
    "3367": {
      "op": "POP"
    },
    "3368": {
      "op": "SWAP3"
    },
    "3369": {
      "op": "SWAP1"
    },
    "3370": {
      "op": "POP"
    },
    "3371": {
      "jump": "o",
      "op": "JUMP"
    },
    "3372": {
      "op": "JUMPDEST"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3375": {
      "op": "DUP1"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3378": {
      "op": "DUP1"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3383": {
      "op": "DUP7"
    },
    "3384": {
      "op": "DUP9"
    },
    "3385": {
      "op": "SUB"
    },
    "3386": {
      "op": "SLT"
    },
    "3387": {
      "op": "ISZERO"
    },
    "3388": {
      "op": "PUSH2",
      "value": "0xD43"
    },
    "3391": {
      "op": "JUMPI"
    },
    "3392": {
      "op": "DUP1"
    },
    "3393": {
      "op": "DUP2"
    },
    "3394": {
      "op": "REVERT"
    },
    "3395": {
      "op": "JUMPDEST"
    },
    "3396": {
      "op": "PUSH2",
      "value": "0xD4C"
    },
    "3399": {
      "op": "DUP7"
    },
    "3400": {
      "op": "PUSH2",
      "value": "0xBFC"
    },
    "3403": {
      "jump": "i",
      "op": "JUMP"
    },
    "3404": {
      "op": "JUMPDEST"
    },
    "3405": {
      "op": "SWAP5"
    },
    "3406": {
      "op": "POP"
    },
    "3407": {
      "op": "PUSH2",
      "value": "0xD5A"
    },
    "3410": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3412": {
      "op": "DUP8"
    },
    "3413": {
      "op": "ADD"
    },
    "3414": {
      "op": "PUSH2",
      "value": "0xBFC"
    },
    "3417": {
      "jump": "i",
      "op": "JUMP"
    },
    "3418": {
      "op": "JUMPDEST"
    },
    "3419": {
      "op": "SWAP4"
    },
    "3420": {
      "op": "POP"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3423": {
      "op": "DUP7"
    },
    "3424": {
      "op": "ADD"
    },
    "3425": {
      "op": "CALLDATALOAD"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3432": {
      "op": "SHL"
    },
    "3433": {
      "op": "SUB"
    },
    "3434": {
      "op": "DUP1"
    },
    "3435": {
      "op": "DUP3"
    },
    "3436": {
      "op": "GT"
    },
    "3437": {
      "op": "ISZERO"
    },
    "3438": {
      "op": "PUSH2",
      "value": "0xD75"
    },
    "3441": {
      "op": "JUMPI"
    },
    "3442": {
      "op": "DUP3"
    },
    "3443": {
      "op": "DUP4"
    },
    "3444": {
      "op": "REVERT"
    },
    "3445": {
      "op": "JUMPDEST"
    },
    "3446": {
      "op": "PUSH2",
      "value": "0xD81"
    },
    "3449": {
      "op": "DUP10"
    },
    "3450": {
      "op": "DUP4"
    },
    "3451": {
      "op": "DUP11"
    },
    "3452": {
      "op": "ADD"
    },
    "3453": {
      "op": "PUSH2",
      "value": "0xC18"
    },
    "3456": {
      "jump": "i",
      "op": "JUMP"
    },
    "3457": {
      "op": "JUMPDEST"
    },
    "3458": {
      "op": "SWAP5"
    },
    "3459": {
      "op": "POP"
    },
    "3460": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3462": {
      "op": "DUP9"
    },
    "3463": {
      "op": "ADD"
    },
    "3464": {
      "op": "CALLDATALOAD"
    },
    "3465": {
      "op": "SWAP2"
    },
    "3466": {
      "op": "POP"
    },
    "3467": {
      "op": "DUP1"
    },
    "3468": {
      "op": "DUP3"
    },
    "3469": {
      "op": "GT"
    },
    "3470": {
      "op": "ISZERO"
    },
    "3471": {
      "op": "PUSH2",
      "value": "0xD96"
    },
    "3474": {
      "op": "JUMPI"
    },
    "3475": {
      "op": "DUP3"
    },
    "3476": {
      "op": "DUP4"
    },
    "3477": {
      "op": "REVERT"
    },
    "3478": {
      "op": "JUMPDEST"
    },
    "3479": {
      "op": "PUSH2",
      "value": "0xDA2"
    },
    "3482": {
      "op": "DUP10"
    },
    "3483": {
      "op": "DUP4"
    },
    "3484": {
      "op": "DUP11"
    },
    "3485": {
      "op": "ADD"
    },
    "3486": {
      "op": "PUSH2",
      "value": "0xC18"
    },
    "3489": {
      "jump": "i",
      "op": "JUMP"
    },
    "3490": {
      "op": "JUMPDEST"
    },
    "3491": {
      "op": "SWAP4"
    },
    "3492": {
      "op": "POP"
    },
    "3493": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3495": {
      "op": "DUP9"
    },
    "3496": {
      "op": "ADD"
    },
    "3497": {
      "op": "CALLDATALOAD"
    },
    "3498": {
      "op": "SWAP2"
    },
    "3499": {
      "op": "POP"
    },
    "3500": {
      "op": "DUP1"
    },
    "3501": {
      "op": "DUP3"
    },
    "3502": {
      "op": "GT"
    },
    "3503": {
      "op": "ISZERO"
    },
    "3504": {
      "op": "PUSH2",
      "value": "0xDB7"
    },
    "3507": {
      "op": "JUMPI"
    },
    "3508": {
      "op": "DUP3"
    },
    "3509": {
      "op": "DUP4"
    },
    "3510": {
      "op": "REVERT"
    },
    "3511": {
      "op": "JUMPDEST"
    },
    "3512": {
      "op": "POP"
    },
    "3513": {
      "op": "PUSH2",
      "value": "0xDC4"
    },
    "3516": {
      "op": "DUP9"
    },
    "3517": {
      "op": "DUP3"
    },
    "3518": {
      "op": "DUP10"
    },
    "3519": {
      "op": "ADD"
    },
    "3520": {
      "op": "PUSH2",
      "value": "0xC8C"
    },
    "3523": {
      "jump": "i",
      "op": "JUMP"
    },
    "3524": {
      "op": "JUMPDEST"
    },
    "3525": {
      "op": "SWAP2"
    },
    "3526": {
      "op": "POP"
    },
    "3527": {
      "op": "POP"
    },
    "3528": {
      "op": "SWAP3"
    },
    "3529": {
      "op": "SWAP6"
    },
    "3530": {
      "op": "POP"
    },
    "3531": {
      "op": "SWAP3"
    },
    "3532": {
      "op": "SWAP6"
    },
    "3533": {
      "op": "SWAP1"
    },
    "3534": {
      "op": "SWAP4"
    },
    "3535": {
      "op": "POP"
    },
    "3536": {
      "jump": "o",
      "op": "JUMP"
    },
    "3537": {
      "op": "JUMPDEST"
    },
    "3538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3540": {
      "op": "DUP1"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3543": {
      "op": "DUP1"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3548": {
      "op": "DUP7"
    },
    "3549": {
      "op": "DUP9"
    },
    "3550": {
      "op": "SUB"
    },
    "3551": {
      "op": "SLT"
    },
    "3552": {
      "op": "ISZERO"
    },
    "3553": {
      "op": "PUSH2",
      "value": "0xDE8"
    },
    "3556": {
      "op": "JUMPI"
    },
    "3557": {
      "op": "DUP1"
    },
    "3558": {
      "op": "DUP2"
    },
    "3559": {
      "op": "REVERT"
    },
    "3560": {
      "op": "JUMPDEST"
    },
    "3561": {
      "op": "PUSH2",
      "value": "0xDF1"
    },
    "3564": {
      "op": "DUP7"
    },
    "3565": {
      "op": "PUSH2",
      "value": "0xBFC"
    },
    "3568": {
      "jump": "i",
      "op": "JUMP"
    },
    "3569": {
      "op": "JUMPDEST"
    },
    "3570": {
      "op": "SWAP5"
    },
    "3571": {
      "op": "POP"
    },
    "3572": {
      "op": "PUSH2",
      "value": "0xDFF"
    },
    "3575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3577": {
      "op": "DUP8"
    },
    "3578": {
      "op": "ADD"
    },
    "3579": {
      "op": "PUSH2",
      "value": "0xBFC"
    },
    "3582": {
      "jump": "i",
      "op": "JUMP"
    },
    "3583": {
      "op": "JUMPDEST"
    },
    "3584": {
      "op": "SWAP4"
    },
    "3585": {
      "op": "POP"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3588": {
      "op": "DUP7"
    },
    "3589": {
      "op": "ADD"
    },
    "3590": {
      "op": "CALLDATALOAD"
    },
    "3591": {
      "op": "SWAP3"
    },
    "3592": {
      "op": "POP"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3595": {
      "op": "DUP7"
    },
    "3596": {
      "op": "ADD"
    },
    "3597": {
      "op": "CALLDATALOAD"
    },
    "3598": {
      "op": "SWAP2"
    },
    "3599": {
      "op": "POP"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3602": {
      "op": "DUP7"
    },
    "3603": {
      "op": "ADD"
    },
    "3604": {
      "op": "CALLDATALOAD"
    },
    "3605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3611": {
      "op": "SHL"
    },
    "3612": {
      "op": "SUB"
    },
    "3613": {
      "op": "DUP2"
    },
    "3614": {
      "op": "GT"
    },
    "3615": {
      "op": "ISZERO"
    },
    "3616": {
      "op": "PUSH2",
      "value": "0xE27"
    },
    "3619": {
      "op": "JUMPI"
    },
    "3620": {
      "op": "DUP2"
    },
    "3621": {
      "op": "DUP3"
    },
    "3622": {
      "op": "REVERT"
    },
    "3623": {
      "op": "JUMPDEST"
    },
    "3624": {
      "op": "PUSH2",
      "value": "0xDC4"
    },
    "3627": {
      "op": "DUP9"
    },
    "3628": {
      "op": "DUP3"
    },
    "3629": {
      "op": "DUP10"
    },
    "3630": {
      "op": "ADD"
    },
    "3631": {
      "op": "PUSH2",
      "value": "0xC8C"
    },
    "3634": {
      "jump": "i",
      "op": "JUMP"
    },
    "3635": {
      "op": "JUMPDEST"
    },
    "3636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3638": {
      "op": "DUP1"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3641": {
      "op": "DUP4"
    },
    "3642": {
      "op": "DUP6"
    },
    "3643": {
      "op": "SUB"
    },
    "3644": {
      "op": "SLT"
    },
    "3645": {
      "op": "ISZERO"
    },
    "3646": {
      "op": "PUSH2",
      "value": "0xE45"
    },
    "3649": {
      "op": "JUMPI"
    },
    "3650": {
      "op": "DUP2"
    },
    "3651": {
      "op": "DUP3"
    },
    "3652": {
      "op": "REVERT"
    },
    "3653": {
      "op": "JUMPDEST"
    },
    "3654": {
      "op": "PUSH2",
      "value": "0xE4E"
    },
    "3657": {
      "op": "DUP4"
    },
    "3658": {
      "op": "PUSH2",
      "value": "0xBFC"
    },
    "3661": {
      "jump": "i",
      "op": "JUMP"
    },
    "3662": {
      "op": "JUMPDEST"
    },
    "3663": {
      "op": "SWAP2"
    },
    "3664": {
      "op": "POP"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3667": {
      "op": "DUP4"
    },
    "3668": {
      "op": "ADD"
    },
    "3669": {
      "op": "CALLDATALOAD"
    },
    "3670": {
      "op": "DUP1"
    },
    "3671": {
      "op": "ISZERO"
    },
    "3672": {
      "op": "ISZERO"
    },
    "3673": {
      "op": "DUP2"
    },
    "3674": {
      "op": "EQ"
    },
    "3675": {
      "op": "PUSH2",
      "value": "0xE62"
    },
    "3678": {
      "op": "JUMPI"
    },
    "3679": {
      "op": "DUP2"
    },
    "3680": {
      "op": "DUP3"
    },
    "3681": {
      "op": "REVERT"
    },
    "3682": {
      "op": "JUMPDEST"
    },
    "3683": {
      "op": "DUP1"
    },
    "3684": {
      "op": "SWAP2"
    },
    "3685": {
      "op": "POP"
    },
    "3686": {
      "op": "POP"
    },
    "3687": {
      "op": "SWAP3"
    },
    "3688": {
      "op": "POP"
    },
    "3689": {
      "op": "SWAP3"
    },
    "3690": {
      "op": "SWAP1"
    },
    "3691": {
      "op": "POP"
    },
    "3692": {
      "jump": "o",
      "op": "JUMP"
    },
    "3693": {
      "op": "JUMPDEST"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3696": {
      "op": "DUP1"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3699": {
      "op": "DUP4"
    },
    "3700": {
      "op": "DUP6"
    },
    "3701": {
      "op": "SUB"
    },
    "3702": {
      "op": "SLT"
    },
    "3703": {
      "op": "ISZERO"
    },
    "3704": {
      "op": "PUSH2",
      "value": "0xE7F"
    },
    "3707": {
      "op": "JUMPI"
    },
    "3708": {
      "op": "DUP2"
    },
    "3709": {
      "op": "DUP3"
    },
    "3710": {
      "op": "REVERT"
    },
    "3711": {
      "op": "JUMPDEST"
    },
    "3712": {
      "op": "PUSH2",
      "value": "0xE88"
    },
    "3715": {
      "op": "DUP4"
    },
    "3716": {
      "op": "PUSH2",
      "value": "0xBFC"
    },
    "3719": {
      "jump": "i",
      "op": "JUMP"
    },
    "3720": {
      "op": "JUMPDEST"
    },
    "3721": {
      "op": "SWAP5"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3724": {
      "op": "SWAP4"
    },
    "3725": {
      "op": "SWAP1"
    },
    "3726": {
      "op": "SWAP4"
    },
    "3727": {
      "op": "ADD"
    },
    "3728": {
      "op": "CALLDATALOAD"
    },
    "3729": {
      "op": "SWAP4"
    },
    "3730": {
      "op": "POP"
    },
    "3731": {
      "op": "POP"
    },
    "3732": {
      "op": "POP"
    },
    "3733": {
      "jump": "o",
      "op": "JUMP"
    },
    "3734": {
      "op": "JUMPDEST"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3737": {
      "op": "DUP1"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3740": {
      "op": "DUP4"
    },
    "3741": {
      "op": "DUP6"
    },
    "3742": {
      "op": "SUB"
    },
    "3743": {
      "op": "SLT"
    },
    "3744": {
      "op": "ISZERO"
    },
    "3745": {
      "op": "PUSH2",
      "value": "0xEA8"
    },
    "3748": {
      "op": "JUMPI"
    },
    "3749": {
      "op": "DUP2"
    },
    "3750": {
      "op": "DUP3"
    },
    "3751": {
      "op": "REVERT"
    },
    "3752": {
      "op": "JUMPDEST"
    },
    "3753": {
      "op": "DUP3"
    },
    "3754": {
      "op": "CALLDATALOAD"
    },
    "3755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3761": {
      "op": "SHL"
    },
    "3762": {
      "op": "SUB"
    },
    "3763": {
      "op": "DUP1"
    },
    "3764": {
      "op": "DUP3"
    },
    "3765": {
      "op": "GT"
    },
    "3766": {
      "op": "ISZERO"
    },
    "3767": {
      "op": "PUSH2",
      "value": "0xEBE"
    },
    "3770": {
      "op": "JUMPI"
    },
    "3771": {
      "op": "DUP4"
    },
    "3772": {
      "op": "DUP5"
    },
    "3773": {
      "op": "REVERT"
    },
    "3774": {
      "op": "JUMPDEST"
    },
    "3775": {
      "op": "DUP2"
    },
    "3776": {
      "op": "DUP6"
    },
    "3777": {
      "op": "ADD"
    },
    "3778": {
      "op": "SWAP2"
    },
    "3779": {
      "op": "POP"
    },
    "3780": {
      "op": "DUP6"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3783": {
      "op": "DUP4"
    },
    "3784": {
      "op": "ADD"
    },
    "3785": {
      "op": "SLT"
    },
    "3786": {
      "op": "PUSH2",
      "value": "0xED1"
    },
    "3789": {
      "op": "JUMPI"
    },
    "3790": {
      "op": "DUP4"
    },
    "3791": {
      "op": "DUP5"
    },
    "3792": {
      "op": "REVERT"
    },
    "3793": {
      "op": "JUMPDEST"
    },
    "3794": {
      "op": "DUP2"
    },
    "3795": {
      "op": "CALLDATALOAD"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3798": {
      "op": "PUSH2",
      "value": "0xEDE"
    },
    "3801": {
      "op": "DUP3"
    },
    "3802": {
      "op": "PUSH2",
      "value": "0x120A"
    },
    "3805": {
      "jump": "i",
      "op": "JUMP"
    },
    "3806": {
      "op": "JUMPDEST"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3809": {
      "op": "MLOAD"
    },
    "3810": {
      "op": "PUSH2",
      "value": "0xEEB"
    },
    "3813": {
      "op": "DUP3"
    },
    "3814": {
      "op": "DUP3"
    },
    "3815": {
      "op": "PUSH2",
      "value": "0x1280"
    },
    "3818": {
      "jump": "i",
      "op": "JUMP"
    },
    "3819": {
      "op": "JUMPDEST"
    },
    "3820": {
      "op": "DUP4"
    },
    "3821": {
      "op": "DUP2"
    },
    "3822": {
      "op": "MSTORE"
    },
    "3823": {
      "op": "DUP3"
    },
    "3824": {
      "op": "DUP2"
    },
    "3825": {
      "op": "ADD"
    },
    "3826": {
      "op": "SWAP2"
    },
    "3827": {
      "op": "POP"
    },
    "3828": {
      "op": "DUP6"
    },
    "3829": {
      "op": "DUP4"
    },
    "3830": {
      "op": "ADD"
    },
    "3831": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3833": {
      "op": "DUP6"
    },
    "3834": {
      "op": "SWAP1"
    },
    "3835": {
      "op": "SHL"
    },
    "3836": {
      "op": "DUP8"
    },
    "3837": {
      "op": "ADD"
    },
    "3838": {
      "op": "DUP5"
    },
    "3839": {
      "op": "ADD"
    },
    "3840": {
      "op": "DUP12"
    },
    "3841": {
      "op": "LT"
    },
    "3842": {
      "op": "ISZERO"
    },
    "3843": {
      "op": "PUSH2",
      "value": "0xF0A"
    },
    "3846": {
      "op": "JUMPI"
    },
    "3847": {
      "op": "DUP9"
    },
    "3848": {
      "op": "DUP10"
    },
    "3849": {
      "op": "REVERT"
    },
    "3850": {
      "op": "JUMPDEST"
    },
    "3851": {
      "op": "DUP9"
    },
    "3852": {
      "op": "SWAP7"
    },
    "3853": {
      "op": "POP"
    },
    "3854": {
      "op": "JUMPDEST"
    },
    "3855": {
      "op": "DUP5"
    },
    "3856": {
      "op": "DUP8"
    },
    "3857": {
      "op": "LT"
    },
    "3858": {
      "op": "ISZERO"
    },
    "3859": {
      "op": "PUSH2",
      "value": "0xF33"
    },
    "3862": {
      "op": "JUMPI"
    },
    "3863": {
      "op": "PUSH2",
      "value": "0xF1F"
    },
    "3866": {
      "op": "DUP2"
    },
    "3867": {
      "op": "PUSH2",
      "value": "0xBFC"
    },
    "3870": {
      "jump": "i",
      "op": "JUMP"
    },
    "3871": {
      "op": "JUMPDEST"
    },
    "3872": {
      "op": "DUP4"
    },
    "3873": {
      "op": "MSTORE"
    },
    "3874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3876": {
      "op": "SWAP7"
    },
    "3877": {
      "op": "SWAP1"
    },
    "3878": {
      "op": "SWAP7"
    },
    "3879": {
      "op": "ADD"
    },
    "3880": {
      "op": "SWAP6"
    },
    "3881": {
      "op": "SWAP2"
    },
    "3882": {
      "op": "DUP4"
    },
    "3883": {
      "op": "ADD"
    },
    "3884": {
      "op": "SWAP2"
    },
    "3885": {
      "op": "DUP4"
    },
    "3886": {
      "op": "ADD"
    },
    "3887": {
      "op": "PUSH2",
      "value": "0xF0E"
    },
    "3890": {
      "op": "JUMP"
    },
    "3891": {
      "op": "JUMPDEST"
    },
    "3892": {
      "op": "POP"
    },
    "3893": {
      "op": "SWAP7"
    },
    "3894": {
      "op": "POP"
    },
    "3895": {
      "op": "POP"
    },
    "3896": {
      "op": "DUP7"
    },
    "3897": {
      "op": "ADD"
    },
    "3898": {
      "op": "CALLDATALOAD"
    },
    "3899": {
      "op": "SWAP3"
    },
    "3900": {
      "op": "POP"
    },
    "3901": {
      "op": "POP"
    },
    "3902": {
      "op": "DUP1"
    },
    "3903": {
      "op": "DUP3"
    },
    "3904": {
      "op": "GT"
    },
    "3905": {
      "op": "ISZERO"
    },
    "3906": {
      "op": "PUSH2",
      "value": "0xF49"
    },
    "3909": {
      "op": "JUMPI"
    },
    "3910": {
      "op": "DUP3"
    },
    "3911": {
      "op": "DUP4"
    },
    "3912": {
      "op": "REVERT"
    },
    "3913": {
      "op": "JUMPDEST"
    },
    "3914": {
      "op": "POP"
    },
    "3915": {
      "op": "PUSH2",
      "value": "0xF56"
    },
    "3918": {
      "op": "DUP6"
    },
    "3919": {
      "op": "DUP3"
    },
    "3920": {
      "op": "DUP7"
    },
    "3921": {
      "op": "ADD"
    },
    "3922": {
      "op": "PUSH2",
      "value": "0xC18"
    },
    "3925": {
      "jump": "i",
      "op": "JUMP"
    },
    "3926": {
      "op": "JUMPDEST"
    },
    "3927": {
      "op": "SWAP2"
    },
    "3928": {
      "op": "POP"
    },
    "3929": {
      "op": "POP"
    },
    "3930": {
      "op": "SWAP3"
    },
    "3931": {
      "op": "POP"
    },
    "3932": {
      "op": "SWAP3"
    },
    "3933": {
      "op": "SWAP1"
    },
    "3934": {
      "op": "POP"
    },
    "3935": {
      "jump": "o",
      "op": "JUMP"
    },
    "3936": {
      "op": "JUMPDEST"
    },
    "3937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3941": {
      "op": "DUP3"
    },
    "3942": {
      "op": "DUP5"
    },
    "3943": {
      "op": "SUB"
    },
    "3944": {
      "op": "SLT"
    },
    "3945": {
      "op": "ISZERO"
    },
    "3946": {
      "op": "PUSH2",
      "value": "0xF71"
    },
    "3949": {
      "op": "JUMPI"
    },
    "3950": {
      "op": "DUP1"
    },
    "3951": {
      "op": "DUP2"
    },
    "3952": {
      "op": "REVERT"
    },
    "3953": {
      "op": "JUMPDEST"
    },
    "3954": {
      "op": "DUP2"
    },
    "3955": {
      "op": "CALLDATALOAD"
    },
    "3956": {
      "op": "PUSH2",
      "value": "0xF7C"
    },
    "3959": {
      "op": "DUP2"
    },
    "3960": {
      "op": "PUSH2",
      "value": "0x1394"
    },
    "3963": {
      "jump": "i",
      "op": "JUMP"
    },
    "3964": {
      "op": "JUMPDEST"
    },
    "3965": {
      "op": "SWAP4"
    },
    "3966": {
      "op": "SWAP3"
    },
    "3967": {
      "op": "POP"
    },
    "3968": {
      "op": "POP"
    },
    "3969": {
      "op": "POP"
    },
    "3970": {
      "jump": "o",
      "op": "JUMP"
    },
    "3971": {
      "op": "JUMPDEST"
    },
    "3972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3976": {
      "op": "DUP3"
    },
    "3977": {
      "op": "DUP5"
    },
    "3978": {
      "op": "SUB"
    },
    "3979": {
      "op": "SLT"
    },
    "3980": {
      "op": "ISZERO"
    },
    "3981": {
      "op": "PUSH2",
      "value": "0xF94"
    },
    "3984": {
      "op": "JUMPI"
    },
    "3985": {
      "op": "DUP1"
    },
    "3986": {
      "op": "DUP2"
    },
    "3987": {
      "op": "REVERT"
    },
    "3988": {
      "op": "JUMPDEST"
    },
    "3989": {
      "op": "DUP2"
    },
    "3990": {
      "op": "MLOAD"
    },
    "3991": {
      "op": "PUSH2",
      "value": "0xF7C"
    },
    "3994": {
      "op": "DUP2"
    },
    "3995": {
      "op": "PUSH2",
      "value": "0x1394"
    },
    "3998": {
      "jump": "i",
      "op": "JUMP"
    },
    "3999": {
      "op": "JUMPDEST"
    },
    "4000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4004": {
      "op": "DUP3"
    },
    "4005": {
      "op": "DUP5"
    },
    "4006": {
      "op": "SUB"
    },
    "4007": {
      "op": "SLT"
    },
    "4008": {
      "op": "ISZERO"
    },
    "4009": {
      "op": "PUSH2",
      "value": "0xFB0"
    },
    "4012": {
      "op": "JUMPI"
    },
    "4013": {
      "op": "DUP1"
    },
    "4014": {
      "op": "DUP2"
    },
    "4015": {
      "op": "REVERT"
    },
    "4016": {
      "op": "JUMPDEST"
    },
    "4017": {
      "op": "POP"
    },
    "4018": {
      "op": "CALLDATALOAD"
    },
    "4019": {
      "op": "SWAP2"
    },
    "4020": {
      "op": "SWAP1"
    },
    "4021": {
      "op": "POP"
    },
    "4022": {
      "jump": "o",
      "op": "JUMP"
    },
    "4023": {
      "op": "JUMPDEST"
    },
    "4024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4026": {
      "op": "DUP2"
    },
    "4027": {
      "op": "MLOAD"
    },
    "4028": {
      "op": "DUP1"
    },
    "4029": {
      "op": "DUP5"
    },
    "4030": {
      "op": "MSTORE"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4033": {
      "op": "DUP1"
    },
    "4034": {
      "op": "DUP6"
    },
    "4035": {
      "op": "ADD"
    },
    "4036": {
      "op": "SWAP5"
    },
    "4037": {
      "op": "POP"
    },
    "4038": {
      "op": "DUP1"
    },
    "4039": {
      "op": "DUP5"
    },
    "4040": {
      "op": "ADD"
    },
    "4041": {
      "op": "DUP4"
    },
    "4042": {
      "op": "JUMPDEST"
    },
    "4043": {
      "op": "DUP4"
    },
    "4044": {
      "op": "DUP2"
    },
    "4045": {
      "op": "LT"
    },
    "4046": {
      "op": "ISZERO"
    },
    "4047": {
      "op": "PUSH2",
      "value": "0xFE6"
    },
    "4050": {
      "op": "JUMPI"
    },
    "4051": {
      "op": "DUP2"
    },
    "4052": {
      "op": "MLOAD"
    },
    "4053": {
      "op": "DUP8"
    },
    "4054": {
      "op": "MSTORE"
    },
    "4055": {
      "op": "SWAP6"
    },
    "4056": {
      "op": "DUP3"
    },
    "4057": {
      "op": "ADD"
    },
    "4058": {
      "op": "SWAP6"
    },
    "4059": {
      "op": "SWAP1"
    },
    "4060": {
      "op": "DUP3"
    },
    "4061": {
      "op": "ADD"
    },
    "4062": {
      "op": "SWAP1"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4065": {
      "op": "ADD"
    },
    "4066": {
      "op": "PUSH2",
      "value": "0xFCA"
    },
    "4069": {
      "op": "JUMP"
    },
    "4070": {
      "op": "JUMPDEST"
    },
    "4071": {
      "op": "POP"
    },
    "4072": {
      "op": "SWAP5"
    },
    "4073": {
      "op": "SWAP6"
    },
    "4074": {
      "op": "SWAP5"
    },
    "4075": {
      "op": "POP"
    },
    "4076": {
      "op": "POP"
    },
    "4077": {
      "op": "POP"
    },
    "4078": {
      "op": "POP"
    },
    "4079": {
      "op": "POP"
    },
    "4080": {
      "jump": "o",
      "op": "JUMP"
    },
    "4081": {
      "op": "JUMPDEST"
    },
    "4082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4084": {
      "op": "DUP2"
    },
    "4085": {
      "op": "MLOAD"
    },
    "4086": {
      "op": "DUP1"
    },
    "4087": {
      "op": "DUP5"
    },
    "4088": {
      "op": "MSTORE"
    },
    "4089": {
      "op": "DUP2"
    },
    "4090": {
      "op": "JUMPDEST"
    },
    "4091": {
      "op": "DUP2"
    },
    "4092": {
      "op": "DUP2"
    },
    "4093": {
      "op": "LT"
    },
    "4094": {
      "op": "ISZERO"
    },
    "4095": {
      "op": "PUSH2",
      "value": "0x1016"
    },
    "4098": {
      "op": "JUMPI"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4101": {
      "op": "DUP2"
    },
    "4102": {
      "op": "DUP6"
    },
    "4103": {
      "op": "ADD"
    },
    "4104": {
      "op": "DUP2"
    },
    "4105": {
      "op": "ADD"
    },
    "4106": {
      "op": "MLOAD"
    },
    "4107": {
      "op": "DUP7"
    },
    "4108": {
      "op": "DUP4"
    },
    "4109": {
      "op": "ADD"
    },
    "4110": {
      "op": "DUP3"
    },
    "4111": {
      "op": "ADD"
    },
    "4112": {
      "op": "MSTORE"
    },
    "4113": {
      "op": "ADD"
    },
    "4114": {
      "op": "PUSH2",
      "value": "0xFFA"
    },
    "4117": {
      "op": "JUMP"
    },
    "4118": {
      "op": "JUMPDEST"
    },
    "4119": {
      "op": "DUP2"
    },
    "4120": {
      "op": "DUP2"
    },
    "4121": {
      "op": "GT"
    },
    "4122": {
      "op": "ISZERO"
    },
    "4123": {
      "op": "PUSH2",
      "value": "0x1027"
    },
    "4126": {
      "op": "JUMPI"
    },
    "4127": {
      "op": "DUP3"
    },
    "4128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4130": {
      "op": "DUP4"
    },
    "4131": {
      "op": "DUP8"
    },
    "4132": {
      "op": "ADD"
    },
    "4133": {
      "op": "ADD"
    },
    "4134": {
      "op": "MSTORE"
    },
    "4135": {
      "op": "JUMPDEST"
    },
    "4136": {
      "op": "POP"
    },
    "4137": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4139": {
      "op": "ADD"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4142": {
      "op": "NOT"
    },
    "4143": {
      "op": "AND"
    },
    "4144": {
      "op": "SWAP3"
    },
    "4145": {
      "op": "SWAP1"
    },
    "4146": {
      "op": "SWAP3"
    },
    "4147": {
      "op": "ADD"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4150": {
      "op": "ADD"
    },
    "4151": {
      "op": "SWAP3"
    },
    "4152": {
      "op": "SWAP2"
    },
    "4153": {
      "op": "POP"
    },
    "4154": {
      "op": "POP"
    },
    "4155": {
      "jump": "o",
      "op": "JUMP"
    },
    "4156": {
      "op": "JUMPDEST"
    },
    "4157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4163": {
      "op": "SHL"
    },
    "4164": {
      "op": "SUB"
    },
    "4165": {
      "op": "DUP7"
    },
    "4166": {
      "op": "DUP2"
    },
    "4167": {
      "op": "AND"
    },
    "4168": {
      "op": "DUP3"
    },
    "4169": {
      "op": "MSTORE"
    },
    "4170": {
      "op": "DUP6"
    },
    "4171": {
      "op": "AND"
    },
    "4172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4174": {
      "op": "DUP3"
    },
    "4175": {
      "op": "ADD"
    },
    "4176": {
      "op": "MSTORE"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4181": {
      "op": "DUP3"
    },
    "4182": {
      "op": "ADD"
    },
    "4183": {
      "op": "DUP2"
    },
    "4184": {
      "op": "SWAP1"
    },
    "4185": {
      "op": "MSTORE"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4188": {
      "op": "SWAP1"
    },
    "4189": {
      "op": "PUSH2",
      "value": "0x1068"
    },
    "4192": {
      "op": "SWAP1"
    },
    "4193": {
      "op": "DUP4"
    },
    "4194": {
      "op": "ADD"
    },
    "4195": {
      "op": "DUP7"
    },
    "4196": {
      "op": "PUSH2",
      "value": "0xFB7"
    },
    "4199": {
      "jump": "i",
      "op": "JUMP"
    },
    "4200": {
      "op": "JUMPDEST"
    },
    "4201": {
      "op": "DUP3"
    },
    "4202": {
      "op": "DUP2"
    },
    "4203": {
      "op": "SUB"
    },
    "4204": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4206": {
      "op": "DUP5"
    },
    "4207": {
      "op": "ADD"
    },
    "4208": {
      "op": "MSTORE"
    },
    "4209": {
      "op": "PUSH2",
      "value": "0x107A"
    },
    "4212": {
      "op": "DUP2"
    },
    "4213": {
      "op": "DUP7"
    },
    "4214": {
      "op": "PUSH2",
      "value": "0xFB7"
    },
    "4217": {
      "jump": "i",
      "op": "JUMP"
    },
    "4218": {
      "op": "JUMPDEST"
    },
    "4219": {
      "op": "SWAP1"
    },
    "4220": {
      "op": "POP"
    },
    "4221": {
      "op": "DUP3"
    },
    "4222": {
      "op": "DUP2"
    },
    "4223": {
      "op": "SUB"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4226": {
      "op": "DUP5"
    },
    "4227": {
      "op": "ADD"
    },
    "4228": {
      "op": "MSTORE"
    },
    "4229": {
      "op": "PUSH2",
      "value": "0x108E"
    },
    "4232": {
      "op": "DUP2"
    },
    "4233": {
      "op": "DUP6"
    },
    "4234": {
      "op": "PUSH2",
      "value": "0xFF1"
    },
    "4237": {
      "jump": "i",
      "op": "JUMP"
    },
    "4238": {
      "op": "JUMPDEST"
    },
    "4239": {
      "op": "SWAP9"
    },
    "4240": {
      "op": "SWAP8"
    },
    "4241": {
      "op": "POP"
    },
    "4242": {
      "op": "POP"
    },
    "4243": {
      "op": "POP"
    },
    "4244": {
      "op": "POP"
    },
    "4245": {
      "op": "POP"
    },
    "4246": {
      "op": "POP"
    },
    "4247": {
      "op": "POP"
    },
    "4248": {
      "op": "POP"
    },
    "4249": {
      "jump": "o",
      "op": "JUMP"
    },
    "4250": {
      "op": "JUMPDEST"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4257": {
      "op": "SHL"
    },
    "4258": {
      "op": "SUB"
    },
    "4259": {
      "op": "DUP7"
    },
    "4260": {
      "op": "DUP2"
    },
    "4261": {
      "op": "AND"
    },
    "4262": {
      "op": "DUP3"
    },
    "4263": {
      "op": "MSTORE"
    },
    "4264": {
      "op": "DUP6"
    },
    "4265": {
      "op": "AND"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4268": {
      "op": "DUP3"
    },
    "4269": {
      "op": "ADD"
    },
    "4270": {
      "op": "MSTORE"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4273": {
      "op": "DUP2"
    },
    "4274": {
      "op": "ADD"
    },
    "4275": {
      "op": "DUP5"
    },
    "4276": {
      "op": "SWAP1"
    },
    "4277": {
      "op": "MSTORE"
    },
    "4278": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4280": {
      "op": "DUP2"
    },
    "4281": {
      "op": "ADD"
    },
    "4282": {
      "op": "DUP4"
    },
    "4283": {
      "op": "SWAP1"
    },
    "4284": {
      "op": "MSTORE"
    },
    "4285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4289": {
      "op": "DUP3"
    },
    "4290": {
      "op": "ADD"
    },
    "4291": {
      "op": "DUP2"
    },
    "4292": {
      "op": "SWAP1"
    },
    "4293": {
      "op": "MSTORE"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4296": {
      "op": "SWAP1"
    },
    "4297": {
      "op": "PUSH2",
      "value": "0x10D4"
    },
    "4300": {
      "op": "SWAP1"
    },
    "4301": {
      "op": "DUP4"
    },
    "4302": {
      "op": "ADD"
    },
    "4303": {
      "op": "DUP5"
    },
    "4304": {
      "op": "PUSH2",
      "value": "0xFF1"
    },
    "4307": {
      "jump": "i",
      "op": "JUMP"
    },
    "4308": {
      "op": "JUMPDEST"
    },
    "4309": {
      "op": "SWAP8"
    },
    "4310": {
      "op": "SWAP7"
    },
    "4311": {
      "op": "POP"
    },
    "4312": {
      "op": "POP"
    },
    "4313": {
      "op": "POP"
    },
    "4314": {
      "op": "POP"
    },
    "4315": {
      "op": "POP"
    },
    "4316": {
      "op": "POP"
    },
    "4317": {
      "op": "POP"
    },
    "4318": {
      "jump": "o",
      "op": "JUMP"
    },
    "4319": {
      "op": "JUMPDEST"
    },
    "4320": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4322": {
      "op": "DUP2"
    },
    "4323": {
      "op": "MSTORE"
    },
    "4324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4326": {
      "op": "PUSH2",
      "value": "0xF7C"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4331": {
      "op": "DUP4"
    },
    "4332": {
      "op": "ADD"
    },
    "4333": {
      "op": "DUP5"
    },
    "4334": {
      "op": "PUSH2",
      "value": "0xFB7"
    },
    "4337": {
      "jump": "i",
      "op": "JUMP"
    },
    "4338": {
      "op": "JUMPDEST"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4341": {
      "op": "DUP2"
    },
    "4342": {
      "op": "MSTORE"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4345": {
      "op": "PUSH2",
      "value": "0x1105"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4350": {
      "op": "DUP4"
    },
    "4351": {
      "op": "ADD"
    },
    "4352": {
      "op": "DUP6"
    },
    "4353": {
      "op": "PUSH2",
      "value": "0xFB7"
    },
    "4356": {
      "jump": "i",
      "op": "JUMP"
    },
    "4357": {
      "op": "JUMPDEST"
    },
    "4358": {
      "op": "DUP3"
    },
    "4359": {
      "op": "DUP2"
    },
    "4360": {
      "op": "SUB"
    },
    "4361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4363": {
      "op": "DUP5"
    },
    "4364": {
      "op": "ADD"
    },
    "4365": {
      "op": "MSTORE"
    },
    "4366": {
      "op": "PUSH2",
      "value": "0x1117"
    },
    "4369": {
      "op": "DUP2"
    },
    "4370": {
      "op": "DUP6"
    },
    "4371": {
      "op": "PUSH2",
      "value": "0xFB7"
    },
    "4374": {
      "jump": "i",
      "op": "JUMP"
    },
    "4375": {
      "op": "JUMPDEST"
    },
    "4376": {
      "op": "SWAP6"
    },
    "4377": {
      "op": "SWAP5"
    },
    "4378": {
      "op": "POP"
    },
    "4379": {
      "op": "POP"
    },
    "4380": {
      "op": "POP"
    },
    "4381": {
      "op": "POP"
    },
    "4382": {
      "op": "POP"
    },
    "4383": {
      "jump": "o",
      "op": "JUMP"
    },
    "4384": {
      "op": "JUMPDEST"
    },
    "4385": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4387": {
      "op": "DUP2"
    },
    "4388": {
      "op": "MSTORE"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4391": {
      "op": "PUSH2",
      "value": "0xF7C"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4396": {
      "op": "DUP4"
    },
    "4397": {
      "op": "ADD"
    },
    "4398": {
      "op": "DUP5"
    },
    "4399": {
      "op": "PUSH2",
      "value": "0xFF1"
    },
    "4402": {
      "jump": "i",
      "op": "JUMP"
    },
    "4403": {
      "op": "JUMPDEST"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4406": {
      "op": "DUP1"
    },
    "4407": {
      "op": "DUP3"
    },
    "4408": {
      "op": "MSTORE"
    },
    "4409": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "4411": {
      "op": "SWAP1"
    },
    "4412": {
      "op": "DUP3"
    },
    "4413": {
      "op": "ADD"
    },
    "4414": {
      "op": "MSTORE"
    },
    "4415": {
      "op": "PUSH32",
      "value": "0x455243313135353A204552433131353552656365697665722072656A65637465"
    },
    "4448": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4450": {
      "op": "DUP3"
    },
    "4451": {
      "op": "ADD"
    },
    "4452": {
      "op": "MSTORE"
    },
    "4453": {
      "op": "PUSH8",
      "value": "0x6420746F6B656E73"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4464": {
      "op": "SHL"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4467": {
      "op": "DUP3"
    },
    "4468": {
      "op": "ADD"
    },
    "4469": {
      "op": "MSTORE"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4472": {
      "op": "ADD"
    },
    "4473": {
      "op": "SWAP1"
    },
    "4474": {
      "jump": "o",
      "op": "JUMP"
    },
    "4475": {
      "op": "JUMPDEST"
    },
    "4476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4478": {
      "op": "DUP1"
    },
    "4479": {
      "op": "DUP3"
    },
    "4480": {
      "op": "MSTORE"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4483": {
      "op": "SWAP1"
    },
    "4484": {
      "op": "DUP3"
    },
    "4485": {
      "op": "ADD"
    },
    "4486": {
      "op": "MSTORE"
    },
    "4487": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F20746865207A65726F206164"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4522": {
      "op": "DUP3"
    },
    "4523": {
      "op": "ADD"
    },
    "4524": {
      "op": "MSTORE"
    },
    "4525": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "4533": {
      "op": "SHL"
    },
    "4534": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4536": {
      "op": "DUP3"
    },
    "4537": {
      "op": "ADD"
    },
    "4538": {
      "op": "MSTORE"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4541": {
      "op": "ADD"
    },
    "4542": {
      "op": "SWAP1"
    },
    "4543": {
      "jump": "o",
      "op": "JUMP"
    },
    "4544": {
      "op": "JUMPDEST"
    },
    "4545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4547": {
      "op": "DUP1"
    },
    "4548": {
      "op": "DUP3"
    },
    "4549": {
      "op": "MSTORE"
    },
    "4550": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "4552": {
      "op": "SWAP1"
    },
    "4553": {
      "op": "DUP3"
    },
    "4554": {
      "op": "ADD"
    },
    "4555": {
      "op": "MSTORE"
    },
    "4556": {
      "op": "PUSH32",
      "value": "0x455243313135353A20696E73756666696369656E742062616C616E636520666F"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4591": {
      "op": "DUP3"
    },
    "4592": {
      "op": "ADD"
    },
    "4593": {
      "op": "MSTORE"
    },
    "4594": {
      "op": "PUSH10",
      "value": "0x39103A3930B739B332B9"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "4607": {
      "op": "SHL"
    },
    "4608": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4610": {
      "op": "DUP3"
    },
    "4611": {
      "op": "ADD"
    },
    "4612": {
      "op": "MSTORE"
    },
    "4613": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4615": {
      "op": "ADD"
    },
    "4616": {
      "op": "SWAP1"
    },
    "4617": {
      "jump": "o",
      "op": "JUMP"
    },
    "4618": {
      "op": "JUMPDEST"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4627": {
      "op": "SHL"
    },
    "4628": {
      "op": "SUB"
    },
    "4629": {
      "op": "DUP3"
    },
    "4630": {
      "op": "GT"
    },
    "4631": {
      "op": "ISZERO"
    },
    "4632": {
      "op": "PUSH2",
      "value": "0x1223"
    },
    "4635": {
      "op": "JUMPI"
    },
    "4636": {
      "op": "PUSH2",
      "value": "0x1223"
    },
    "4639": {
      "op": "PUSH2",
      "value": "0x12DD"
    },
    "4642": {
      "jump": "i",
      "op": "JUMP"
    },
    "4643": {
      "op": "JUMPDEST"
    },
    "4644": {
      "op": "POP"
    },
    "4645": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4647": {
      "op": "SHL"
    },
    "4648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4650": {
      "op": "ADD"
    },
    "4651": {
      "op": "SWAP1"
    },
    "4652": {
      "jump": "o",
      "op": "JUMP"
    },
    "4653": {
      "op": "JUMPDEST"
    },
    "4654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4656": {
      "op": "DUP3"
    },
    "4657": {
      "op": "NOT"
    },
    "4658": {
      "op": "DUP3"
    },
    "4659": {
      "op": "GT"
    },
    "4660": {
      "op": "ISZERO"
    },
    "4661": {
      "op": "PUSH2",
      "value": "0x1240"
    },
    "4664": {
      "op": "JUMPI"
    },
    "4665": {
      "op": "PUSH2",
      "value": "0x1240"
    },
    "4668": {
      "op": "PUSH2",
      "value": "0x12C7"
    },
    "4671": {
      "jump": "i",
      "op": "JUMP"
    },
    "4672": {
      "op": "JUMPDEST"
    },
    "4673": {
      "op": "POP"
    },
    "4674": {
      "op": "ADD"
    },
    "4675": {
      "op": "SWAP1"
    },
    "4676": {
      "jump": "o",
      "op": "JUMP"
    },
    "4677": {
      "op": "JUMPDEST"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4680": {
      "op": "DUP2"
    },
    "4681": {
      "op": "DUP2"
    },
    "4682": {
      "op": "SHR"
    },
    "4683": {
      "op": "SWAP1"
    },
    "4684": {
      "op": "DUP3"
    },
    "4685": {
      "op": "AND"
    },
    "4686": {
      "op": "DUP1"
    },
    "4687": {
      "op": "PUSH2",
      "value": "0x1259"
    },
    "4690": {
      "op": "JUMPI"
    },
    "4691": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4693": {
      "op": "DUP3"
    },
    "4694": {
      "op": "AND"
    },
    "4695": {
      "op": "SWAP2"
    },
    "4696": {
      "op": "POP"
    },
    "4697": {
      "op": "JUMPDEST"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4700": {
      "op": "DUP3"
    },
    "4701": {
      "op": "LT"
    },
    "4702": {
      "op": "DUP2"
    },
    "4703": {
      "op": "EQ"
    },
    "4704": {
      "op": "ISZERO"
    },
    "4705": {
      "op": "PUSH2",
      "value": "0x127A"
    },
    "4708": {
      "op": "JUMPI"
    },
    "4709": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4714": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4716": {
      "op": "SHL"
    },
    "4717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4719": {
      "op": "MSTORE"
    },
    "4720": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4722": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4724": {
      "op": "MSTORE"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4729": {
      "op": "REVERT"
    },
    "4730": {
      "op": "JUMPDEST"
    },
    "4731": {
      "op": "POP"
    },
    "4732": {
      "op": "SWAP2"
    },
    "4733": {
      "op": "SWAP1"
    },
    "4734": {
      "op": "POP"
    },
    "4735": {
      "jump": "o",
      "op": "JUMP"
    },
    "4736": {
      "op": "JUMPDEST"
    },
    "4737": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4739": {
      "op": "DUP3"
    },
    "4740": {
      "op": "ADD"
    },
    "4741": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4743": {
      "op": "NOT"
    },
    "4744": {
      "op": "AND"
    },
    "4745": {
      "op": "DUP2"
    },
    "4746": {
      "op": "ADD"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4751": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4753": {
      "op": "SHL"
    },
    "4754": {
      "op": "SUB"
    },
    "4755": {
      "op": "DUP2"
    },
    "4756": {
      "op": "GT"
    },
    "4757": {
      "op": "DUP3"
    },
    "4758": {
      "op": "DUP3"
    },
    "4759": {
      "op": "LT"
    },
    "4760": {
      "op": "OR"
    },
    "4761": {
      "op": "ISZERO"
    },
    "4762": {
      "op": "PUSH2",
      "value": "0x12A5"
    },
    "4765": {
      "op": "JUMPI"
    },
    "4766": {
      "op": "PUSH2",
      "value": "0x12A5"
    },
    "4769": {
      "op": "PUSH2",
      "value": "0x12DD"
    },
    "4772": {
      "jump": "i",
      "op": "JUMP"
    },
    "4773": {
      "op": "JUMPDEST"
    },
    "4774": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4776": {
      "op": "MSTORE"
    },
    "4777": {
      "op": "POP"
    },
    "4778": {
      "op": "POP"
    },
    "4779": {
      "jump": "o",
      "op": "JUMP"
    },
    "4780": {
      "op": "JUMPDEST"
    },
    "4781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4785": {
      "op": "NOT"
    },
    "4786": {
      "op": "DUP3"
    },
    "4787": {
      "op": "EQ"
    },
    "4788": {
      "op": "ISZERO"
    },
    "4789": {
      "op": "PUSH2",
      "value": "0x12C0"
    },
    "4792": {
      "op": "JUMPI"
    },
    "4793": {
      "op": "PUSH2",
      "value": "0x12C0"
    },
    "4796": {
      "op": "PUSH2",
      "value": "0x12C7"
    },
    "4799": {
      "jump": "i",
      "op": "JUMP"
    },
    "4800": {
      "op": "JUMPDEST"
    },
    "4801": {
      "op": "POP"
    },
    "4802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4804": {
      "op": "ADD"
    },
    "4805": {
      "op": "SWAP1"
    },
    "4806": {
      "jump": "o",
      "op": "JUMP"
    },
    "4807": {
      "op": "JUMPDEST"
    },
    "4808": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4813": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4815": {
      "op": "SHL"
    },
    "4816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4818": {
      "op": "MSTORE"
    },
    "4819": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4821": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4823": {
      "op": "MSTORE"
    },
    "4824": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4828": {
      "op": "REVERT"
    },
    "4829": {
      "op": "JUMPDEST"
    },
    "4830": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4835": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4837": {
      "op": "SHL"
    },
    "4838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4840": {
      "op": "MSTORE"
    },
    "4841": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4843": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4845": {
      "op": "MSTORE"
    },
    "4846": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4850": {
      "op": "REVERT"
    },
    "4851": {
      "op": "JUMPDEST"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4854": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4856": {
      "op": "RETURNDATASIZE"
    },
    "4857": {
      "op": "GT"
    },
    "4858": {
      "op": "ISZERO"
    },
    "4859": {
      "op": "PUSH2",
      "value": "0x1308"
    },
    "4862": {
      "op": "JUMPI"
    },
    "4863": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4865": {
      "op": "DUP2"
    },
    "4866": {
      "op": "DUP3"
    },
    "4867": {
      "op": "RETURNDATACOPY"
    },
    "4868": {
      "op": "MLOAD"
    },
    "4869": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4871": {
      "op": "SHR"
    },
    "4872": {
      "op": "JUMPDEST"
    },
    "4873": {
      "op": "SWAP1"
    },
    "4874": {
      "jump": "o",
      "op": "JUMP"
    },
    "4875": {
      "op": "JUMPDEST"
    },
    "4876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4878": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4880": {
      "op": "RETURNDATASIZE"
    },
    "4881": {
      "op": "LT"
    },
    "4882": {
      "op": "ISZERO"
    },
    "4883": {
      "op": "PUSH2",
      "value": "0x1319"
    },
    "4886": {
      "op": "JUMPI"
    },
    "4887": {
      "op": "SWAP1"
    },
    "4888": {
      "jump": "o",
      "op": "JUMP"
    },
    "4889": {
      "op": "JUMPDEST"
    },
    "4890": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4892": {
      "op": "MLOAD"
    },
    "4893": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4895": {
      "op": "NOT"
    },
    "4896": {
      "op": "RETURNDATASIZE"
    },
    "4897": {
      "op": "DUP2"
    },
    "4898": {
      "op": "ADD"
    },
    "4899": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4901": {
      "op": "DUP4"
    },
    "4902": {
      "op": "RETURNDATACOPY"
    },
    "4903": {
      "op": "DUP2"
    },
    "4904": {
      "op": "MLOAD"
    },
    "4905": {
      "op": "RETURNDATASIZE"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4910": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4912": {
      "op": "SHL"
    },
    "4913": {
      "op": "SUB"
    },
    "4914": {
      "op": "DUP1"
    },
    "4915": {
      "op": "DUP4"
    },
    "4916": {
      "op": "GT"
    },
    "4917": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4919": {
      "op": "DUP5"
    },
    "4920": {
      "op": "ADD"
    },
    "4921": {
      "op": "DUP4"
    },
    "4922": {
      "op": "LT"
    },
    "4923": {
      "op": "OR"
    },
    "4924": {
      "op": "ISZERO"
    },
    "4925": {
      "op": "PUSH2",
      "value": "0x1348"
    },
    "4928": {
      "op": "JUMPI"
    },
    "4929": {
      "op": "POP"
    },
    "4930": {
      "op": "POP"
    },
    "4931": {
      "op": "POP"
    },
    "4932": {
      "op": "POP"
    },
    "4933": {
      "op": "POP"
    },
    "4934": {
      "op": "SWAP1"
    },
    "4935": {
      "jump": "o",
      "op": "JUMP"
    },
    "4936": {
      "op": "JUMPDEST"
    },
    "4937": {
      "op": "DUP3"
    },
    "4938": {
      "op": "DUP6"
    },
    "4939": {
      "op": "ADD"
    },
    "4940": {
      "op": "SWAP2"
    },
    "4941": {
      "op": "POP"
    },
    "4942": {
      "op": "DUP2"
    },
    "4943": {
      "op": "MLOAD"
    },
    "4944": {
      "op": "DUP2"
    },
    "4945": {
      "op": "DUP2"
    },
    "4946": {
      "op": "GT"
    },
    "4947": {
      "op": "ISZERO"
    },
    "4948": {
      "op": "PUSH2",
      "value": "0x1360"
    },
    "4951": {
      "op": "JUMPI"
    },
    "4952": {
      "op": "POP"
    },
    "4953": {
      "op": "POP"
    },
    "4954": {
      "op": "POP"
    },
    "4955": {
      "op": "POP"
    },
    "4956": {
      "op": "POP"
    },
    "4957": {
      "op": "POP"
    },
    "4958": {
      "op": "SWAP1"
    },
    "4959": {
      "jump": "o",
      "op": "JUMP"
    },
    "4960": {
      "op": "JUMPDEST"
    },
    "4961": {
      "op": "DUP5"
    },
    "4962": {
      "op": "RETURNDATASIZE"
    },
    "4963": {
      "op": "DUP8"
    },
    "4964": {
      "op": "ADD"
    },
    "4965": {
      "op": "ADD"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4968": {
      "op": "DUP3"
    },
    "4969": {
      "op": "DUP6"
    },
    "4970": {
      "op": "ADD"
    },
    "4971": {
      "op": "ADD"
    },
    "4972": {
      "op": "GT"
    },
    "4973": {
      "op": "ISZERO"
    },
    "4974": {
      "op": "PUSH2",
      "value": "0x137A"
    },
    "4977": {
      "op": "JUMPI"
    },
    "4978": {
      "op": "POP"
    },
    "4979": {
      "op": "POP"
    },
    "4980": {
      "op": "POP"
    },
    "4981": {
      "op": "POP"
    },
    "4982": {
      "op": "POP"
    },
    "4983": {
      "op": "POP"
    },
    "4984": {
      "op": "SWAP1"
    },
    "4985": {
      "jump": "o",
      "op": "JUMP"
    },
    "4986": {
      "op": "JUMPDEST"
    },
    "4987": {
      "op": "PUSH2",
      "value": "0x1389"
    },
    "4990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4992": {
      "op": "DUP3"
    },
    "4993": {
      "op": "DUP7"
    },
    "4994": {
      "op": "ADD"
    },
    "4995": {
      "op": "ADD"
    },
    "4996": {
      "op": "DUP8"
    },
    "4997": {
      "op": "PUSH2",
      "value": "0x1280"
    },
    "5000": {
      "jump": "i",
      "op": "JUMP"
    },
    "5001": {
      "op": "JUMPDEST"
    },
    "5002": {
      "op": "POP"
    },
    "5003": {
      "op": "SWAP1"
    },
    "5004": {
      "op": "SWAP6"
    },
    "5005": {
      "op": "SWAP5"
    },
    "5006": {
      "op": "POP"
    },
    "5007": {
      "op": "POP"
    },
    "5008": {
      "op": "POP"
    },
    "5009": {
      "op": "POP"
    },
    "5010": {
      "op": "POP"
    },
    "5011": {
      "jump": "o",
      "op": "JUMP"
    },
    "5012": {
      "op": "JUMPDEST"
    },
    "5013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5017": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5019": {
      "op": "SHL"
    },
    "5020": {
      "op": "SUB"
    },
    "5021": {
      "op": "NOT"
    },
    "5022": {
      "op": "DUP2"
    },
    "5023": {
      "op": "AND"
    },
    "5024": {
      "op": "DUP2"
    },
    "5025": {
      "op": "EQ"
    },
    "5026": {
      "op": "PUSH2",
      "value": "0x13AA"
    },
    "5029": {
      "op": "JUMPI"
    },
    "5030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5032": {
      "op": "DUP1"
    },
    "5033": {
      "op": "REVERT"
    },
    "5034": {
      "op": "JUMPDEST"
    },
    "5035": {
      "op": "POP"
    },
    "5036": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "369425f65125a250ff5e286a0a56ed292a68a920",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(_msgSender() != operator, \"ERC1155: setting approval status for self\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address account,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(account != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        _balances[id][account] += amount;\n        emit TransferSingle(operator, address(0), account, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), account, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `account`\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(account != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, account, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\n\n        uint256 accountBalance = _balances[id][account];\n        require(accountBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][account] = accountBalance - amount;\n        }\n\n        emit TransferSingle(operator, account, address(0), id, amount);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address account,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(account != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, account, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 accountBalance = _balances[id][account];\n            require(accountBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][account] = accountBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, account, address(0), ids, amounts);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n",
  "sourceMap": "494:14523:3:-:0;;;1031:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1073:13;1081:4;1073:7;:13::i;:::-;1031:62;494:14523;;8028:86;8094:13;;;;:4;;:13;;;;;:::i;:::-;;8028:86;:::o;494:14523::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;494:14523:3;;;-1:-1:-1;494:14523:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1137:15;94:6;125:2;168;156:9;147:7;143:23;139:32;136:2;;;189:6;181;174:22;136:2;221:16;;-1:-1:-1;;;;;286:14:15;;;283:2;;;318:6;310;303:22;283:2;361:6;350:9;346:22;336:32;;406:7;399:4;395:2;391:13;387:27;377:2;;433:6;425;418:22;377:2;467;461:9;489:2;485;482:10;479:2;;;495:18;;:::i;:::-;570:2;564:9;538:2;624:13;;-1:-1:-1;;620:22:15;;;644:2;616:31;612:40;600:53;;;668:18;;;688:22;;;665:46;662:2;;;714:18;;:::i;:::-;754:10;750:2;743:22;789:2;781:6;774:18;829:7;824:2;819;815;811:11;807:20;804:33;801:2;;;855:6;847;840:22;801:2;882:6;873:15;;897:129;911:2;908:1;905:9;897:129;;;999:10;;;995:19;;989:26;968:14;;;964:23;;957:59;922:10;;;;897:129;;;1044:2;1041:1;1038:9;1035:2;;;1103:6;1098:2;1093;1085:6;1081:15;1077:24;1070:40;1035:2;1139:6;105:1046;-1:-1:-1;;;;;;;;105:1046:15:o;1156:380::-;1235:1;1231:12;;;;1278;;;1299:2;;1353:4;1345:6;1341:17;1331:27;;1299:2;1406;1398:6;1395:14;1375:18;1372:38;1369:2;;;1452:10;1447:3;1443:20;1440:1;1433:31;1487:4;1484:1;1477:15;1515:4;1512:1;1505:15;1369:2;;1211:325;;;:::o;1541:127::-;1602:10;1597:3;1593:20;1590:1;1583:31;1633:4;1630:1;1623:15;1657:4;1654:1;1647:15;1573:95;494:14523:3;;;;;;",
  "sourcePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/ERC1155.sol",
  "type": "contract"
}