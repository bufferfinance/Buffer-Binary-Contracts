{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/ERC721.sol",
    "12": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721.sol",
    "13": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721Receiver.sol",
    "15": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "16": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Address.sol",
    "17": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
    "18": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Strings.sol",
    "19": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/ERC165.sol",
    "20": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        6927
      ],
      "Context": [
        7022
      ],
      "ERC165": [
        7249
      ],
      "ERC721": [
        4693
      ],
      "IERC165": [
        7634
      ],
      "IERC721": [
        7365
      ],
      "IERC721Metadata": [
        7410
      ],
      "IERC721Receiver": [
        7383
      ],
      "Strings": [
        7225
      ]
    },
    "id": 4694,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3879,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:11"
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 3880,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4694,
        "sourceUnit": 7366,
        "src": "58:23:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 3881,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4694,
        "sourceUnit": 7384,
        "src": "82:31:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "./extensions/IERC721Metadata.sol",
        "id": 3882,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4694,
        "sourceUnit": 7411,
        "src": "114:42:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 3883,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4694,
        "sourceUnit": 6928,
        "src": "157:33:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 3884,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4694,
        "sourceUnit": 7023,
        "src": "191:33:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 3885,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4694,
        "sourceUnit": 7226,
        "src": "225:33:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 3886,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4694,
        "sourceUnit": 7250,
        "src": "259:46:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3888,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7022,
              "src": "573:7:11"
            },
            "id": 3889,
            "nodeType": "InheritanceSpecifier",
            "src": "573:7:11"
          },
          {
            "baseName": {
              "id": 3890,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7249,
              "src": "582:6:11"
            },
            "id": 3891,
            "nodeType": "InheritanceSpecifier",
            "src": "582:6:11"
          },
          {
            "baseName": {
              "id": 3892,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7365,
              "src": "590:7:11"
            },
            "id": 3893,
            "nodeType": "InheritanceSpecifier",
            "src": "590:7:11"
          },
          {
            "baseName": {
              "id": 3894,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7410,
              "src": "599:15:11"
            },
            "id": 3895,
            "nodeType": "InheritanceSpecifier",
            "src": "599:15:11"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3887,
          "nodeType": "StructuredDocumentation",
          "src": "307:246:11",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 4693,
        "linearizedBaseContracts": [
          4693,
          7410,
          7365,
          7249,
          7634,
          7022
        ],
        "name": "ERC721",
        "nameLocation": "563:6:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3898,
            "libraryName": {
              "id": 3896,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6927,
              "src": "627:7:11"
            },
            "nodeType": "UsingForDirective",
            "src": "621:26:11",
            "typeName": {
              "id": 3897,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "639:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 3901,
            "libraryName": {
              "id": 3899,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7225,
              "src": "658:7:11"
            },
            "nodeType": "UsingForDirective",
            "src": "652:26:11",
            "typeName": {
              "id": 3900,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "670:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3903,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "717:5:11",
            "nodeType": "VariableDeclaration",
            "scope": 4693,
            "src": "702:20:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3902,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "702:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3905,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "764:7:11",
            "nodeType": "VariableDeclaration",
            "scope": 4693,
            "src": "749:22:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3904,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "749:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3909,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "860:7:11",
            "nodeType": "VariableDeclaration",
            "scope": 4693,
            "src": "824:43:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 3908,
              "keyType": {
                "id": 3906,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "832:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "824:27:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 3907,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "843:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3913,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "954:9:11",
            "nodeType": "VariableDeclaration",
            "scope": 4693,
            "src": "918:45:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3912,
              "keyType": {
                "id": 3910,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "926:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "918:27:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3911,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "937:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3917,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1055:15:11",
            "nodeType": "VariableDeclaration",
            "scope": 4693,
            "src": "1019:51:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 3916,
              "keyType": {
                "id": 3914,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1027:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1019:27:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 3915,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1038:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3923,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1178:18:11",
            "nodeType": "VariableDeclaration",
            "scope": 4693,
            "src": "1125:71:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 3922,
              "keyType": {
                "id": 3918,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1133:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1125:44:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 3921,
                "keyType": {
                  "id": 3919,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1152:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1144:24:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 3920,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1163:4:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3939,
              "nodeType": "Block",
              "src": "1372:57:11",
              "statements": [
                {
                  "expression": {
                    "id": 3933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3931,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3903,
                      "src": "1382:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3932,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3926,
                      "src": "1390:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1382:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3934,
                  "nodeType": "ExpressionStatement",
                  "src": "1382:13:11"
                },
                {
                  "expression": {
                    "id": 3937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3935,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3905,
                      "src": "1405:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3936,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3928,
                      "src": "1415:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1405:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3938,
                  "nodeType": "ExpressionStatement",
                  "src": "1405:17:11"
                }
              ]
            },
            "documentation": {
              "id": 3924,
              "nodeType": "StructuredDocumentation",
              "src": "1203:108:11",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 3940,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3926,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1342:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3940,
                  "src": "1328:19:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3925,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1328:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3928,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1363:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3940,
                  "src": "1349:21:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3927,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1327:44:11"
            },
            "returnParameters": {
              "id": 3930,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1372:0:11"
            },
            "scope": 4693,
            "src": "1316:113:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7248,
              7633
            ],
            "body": {
              "id": 3970,
              "nodeType": "Block",
              "src": "1604:192:11",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 3963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 3956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3951,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3943,
                          "src": "1633:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 3953,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7365,
                                "src": "1653:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$7365_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$7365_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 3952,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1648:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 3954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1648:13:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$7365",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 3955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1648:25:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1633:40:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 3962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3957,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3943,
                          "src": "1689:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 3959,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7410,
                                "src": "1709:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$7410_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$7410_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 3958,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1704:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 3960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1704:21:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$7410",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 3961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1704:33:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1689:48:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1633:104:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 3966,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3943,
                          "src": "1777:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 3964,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1753:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$4693_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 3965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7248,
                        "src": "1753:23:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 3967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1753:36:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1633:156:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3950,
                  "id": 3969,
                  "nodeType": "Return",
                  "src": "1614:175:11"
                }
              ]
            },
            "documentation": {
              "id": 3941,
              "nodeType": "StructuredDocumentation",
              "src": "1435:56:11",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 3971,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1505:17:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3947,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 3945,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7249,
                  "src": "1572:6:11"
                },
                {
                  "id": 3946,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7634,
                  "src": "1580:7:11"
                }
              ],
              "src": "1563:25:11"
            },
            "parameters": {
              "id": 3944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3943,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1530:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3971,
                  "src": "1523:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3942,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1523:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1522:20:11"
            },
            "returnParameters": {
              "id": 3950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3949,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3971,
                  "src": "1598:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3948,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1598:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1597:6:11"
            },
            "scope": 4693,
            "src": "1496:300:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7290
            ],
            "body": {
              "id": 3994,
              "nodeType": "Block",
              "src": "1936:124:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3981,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3974,
                          "src": "1954:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1971:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1963:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3982,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1963:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1963:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1954:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 3987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1975:44:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 3980,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1946:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1946:74:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3989,
                  "nodeType": "ExpressionStatement",
                  "src": "1946:74:11"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3990,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3913,
                      "src": "2037:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3992,
                    "indexExpression": {
                      "id": 3991,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3974,
                      "src": "2047:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2037:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3979,
                  "id": 3993,
                  "nodeType": "Return",
                  "src": "2030:23:11"
                }
              ]
            },
            "documentation": {
              "id": 3972,
              "nodeType": "StructuredDocumentation",
              "src": "1802:48:11",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 3995,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1864:9:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3976,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1909:8:11"
            },
            "parameters": {
              "id": 3975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3974,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1882:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3995,
                  "src": "1874:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3973,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1874:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1873:15:11"
            },
            "returnParameters": {
              "id": 3979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3978,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3995,
                  "src": "1927:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3977,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1927:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1926:9:11"
            },
            "scope": 4693,
            "src": "1855:205:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7298
            ],
            "body": {
              "id": 4022,
              "nodeType": "Block",
              "src": "2198:154:11",
              "statements": [
                {
                  "assignments": [
                    4005
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4005,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2216:5:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 4022,
                      "src": "2208:13:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4004,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2208:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4009,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4006,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3909,
                      "src": "2224:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 4008,
                    "indexExpression": {
                      "id": 4007,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3998,
                      "src": "2232:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2224:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2208:32:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4011,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4005,
                          "src": "2258:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4014,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2275:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2267:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4012,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2267:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2267:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2258:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 4017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2279:43:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 4010,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2250:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2250:73:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4019,
                  "nodeType": "ExpressionStatement",
                  "src": "2250:73:11"
                },
                {
                  "expression": {
                    "id": 4020,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4005,
                    "src": "2340:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4003,
                  "id": 4021,
                  "nodeType": "Return",
                  "src": "2333:12:11"
                }
              ]
            },
            "documentation": {
              "id": 3996,
              "nodeType": "StructuredDocumentation",
              "src": "2066:46:11",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 4023,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2126:7:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4000,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2171:8:11"
            },
            "parameters": {
              "id": 3999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3998,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2142:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4023,
                  "src": "2134:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3997,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2134:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2133:17:11"
            },
            "returnParameters": {
              "id": 4003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4002,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4023,
                  "src": "2189:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4001,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2189:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2188:9:11"
            },
            "scope": 4693,
            "src": "2117:235:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7395
            ],
            "body": {
              "id": 4032,
              "nodeType": "Block",
              "src": "2483:29:11",
              "statements": [
                {
                  "expression": {
                    "id": 4030,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3903,
                    "src": "2500:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 4029,
                  "id": 4031,
                  "nodeType": "Return",
                  "src": "2493:12:11"
                }
              ]
            },
            "documentation": {
              "id": 4024,
              "nodeType": "StructuredDocumentation",
              "src": "2358:51:11",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 4033,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2423:4:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4026,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2450:8:11"
            },
            "parameters": {
              "id": 4025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2427:2:11"
            },
            "returnParameters": {
              "id": 4029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4028,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4033,
                  "src": "2468:13:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4027,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2468:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2467:15:11"
            },
            "scope": 4693,
            "src": "2414:98:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7401
            ],
            "body": {
              "id": 4042,
              "nodeType": "Block",
              "src": "2647:31:11",
              "statements": [
                {
                  "expression": {
                    "id": 4040,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3905,
                    "src": "2664:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 4039,
                  "id": 4041,
                  "nodeType": "Return",
                  "src": "2657:14:11"
                }
              ]
            },
            "documentation": {
              "id": 4034,
              "nodeType": "StructuredDocumentation",
              "src": "2518:53:11",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 4043,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2585:6:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4036,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2614:8:11"
            },
            "parameters": {
              "id": 4035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2591:2:11"
            },
            "returnParameters": {
              "id": 4039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4038,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4043,
                  "src": "2632:13:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4037,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2632:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2631:15:11"
            },
            "scope": 4693,
            "src": "2576:102:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7409
            ],
            "body": {
              "id": 4084,
              "nodeType": "Block",
              "src": "2832:241:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4054,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4046,
                            "src": "2858:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4053,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4333,
                          "src": "2850:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 4055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2850:16:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 4056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2868:49:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 4052,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2842:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2842:76:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4058,
                  "nodeType": "ExpressionStatement",
                  "src": "2842:76:11"
                },
                {
                  "assignments": [
                    4060
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4060,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "2943:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 4084,
                      "src": "2929:21:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 4059,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2929:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4063,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4061,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4094,
                      "src": "2953:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 4062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2953:10:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2929:34:11"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4066,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4060,
                              "src": "2986:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 4065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2980:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 4064,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2980:5:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2980:14:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 4068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2980:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 4069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3004:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2980:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 4081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3064:2:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 4082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2980:86:11",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 4075,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4060,
                              "src": "3032:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 4076,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4046,
                                  "src": "3041:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 4077,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7107,
                                "src": "3041:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 4078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3041:18:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 4073,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3015:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 4074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3015:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 4079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3015:45:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 4072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3008:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 4071,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3008:6:11",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3008:53:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 4051,
                  "id": 4083,
                  "nodeType": "Return",
                  "src": "2973:93:11"
                }
              ]
            },
            "documentation": {
              "id": 4044,
              "nodeType": "StructuredDocumentation",
              "src": "2684:55:11",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 4085,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2753:8:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4048,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2799:8:11"
            },
            "parameters": {
              "id": 4047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4046,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2770:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4085,
                  "src": "2762:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2762:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2761:17:11"
            },
            "returnParameters": {
              "id": 4051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4050,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4085,
                  "src": "2817:13:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4049,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2817:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2816:15:11"
            },
            "scope": 4693,
            "src": "2744:329:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4093,
              "nodeType": "Block",
              "src": "3380:26:11",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 4091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3397:2:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 4090,
                  "id": 4092,
                  "nodeType": "Return",
                  "src": "3390:9:11"
                }
              ]
            },
            "documentation": {
              "id": 4086,
              "nodeType": "StructuredDocumentation",
              "src": "3079:230:11",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
            },
            "id": 4094,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3323:8:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4087,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3331:2:11"
            },
            "returnParameters": {
              "id": 4090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4089,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4094,
                  "src": "3365:13:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4088,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3365:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3364:15:11"
            },
            "scope": 4693,
            "src": "3314:92:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              7326
            ],
            "body": {
              "id": 4136,
              "nodeType": "Block",
              "src": "3533:331:11",
              "statements": [
                {
                  "assignments": [
                    4104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4104,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3551:5:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 4136,
                      "src": "3543:13:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4103,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3543:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4109,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4107,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4099,
                        "src": "3574:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4105,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4693,
                        "src": "3559:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$4693_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 4106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4023,
                      "src": "3559:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 4108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3559:23:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3543:39:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4111,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4097,
                          "src": "3600:2:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 4112,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4104,
                          "src": "3606:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3600:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 4114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3613:35:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 4110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3592:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3592:57:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4116,
                  "nodeType": "ExpressionStatement",
                  "src": "3592:57:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4118,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7012,
                              "src": "3681:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 4119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3681:12:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 4120,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4104,
                            "src": "3697:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3681:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 4123,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4104,
                              "src": "3723:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 4124,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7012,
                                "src": "3730:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 4125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3730:12:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4122,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4210,
                            "src": "3706:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 4126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3706:37:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3681:62:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 4128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3757:58:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 4117,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3660:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3660:165:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4130,
                  "nodeType": "ExpressionStatement",
                  "src": "3660:165:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4132,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4097,
                        "src": "3845:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4133,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4099,
                        "src": "3849:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4131,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4619,
                      "src": "3836:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3836:21:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4135,
                  "nodeType": "ExpressionStatement",
                  "src": "3836:21:11"
                }
              ]
            },
            "documentation": {
              "id": 4095,
              "nodeType": "StructuredDocumentation",
              "src": "3412:46:11",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 4137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3472:7:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4101,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3524:8:11"
            },
            "parameters": {
              "id": 4100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4097,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3488:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4137,
                  "src": "3480:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3480:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4099,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3500:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4137,
                  "src": "3492:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3492:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3479:29:11"
            },
            "returnParameters": {
              "id": 4102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3533:0:11"
            },
            "scope": 4693,
            "src": "3463:401:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7334
            ],
            "body": {
              "id": 4157,
              "nodeType": "Block",
              "src": "4010:132:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4148,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4140,
                            "src": "4036:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4147,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4333,
                          "src": "4028:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 4149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4028:16:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 4150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4046:46:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 4146,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4020:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4020:73:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4152,
                  "nodeType": "ExpressionStatement",
                  "src": "4020:73:11"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4153,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3917,
                      "src": "4111:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 4155,
                    "indexExpression": {
                      "id": 4154,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4140,
                      "src": "4127:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4111:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4145,
                  "id": 4156,
                  "nodeType": "Return",
                  "src": "4104:31:11"
                }
              ]
            },
            "documentation": {
              "id": 4138,
              "nodeType": "StructuredDocumentation",
              "src": "3870:50:11",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 4158,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "3934:11:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4142,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3983:8:11"
            },
            "parameters": {
              "id": 4141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4140,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3954:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4158,
                  "src": "3946:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3946:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3945:17:11"
            },
            "returnParameters": {
              "id": 4145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4144,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4158,
                  "src": "4001:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4001:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4000:9:11"
            },
            "scope": 4693,
            "src": "3925:217:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7342
            ],
            "body": {
              "id": 4191,
              "nodeType": "Block",
              "src": "4293:206:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4168,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4161,
                          "src": "4311:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4169,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7012,
                            "src": "4323:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 4170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4323:12:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4311:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 4172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4337:27:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 4167,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4303:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4303:62:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4174,
                  "nodeType": "ExpressionStatement",
                  "src": "4303:62:11"
                },
                {
                  "expression": {
                    "id": 4182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4175,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3923,
                          "src": "4376:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 4179,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4176,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7012,
                            "src": "4395:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 4177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4395:12:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4376:32:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 4180,
                      "indexExpression": {
                        "id": 4178,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4161,
                        "src": "4409:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4376:42:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4181,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4163,
                      "src": "4421:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4376:53:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4183,
                  "nodeType": "ExpressionStatement",
                  "src": "4376:53:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4185,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7012,
                          "src": "4459:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4459:12:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4187,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4161,
                        "src": "4473:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4188,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4163,
                        "src": "4483:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4184,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7282,
                      "src": "4444:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 4189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4444:48:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4190,
                  "nodeType": "EmitStatement",
                  "src": "4439:53:11"
                }
              ]
            },
            "documentation": {
              "id": 4159,
              "nodeType": "StructuredDocumentation",
              "src": "4148:56:11",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 4192,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4218:17:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4165,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4284:8:11"
            },
            "parameters": {
              "id": 4164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4161,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4244:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4192,
                  "src": "4236:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4236:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4163,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "4259:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4192,
                  "src": "4254:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4162,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4254:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4235:33:11"
            },
            "returnParameters": {
              "id": 4166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4293:0:11"
            },
            "scope": 4693,
            "src": "4209:290:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7352
            ],
            "body": {
              "id": 4209,
              "nodeType": "Block",
              "src": "4668:59:11",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4203,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3923,
                        "src": "4685:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 4205,
                      "indexExpression": {
                        "id": 4204,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4195,
                        "src": "4704:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4685:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 4207,
                    "indexExpression": {
                      "id": 4206,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4197,
                      "src": "4711:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4685:35:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4202,
                  "id": 4208,
                  "nodeType": "Return",
                  "src": "4678:42:11"
                }
              ]
            },
            "documentation": {
              "id": 4193,
              "nodeType": "StructuredDocumentation",
              "src": "4505:55:11",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 4210,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4574:16:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4199,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4644:8:11"
            },
            "parameters": {
              "id": 4198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4195,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4599:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4210,
                  "src": "4591:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4591:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4197,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4614:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4210,
                  "src": "4606:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4606:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4590:33:11"
            },
            "returnParameters": {
              "id": 4202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4201,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4210,
                  "src": "4662:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4200,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4662:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4661:6:11"
            },
            "scope": 4693,
            "src": "4565:162:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7318
            ],
            "body": {
              "id": 4236,
              "nodeType": "Block",
              "src": "4908:211:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4223,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7012,
                              "src": "4997:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 4224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4997:12:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4225,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4217,
                            "src": "5011:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4222,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4374,
                          "src": "4978:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 4226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4978:41:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 4227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5021:51:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 4221,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4970:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4970:103:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4229,
                  "nodeType": "ExpressionStatement",
                  "src": "4970:103:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4231,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4213,
                        "src": "5094:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4232,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4215,
                        "src": "5100:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4233,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4217,
                        "src": "5104:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4230,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4595,
                      "src": "5084:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5084:28:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4235,
                  "nodeType": "ExpressionStatement",
                  "src": "5084:28:11"
                }
              ]
            },
            "documentation": {
              "id": 4211,
              "nodeType": "StructuredDocumentation",
              "src": "4733:51:11",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 4237,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4798:12:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4219,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4899:8:11"
            },
            "parameters": {
              "id": 4218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4213,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4828:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4237,
                  "src": "4820:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4820:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4215,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4850:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4237,
                  "src": "4842:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4842:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4217,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4870:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4237,
                  "src": "4862:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4862:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4810:73:11"
            },
            "returnParameters": {
              "id": 4220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4908:0:11"
            },
            "scope": 4693,
            "src": "4789:330:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7308
            ],
            "body": {
              "id": 4255,
              "nodeType": "Block",
              "src": "5308:56:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4249,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4240,
                        "src": "5335:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4250,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4242,
                        "src": "5341:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4251,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4244,
                        "src": "5345:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 4252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5354:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 4248,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4256,
                        4286
                      ],
                      "referencedDeclaration": 4286,
                      "src": "5318:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 4253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5318:39:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4254,
                  "nodeType": "ExpressionStatement",
                  "src": "5318:39:11"
                }
              ]
            },
            "documentation": {
              "id": 4238,
              "nodeType": "StructuredDocumentation",
              "src": "5125:55:11",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 4256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5194:16:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4246,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5299:8:11"
            },
            "parameters": {
              "id": 4245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4240,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5228:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4256,
                  "src": "5220:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5220:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4242,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5250:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4256,
                  "src": "5242:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5242:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4244,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5270:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4256,
                  "src": "5262:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5262:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5210:73:11"
            },
            "returnParameters": {
              "id": 4247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5308:0:11"
            },
            "scope": 4693,
            "src": "5185:179:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7364
            ],
            "body": {
              "id": 4285,
              "nodeType": "Block",
              "src": "5581:169:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4271,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7012,
                              "src": "5618:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 4272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5618:12:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4273,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4263,
                            "src": "5632:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4270,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4374,
                          "src": "5599:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 4274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5599:41:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 4275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5642:51:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 4269,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5591:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5591:103:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4277,
                  "nodeType": "ExpressionStatement",
                  "src": "5591:103:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4279,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4259,
                        "src": "5718:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4280,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4261,
                        "src": "5724:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4281,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4263,
                        "src": "5728:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4282,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4265,
                        "src": "5737:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4278,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4315,
                      "src": "5704:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 4283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5704:39:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4284,
                  "nodeType": "ExpressionStatement",
                  "src": "5704:39:11"
                }
              ]
            },
            "documentation": {
              "id": 4257,
              "nodeType": "StructuredDocumentation",
              "src": "5370:55:11",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 4286,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5439:16:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4267,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5572:8:11"
            },
            "parameters": {
              "id": 4266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4259,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5473:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4286,
                  "src": "5465:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5465:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4261,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5495:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4286,
                  "src": "5487:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5487:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4263,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5515:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4286,
                  "src": "5507:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5507:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4265,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5545:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4286,
                  "src": "5532:18:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4264,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5532:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5455:101:11"
            },
            "returnParameters": {
              "id": 4268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5581:0:11"
            },
            "scope": 4693,
            "src": "5430:320:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4314,
              "nodeType": "Block",
              "src": "6753:166:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4299,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4289,
                        "src": "6773:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4300,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4291,
                        "src": "6779:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4301,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4293,
                        "src": "6783:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4298,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4595,
                      "src": "6763:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6763:28:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4303,
                  "nodeType": "ExpressionStatement",
                  "src": "6763:28:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4306,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4289,
                            "src": "6832:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4307,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4291,
                            "src": "6838:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4308,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4293,
                            "src": "6842:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 4309,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4295,
                            "src": "6851:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 4305,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4681,
                          "src": "6809:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 4310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6809:48:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 4311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6859:52:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 4304,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6801:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6801:111:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4313,
                  "nodeType": "ExpressionStatement",
                  "src": "6801:111:11"
                }
              ]
            },
            "documentation": {
              "id": 4287,
              "nodeType": "StructuredDocumentation",
              "src": "5756:851:11",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 4315,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "6621:13:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4289,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6652:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4315,
                  "src": "6644:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6644:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4291,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6674:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4315,
                  "src": "6666:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6666:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4293,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6694:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4315,
                  "src": "6686:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6686:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4295,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6724:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4315,
                  "src": "6711:18:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4294,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6711:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6634:101:11"
            },
            "returnParameters": {
              "id": 4297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6753:0:11"
            },
            "scope": 4693,
            "src": "6612:307:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4332,
              "nodeType": "Block",
              "src": "7293:54:11",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 4323,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3909,
                        "src": "7310:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4325,
                      "indexExpression": {
                        "id": 4324,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4318,
                        "src": "7318:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7310:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 4328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7338:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7330:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4326,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7330:7:11",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7330:10:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7310:30:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4322,
                  "id": 4331,
                  "nodeType": "Return",
                  "src": "7303:37:11"
                }
              ]
            },
            "documentation": {
              "id": 4316,
              "nodeType": "StructuredDocumentation",
              "src": "6925:292:11",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 4333,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "7231:7:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4318,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7247:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4333,
                  "src": "7239:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4317,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7239:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7238:17:11"
            },
            "returnParameters": {
              "id": 4322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4321,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4333,
                  "src": "7287:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4320,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7287:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7286:6:11"
            },
            "scope": 4693,
            "src": "7222:125:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4373,
              "nodeType": "Block",
              "src": "7604:245:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4345,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4338,
                            "src": "7630:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4344,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4333,
                          "src": "7622:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 4346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7622:16:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 4347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7640:46:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 4343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7614:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7614:73:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4349,
                  "nodeType": "ExpressionStatement",
                  "src": "7614:73:11"
                },
                {
                  "assignments": [
                    4351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4351,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7705:5:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 4373,
                      "src": "7697:13:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4350,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7697:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4356,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4354,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4338,
                        "src": "7728:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4352,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4693,
                        "src": "7713:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$4693_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 4353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4023,
                      "src": "7713:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 4355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7713:23:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7697:39:11"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 4365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 4359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4357,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4336,
                              "src": "7754:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 4358,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4351,
                              "src": "7765:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7754:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 4364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 4361,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4338,
                                  "src": "7786:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 4360,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4158,
                                "src": "7774:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 4362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7774:20:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 4363,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4336,
                              "src": "7798:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7774:31:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7754:51:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 4367,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4351,
                              "src": "7826:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4368,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4336,
                              "src": "7833:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4366,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4210,
                            "src": "7809:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 4369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7809:32:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7754:87:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 4371,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7753:89:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4342,
                  "id": 4372,
                  "nodeType": "Return",
                  "src": "7746:96:11"
                }
              ]
            },
            "documentation": {
              "id": 4334,
              "nodeType": "StructuredDocumentation",
              "src": "7353:147:11",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 4374,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "7514:18:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4336,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7541:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4374,
                  "src": "7533:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7533:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4338,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7558:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4374,
                  "src": "7550:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7550:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7532:34:11"
            },
            "returnParameters": {
              "id": 4342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4341,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4374,
                  "src": "7598:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4340,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7598:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7597:6:11"
            },
            "scope": 4693,
            "src": "7505:344:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4388,
              "nodeType": "Block",
              "src": "8244:43:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4383,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4377,
                        "src": "8264:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4384,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4379,
                        "src": "8268:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 4385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8277:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 4382,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4389,
                        4418
                      ],
                      "referencedDeclaration": 4418,
                      "src": "8254:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 4386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8254:26:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4387,
                  "nodeType": "ExpressionStatement",
                  "src": "8254:26:11"
                }
              ]
            },
            "documentation": {
              "id": 4375,
              "nodeType": "StructuredDocumentation",
              "src": "7855:319:11",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 4389,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8188:9:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4377,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8206:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4389,
                  "src": "8198:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8198:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4379,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8218:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4389,
                  "src": "8210:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8210:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8197:29:11"
            },
            "returnParameters": {
              "id": 4381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8244:0:11"
            },
            "scope": 4693,
            "src": "8179:108:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4417,
              "nodeType": "Block",
              "src": "8623:196:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4400,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4392,
                        "src": "8639:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4401,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4394,
                        "src": "8643:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4399,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4475,
                      "src": "8633:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8633:18:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4403,
                  "nodeType": "ExpressionStatement",
                  "src": "8633:18:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 4408,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8713:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8705:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4406,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8705:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8705:10:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4410,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4392,
                            "src": "8717:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4411,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4394,
                            "src": "8721:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 4412,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4396,
                            "src": "8730:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 4405,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4681,
                          "src": "8682:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 4413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8682:54:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 4414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8750:52:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 4404,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8661:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8661:151:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4416,
                  "nodeType": "ExpressionStatement",
                  "src": "8661:151:11"
                }
              ]
            },
            "documentation": {
              "id": 4390,
              "nodeType": "StructuredDocumentation",
              "src": "8293:210:11",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 4418,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8517:9:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4392,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8544:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4418,
                  "src": "8536:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8536:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4394,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8564:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4418,
                  "src": "8556:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4393,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8556:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4396,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8594:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4418,
                  "src": "8581:18:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4395,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8581:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8526:79:11"
            },
            "returnParameters": {
              "id": 4398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8623:0:11"
            },
            "scope": 4693,
            "src": "8508:311:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4474,
              "nodeType": "Block",
              "src": "9202:311:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4427,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4421,
                          "src": "9220:2:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9234:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9226:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4428,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9226:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9226:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9220:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 4433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9238:34:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 4426,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9212:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9212:61:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4435,
                  "nodeType": "ExpressionStatement",
                  "src": "9212:61:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9291:17:11",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 4438,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4423,
                              "src": "9300:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4437,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4333,
                            "src": "9292:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 4439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9292:16:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 4441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9310:30:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 4436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9283:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9283:58:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4443,
                  "nodeType": "ExpressionStatement",
                  "src": "9283:58:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9381:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9373:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4445,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9373:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9373:10:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4449,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4421,
                        "src": "9385:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4450,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4423,
                        "src": "9389:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4444,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4692,
                      "src": "9352:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9352:45:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4452,
                  "nodeType": "ExpressionStatement",
                  "src": "9352:45:11"
                },
                {
                  "expression": {
                    "id": 4457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4453,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3913,
                        "src": "9408:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4455,
                      "indexExpression": {
                        "id": 4454,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4421,
                        "src": "9418:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9408:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 4456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9425:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9408:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4458,
                  "nodeType": "ExpressionStatement",
                  "src": "9408:18:11"
                },
                {
                  "expression": {
                    "id": 4463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4459,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3909,
                        "src": "9436:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4461,
                      "indexExpression": {
                        "id": 4460,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4423,
                        "src": "9444:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9436:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4462,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4421,
                      "src": "9455:2:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9436:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4464,
                  "nodeType": "ExpressionStatement",
                  "src": "9436:21:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9490:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9482:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4466,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9482:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9482:10:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4470,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4421,
                        "src": "9494:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4471,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4423,
                        "src": "9498:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4465,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7264,
                      "src": "9473:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9473:33:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4473,
                  "nodeType": "EmitStatement",
                  "src": "9468:38:11"
                }
              ]
            },
            "documentation": {
              "id": 4419,
              "nodeType": "StructuredDocumentation",
              "src": "8825:311:11",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 4475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "9150:5:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4421,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9164:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4475,
                  "src": "9156:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4420,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9156:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4423,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9176:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4475,
                  "src": "9168:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9168:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9155:29:11"
            },
            "returnParameters": {
              "id": 4425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9202:0:11"
            },
            "scope": 4693,
            "src": "9141:372:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4525,
              "nodeType": "Block",
              "src": "9779:299:11",
              "statements": [
                {
                  "assignments": [
                    4482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4482,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "9797:5:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 4525,
                      "src": "9789:13:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4481,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9789:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4487,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4485,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4478,
                        "src": "9820:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4483,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4693,
                        "src": "9805:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$4693_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 4484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4023,
                      "src": "9805:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 4486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9805:23:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9789:39:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4489,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4482,
                        "src": "9860:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9875:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9867:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4490,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9867:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9867:10:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4494,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4478,
                        "src": "9879:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4488,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4692,
                      "src": "9839:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9839:48:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4496,
                  "nodeType": "ExpressionStatement",
                  "src": "9839:48:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9942:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9934:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4498,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9934:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9934:10:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4502,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4478,
                        "src": "9946:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4497,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4619,
                      "src": "9925:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9925:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4504,
                  "nodeType": "ExpressionStatement",
                  "src": "9925:29:11"
                },
                {
                  "expression": {
                    "id": 4509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4505,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3913,
                        "src": "9965:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4507,
                      "indexExpression": {
                        "id": 4506,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4482,
                        "src": "9975:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9965:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 4508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9985:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9965:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4510,
                  "nodeType": "ExpressionStatement",
                  "src": "9965:21:11"
                },
                {
                  "expression": {
                    "id": 4514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9996:23:11",
                    "subExpression": {
                      "baseExpression": {
                        "id": 4511,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3909,
                        "src": "10003:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4513,
                      "indexExpression": {
                        "id": 4512,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4478,
                        "src": "10011:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10003:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4515,
                  "nodeType": "ExpressionStatement",
                  "src": "9996:23:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4517,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4482,
                        "src": "10044:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10059:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10051:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4518,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10051:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10051:10:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4522,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4478,
                        "src": "10063:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4516,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7264,
                      "src": "10035:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10035:36:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4524,
                  "nodeType": "EmitStatement",
                  "src": "10030:41:11"
                }
              ]
            },
            "documentation": {
              "id": 4476,
              "nodeType": "StructuredDocumentation",
              "src": "9519:206:11",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 4526,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9739:5:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4478,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9753:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4526,
                  "src": "9745:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9745:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9744:17:11"
            },
            "returnParameters": {
              "id": 4480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9779:0:11"
            },
            "scope": 4693,
            "src": "9730:348:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4594,
              "nodeType": "Block",
              "src": "10511:451:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 4539,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4533,
                              "src": "10544:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4537,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4693,
                              "src": "10529:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$4693_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 4538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4023,
                            "src": "10529:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 4540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10529:23:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4541,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4529,
                          "src": "10556:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10529:31:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 4543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10562:43:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 4536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10521:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10521:85:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4545,
                  "nodeType": "ExpressionStatement",
                  "src": "10521:85:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4547,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4531,
                          "src": "10624:2:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4550,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10638:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10630:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4548,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10630:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10630:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10624:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 4553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10642:38:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 4546,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10616:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10616:65:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4555,
                  "nodeType": "ExpressionStatement",
                  "src": "10616:65:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4557,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4529,
                        "src": "10713:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4558,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4531,
                        "src": "10719:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4559,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4533,
                        "src": "10723:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4556,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4692,
                      "src": "10692:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10692:39:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4561,
                  "nodeType": "ExpressionStatement",
                  "src": "10692:39:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10810:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10802:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4563,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10802:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10802:10:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4567,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4533,
                        "src": "10814:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4562,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4619,
                      "src": "10793:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10793:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4569,
                  "nodeType": "ExpressionStatement",
                  "src": "10793:29:11"
                },
                {
                  "expression": {
                    "id": 4574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4570,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3913,
                        "src": "10833:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4572,
                      "indexExpression": {
                        "id": 4571,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4529,
                        "src": "10843:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10833:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 4573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10852:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10833:20:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4575,
                  "nodeType": "ExpressionStatement",
                  "src": "10833:20:11"
                },
                {
                  "expression": {
                    "id": 4580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4576,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3913,
                        "src": "10863:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4578,
                      "indexExpression": {
                        "id": 4577,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4531,
                        "src": "10873:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10863:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 4579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10880:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10863:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4581,
                  "nodeType": "ExpressionStatement",
                  "src": "10863:18:11"
                },
                {
                  "expression": {
                    "id": 4586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4582,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3909,
                        "src": "10891:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4584,
                      "indexExpression": {
                        "id": 4583,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4533,
                        "src": "10899:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10891:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4585,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4531,
                      "src": "10910:2:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10891:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4587,
                  "nodeType": "ExpressionStatement",
                  "src": "10891:21:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4589,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4529,
                        "src": "10937:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4590,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4531,
                        "src": "10943:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4591,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4533,
                        "src": "10947:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4588,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7264,
                      "src": "10928:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10928:27:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4593,
                  "nodeType": "EmitStatement",
                  "src": "10923:32:11"
                }
              ]
            },
            "documentation": {
              "id": 4527,
              "nodeType": "StructuredDocumentation",
              "src": "10084:313:11",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 4595,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "10411:9:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4529,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10438:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4595,
                  "src": "10430:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4528,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10430:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4531,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10460:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4595,
                  "src": "10452:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10452:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4533,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10480:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4595,
                  "src": "10472:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4532,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10472:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10420:73:11"
            },
            "returnParameters": {
              "id": 4535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10511:0:11"
            },
            "scope": 4693,
            "src": "10402:560:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4618,
              "nodeType": "Block",
              "src": "11137:107:11",
              "statements": [
                {
                  "expression": {
                    "id": 4607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4603,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3917,
                        "src": "11147:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4605,
                      "indexExpression": {
                        "id": 4604,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4600,
                        "src": "11163:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11147:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4606,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4598,
                      "src": "11174:2:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11147:29:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4608,
                  "nodeType": "ExpressionStatement",
                  "src": "11147:29:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4612,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4600,
                            "src": "11215:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 4610,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4693,
                            "src": "11200:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$4693_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 4611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4023,
                          "src": "11200:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 4613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11200:23:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4614,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4598,
                        "src": "11225:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4615,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4600,
                        "src": "11229:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4609,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7273,
                      "src": "11191:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11191:46:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4617,
                  "nodeType": "EmitStatement",
                  "src": "11186:51:11"
                }
              ]
            },
            "documentation": {
              "id": 4596,
              "nodeType": "StructuredDocumentation",
              "src": "10968:100:11",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 4619,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "11082:8:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4598,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11099:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4619,
                  "src": "11091:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11091:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4600,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11111:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4619,
                  "src": "11103:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4599,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11103:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11090:29:11"
            },
            "returnParameters": {
              "id": 4602,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11137:0:11"
            },
            "scope": 4693,
            "src": "11073:171:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4680,
              "nodeType": "Block",
              "src": "11953:622:11",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4633,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4624,
                        "src": "11967:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 4634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6650,
                      "src": "11967:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 4635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11967:15:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4678,
                    "nodeType": "Block",
                    "src": "12533:36:11",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 4676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12554:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 4632,
                        "id": 4677,
                        "nodeType": "Return",
                        "src": "12547:11:11"
                      }
                    ]
                  },
                  "id": 4679,
                  "nodeType": "IfStatement",
                  "src": "11963:606:11",
                  "trueBody": {
                    "id": 4675,
                    "nodeType": "Block",
                    "src": "11984:543:11",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 4655,
                              "nodeType": "Block",
                              "src": "12099:91:11",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 4653,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 4649,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4647,
                                      "src": "12124:6:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 4650,
                                          "name": "IERC721Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7383,
                                          "src": "12134:15:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$7383_$",
                                            "typeString": "type(contract IERC721Receiver)"
                                          }
                                        },
                                        "id": 4651,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 7382,
                                        "src": "12134:32:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 4652,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "12134:41:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "12124:51:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 4632,
                                  "id": 4654,
                                  "nodeType": "Return",
                                  "src": "12117:58:11"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 4656,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 4648,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 4647,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "12091:6:11",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 4656,
                                  "src": "12084:13:11",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 4646,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12084:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12083:15:11"
                            },
                            "src": "12075:115:11"
                          },
                          {
                            "block": {
                              "id": 4672,
                              "nodeType": "Block",
                              "src": "12219:298:11",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 4663,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 4660,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4658,
                                        "src": "12241:6:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 4661,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "12241:13:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 4662,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12258:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "12241:18:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 4670,
                                    "nodeType": "Block",
                                    "src": "12368:135:11",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "12399:86:11",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "12436:2:11",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12440:6:11"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12432:3:11"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12432:15:11"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12455:6:11"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12449:5:11"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12449:13:11"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12425:6:11"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "12425:38:11"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "12425:38:11"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 4658,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12440:6:11",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 4658,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12455:6:11",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 4669,
                                        "nodeType": "InlineAssembly",
                                        "src": "12390:95:11"
                                      }
                                    ]
                                  },
                                  "id": 4671,
                                  "nodeType": "IfStatement",
                                  "src": "12237:266:11",
                                  "trueBody": {
                                    "id": 4668,
                                    "nodeType": "Block",
                                    "src": "12261:101:11",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 4665,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12290:52:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 4664,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "12283:6:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 4666,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12283:60:11",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 4667,
                                        "nodeType": "ExpressionStatement",
                                        "src": "12283:60:11"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 4673,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 4659,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 4658,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "12211:6:11",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 4673,
                                  "src": "12198:19:11",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 4657,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12198:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12197:21:11"
                            },
                            "src": "12191:326:11"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 4640,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7012,
                                "src": "12039:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 4641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12039:12:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4642,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4622,
                              "src": "12053:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4643,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4626,
                              "src": "12059:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4644,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4628,
                              "src": "12068:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4637,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4624,
                                  "src": "12018:2:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4636,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7383,
                                "src": "12002:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$7383_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 4638,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12002:19:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$7383",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 4639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7382,
                            "src": "12002:36:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 4645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12002:72:11",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 4674,
                        "nodeType": "TryStatement",
                        "src": "11998:519:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4620,
              "nodeType": "StructuredDocumentation",
              "src": "11250:542:11",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 4681,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "11806:22:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4622,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11846:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4681,
                  "src": "11838:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11838:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4624,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11868:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4681,
                  "src": "11860:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11860:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4626,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11888:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4681,
                  "src": "11880:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4625,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11880:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4628,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "11918:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4681,
                  "src": "11905:18:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4627,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11905:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11828:101:11"
            },
            "returnParameters": {
              "id": 4632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4631,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4681,
                  "src": "11947:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4630,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11947:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11946:6:11"
            },
            "scope": 4693,
            "src": "11797:778:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4691,
              "nodeType": "Block",
              "src": "13251:2:11",
              "statements": []
            },
            "documentation": {
              "id": 4682,
              "nodeType": "StructuredDocumentation",
              "src": "12581:545:11",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 4692,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "13140:20:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4684,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13178:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4692,
                  "src": "13170:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13170:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4686,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13200:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4692,
                  "src": "13192:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4685,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13192:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4688,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13220:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4692,
                  "src": "13212:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4687,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13212:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13160:73:11"
            },
            "returnParameters": {
              "id": 4690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13251:0:11"
            },
            "scope": 4693,
            "src": "13131:122:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 4694,
        "src": "554:12701:11",
        "usedErrors": []
      }
    ],
    "src": "33:13223:11"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001474380380620014748339810160408190526200003491620001c1565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b5050506200027b565b828054620000769062000228565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c62000265565b604051601f8301601f19908116603f0116810190828211818310171562000167576200016762000265565b8160405283815260209250868385880101111562000183578485fd5b8491505b83821015620001a6578582018301518183018401529082019062000187565b83821115620001b757848385830101525b9695505050505050565b60008060408385031215620001d4578182fd5b82516001600160401b0380821115620001eb578384fd5b620001f9868387016200010e565b935060208501519150808211156200020f578283fd5b506200021e858286016200010e565b9150509250929050565b600181811c908216806200023d57607f821691505b602082108114156200025f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6111e9806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c806301ffc9a7146100b457806306fdde03146100dc578063081812fc146100f1578063095ea7b31461011c57806323b872dd1461013157806342842e0e146101445780636352211e1461015757806370a082311461016a57806395d89b411461018b578063a22cb46514610193578063b88d4fde146101a6578063c87b56dd146101b9578063e985e9c5146101cc575b600080fd5b6100c76100c2366004610ee1565b6101df565b60405190151581526020015b60405180910390f35b6100e4610231565b6040516100d39190610fc9565b6101046100ff366004610f19565b6102c3565b6040516001600160a01b0390911681526020016100d3565b61012f61012a366004610eb8565b610350565b005b61012f61013f366004610d6f565b610461565b61012f610152366004610d6f565b610492565b610104610165366004610f19565b6104ad565b61017d610178366004610d23565b610524565b6040519081526020016100d3565b6100e46105ab565b61012f6101a1366004610e7e565b6105ba565b61012f6101b4366004610daa565b61067b565b6100e46101c7366004610f19565b6106b3565b6100c76101da366004610d3d565b61078b565b60006001600160e01b031982166380ac58cd60e01b148061021057506001600160e01b03198216635b5e139f60e01b145b8061022b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610240906110ee565b80601f016020809104026020016040519081016040528092919081815260200182805461026c906110ee565b80156102b95780601f1061028e576101008083540402835291602001916102b9565b820191906000526020600020905b81548152906001019060200180831161029c57829003601f168201915b5050505050905090565b60006102ce826107b9565b6103345760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061035b826104ad565b9050806001600160a01b0316836001600160a01b031614156103c95760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161032b565b336001600160a01b03821614806103e557506103e5813361078b565b6104525760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b606482015260840161032b565b61045c83836107d6565b505050565b61046b3382610844565b6104875760405162461bcd60e51b815260040161032b9061102e565b61045c83838361090e565b61045c8383836040518060200160405280600081525061067b565b6000818152600260205260408120546001600160a01b03168061022b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161032b565b60006001600160a01b03821661058f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161032b565b506001600160a01b031660009081526003602052604090205490565b606060018054610240906110ee565b6001600160a01b03821633141561060f5760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b604482015260640161032b565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106853383610844565b6106a15760405162461bcd60e51b815260040161032b9061102e565b6106ad84848484610aae565b50505050565b60606106be826107b9565b6107225760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161032b565b600061073960408051602081019091526000815290565b905060008151116107595760405180602001604052806000815250610784565b8061076384610ae1565b604051602001610774929190610f5d565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061080b826104ad565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061084f826107b9565b6108b05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161032b565b60006108bb836104ad565b9050806001600160a01b0316846001600160a01b031614806108f65750836001600160a01b03166108eb846102c3565b6001600160a01b0316145b806109065750610906818561078b565b949350505050565b826001600160a01b0316610921826104ad565b6001600160a01b0316146109895760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161032b565b6001600160a01b0382166109eb5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161032b565b6109f66000826107d6565b6001600160a01b0383166000908152600360205260408120805460019290610a1f9084906110ab565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a4d90849061107f565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610ab984848461090e565b610ac584848484610bfa565b6106ad5760405162461bcd60e51b815260040161032b90610fdc565b606081610b055750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b2f5780610b1981611129565b9150610b289050600a83611097565b9150610b09565b6000816001600160401b03811115610b5757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610b81576020820181803683370190505b5090505b841561090657610b966001836110ab565b9150610ba3600a86611144565b610bae90603061107f565b60f81b818381518110610bd157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610bf3600a86611097565b9450610b85565b60006001600160a01b0384163b15610cfc57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c3e903390899088908890600401610f8c565b602060405180830381600087803b158015610c5857600080fd5b505af1925050508015610c88575060408051601f3d908101601f19168201909252610c8591810190610efd565b60015b610ce2573d808015610cb6576040519150601f19603f3d011682016040523d82523d6000602084013e610cbb565b606091505b508051610cda5760405162461bcd60e51b815260040161032b90610fdc565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610906565b506001949350505050565b80356001600160a01b0381168114610d1e57600080fd5b919050565b600060208284031215610d34578081fd5b61078482610d07565b60008060408385031215610d4f578081fd5b610d5883610d07565b9150610d6660208401610d07565b90509250929050565b600080600060608486031215610d83578081fd5b610d8c84610d07565b9250610d9a60208501610d07565b9150604084013590509250925092565b60008060008060808587031215610dbf578081fd5b610dc885610d07565b9350610dd660208601610d07565b92506040850135915060608501356001600160401b0380821115610df8578283fd5b818701915087601f830112610e0b578283fd5b813581811115610e1d57610e1d611184565b604051601f8201601f19908116603f01168101908382118183101715610e4557610e45611184565b816040528281528a6020848701011115610e5d578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215610e90578182fd5b610e9983610d07565b915060208301358015158114610ead578182fd5b809150509250929050565b60008060408385031215610eca578182fd5b610ed383610d07565b946020939093013593505050565b600060208284031215610ef2578081fd5b81356107848161119a565b600060208284031215610f0e578081fd5b81516107848161119a565b600060208284031215610f2a578081fd5b5035919050565b60008151808452610f498160208601602086016110c2565b601f01601f19169290920160200192915050565b60008351610f6f8184602088016110c2565b835190830190610f838183602088016110c2565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610fbf90830184610f31565b9695505050505050565b6020815260006107846020830184610f31565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000821982111561109257611092611158565b500190565b6000826110a6576110a661116e565b500490565b6000828210156110bd576110bd611158565b500390565b60005b838110156110dd5781810151838201526020016110c5565b838111156106ad5750506000910152565b600181811c9082168061110257607f821691505b6020821081141561112357634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561113d5761113d611158565b5060010190565b6000826111535761115361116e565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146111b057600080fd5b5056fea264697066735822122004752fddfdd007e821ce78ee990703af7644476f077b298bd8f7364fd2e1d6fd64736f6c63430008040033",
  "bytecodeSha1": "5fb60230eee098a3dd213ccd2e84d4409e9728e3",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 1
    },
    "version": "0.8.4+commit.c7e474f2"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "11": {
        "ERC721._isApprovedOrOwner": {
          "60": [
            7622,
            7638,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "63": [
            6809,
            6857,
            true
          ]
        },
        "ERC721._transfer": {
          "61": [
            10529,
            10560,
            true
          ],
          "62": [
            10624,
            10640,
            true
          ]
        },
        "ERC721.approve": {
          "50": [
            3600,
            3611,
            true
          ],
          "51": [
            3681,
            3702,
            true
          ],
          "52": [
            3706,
            3743,
            true
          ]
        },
        "ERC721.balanceOf": {
          "55": [
            1954,
            1973,
            true
          ]
        },
        "ERC721.getApproved": {
          "49": [
            4028,
            4044,
            true
          ]
        },
        "ERC721.ownerOf": {
          "54": [
            2258,
            2277,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "57": [
            5599,
            5640,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "56": [
            4311,
            4335,
            true
          ]
        },
        "ERC721.tokenURI": {
          "58": [
            2850,
            2866,
            true
          ],
          "59": [
            2980,
            3005,
            true
          ]
        },
        "ERC721.transferFrom": {
          "53": [
            4978,
            5019,
            true
          ]
        }
      },
      "12": {},
      "13": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {
        "Strings.toString": {
          "64": [
            548,
            558,
            false
          ]
        }
      },
      "19": {},
      "20": {}
    },
    "statements": {
      "11": {
        "ERC721._approve": {
          "26": [
            11147,
            11176
          ],
          "27": [
            11186,
            11237
          ]
        },
        "ERC721._baseURI": {
          "22": [
            3390,
            3399
          ]
        },
        "ERC721._checkOnERC721Received": {
          "46": [
            12283,
            12343
          ],
          "47": [
            12117,
            12175
          ],
          "48": [
            12547,
            12558
          ]
        },
        "ERC721._exists": {
          "25": [
            7303,
            7340
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "28": [
            7614,
            7687
          ],
          "29": [
            7746,
            7842
          ]
        },
        "ERC721._safeTransfer": {
          "37": [
            6763,
            6791
          ],
          "38": [
            6801,
            6912
          ]
        },
        "ERC721._transfer": {
          "30": [
            10521,
            10606
          ],
          "31": [
            10616,
            10681
          ],
          "32": [
            10793,
            10822
          ],
          "33": [
            10833,
            10853
          ],
          "34": [
            10863,
            10881
          ],
          "35": [
            10891,
            10912
          ],
          "36": [
            10923,
            10955
          ]
        },
        "ERC721.approve": {
          "5": [
            3592,
            3649
          ],
          "7": [
            3660,
            3825
          ],
          "8": [
            3836,
            3857
          ]
        },
        "ERC721.balanceOf": {
          "13": [
            1946,
            2020
          ],
          "14": [
            2030,
            2053
          ]
        },
        "ERC721.getApproved": {
          "3": [
            4020,
            4093
          ],
          "4": [
            4104,
            4135
          ]
        },
        "ERC721.isApprovedForAll": {
          "24": [
            4678,
            4720
          ]
        },
        "ERC721.name": {
          "2": [
            2493,
            2505
          ]
        },
        "ERC721.ownerOf": {
          "12": [
            2250,
            2323
          ]
        },
        "ERC721.safeTransferFrom": {
          "11": [
            5318,
            5357
          ],
          "19": [
            5591,
            5694
          ],
          "20": [
            5704,
            5743
          ]
        },
        "ERC721.setApprovalForAll": {
          "16": [
            4303,
            4365
          ],
          "17": [
            4376,
            4429
          ],
          "18": [
            4439,
            4492
          ]
        },
        "ERC721.supportsInterface": {
          "0": [
            1614,
            1789
          ]
        },
        "ERC721.symbol": {
          "15": [
            2657,
            2671
          ]
        },
        "ERC721.tokenURI": {
          "21": [
            2842,
            2918
          ],
          "23": [
            2973,
            3066
          ]
        },
        "ERC721.transferFrom": {
          "9": [
            4970,
            5073
          ],
          "10": [
            5084,
            5112
          ]
        }
      },
      "12": {},
      "13": {},
      "15": {},
      "16": {
        "Address.isContract": {
          "45": [
            1073,
            1088
          ]
        }
      },
      "17": {
        "Context._msgSender": {
          "6": [
            659,
            676
          ]
        }
      },
      "18": {
        "Strings.toString": {
          "39": [
            574,
            584
          ],
          "40": [
            690,
            698
          ],
          "41": [
            712,
            722
          ],
          "42": [
            824,
            835
          ],
          "43": [
            849,
            905
          ],
          "44": [
            919,
            930
          ]
        }
      },
      "19": {
        "ERC165.supportsInterface": {
          "1": [
            864,
            911
          ]
        }
      },
      "20": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100af5760003560e01c806301ffc9a7146100b457806306fdde03146100dc578063081812fc146100f1578063095ea7b31461011c57806323b872dd1461013157806342842e0e146101445780636352211e1461015757806370a082311461016a57806395d89b411461018b578063a22cb46514610193578063b88d4fde146101a6578063c87b56dd146101b9578063e985e9c5146101cc575b600080fd5b6100c76100c2366004610ee1565b6101df565b60405190151581526020015b60405180910390f35b6100e4610231565b6040516100d39190610fc9565b6101046100ff366004610f19565b6102c3565b6040516001600160a01b0390911681526020016100d3565b61012f61012a366004610eb8565b610350565b005b61012f61013f366004610d6f565b610461565b61012f610152366004610d6f565b610492565b610104610165366004610f19565b6104ad565b61017d610178366004610d23565b610524565b6040519081526020016100d3565b6100e46105ab565b61012f6101a1366004610e7e565b6105ba565b61012f6101b4366004610daa565b61067b565b6100e46101c7366004610f19565b6106b3565b6100c76101da366004610d3d565b61078b565b60006001600160e01b031982166380ac58cd60e01b148061021057506001600160e01b03198216635b5e139f60e01b145b8061022b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610240906110ee565b80601f016020809104026020016040519081016040528092919081815260200182805461026c906110ee565b80156102b95780601f1061028e576101008083540402835291602001916102b9565b820191906000526020600020905b81548152906001019060200180831161029c57829003601f168201915b5050505050905090565b60006102ce826107b9565b6103345760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061035b826104ad565b9050806001600160a01b0316836001600160a01b031614156103c95760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161032b565b336001600160a01b03821614806103e557506103e5813361078b565b6104525760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b606482015260840161032b565b61045c83836107d6565b505050565b61046b3382610844565b6104875760405162461bcd60e51b815260040161032b9061102e565b61045c83838361090e565b61045c8383836040518060200160405280600081525061067b565b6000818152600260205260408120546001600160a01b03168061022b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161032b565b60006001600160a01b03821661058f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161032b565b506001600160a01b031660009081526003602052604090205490565b606060018054610240906110ee565b6001600160a01b03821633141561060f5760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b604482015260640161032b565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106853383610844565b6106a15760405162461bcd60e51b815260040161032b9061102e565b6106ad84848484610aae565b50505050565b60606106be826107b9565b6107225760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161032b565b600061073960408051602081019091526000815290565b905060008151116107595760405180602001604052806000815250610784565b8061076384610ae1565b604051602001610774929190610f5d565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061080b826104ad565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061084f826107b9565b6108b05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161032b565b60006108bb836104ad565b9050806001600160a01b0316846001600160a01b031614806108f65750836001600160a01b03166108eb846102c3565b6001600160a01b0316145b806109065750610906818561078b565b949350505050565b826001600160a01b0316610921826104ad565b6001600160a01b0316146109895760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161032b565b6001600160a01b0382166109eb5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161032b565b6109f66000826107d6565b6001600160a01b0383166000908152600360205260408120805460019290610a1f9084906110ab565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a4d90849061107f565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610ab984848461090e565b610ac584848484610bfa565b6106ad5760405162461bcd60e51b815260040161032b90610fdc565b606081610b055750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b2f5780610b1981611129565b9150610b289050600a83611097565b9150610b09565b6000816001600160401b03811115610b5757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610b81576020820181803683370190505b5090505b841561090657610b966001836110ab565b9150610ba3600a86611144565b610bae90603061107f565b60f81b818381518110610bd157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610bf3600a86611097565b9450610b85565b60006001600160a01b0384163b15610cfc57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c3e903390899088908890600401610f8c565b602060405180830381600087803b158015610c5857600080fd5b505af1925050508015610c88575060408051601f3d908101601f19168201909252610c8591810190610efd565b60015b610ce2573d808015610cb6576040519150601f19603f3d011682016040523d82523d6000602084013e610cbb565b606091505b508051610cda5760405162461bcd60e51b815260040161032b90610fdc565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610906565b506001949350505050565b80356001600160a01b0381168114610d1e57600080fd5b919050565b600060208284031215610d34578081fd5b61078482610d07565b60008060408385031215610d4f578081fd5b610d5883610d07565b9150610d6660208401610d07565b90509250929050565b600080600060608486031215610d83578081fd5b610d8c84610d07565b9250610d9a60208501610d07565b9150604084013590509250925092565b60008060008060808587031215610dbf578081fd5b610dc885610d07565b9350610dd660208601610d07565b92506040850135915060608501356001600160401b0380821115610df8578283fd5b818701915087601f830112610e0b578283fd5b813581811115610e1d57610e1d611184565b604051601f8201601f19908116603f01168101908382118183101715610e4557610e45611184565b816040528281528a6020848701011115610e5d578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215610e90578182fd5b610e9983610d07565b915060208301358015158114610ead578182fd5b809150509250929050565b60008060408385031215610eca578182fd5b610ed383610d07565b946020939093013593505050565b600060208284031215610ef2578081fd5b81356107848161119a565b600060208284031215610f0e578081fd5b81516107848161119a565b600060208284031215610f2a578081fd5b5035919050565b60008151808452610f498160208601602086016110c2565b601f01601f19169290920160200192915050565b60008351610f6f8184602088016110c2565b835190830190610f838183602088016110c2565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610fbf90830184610f31565b9695505050505050565b6020815260006107846020830184610f31565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000821982111561109257611092611158565b500190565b6000826110a6576110a661116e565b500490565b6000828210156110bd576110bd611158565b500390565b60005b838110156110dd5781810151838201526020016110c5565b838111156106ad5750506000910152565b600181811c9082168061110257607f821691505b6020821081141561112357634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561113d5761113d611158565b5060010190565b6000826111535761115361116e565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146111b057600080fd5b5056fea264697066735822122004752fddfdd007e821ce78ee990703af7644476f077b298bd8f7364fd2e1d6fd64736f6c63430008040033",
  "deployedSourceMap": "554:12701:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1496:300;;;;;;:::i;:::-;;:::i;:::-;;;5162:14:27;;5155:22;5137:41;;5125:2;5110:18;1496:300:11;;;;;;;;2414:98;;;:::i;:::-;;;;;;;:::i;3925:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4460:32:27;;;4442:51;;4430:2;4415:18;3925:217:11;4397:102:27;3463:401:11;;;;;;:::i;:::-;;:::i;:::-;;4789:330;;;;;;:::i;:::-;;:::i;5185:179::-;;;;;;:::i;:::-;;:::i;2117:235::-;;;;;;:::i;:::-;;:::i;1855:205::-;;;;;;:::i;:::-;;:::i;:::-;;;10455:25:27;;;10443:2;10428:18;1855:205:11;10410:76:27;2576:102:11;;;:::i;4209:290::-;;;;;;:::i;:::-;;:::i;5430:320::-;;;;;;:::i;:::-;;:::i;2744:329::-;;;;;;:::i;:::-;;:::i;4565:162::-;;;;;;:::i;:::-;;:::i;1496:300::-;1598:4;-1:-1:-1;;;;;;1633:40:11;;-1:-1:-1;;;1633:40:11;;:104;;-1:-1:-1;;;;;;;1689:48:11;;-1:-1:-1;;;1689:48:11;1633:104;:156;;;-1:-1:-1;;;;;;;;;;871:40:19;;;1753:36:11;1614:175;1496:300;-1:-1:-1;;1496:300:11:o;2414:98::-;2468:13;2500:5;2493:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:98;:::o;3925:217::-;4001:7;4028:16;4036:7;4028;:16::i;:::-;4020:73;;;;-1:-1:-1;;;4020:73:11;;8452:2:27;4020:73:11;;;8434:21:27;8491:2;8471:18;;;8464:30;8530:34;8510:18;;;8503:62;-1:-1:-1;;;8581:18:27;;;8574:42;8633:19;;4020:73:11;;;;;;;;;-1:-1:-1;4111:24:11;;;;:15;:24;;;;;;-1:-1:-1;;;;;4111:24:11;;3925:217::o;3463:401::-;3543:13;3559:23;3574:7;3559:14;:23::i;:::-;3543:39;;3606:5;-1:-1:-1;;;;;3600:11:11;:2;-1:-1:-1;;;;;3600:11:11;;;3592:57;;;;-1:-1:-1;;;3592:57:11;;9691:2:27;3592:57:11;;;9673:21:27;9730:2;9710:18;;;9703:30;9769:34;9749:18;;;9742:62;-1:-1:-1;;;9820:18:27;;;9813:31;9861:19;;3592:57:11;9663:223:27;3592:57:11;666:10:17;-1:-1:-1;;;;;3681:21:11;;;;:62;;-1:-1:-1;3706:37:11;3723:5;666:10:17;4565:162:11;:::i;3706:37::-;3660:165;;;;-1:-1:-1;;;3660:165:11;;7206:2:27;3660:165:11;;;7188:21:27;7245:2;7225:18;;;7218:30;7284:34;7264:18;;;7257:62;-1:-1:-1;;;7335:18:27;;;7328:54;7399:19;;3660:165:11;7178:246:27;3660:165:11;3836:21;3845:2;3849:7;3836:8;:21::i;:::-;3463:401;;;:::o;4789:330::-;4978:41;666:10:17;5011:7:11;4978:18;:41::i;:::-;4970:103;;;;-1:-1:-1;;;4970:103:11;;;;;;;:::i;:::-;5084:28;5094:4;5100:2;5104:7;5084:9;:28::i;5185:179::-;5318:39;5335:4;5341:2;5345:7;5318:39;;;;;;;;;;;;:16;:39::i;2117:235::-;2189:7;2224:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2224:16:11;2258:19;2250:73;;;;-1:-1:-1;;;2250:73:11;;8042:2:27;2250:73:11;;;8024:21:27;8081:2;8061:18;;;8054:30;8120:34;8100:18;;;8093:62;-1:-1:-1;;;8171:18:27;;;8164:39;8220:19;;2250:73:11;8014:231:27;1855:205:11;1927:7;-1:-1:-1;;;;;1954:19:11;;1946:74;;;;-1:-1:-1;;;1946:74:11;;7631:2:27;1946:74:11;;;7613:21:27;7670:2;7650:18;;;7643:30;7709:34;7689:18;;;7682:62;-1:-1:-1;;;7760:18:27;;;7753:40;7810:19;;1946:74:11;7603:232:27;1946:74:11;-1:-1:-1;;;;;;2037:16:11;;;;;:9;:16;;;;;;;1855:205::o;2576:102::-;2632:13;2664:7;2657:14;;;;;:::i;4209:290::-;-1:-1:-1;;;;;4311:24:11;;666:10:17;4311:24:11;;4303:62;;;;-1:-1:-1;;;4303:62:11;;6439:2:27;4303:62:11;;;6421:21:27;6478:2;6458:18;;;6451:30;-1:-1:-1;;;6497:18:27;;;6490:55;6562:18;;4303:62:11;6411:175:27;4303:62:11;666:10:17;4376:32:11;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4376:42:11;;;;;;;;;;;;:53;;-1:-1:-1;;4376:53:11;;;;;;;;;;4444:48;;5137:41:27;;;4376:42:11;;666:10:17;4444:48:11;;5110:18:27;4444:48:11;;;;;;;4209:290;;:::o;5430:320::-;5599:41;666:10:17;5632:7:11;5599:18;:41::i;:::-;5591:103;;;;-1:-1:-1;;;5591:103:11;;;;;;;:::i;:::-;5704:39;5718:4;5724:2;5728:7;5737:5;5704:13;:39::i;:::-;5430:320;;;;:::o;2744:329::-;2817:13;2850:16;2858:7;2850;:16::i;:::-;2842:76;;;;-1:-1:-1;;;2842:76:11;;9275:2:27;2842:76:11;;;9257:21:27;9314:2;9294:18;;;9287:30;9353:34;9333:18;;;9326:62;-1:-1:-1;;;9404:18:27;;;9397:45;9459:19;;2842:76:11;9247:237:27;2842:76:11;2929:21;2953:10;3390:9;;;;;;;;;-1:-1:-1;3390:9:11;;;3314:92;2953:10;2929:34;;3004:1;2986:7;2980:21;:25;:86;;;;;;;;;;;;;;;;;3032:7;3041:18;:7;:16;:18::i;:::-;3015:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2980:86;2973:93;2744:329;-1:-1:-1;;;2744:329:11:o;4565:162::-;-1:-1:-1;;;;;4685:25:11;;;4662:4;4685:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4565:162::o;7222:125::-;7287:4;7310:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7310:16:11;:30;;;7222:125::o;11073:171::-;11147:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11147:29:11;-1:-1:-1;;;;;11147:29:11;;;;;;;;:24;;11200:23;11147:24;11200:14;:23::i;:::-;-1:-1:-1;;;;;11191:46:11;;;;;;;;;;;11073:171;;:::o;7505:344::-;7598:4;7622:16;7630:7;7622;:16::i;:::-;7614:73;;;;-1:-1:-1;;;7614:73:11;;6793:2:27;7614:73:11;;;6775:21:27;6832:2;6812:18;;;6805:30;6871:34;6851:18;;;6844:62;-1:-1:-1;;;6922:18:27;;;6915:42;6974:19;;7614:73:11;6765:234:27;7614:73:11;7697:13;7713:23;7728:7;7713:14;:23::i;:::-;7697:39;;7765:5;-1:-1:-1;;;;;7754:16:11;:7;-1:-1:-1;;;;;7754:16:11;;:51;;;;7798:7;-1:-1:-1;;;;;7774:31:11;:20;7786:7;7774:11;:20::i;:::-;-1:-1:-1;;;;;7774:31:11;;7754:51;:87;;;;7809:32;7826:5;7833:7;7809:16;:32::i;:::-;7746:96;7505:344;-1:-1:-1;;;;7505:344:11:o;10402:560::-;10556:4;-1:-1:-1;;;;;10529:31:11;:23;10544:7;10529:14;:23::i;:::-;-1:-1:-1;;;;;10529:31:11;;10521:85;;;;-1:-1:-1;;;10521:85:11;;8865:2:27;10521:85:11;;;8847:21:27;8904:2;8884:18;;;8877:30;8943:34;8923:18;;;8916:62;-1:-1:-1;;;8994:18:27;;;8987:39;9043:19;;10521:85:11;8837:231:27;10521:85:11;-1:-1:-1;;;;;10624:16:11;;10616:65;;;;-1:-1:-1;;;10616:65:11;;6034:2:27;10616:65:11;;;6016:21:27;6073:2;6053:18;;;6046:30;6112:34;6092:18;;;6085:62;-1:-1:-1;;;6163:18:27;;;6156:34;6207:19;;10616:65:11;6006:226:27;10616:65:11;10793:29;10810:1;10814:7;10793:8;:29::i;:::-;-1:-1:-1;;;;;10833:15:11;;;;;;:9;:15;;;;;:20;;10852:1;;10833:15;:20;;10852:1;;10833:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10863:13:11;;;;;;:9;:13;;;;;:18;;10880:1;;10863:13;:18;;10880:1;;10863:18;:::i;:::-;;;;-1:-1:-1;;10891:16:11;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10891:21:11;-1:-1:-1;;;;;10891:21:11;;;;;;;;;10928:27;;10891:16;;10928:27;;;;;;;10402:560;;;:::o;6612:307::-;6763:28;6773:4;6779:2;6783:7;6763:9;:28::i;:::-;6809:48;6832:4;6838:2;6842:7;6851:5;6809:22;:48::i;:::-;6801:111;;;;-1:-1:-1;;;6801:111:11;;;;;;;:::i;275:703:18:-;331:13;548:10;544:51;;-1:-1:-1;;574:10:18;;;;;;;;;;;;-1:-1:-1;;;574:10:18;;;;;275:703::o;544:51::-;619:5;604:12;658:75;665:9;;658:75;;690:8;;;;:::i;:::-;;-1:-1:-1;712:10:18;;-1:-1:-1;720:2:18;712:10;;:::i;:::-;;;658:75;;;742:19;774:6;-1:-1:-1;;;;;764:17:18;;;;;-1:-1:-1;;;764:17:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;764:17:18;;742:39;;791:150;798:10;;791:150;;824:11;834:1;824:11;;:::i;:::-;;-1:-1:-1;892:10:18;900:2;892:5;:10;:::i;:::-;879:24;;:2;:24;:::i;:::-;866:39;;849:6;856;849:14;;;;;;-1:-1:-1;;;849:14:18;;;;;;;;;;;;:56;-1:-1:-1;;;;;849:56:18;;;;;;;;-1:-1:-1;919:11:18;928:2;919:11;;:::i;:::-;;;791:150;;11797:778:11;11947:4;-1:-1:-1;;;;;11967:13:11;;1034:20:16;1080:8;11963:606:11;;12002:72;;-1:-1:-1;;;12002:72:11;;-1:-1:-1;;;;;12002:36:11;;;;;:72;;666:10:17;;12053:4:11;;12059:7;;12068:5;;12002:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12002:72:11;;;;;;;;-1:-1:-1;;12002:72:11;;;;;;;;;;;;:::i;:::-;;;11998:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12241:13:11;;12237:266;;12283:60;;-1:-1:-1;;;12283:60:11;;;;;;;:::i;12237:266::-;12455:6;12449:13;12440:6;12436:2;12432:15;12425:38;11998:519;-1:-1:-1;;;;;;12124:51:11;-1:-1:-1;;;12124:51:11;;-1:-1:-1;12117:58:11;;11963:606;-1:-1:-1;12554:4:11;11797:778;;;;;;:::o;14:173:27:-;82:20;;-1:-1:-1;;;;;131:31:27;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:270::-;461:6;469;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;745:6;753;761;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:1183::-;1106:6;1114;1122;1130;1183:3;1171:9;1162:7;1158:23;1154:33;1151:2;;;1205:6;1197;1190:22;1151:2;1233:29;1252:9;1233:29;:::i;:::-;1223:39;;1281:38;1315:2;1304:9;1300:18;1281:38;:::i;:::-;1271:48;-1:-1:-1;1366:2:27;1351:18;;1338:32;;-1:-1:-1;1421:2:27;1406:18;;1393:32;-1:-1:-1;;;;;1474:14:27;;;1471:2;;;1506:6;1498;1491:22;1471:2;1549:6;1538:9;1534:22;1524:32;;1594:7;1587:4;1583:2;1579:13;1575:27;1565:2;;1621:6;1613;1606:22;1565:2;1662;1649:16;1684:2;1680;1677:10;1674:2;;;1690:18;;:::i;:::-;1765:2;1759:9;1733:2;1819:13;;-1:-1:-1;;1815:22:27;;;1839:2;1811:31;1807:40;1795:53;;;1863:18;;;1883:22;;;1860:46;1857:2;;;1909:18;;:::i;:::-;1949:10;1945:2;1938:22;1984:2;1976:6;1969:18;2024:7;2019:2;2014;2010;2006:11;2002:20;1999:33;1996:2;;;2050:6;2042;2035:22;1996:2;2111;2106;2102;2098:11;2093:2;2085:6;2081:15;2068:46;2134:15;;;2151:2;2130:24;2123:40;;;;1141:1053;;;;-1:-1:-1;1141:1053:27;;-1:-1:-1;;;;1141:1053:27:o;2199:367::-;2264:6;2272;2325:2;2313:9;2304:7;2300:23;2296:32;2293:2;;;2346:6;2338;2331:22;2293:2;2374:29;2393:9;2374:29;:::i;:::-;2364:39;;2453:2;2442:9;2438:18;2425:32;2500:5;2493:13;2486:21;2479:5;2476:32;2466:2;;2527:6;2519;2512:22;2466:2;2555:5;2545:15;;;2283:283;;;;;:::o;2571:264::-;2639:6;2647;2700:2;2688:9;2679:7;2675:23;2671:32;2668:2;;;2721:6;2713;2706:22;2668:2;2749:29;2768:9;2749:29;:::i;:::-;2739:39;2825:2;2810:18;;;;2797:32;;-1:-1:-1;;;2658:177:27:o;2840:255::-;2898:6;2951:2;2939:9;2930:7;2926:23;2922:32;2919:2;;;2972:6;2964;2957:22;2919:2;3016:9;3003:23;3035:30;3059:5;3035:30;:::i;3100:259::-;3169:6;3222:2;3210:9;3201:7;3197:23;3193:32;3190:2;;;3243:6;3235;3228:22;3190:2;3280:9;3274:16;3299:30;3323:5;3299:30;:::i;3364:190::-;3423:6;3476:2;3464:9;3455:7;3451:23;3447:32;3444:2;;;3497:6;3489;3482:22;3444:2;-1:-1:-1;3525:23:27;;3434:120;-1:-1:-1;3434:120:27:o;3559:257::-;3600:3;3638:5;3632:12;3665:6;3660:3;3653:19;3681:63;3737:6;3730:4;3725:3;3721:14;3714:4;3707:5;3703:16;3681:63;:::i;:::-;3798:2;3777:15;-1:-1:-1;;3773:29:27;3764:39;;;;3805:4;3760:50;;3608:208;-1:-1:-1;;3608:208:27:o;3821:470::-;4000:3;4038:6;4032:13;4054:53;4100:6;4095:3;4088:4;4080:6;4076:17;4054:53;:::i;:::-;4170:13;;4129:16;;;;4192:57;4170:13;4129:16;4226:4;4214:17;;4192:57;:::i;:::-;4265:20;;4008:283;-1:-1:-1;;;;4008:283:27:o;4504:488::-;-1:-1:-1;;;;;4773:15:27;;;4755:34;;4825:15;;4820:2;4805:18;;4798:43;4872:2;4857:18;;4850:34;;;4920:3;4915:2;4900:18;;4893:31;;;4698:4;;4941:45;;4966:19;;4958:6;4941:45;:::i;:::-;4933:53;4707:285;-1:-1:-1;;;;;;4707:285:27:o;5189:219::-;5338:2;5327:9;5320:21;5301:4;5358:44;5398:2;5387:9;5383:18;5375:6;5358:44;:::i;5413:414::-;5615:2;5597:21;;;5654:2;5634:18;;;5627:30;5693:34;5688:2;5673:18;;5666:62;-1:-1:-1;;;5759:2:27;5744:18;;5737:48;5817:3;5802:19;;5587:240::o;9891:413::-;10093:2;10075:21;;;10132:2;10112:18;;;10105:30;10171:34;10166:2;10151:18;;10144:62;-1:-1:-1;;;10237:2:27;10222:18;;10215:47;10294:3;10279:19;;10065:239::o;10491:128::-;10531:3;10562:1;10558:6;10555:1;10552:13;10549:2;;;10568:18;;:::i;:::-;-1:-1:-1;10604:9:27;;10539:80::o;10624:120::-;10664:1;10690;10680:2;;10695:18;;:::i;:::-;-1:-1:-1;10729:9:27;;10670:74::o;10749:125::-;10789:4;10817:1;10814;10811:8;10808:2;;;10822:18;;:::i;:::-;-1:-1:-1;10859:9:27;;10798:76::o;10879:258::-;10951:1;10961:113;10975:6;10972:1;10969:13;10961:113;;;11051:11;;;11045:18;11032:11;;;11025:39;10997:2;10990:10;10961:113;;;11092:6;11089:1;11086:13;11083:2;;;-1:-1:-1;;11127:1:27;11109:16;;11102:27;10932:205::o;11142:380::-;11221:1;11217:12;;;;11264;;;11285:2;;11339:4;11331:6;11327:17;11317:27;;11285:2;11392;11384:6;11381:14;11361:18;11358:38;11355:2;;;11438:10;11433:3;11429:20;11426:1;11419:31;11473:4;11470:1;11463:15;11501:4;11498:1;11491:15;11355:2;;11197:325;;;:::o;11527:135::-;11566:3;-1:-1:-1;;11587:17:27;;11584:2;;;11607:18;;:::i;:::-;-1:-1:-1;11654:1:27;11643:13;;11574:88::o;11667:112::-;11699:1;11725;11715:2;;11730:18;;:::i;:::-;-1:-1:-1;11764:9:27;;11705:74::o;11784:127::-;11845:10;11840:3;11836:20;11833:1;11826:31;11876:4;11873:1;11866:15;11900:4;11897:1;11890:15;11916:127;11977:10;11972:3;11968:20;11965:1;11958:31;12008:4;12005:1;11998:15;12032:4;12029:1;12022:15;12048:127;12109:10;12104:3;12100:20;12097:1;12090:31;12140:4;12137:1;12130:15;12164:4;12161:1;12154:15;12180:131;-1:-1:-1;;;;;;12254:32:27;;12244:43;;12234:2;;12301:1;12298;12291:12;12234:2;12224:87;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    554,
    13255
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1CC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC7 PUSH2 0xC2 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x1DF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH2 0x231 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST PUSH2 0x104 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0xF19 JUMP JUMPDEST PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD3 JUMP JUMPDEST PUSH2 0x12F PUSH2 0x12A CALLDATASIZE PUSH1 0x4 PUSH2 0xEB8 JUMP JUMPDEST PUSH2 0x350 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12F PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0xD6F JUMP JUMPDEST PUSH2 0x461 JUMP JUMPDEST PUSH2 0x12F PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0xD6F JUMP JUMPDEST PUSH2 0x492 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xF19 JUMP JUMPDEST PUSH2 0x4AD JUMP JUMPDEST PUSH2 0x17D PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0xD23 JUMP JUMPDEST PUSH2 0x524 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD3 JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x5AB JUMP JUMPDEST PUSH2 0x12F PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE7E JUMP JUMPDEST PUSH2 0x5BA JUMP JUMPDEST PUSH2 0x12F PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAA JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF19 JUMP JUMPDEST PUSH2 0x6B3 JUMP JUMPDEST PUSH2 0xC7 PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0xD3D JUMP JUMPDEST PUSH2 0x78B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x210 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x22B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x240 SWAP1 PUSH2 0x10EE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x26C SWAP1 PUSH2 0x10EE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x28E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x29C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE DUP3 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x334 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35B DUP3 PUSH2 0x4AD JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32B JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3E5 JUMPI POP PUSH2 0x3E5 DUP2 CALLER PUSH2 0x78B JUMP JUMPDEST PUSH2 0x452 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1B995C881B9BDC88185C1C1C9BDD995908199BDC88185B1B PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32B JUMP JUMPDEST PUSH2 0x45C DUP4 DUP4 PUSH2 0x7D6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x46B CALLER DUP3 PUSH2 0x844 JUMP JUMPDEST PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32B SWAP1 PUSH2 0x102E JUMP JUMPDEST PUSH2 0x45C DUP4 DUP4 DUP4 PUSH2 0x90E JUMP JUMPDEST PUSH2 0x45C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x67B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x22B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x58F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x240 SWAP1 PUSH2 0x10EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x22A9219B99189D1030B8383937BB32903A379031B0B63632B9 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32B JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x685 CALLER DUP4 PUSH2 0x844 JUMP JUMPDEST PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32B SWAP1 PUSH2 0x102E JUMP JUMPDEST PUSH2 0x6AD DUP5 DUP5 DUP5 DUP5 PUSH2 0xAAE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6BE DUP3 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x722 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x739 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x759 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x784 JUMP JUMPDEST DUP1 PUSH2 0x763 DUP5 PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x774 SWAP3 SWAP2 SWAP1 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x80B DUP3 PUSH2 0x4AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84F DUP3 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x8B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BB DUP4 PUSH2 0x4AD JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x8F6 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8EB DUP5 PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x906 JUMPI POP PUSH2 0x906 DUP2 DUP6 PUSH2 0x78B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x921 DUP3 PUSH2 0x4AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x989 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32B JUMP JUMPDEST PUSH2 0x9F6 PUSH1 0x0 DUP3 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA1F SWAP1 DUP5 SWAP1 PUSH2 0x10AB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA4D SWAP1 DUP5 SWAP1 PUSH2 0x107F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xAB9 DUP5 DUP5 DUP5 PUSH2 0x90E JUMP JUMPDEST PUSH2 0xAC5 DUP5 DUP5 DUP5 DUP5 PUSH2 0xBFA JUMP JUMPDEST PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32B SWAP1 PUSH2 0xFDC JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xB05 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB2F JUMPI DUP1 PUSH2 0xB19 DUP2 PUSH2 0x1129 JUMP JUMPDEST SWAP2 POP PUSH2 0xB28 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1097 JUMP JUMPDEST SWAP2 POP PUSH2 0xB09 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xB57 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB81 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x906 JUMPI PUSH2 0xB96 PUSH1 0x1 DUP4 PUSH2 0x10AB JUMP JUMPDEST SWAP2 POP PUSH2 0xBA3 PUSH1 0xA DUP7 PUSH2 0x1144 JUMP JUMPDEST PUSH2 0xBAE SWAP1 PUSH1 0x30 PUSH2 0x107F JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xBD1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xBF3 PUSH1 0xA DUP7 PUSH2 0x1097 JUMP JUMPDEST SWAP5 POP PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xCFC JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC3E SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xF8C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC88 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC85 SWAP2 DUP2 ADD SWAP1 PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCE2 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCB6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xCDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32B SWAP1 PUSH2 0xFDC JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x906 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD34 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x784 DUP3 PUSH2 0xD07 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD4F JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xD58 DUP4 PUSH2 0xD07 JUMP JUMPDEST SWAP2 POP PUSH2 0xD66 PUSH1 0x20 DUP5 ADD PUSH2 0xD07 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD83 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xD8C DUP5 PUSH2 0xD07 JUMP JUMPDEST SWAP3 POP PUSH2 0xD9A PUSH1 0x20 DUP6 ADD PUSH2 0xD07 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xDBF JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xDC8 DUP6 PUSH2 0xD07 JUMP JUMPDEST SWAP4 POP PUSH2 0xDD6 PUSH1 0x20 DUP7 ADD PUSH2 0xD07 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xDF8 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE0B JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE1D JUMPI PUSH2 0xE1D PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xE45 JUMPI PUSH2 0xE45 PUSH2 0x1184 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xE5D JUMPI DUP6 DUP7 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP2 DUP3 ADD PUSH1 0x20 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE90 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xE99 DUP4 PUSH2 0xD07 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEAD JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xECA JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xED3 DUP4 PUSH2 0xD07 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x784 DUP2 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF0E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x784 DUP2 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF2A JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xF49 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x10C2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xF6F DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x10C2 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xF83 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x10C2 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xFBF SWAP1 DUP4 ADD DUP5 PUSH2 0xF31 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x784 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF31 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1092 JUMPI PUSH2 0x1092 PUSH2 0x1158 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x10A6 JUMPI PUSH2 0x10A6 PUSH2 0x116E JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10BD JUMPI PUSH2 0x10BD PUSH2 0x1158 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10DD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10C5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6AD JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1102 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1123 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x113D JUMPI PUSH2 0x113D PUSH2 0x1158 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1153 JUMPI PUSH2 0x1153 PUSH2 0x116E JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x11B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV PUSH22 0x2FDDFDD007E821CE78EE990703AF7644476F077B298B 0xD8 0xF7 CALLDATASIZE 0x4F 0xD2 0xE1 0xD6 REVERT PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        554,
        13255
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "6": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "12": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "11"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "REVERT",
      "path": "11"
    },
    "16": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "POP",
      "path": "11"
    },
    "18": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "21": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "LT",
      "path": "11"
    },
    "22": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAF"
    },
    "25": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "26": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "29": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "SHR",
      "path": "11"
    },
    "32": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "11"
    },
    "33": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x1FFC9A7"
    },
    "38": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "11"
    },
    "39": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB4"
    },
    "42": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "43": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "11"
    },
    "44": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x6FDDE03"
    },
    "49": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "11"
    },
    "50": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDC"
    },
    "53": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "54": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "11"
    },
    "55": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x81812FC"
    },
    "60": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "11"
    },
    "61": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF1"
    },
    "64": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "65": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "11"
    },
    "66": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95EA7B3"
    },
    "71": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "11"
    },
    "72": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x11C"
    },
    "75": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "76": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "11"
    },
    "77": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x23B872DD"
    },
    "82": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "11"
    },
    "83": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x131"
    },
    "86": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "87": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "11"
    },
    "88": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x42842E0E"
    },
    "93": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "11"
    },
    "94": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x144"
    },
    "97": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "98": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "11"
    },
    "99": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x6352211E"
    },
    "104": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "11"
    },
    "105": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x157"
    },
    "108": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "109": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "11"
    },
    "110": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "115": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "11"
    },
    "116": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16A"
    },
    "119": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "120": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "11"
    },
    "121": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95D89B41"
    },
    "126": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "11"
    },
    "127": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x18B"
    },
    "130": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "131": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "11"
    },
    "132": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA22CB465"
    },
    "137": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "11"
    },
    "138": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x193"
    },
    "141": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "142": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "11"
    },
    "143": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xB88D4FDE"
    },
    "148": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "11"
    },
    "149": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A6"
    },
    "152": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "153": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "11"
    },
    "154": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xC87B56DD"
    },
    "159": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "11"
    },
    "160": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B9"
    },
    "163": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "164": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "11"
    },
    "165": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE985E9C5"
    },
    "170": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "EQ",
      "path": "11"
    },
    "171": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1CC"
    },
    "174": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "175": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "176": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "178": {
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "DUP1",
      "path": "11"
    },
    "179": {
      "first_revert": true,
      "fn": null,
      "offset": [
        554,
        13255
      ],
      "op": "REVERT",
      "path": "11"
    },
    "180": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "181": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC7"
    },
    "184": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC2"
    },
    "187": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "188": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "190": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEE1"
    },
    "193": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMP",
      "path": "11"
    },
    "194": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "195": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1DF"
    },
    "198": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMP",
      "path": "11"
    },
    "199": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "200": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "202": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "203": {
      "op": "SWAP1"
    },
    "204": {
      "op": "ISZERO"
    },
    "205": {
      "op": "ISZERO"
    },
    "206": {
      "op": "DUP2"
    },
    "207": {
      "op": "MSTORE"
    },
    "208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "210": {
      "op": "ADD"
    },
    "211": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "214": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "215": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "DUP1",
      "path": "11"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "217": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "SUB",
      "path": "11"
    },
    "218": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "RETURN",
      "path": "11"
    },
    "220": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "221": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE4"
    },
    "224": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x231"
    },
    "227": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMP",
      "path": "11"
    },
    "228": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "229": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "231": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "232": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD3"
    },
    "235": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "236": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "237": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFC9"
    },
    "240": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMP",
      "path": "11"
    },
    "241": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "242": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x104"
    },
    "245": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFF"
    },
    "248": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "249": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "251": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF19"
    },
    "254": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMP",
      "path": "11"
    },
    "255": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "256": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2C3"
    },
    "259": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMP",
      "path": "11"
    },
    "260": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "261": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "268": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "270": {
      "op": "SHL"
    },
    "271": {
      "op": "SUB"
    },
    "272": {
      "op": "SWAP1"
    },
    "273": {
      "op": "SWAP2"
    },
    "274": {
      "op": "AND"
    },
    "275": {
      "op": "DUP2"
    },
    "276": {
      "op": "MSTORE"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "279": {
      "op": "ADD"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD3"
    },
    "283": {
      "op": "JUMP"
    },
    "284": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "285": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12F"
    },
    "288": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12A"
    },
    "291": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "292": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "294": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEB8"
    },
    "297": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMP",
      "path": "11"
    },
    "298": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "299": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x350"
    },
    "302": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMP",
      "path": "11"
    },
    "303": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "304": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "STOP",
      "path": "11"
    },
    "305": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "306": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12F"
    },
    "309": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13F"
    },
    "312": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "313": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "315": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD6F"
    },
    "318": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMP",
      "path": "11"
    },
    "319": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "320": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x461"
    },
    "323": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMP",
      "path": "11"
    },
    "324": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "325": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12F"
    },
    "328": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x152"
    },
    "331": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "332": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "334": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD6F"
    },
    "337": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMP",
      "path": "11"
    },
    "338": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "339": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x492"
    },
    "342": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMP",
      "path": "11"
    },
    "343": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "344": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x104"
    },
    "347": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x165"
    },
    "350": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "351": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "353": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF19"
    },
    "356": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMP",
      "path": "11"
    },
    "357": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "358": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4AD"
    },
    "361": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMP",
      "path": "11"
    },
    "362": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "363": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x17D"
    },
    "366": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x178"
    },
    "369": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "370": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "372": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD23"
    },
    "375": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMP",
      "path": "11"
    },
    "376": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "377": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x524"
    },
    "380": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMP",
      "path": "11"
    },
    "381": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "382": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "384": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "385": {
      "op": "SWAP1"
    },
    "386": {
      "op": "DUP2"
    },
    "387": {
      "op": "MSTORE"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "390": {
      "op": "ADD"
    },
    "391": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD3"
    },
    "394": {
      "op": "JUMP"
    },
    "395": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "396": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE4"
    },
    "399": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5AB"
    },
    "402": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2576,
        2678
      ],
      "op": "JUMP",
      "path": "11"
    },
    "403": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "404": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12F"
    },
    "407": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A1"
    },
    "410": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "411": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "413": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE7E"
    },
    "416": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMP",
      "path": "11"
    },
    "417": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "418": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5BA"
    },
    "421": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMP",
      "path": "11"
    },
    "422": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "423": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12F"
    },
    "426": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B4"
    },
    "429": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "430": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "432": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDAA"
    },
    "435": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMP",
      "path": "11"
    },
    "436": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "437": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x67B"
    },
    "440": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMP",
      "path": "11"
    },
    "441": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "442": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE4"
    },
    "445": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C7"
    },
    "448": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "449": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "451": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF19"
    },
    "454": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2744,
        3073
      ],
      "op": "JUMP",
      "path": "11"
    },
    "455": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "456": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6B3"
    },
    "459": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2744,
        3073
      ],
      "op": "JUMP",
      "path": "11"
    },
    "460": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "461": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC7"
    },
    "464": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1DA"
    },
    "467": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "468": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "470": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD3D"
    },
    "473": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMP",
      "path": "11"
    },
    "474": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "475": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x78B"
    },
    "478": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMP",
      "path": "11"
    },
    "479": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "480": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1598,
        1602
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "486": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "488": {
      "op": "SHL"
    },
    "489": {
      "op": "SUB"
    },
    "490": {
      "op": "NOT"
    },
    "491": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1673
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 0
    },
    "492": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1673
      ],
      "op": "AND",
      "path": "11"
    },
    "493": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "498": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "500": {
      "op": "SHL"
    },
    "501": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1673
      ],
      "op": "EQ",
      "path": "11"
    },
    "502": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1673
      ],
      "op": "DUP1",
      "path": "11"
    },
    "503": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1737
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x210"
    },
    "506": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1737
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "507": {
      "op": "POP"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "512": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "514": {
      "op": "SHL"
    },
    "515": {
      "op": "SUB"
    },
    "516": {
      "op": "NOT"
    },
    "517": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1689,
        1737
      ],
      "op": "DUP3",
      "path": "11"
    },
    "518": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1689,
        1737
      ],
      "op": "AND",
      "path": "11"
    },
    "519": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "524": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "526": {
      "op": "SHL"
    },
    "527": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1689,
        1737
      ],
      "op": "EQ",
      "path": "11"
    },
    "528": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1737
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "529": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1789
      ],
      "op": "DUP1",
      "path": "11"
    },
    "530": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1789
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22B"
    },
    "533": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1789
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "534": {
      "op": "POP"
    },
    "535": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "540": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "542": {
      "op": "SHL"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "547": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "549": {
      "op": "SHL"
    },
    "550": {
      "op": "SUB"
    },
    "551": {
      "op": "NOT"
    },
    "552": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 1
    },
    "553": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "19"
    },
    "554": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "19"
    },
    "555": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1753,
        1789
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "556": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1614,
        1789
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "557": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "558": {
      "op": "POP"
    },
    "559": {
      "op": "POP"
    },
    "560": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMP",
      "path": "11"
    },
    "561": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "562": {
      "fn": "ERC721.name",
      "offset": [
        2468,
        2481
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "564": {
      "fn": "ERC721.name",
      "offset": [
        2500,
        2505
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 2,
      "value": "0x0"
    },
    "566": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "11"
    },
    "567": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "568": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x240"
    },
    "571": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "572": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10EE"
    },
    "575": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMP",
      "path": "11"
    },
    "576": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "577": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "11"
    },
    "578": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "580": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "11"
    },
    "581": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "583": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "11"
    },
    "584": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "585": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DIV",
      "path": "11"
    },
    "586": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MUL",
      "path": "11"
    },
    "587": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "589": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "11"
    },
    "590": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "592": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "593": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "594": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "11"
    },
    "595": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "11"
    },
    "596": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "598": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "599": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "11"
    },
    "600": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "601": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "602": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "603": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "11"
    },
    "604": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "11"
    },
    "605": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "606": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "608": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "11"
    },
    "609": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP3",
      "path": "11"
    },
    "610": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "11"
    },
    "611": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "612": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x26C"
    },
    "615": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "616": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10EE"
    },
    "619": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMP",
      "path": "11"
    },
    "620": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "621": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "11"
    },
    "622": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "623": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2B9"
    },
    "626": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "627": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "11"
    },
    "628": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "630": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "LT",
      "path": "11"
    },
    "631": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x28E"
    },
    "634": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "635": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "638": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "11"
    },
    "639": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP4",
      "path": "11"
    },
    "640": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DIV",
      "path": "11"
    },
    "642": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MUL",
      "path": "11"
    },
    "643": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP4",
      "path": "11"
    },
    "644": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "645": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "646": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "648": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "11"
    },
    "649": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "650": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2B9"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMP",
      "path": "11"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "655": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP3",
      "path": "11"
    },
    "656": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "11"
    },
    "657": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "661": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "664": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "668": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "669": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "11"
    },
    "670": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "11"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "11"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "680": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "11"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "11"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP4",
      "path": "11"
    },
    "683": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "GT",
      "path": "11"
    },
    "684": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x29C"
    },
    "687": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP3",
      "path": "11"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "690": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SUB",
      "path": "11"
    },
    "691": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "AND",
      "path": "11"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP3",
      "path": "11"
    },
    "695": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "11"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "697": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "698": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "11"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "11"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "11"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "11"
    },
    "702": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "11"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "11"
    },
    "705": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "706": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMP",
      "path": "11"
    },
    "707": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "708": {
      "fn": "ERC721.getApproved",
      "offset": [
        4001,
        4008
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "710": {
      "fn": "ERC721.getApproved",
      "offset": [
        4028,
        4044
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 3,
      "value": "0x2CE"
    },
    "713": {
      "fn": "ERC721.getApproved",
      "offset": [
        4036,
        4043
      ],
      "op": "DUP3",
      "path": "11"
    },
    "714": {
      "fn": "ERC721.getApproved",
      "offset": [
        4028,
        4035
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7B9"
    },
    "717": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4028,
        4044
      ],
      "op": "JUMP",
      "path": "11"
    },
    "718": {
      "branch": 49,
      "fn": "ERC721.getApproved",
      "offset": [
        4028,
        4044
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "719": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x334"
    },
    "722": {
      "branch": 49,
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "723": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "725": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "726": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "730": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "732": {
      "op": "SHL"
    },
    "733": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "DUP2",
      "path": "11"
    },
    "734": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "737": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "739": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "DUP3",
      "path": "11"
    },
    "740": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "ADD",
      "path": "11"
    },
    "741": {
      "op": "MSTORE"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "746": {
      "op": "DUP3"
    },
    "747": {
      "op": "ADD"
    },
    "748": {
      "op": "MSTORE"
    },
    "749": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "784": {
      "op": "DUP3"
    },
    "785": {
      "op": "ADD"
    },
    "786": {
      "op": "MSTORE"
    },
    "787": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "800": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "802": {
      "op": "SHL"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "805": {
      "op": "DUP3"
    },
    "806": {
      "op": "ADD"
    },
    "807": {
      "op": "MSTORE"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "810": {
      "op": "ADD"
    },
    "811": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "812": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "814": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "815": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "DUP1",
      "path": "11"
    },
    "816": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "817": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "SUB",
      "path": "11"
    },
    "818": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "819": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "11"
    },
    "820": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "821": {
      "op": "POP"
    },
    "822": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 4,
      "value": "0x0"
    },
    "824": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "825": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "DUP2",
      "path": "11"
    },
    "826": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "827": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4126
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "829": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "831": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "832": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "834": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "835": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "836": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "843": {
      "op": "SHL"
    },
    "844": {
      "op": "SUB"
    },
    "845": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "AND",
      "path": "11"
    },
    "846": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "847": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMP",
      "path": "11"
    },
    "848": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "849": {
      "fn": "ERC721.approve",
      "offset": [
        3543,
        3556
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "851": {
      "fn": "ERC721.approve",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x35B"
    },
    "854": {
      "fn": "ERC721.approve",
      "offset": [
        3574,
        3581
      ],
      "op": "DUP3",
      "path": "11"
    },
    "855": {
      "fn": "ERC721.approve",
      "offset": [
        3559,
        3573
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4AD"
    },
    "858": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3559,
        3582
      ],
      "op": "JUMP",
      "path": "11"
    },
    "859": {
      "fn": "ERC721.approve",
      "offset": [
        3559,
        3582
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "860": {
      "fn": "ERC721.approve",
      "offset": [
        3543,
        3582
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "861": {
      "fn": "ERC721.approve",
      "offset": [
        3543,
        3582
      ],
      "op": "POP",
      "path": "11"
    },
    "862": {
      "fn": "ERC721.approve",
      "offset": [
        3606,
        3611
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 5
    },
    "863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "869": {
      "op": "SHL"
    },
    "870": {
      "op": "SUB"
    },
    "871": {
      "fn": "ERC721.approve",
      "offset": [
        3600,
        3611
      ],
      "op": "AND",
      "path": "11"
    },
    "872": {
      "fn": "ERC721.approve",
      "offset": [
        3600,
        3602
      ],
      "op": "DUP4",
      "path": "11"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "879": {
      "op": "SHL"
    },
    "880": {
      "op": "SUB"
    },
    "881": {
      "fn": "ERC721.approve",
      "offset": [
        3600,
        3611
      ],
      "op": "AND",
      "path": "11"
    },
    "882": {
      "fn": "ERC721.approve",
      "offset": [
        3600,
        3611
      ],
      "op": "EQ",
      "path": "11"
    },
    "883": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3600,
        3611
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "884": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3C9"
    },
    "887": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "888": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "890": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "891": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "895": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "897": {
      "op": "SHL"
    },
    "898": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "DUP2",
      "path": "11"
    },
    "899": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "902": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "904": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "DUP3",
      "path": "11"
    },
    "905": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "ADD",
      "path": "11"
    },
    "906": {
      "op": "MSTORE"
    },
    "907": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "909": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "911": {
      "op": "DUP3"
    },
    "912": {
      "op": "ADD"
    },
    "913": {
      "op": "MSTORE"
    },
    "914": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "949": {
      "op": "DUP3"
    },
    "950": {
      "op": "ADD"
    },
    "951": {
      "op": "MSTORE"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "954": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "956": {
      "op": "SHL"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "959": {
      "op": "DUP3"
    },
    "960": {
      "op": "ADD"
    },
    "961": {
      "op": "MSTORE"
    },
    "962": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "964": {
      "op": "ADD"
    },
    "965": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32B"
    },
    "968": {
      "op": "JUMP"
    },
    "969": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "970": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17",
      "statement": 6
    },
    "971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "977": {
      "op": "SHL"
    },
    "978": {
      "op": "SUB"
    },
    "979": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3702
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 7
    },
    "980": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3702
      ],
      "op": "AND",
      "path": "11"
    },
    "981": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3702
      ],
      "op": "EQ",
      "path": "11"
    },
    "982": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3702
      ],
      "op": "DUP1",
      "path": "11"
    },
    "983": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3743
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3E5"
    },
    "986": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3743
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "987": {
      "op": "POP"
    },
    "988": {
      "fn": "ERC721.approve",
      "offset": [
        3706,
        3743
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3E5"
    },
    "991": {
      "fn": "ERC721.approve",
      "offset": [
        3723,
        3728
      ],
      "op": "DUP2",
      "path": "11"
    },
    "992": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "993": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x78B"
    },
    "996": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMP",
      "path": "11"
    },
    "997": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        3706,
        3743
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "998": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x452"
    },
    "1001": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1002": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1004": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1005": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1011": {
      "op": "SHL"
    },
    "1012": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1013": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1016": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1018": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1019": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "ADD",
      "path": "11"
    },
    "1020": {
      "op": "MSTORE"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1025": {
      "op": "DUP3"
    },
    "1026": {
      "op": "ADD"
    },
    "1027": {
      "op": "MSTORE"
    },
    "1028": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1063": {
      "op": "DUP3"
    },
    "1064": {
      "op": "ADD"
    },
    "1065": {
      "op": "MSTORE"
    },
    "1066": {
      "op": "PUSH24",
      "value": "0x1B995C881B9BDC88185C1C1C9BDD995908199BDC88185B1B"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "1093": {
      "op": "SHL"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1096": {
      "op": "DUP3"
    },
    "1097": {
      "op": "ADD"
    },
    "1098": {
      "op": "MSTORE"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1101": {
      "op": "ADD"
    },
    "1102": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32B"
    },
    "1105": {
      "op": "JUMP"
    },
    "1106": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1107": {
      "fn": "ERC721.approve",
      "offset": [
        3836,
        3857
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 8,
      "value": "0x45C"
    },
    "1110": {
      "fn": "ERC721.approve",
      "offset": [
        3845,
        3847
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1111": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3856
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1112": {
      "fn": "ERC721.approve",
      "offset": [
        3836,
        3844
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7D6"
    },
    "1115": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3836,
        3857
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1116": {
      "fn": "ERC721.approve",
      "offset": [
        3836,
        3857
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1117": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "POP",
      "path": "11"
    },
    "1118": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "POP",
      "path": "11"
    },
    "1119": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "POP",
      "path": "11"
    },
    "1120": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1121": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1122": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4978,
        5019
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 9,
      "value": "0x46B"
    },
    "1125": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1126": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5011,
        5018
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1127": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4978,
        4996
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x844"
    },
    "1130": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4978,
        5019
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1131": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        4978,
        5019
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1132": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x487"
    },
    "1135": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1136": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1138": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1139": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1145": {
      "op": "SHL"
    },
    "1146": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1147": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1148": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1150": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "ADD",
      "path": "11"
    },
    "1151": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32B"
    },
    "1154": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1155": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x102E"
    },
    "1158": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4970,
        5073
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1159": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1160": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5084,
        5112
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 10,
      "value": "0x45C"
    },
    "1163": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5094,
        5098
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1164": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5100,
        5102
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1165": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5104,
        5111
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1166": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5084,
        5093
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x90E"
    },
    "1169": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5084,
        5112
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1170": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1171": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 11,
      "value": "0x45C"
    },
    "1174": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5335,
        5339
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1175": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5341,
        5343
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1176": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5345,
        5352
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1177": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1179": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1180": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1181": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1183": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "ADD",
      "path": "11"
    },
    "1184": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1186": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1187": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1188": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1190": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1191": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1192": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "POP",
      "path": "11"
    },
    "1193": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5334
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x67B"
    },
    "1196": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5318,
        5357
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1197": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1198": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2189,
        2196
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1200": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1201": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1202": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1203": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2231
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "1205": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1207": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1208": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1210": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1211": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1212": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1219": {
      "op": "SHL"
    },
    "1220": {
      "op": "SUB"
    },
    "1221": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "AND",
      "path": "11"
    },
    "1222": {
      "branch": 54,
      "fn": "ERC721.ownerOf",
      "offset": [
        2258,
        2277
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 12
    },
    "1223": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22B"
    },
    "1226": {
      "branch": 54,
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1227": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1229": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1230": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1236": {
      "op": "SHL"
    },
    "1237": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1238": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1241": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1243": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1244": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "ADD",
      "path": "11"
    },
    "1245": {
      "op": "MSTORE"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1250": {
      "op": "DUP3"
    },
    "1251": {
      "op": "ADD"
    },
    "1252": {
      "op": "MSTORE"
    },
    "1253": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1288": {
      "op": "DUP3"
    },
    "1289": {
      "op": "ADD"
    },
    "1290": {
      "op": "MSTORE"
    },
    "1291": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1303": {
      "op": "SHL"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1306": {
      "op": "DUP3"
    },
    "1307": {
      "op": "ADD"
    },
    "1308": {
      "op": "MSTORE"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1311": {
      "op": "ADD"
    },
    "1312": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32B"
    },
    "1315": {
      "op": "JUMP"
    },
    "1316": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1317": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1927,
        1934
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1325": {
      "op": "SHL"
    },
    "1326": {
      "op": "SUB"
    },
    "1327": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1954,
        1973
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 13
    },
    "1328": {
      "branch": 55,
      "fn": "ERC721.balanceOf",
      "offset": [
        1954,
        1973
      ],
      "op": "AND",
      "path": "11"
    },
    "1329": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x58F"
    },
    "1332": {
      "branch": 55,
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1333": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1335": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1336": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1342": {
      "op": "SHL"
    },
    "1343": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1344": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1347": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1349": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1350": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "ADD",
      "path": "11"
    },
    "1351": {
      "op": "MSTORE"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1356": {
      "op": "DUP3"
    },
    "1357": {
      "op": "ADD"
    },
    "1358": {
      "op": "MSTORE"
    },
    "1359": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1394": {
      "op": "DUP3"
    },
    "1395": {
      "op": "ADD"
    },
    "1396": {
      "op": "MSTORE"
    },
    "1397": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1410": {
      "op": "SHL"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1413": {
      "op": "DUP3"
    },
    "1414": {
      "op": "ADD"
    },
    "1415": {
      "op": "MSTORE"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1418": {
      "op": "ADD"
    },
    "1419": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32B"
    },
    "1422": {
      "op": "JUMP"
    },
    "1423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1424": {
      "op": "POP"
    },
    "1425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1431": {
      "op": "SHL"
    },
    "1432": {
      "op": "SUB"
    },
    "1433": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "AND",
      "path": "11",
      "statement": 14
    },
    "1434": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1436": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1437": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1438": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1439": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2046
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "1441": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1443": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1444": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1446": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1447": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1448": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1449": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1450": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1451": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1452": {
      "fn": "ERC721.symbol",
      "offset": [
        2632,
        2645
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "1454": {
      "fn": "ERC721.symbol",
      "offset": [
        2664,
        2671
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 15,
      "value": "0x1"
    },
    "1456": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1457": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1458": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x240"
    },
    "1461": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1462": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10EE"
    },
    "1465": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2657,
        2671
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1466": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1473": {
      "op": "SHL"
    },
    "1474": {
      "op": "SUB"
    },
    "1475": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4311,
        4335
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 16
    },
    "1476": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4311,
        4335
      ],
      "op": "AND",
      "path": "11"
    },
    "1477": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1478": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4311,
        4335
      ],
      "op": "EQ",
      "path": "11"
    },
    "1479": {
      "branch": 56,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4311,
        4335
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1480": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x60F"
    },
    "1483": {
      "branch": 56,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1484": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1486": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1487": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1493": {
      "op": "SHL"
    },
    "1494": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1495": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1498": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1500": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1501": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "ADD",
      "path": "11"
    },
    "1502": {
      "op": "MSTORE"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1507": {
      "op": "DUP3"
    },
    "1508": {
      "op": "ADD"
    },
    "1509": {
      "op": "MSTORE"
    },
    "1510": {
      "op": "PUSH25",
      "value": "0x22A9219B99189D1030B8383937BB32903A379031B0B63632B9"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1538": {
      "op": "SHL"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1541": {
      "op": "DUP3"
    },
    "1542": {
      "op": "ADD"
    },
    "1543": {
      "op": "MSTORE"
    },
    "1544": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1546": {
      "op": "ADD"
    },
    "1547": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32B"
    },
    "1550": {
      "op": "JUMP"
    },
    "1551": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1552": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1553": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 17,
      "value": "0x0"
    },
    "1555": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1556": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1557": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1558": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4394
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "1560": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1562": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1563": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1564": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1565": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1567": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1568": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1569": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1576": {
      "op": "SHL"
    },
    "1577": {
      "op": "SUB"
    },
    "1578": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1579": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "AND",
      "path": "11"
    },
    "1580": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1581": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP6",
      "path": "11"
    },
    "1582": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1583": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1584": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1585": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1586": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1587": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1588": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1589": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1590": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1591": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1594": {
      "op": "NOT"
    },
    "1595": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "AND",
      "path": "11"
    },
    "1596": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1597": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1598": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1599": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1600": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1601": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "OR",
      "path": "11"
    },
    "1602": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1603": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1604": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1605": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SWAP1",
      "path": "11",
      "statement": 18
    },
    "1606": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1607": {
      "op": "SWAP1"
    },
    "1608": {
      "op": "DUP2"
    },
    "1609": {
      "op": "MSTORE"
    },
    "1610": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1611": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1612": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1613": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "1646": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1647": {
      "op": "ADD"
    },
    "1648": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1650": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1651": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1652": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1653": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SUB",
      "path": "11"
    },
    "1654": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1655": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "LOG3",
      "path": "11"
    },
    "1656": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "POP",
      "path": "11"
    },
    "1657": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "POP",
      "path": "11"
    },
    "1658": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1659": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1660": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5599,
        5640
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 19,
      "value": "0x685"
    },
    "1663": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1664": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5632,
        5639
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1665": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5599,
        5617
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x844"
    },
    "1668": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5599,
        5640
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1669": {
      "branch": 57,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5599,
        5640
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1670": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6A1"
    },
    "1673": {
      "branch": 57,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1674": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1676": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1677": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1683": {
      "op": "SHL"
    },
    "1684": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1685": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1686": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1688": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "ADD",
      "path": "11"
    },
    "1689": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32B"
    },
    "1692": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1693": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x102E"
    },
    "1696": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5591,
        5694
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1697": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1698": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5704,
        5743
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 20,
      "value": "0x6AD"
    },
    "1701": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5718,
        5722
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1702": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5724,
        5726
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1703": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5728,
        5735
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1704": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5737,
        5742
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1705": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5704,
        5717
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAAE"
    },
    "1708": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5704,
        5743
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1709": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5704,
        5743
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1710": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "POP",
      "path": "11"
    },
    "1711": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "POP",
      "path": "11"
    },
    "1712": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "POP",
      "path": "11"
    },
    "1713": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "POP",
      "path": "11"
    },
    "1714": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1715": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1716": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2817,
        2830
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "1718": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2850,
        2866
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 21,
      "value": "0x6BE"
    },
    "1721": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2858,
        2865
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1722": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2850,
        2857
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7B9"
    },
    "1725": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2850,
        2866
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1726": {
      "branch": 58,
      "fn": "ERC721.tokenURI",
      "offset": [
        2850,
        2866
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1727": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x722"
    },
    "1730": {
      "branch": 58,
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1731": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1733": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1734": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1740": {
      "op": "SHL"
    },
    "1741": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1742": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1745": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1747": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1748": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "ADD",
      "path": "11"
    },
    "1749": {
      "op": "MSTORE"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1754": {
      "op": "DUP3"
    },
    "1755": {
      "op": "ADD"
    },
    "1756": {
      "op": "MSTORE"
    },
    "1757": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1792": {
      "op": "DUP3"
    },
    "1793": {
      "op": "ADD"
    },
    "1794": {
      "op": "MSTORE"
    },
    "1795": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1813": {
      "op": "SHL"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1816": {
      "op": "DUP3"
    },
    "1817": {
      "op": "ADD"
    },
    "1818": {
      "op": "MSTORE"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1821": {
      "op": "ADD"
    },
    "1822": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32B"
    },
    "1825": {
      "op": "JUMP"
    },
    "1826": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1827": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2929,
        2950
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1829": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2953,
        2963
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x739"
    },
    "1832": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 22,
      "value": "0x40"
    },
    "1834": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1835": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1836": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1838": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1839": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "ADD",
      "path": "11"
    },
    "1840": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1841": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1842": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1845": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1846": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1847": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1848": {
      "fn": "ERC721._baseURI",
      "offset": [
        3314,
        3406
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1849": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2953,
        2963
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1850": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2929,
        2963
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1851": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2929,
        2963
      ],
      "op": "POP",
      "path": "11"
    },
    "1852": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3004,
        3005
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 23,
      "value": "0x0"
    },
    "1854": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2986,
        2993
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1855": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3001
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1856": {
      "branch": 59,
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3005
      ],
      "op": "GT",
      "path": "11"
    },
    "1857": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x759"
    },
    "1860": {
      "branch": 59,
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1861": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1863": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1864": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1865": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1867": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "ADD",
      "path": "11"
    },
    "1868": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1870": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1871": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1872": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1874": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1875": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1876": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "POP",
      "path": "11"
    },
    "1877": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x784"
    },
    "1880": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1881": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1882": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3032,
        3039
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1883": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3041,
        3059
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x763"
    },
    "1886": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3041,
        3048
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1887": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3041,
        3057
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAE1"
    },
    "1890": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3041,
        3059
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1891": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3041,
        3059
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1892": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1894": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1895": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1897": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "ADD",
      "path": "11"
    },
    "1898": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x774"
    },
    "1901": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1902": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1903": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1904": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF5D"
    },
    "1907": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3015,
        3060
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1908": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1909": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1911": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1912": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1914": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1915": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1916": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "SUB",
      "path": "11"
    },
    "1917": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "SUB",
      "path": "11"
    },
    "1918": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1919": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1920": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1921": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1923": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1924": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1925": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2973,
        3066
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "1926": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1927": {
      "op": "POP"
    },
    "1928": {
      "op": "POP"
    },
    "1929": {
      "op": "POP"
    },
    "1930": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2744,
        3073
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1931": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1938": {
      "op": "SHL"
    },
    "1939": {
      "op": "SUB"
    },
    "1940": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP2",
      "path": "11",
      "statement": 24
    },
    "1941": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1942": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "AND",
      "path": "11"
    },
    "1943": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4662,
        4666
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1945": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1946": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1947": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1948": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4703
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "1950": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1952": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1953": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1954": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1955": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1957": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1958": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1959": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1960": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "1961": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1962": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "1963": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "AND",
      "path": "11"
    },
    "1964": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1965": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1966": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1967": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1968": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1969": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1970": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1971": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1972": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "1974": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "AND",
      "path": "11"
    },
    "1975": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1976": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "o",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1977": {
      "fn": "ERC721._exists",
      "offset": [
        7222,
        7347
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1978": {
      "fn": "ERC721._exists",
      "offset": [
        7287,
        7291
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1980": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "SWAP1",
      "path": "11",
      "statement": 25
    },
    "1981": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1982": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1983": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7317
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "1985": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1987": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1988": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1990": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1991": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1992": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1999": {
      "op": "SHL"
    },
    "2000": {
      "op": "SUB"
    },
    "2001": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "AND",
      "path": "11"
    },
    "2002": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7340
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2003": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7340
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2004": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7340
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2005": {
      "fn": "ERC721._exists",
      "jump": "o",
      "offset": [
        7222,
        7347
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2006": {
      "fn": "ERC721._approve",
      "offset": [
        11073,
        11244
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2007": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 26,
      "value": "0x0"
    },
    "2009": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2010": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2011": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2012": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11162
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2014": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2016": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2017": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2019": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2020": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2021": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2022": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2029": {
      "op": "SHL"
    },
    "2030": {
      "op": "SUB"
    },
    "2031": {
      "op": "NOT"
    },
    "2032": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "AND",
      "path": "11"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2039": {
      "op": "SHL"
    },
    "2040": {
      "op": "SUB"
    },
    "2041": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2042": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "AND",
      "path": "11"
    },
    "2043": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2044": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2045": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "OR",
      "path": "11"
    },
    "2046": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2047": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2048": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2049": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2050": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2051": {
      "fn": "ERC721._approve",
      "offset": [
        11200,
        11223
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 27,
      "value": "0x80B"
    },
    "2054": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2055": {
      "fn": "ERC721._approve",
      "offset": [
        11200,
        11214
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4AD"
    },
    "2058": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11200,
        11223
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2059": {
      "fn": "ERC721._approve",
      "offset": [
        11200,
        11223
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2066": {
      "op": "SHL"
    },
    "2067": {
      "op": "SUB"
    },
    "2068": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "AND",
      "path": "11"
    },
    "2069": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2102": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2104": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2105": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2107": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2108": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2109": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2110": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "SUB",
      "path": "11"
    },
    "2111": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2112": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "LOG4",
      "path": "11"
    },
    "2113": {
      "fn": "ERC721._approve",
      "offset": [
        11073,
        11244
      ],
      "op": "POP",
      "path": "11"
    },
    "2114": {
      "fn": "ERC721._approve",
      "offset": [
        11073,
        11244
      ],
      "op": "POP",
      "path": "11"
    },
    "2115": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11073,
        11244
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2116": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7505,
        7849
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2117": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7598,
        7602
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2119": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7622,
        7638
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 28,
      "value": "0x84F"
    },
    "2122": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7630,
        7637
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2123": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7622,
        7629
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7B9"
    },
    "2126": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7622,
        7638
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2127": {
      "branch": 60,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7622,
        7638
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2128": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8B0"
    },
    "2131": {
      "branch": 60,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2132": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2134": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2135": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2141": {
      "op": "SHL"
    },
    "2142": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2143": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2146": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2148": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2149": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "ADD",
      "path": "11"
    },
    "2150": {
      "op": "MSTORE"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2155": {
      "op": "DUP3"
    },
    "2156": {
      "op": "ADD"
    },
    "2157": {
      "op": "MSTORE"
    },
    "2158": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2193": {
      "op": "DUP3"
    },
    "2194": {
      "op": "ADD"
    },
    "2195": {
      "op": "MSTORE"
    },
    "2196": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2211": {
      "op": "SHL"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2214": {
      "op": "DUP3"
    },
    "2215": {
      "op": "ADD"
    },
    "2216": {
      "op": "MSTORE"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2219": {
      "op": "ADD"
    },
    "2220": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32B"
    },
    "2223": {
      "op": "JUMP"
    },
    "2224": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2225": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7697,
        7710
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2227": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7713,
        7736
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8BB"
    },
    "2230": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7728,
        7735
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2231": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7713,
        7727
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4AD"
    },
    "2234": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7713,
        7736
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2235": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7713,
        7736
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2236": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7697,
        7736
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2237": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7697,
        7736
      ],
      "op": "POP",
      "path": "11"
    },
    "2238": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7765,
        7770
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 29
    },
    "2239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2245": {
      "op": "SHL"
    },
    "2246": {
      "op": "SUB"
    },
    "2247": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7770
      ],
      "op": "AND",
      "path": "11"
    },
    "2248": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7761
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2255": {
      "op": "SHL"
    },
    "2256": {
      "op": "SUB"
    },
    "2257": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7770
      ],
      "op": "AND",
      "path": "11"
    },
    "2258": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7770
      ],
      "op": "EQ",
      "path": "11"
    },
    "2259": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2260": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8F6"
    },
    "2263": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2264": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "POP",
      "path": "11"
    },
    "2265": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7798,
        7805
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2272": {
      "op": "SHL"
    },
    "2273": {
      "op": "SUB"
    },
    "2274": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7805
      ],
      "op": "AND",
      "path": "11"
    },
    "2275": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7794
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8EB"
    },
    "2278": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7786,
        7793
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2279": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7785
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2C3"
    },
    "2282": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7774,
        7794
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2283": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7794
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2290": {
      "op": "SHL"
    },
    "2291": {
      "op": "SUB"
    },
    "2292": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7805
      ],
      "op": "AND",
      "path": "11"
    },
    "2293": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7805
      ],
      "op": "EQ",
      "path": "11"
    },
    "2294": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2295": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7841
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2296": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7841
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x906"
    },
    "2299": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7841
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2300": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7841
      ],
      "op": "POP",
      "path": "11"
    },
    "2301": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7809,
        7841
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x906"
    },
    "2304": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7826,
        7831
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2305": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7833,
        7840
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2306": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7809,
        7825
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x78B"
    },
    "2309": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7809,
        7841
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2310": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7809,
        7841
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2311": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7746,
        7842
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "2312": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7505,
        7849
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2313": {
      "op": "POP"
    },
    "2314": {
      "op": "POP"
    },
    "2315": {
      "op": "POP"
    },
    "2316": {
      "op": "POP"
    },
    "2317": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7505,
        7849
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2318": {
      "fn": "ERC721._transfer",
      "offset": [
        10402,
        10962
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2319": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10560
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 30
    },
    "2320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2326": {
      "op": "SHL"
    },
    "2327": {
      "op": "SUB"
    },
    "2328": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10560
      ],
      "op": "AND",
      "path": "11"
    },
    "2329": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10552
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x921"
    },
    "2332": {
      "fn": "ERC721._transfer",
      "offset": [
        10544,
        10551
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2333": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10543
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4AD"
    },
    "2336": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10529,
        10552
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2337": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10552
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2344": {
      "op": "SHL"
    },
    "2345": {
      "op": "SUB"
    },
    "2346": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10560
      ],
      "op": "AND",
      "path": "11"
    },
    "2347": {
      "branch": 61,
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10560
      ],
      "op": "EQ",
      "path": "11"
    },
    "2348": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x989"
    },
    "2351": {
      "branch": 61,
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2352": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2354": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2355": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2361": {
      "op": "SHL"
    },
    "2362": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2363": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2366": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2368": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2369": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "ADD",
      "path": "11"
    },
    "2370": {
      "op": "MSTORE"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2375": {
      "op": "DUP3"
    },
    "2376": {
      "op": "ADD"
    },
    "2377": {
      "op": "MSTORE"
    },
    "2378": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "2411": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2413": {
      "op": "DUP3"
    },
    "2414": {
      "op": "ADD"
    },
    "2415": {
      "op": "MSTORE"
    },
    "2416": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2428": {
      "op": "SHL"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2431": {
      "op": "DUP3"
    },
    "2432": {
      "op": "ADD"
    },
    "2433": {
      "op": "MSTORE"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2436": {
      "op": "ADD"
    },
    "2437": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32B"
    },
    "2440": {
      "op": "JUMP"
    },
    "2441": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2448": {
      "op": "SHL"
    },
    "2449": {
      "op": "SUB"
    },
    "2450": {
      "fn": "ERC721._transfer",
      "offset": [
        10624,
        10640
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 31
    },
    "2451": {
      "branch": 62,
      "fn": "ERC721._transfer",
      "offset": [
        10624,
        10640
      ],
      "op": "AND",
      "path": "11"
    },
    "2452": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9EB"
    },
    "2455": {
      "branch": 62,
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2456": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2458": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2459": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2465": {
      "op": "SHL"
    },
    "2466": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2467": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2470": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2472": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2473": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "ADD",
      "path": "11"
    },
    "2474": {
      "op": "MSTORE"
    },
    "2475": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2477": {
      "op": "DUP1"
    },
    "2478": {
      "op": "DUP3"
    },
    "2479": {
      "op": "ADD"
    },
    "2480": {
      "op": "MSTORE"
    },
    "2481": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2516": {
      "op": "DUP3"
    },
    "2517": {
      "op": "ADD"
    },
    "2518": {
      "op": "MSTORE"
    },
    "2519": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2526": {
      "op": "SHL"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2529": {
      "op": "DUP3"
    },
    "2530": {
      "op": "ADD"
    },
    "2531": {
      "op": "MSTORE"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2534": {
      "op": "ADD"
    },
    "2535": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32B"
    },
    "2538": {
      "op": "JUMP"
    },
    "2539": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2540": {
      "fn": "ERC721._transfer",
      "offset": [
        10793,
        10822
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 32,
      "value": "0x9F6"
    },
    "2543": {
      "fn": "ERC721._transfer",
      "offset": [
        10810,
        10811
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2545": {
      "fn": "ERC721._transfer",
      "offset": [
        10814,
        10821
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2546": {
      "fn": "ERC721._transfer",
      "offset": [
        10793,
        10801
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7D6"
    },
    "2549": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10793,
        10822
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2550": {
      "fn": "ERC721._transfer",
      "offset": [
        10793,
        10822
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2557": {
      "op": "SHL"
    },
    "2558": {
      "op": "SUB"
    },
    "2559": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 33
    },
    "2560": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "AND",
      "path": "11"
    },
    "2561": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2563": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2564": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2565": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2566": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10842
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "2568": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2570": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2571": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2573": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2574": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2575": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2576": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2577": {
      "fn": "ERC721._transfer",
      "offset": [
        10852,
        10853
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2579": {
      "fn": "ERC721._transfer",
      "offset": [
        10852,
        10853
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2580": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2581": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA1F"
    },
    "2584": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2585": {
      "fn": "ERC721._transfer",
      "offset": [
        10852,
        10853
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2586": {
      "fn": "ERC721._transfer",
      "offset": [
        10852,
        10853
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2587": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10AB"
    },
    "2590": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10833,
        10853
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2591": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2592": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2593": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2594": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2595": {
      "op": "POP"
    },
    "2596": {
      "op": "POP"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2603": {
      "op": "SHL"
    },
    "2604": {
      "op": "SUB"
    },
    "2605": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 34
    },
    "2606": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "AND",
      "path": "11"
    },
    "2607": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2609": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2610": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2611": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2612": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10872
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "2614": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2616": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2617": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2619": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2620": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2621": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2622": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2623": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10881
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2625": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10881
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2626": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2627": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA4D"
    },
    "2630": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2631": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10881
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2632": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10881
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2633": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x107F"
    },
    "2636": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10863,
        10881
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2637": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2638": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2639": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2640": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2641": {
      "op": "POP"
    },
    "2642": {
      "op": "POP"
    },
    "2643": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 35,
      "value": "0x0"
    },
    "2645": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2646": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2647": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2648": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10898
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2650": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2652": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2653": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2655": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2656": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2657": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2658": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2659": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2666": {
      "op": "SHL"
    },
    "2667": {
      "op": "SUB"
    },
    "2668": {
      "op": "NOT"
    },
    "2669": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "AND",
      "path": "11"
    },
    "2670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2676": {
      "op": "SHL"
    },
    "2677": {
      "op": "SUB"
    },
    "2678": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2679": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2680": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "AND",
      "path": "11"
    },
    "2681": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2682": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2683": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "OR",
      "path": "11"
    },
    "2684": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2685": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2686": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2687": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "SWAP2",
      "path": "11",
      "statement": 36
    },
    "2688": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2689": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2690": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2691": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2692": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2693": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "AND",
      "path": "11"
    },
    "2694": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2695": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2728": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2729": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "LOG4",
      "path": "11"
    },
    "2730": {
      "fn": "ERC721._transfer",
      "offset": [
        10402,
        10962
      ],
      "op": "POP",
      "path": "11"
    },
    "2731": {
      "fn": "ERC721._transfer",
      "offset": [
        10402,
        10962
      ],
      "op": "POP",
      "path": "11"
    },
    "2732": {
      "fn": "ERC721._transfer",
      "offset": [
        10402,
        10962
      ],
      "op": "POP",
      "path": "11"
    },
    "2733": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10402,
        10962
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2734": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6919
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2735": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6763,
        6791
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 37,
      "value": "0xAB9"
    },
    "2738": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6773,
        6777
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2739": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6779,
        6781
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2740": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6783,
        6790
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2741": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6763,
        6772
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x90E"
    },
    "2744": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6763,
        6791
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2745": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6763,
        6791
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2746": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6809,
        6857
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 38,
      "value": "0xAC5"
    },
    "2749": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6832,
        6836
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2750": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6838,
        6840
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2751": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6842,
        6849
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2752": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6851,
        6856
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2753": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6809,
        6831
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBFA"
    },
    "2756": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6809,
        6857
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2757": {
      "branch": 63,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6809,
        6857
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2758": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6AD"
    },
    "2761": {
      "branch": 63,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2762": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2764": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2765": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2771": {
      "op": "SHL"
    },
    "2772": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2773": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2774": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2776": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "ADD",
      "path": "11"
    },
    "2777": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32B"
    },
    "2780": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2781": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFDC"
    },
    "2784": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6801,
        6912
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2785": {
      "fn": "Strings.toString",
      "offset": [
        275,
        978
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2786": {
      "fn": "Strings.toString",
      "offset": [
        331,
        344
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2788": {
      "branch": 64,
      "fn": "Strings.toString",
      "offset": [
        548,
        558
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2789": {
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB05"
    },
    "2792": {
      "branch": 64,
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2793": {
      "op": "POP"
    },
    "2794": {
      "op": "POP"
    },
    "2795": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 39,
      "value": "0x40"
    },
    "2797": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2798": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2799": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2800": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2801": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "ADD",
      "path": "18"
    },
    "2802": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2803": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2804": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2805": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2807": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2808": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2809": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2811": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "2813": {
      "op": "SHL"
    },
    "2814": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2816": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2817": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "ADD",
      "path": "18"
    },
    "2818": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2819": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2820": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        275,
        978
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2821": {
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2822": {
      "fn": "Strings.toString",
      "offset": [
        619,
        624
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2823": {
      "fn": "Strings.toString",
      "offset": [
        604,
        616
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2825": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2826": {
      "fn": "Strings.toString",
      "offset": [
        665,
        674
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2827": {
      "fn": "Strings.toString",
      "offset": [
        665,
        674
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2828": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB2F"
    },
    "2831": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2832": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 40
    },
    "2833": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB19"
    },
    "2836": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2837": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1129"
    },
    "2840": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        690,
        698
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2841": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2842": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2843": {
      "op": "POP"
    },
    "2844": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 41,
      "value": "0xB28"
    },
    "2847": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2848": {
      "op": "POP"
    },
    "2849": {
      "fn": "Strings.toString",
      "offset": [
        720,
        722
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "2851": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2852": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1097"
    },
    "2855": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        712,
        722
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2856": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2857": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2858": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "POP",
      "path": "18"
    },
    "2859": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB09"
    },
    "2862": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2863": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2864": {
      "fn": "Strings.toString",
      "offset": [
        742,
        761
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2866": {
      "fn": "Strings.toString",
      "offset": [
        774,
        780
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2873": {
      "op": "SHL"
    },
    "2874": {
      "op": "SUB"
    },
    "2875": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2876": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "GT",
      "path": "18"
    },
    "2877": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2878": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB57"
    },
    "2881": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2882": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2889": {
      "op": "SHL"
    },
    "2890": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2892": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2893": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x41"
    },
    "2895": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2897": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2898": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "2900": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2902": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2903": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2904": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2906": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2907": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2908": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2909": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2910": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2911": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2912": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "2914": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "18"
    },
    "2915": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "2917": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "NOT",
      "path": "18"
    },
    "2918": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "AND",
      "path": "18"
    },
    "2919": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2921": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "18"
    },
    "2922": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2923": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "18"
    },
    "2924": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2926": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2927": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2928": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2929": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB81"
    },
    "2932": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2933": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2935": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2936": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "18"
    },
    "2937": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2938": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2939": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2940": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2941": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "CALLDATACOPY",
      "path": "18"
    },
    "2942": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "18"
    },
    "2943": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2944": {
      "op": "POP"
    },
    "2945": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2946": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "POP",
      "path": "18"
    },
    "2947": {
      "fn": "Strings.toString",
      "offset": [
        742,
        781
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2948": {
      "fn": "Strings.toString",
      "offset": [
        742,
        781
      ],
      "op": "POP",
      "path": "18"
    },
    "2949": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2950": {
      "fn": "Strings.toString",
      "offset": [
        798,
        808
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2951": {
      "fn": "Strings.toString",
      "offset": [
        798,
        808
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2952": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x906"
    },
    "2955": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2956": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 42,
      "value": "0xB96"
    },
    "2959": {
      "fn": "Strings.toString",
      "offset": [
        834,
        835
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2961": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2962": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10AB"
    },
    "2965": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        824,
        835
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2966": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2967": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2968": {
      "op": "POP"
    },
    "2969": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 43,
      "value": "0xBA3"
    },
    "2972": {
      "fn": "Strings.toString",
      "offset": [
        900,
        902
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "2974": {
      "fn": "Strings.toString",
      "offset": [
        892,
        897
      ],
      "op": "DUP7",
      "path": "18"
    },
    "2975": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1144"
    },
    "2978": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        892,
        902
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2979": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2980": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBAE"
    },
    "2983": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2984": {
      "fn": "Strings.toString",
      "offset": [
        879,
        881
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x30"
    },
    "2986": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x107F"
    },
    "2989": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        879,
        903
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2990": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2991": {
      "fn": "Strings.toString",
      "offset": [
        866,
        905
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF8"
    },
    "2993": {
      "fn": "Strings.toString",
      "offset": [
        866,
        905
      ],
      "op": "SHL",
      "path": "18"
    },
    "2994": {
      "fn": "Strings.toString",
      "offset": [
        849,
        855
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2995": {
      "fn": "Strings.toString",
      "offset": [
        856,
        862
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2996": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2997": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2998": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2999": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "LT",
      "path": "18"
    },
    "3000": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBD1"
    },
    "3003": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3004": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3011": {
      "op": "SHL"
    },
    "3012": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3014": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3015": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x32"
    },
    "3017": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3019": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3020": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "3022": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3024": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "REVERT",
      "path": "18"
    },
    "3025": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3026": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3028": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "ADD",
      "path": "18"
    },
    "3029": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "ADD",
      "path": "18"
    },
    "3030": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3037": {
      "op": "SHL"
    },
    "3038": {
      "op": "SUB"
    },
    "3039": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "NOT",
      "path": "18"
    },
    "3040": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "AND",
      "path": "18"
    },
    "3041": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3042": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3043": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3045": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "BYTE",
      "path": "18"
    },
    "3046": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3047": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "MSTORE8",
      "path": "18"
    },
    "3048": {
      "op": "POP"
    },
    "3049": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 44,
      "value": "0xBF3"
    },
    "3052": {
      "fn": "Strings.toString",
      "offset": [
        928,
        930
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "3054": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "DUP7",
      "path": "18"
    },
    "3055": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1097"
    },
    "3058": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        919,
        930
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3059": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3060": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "3061": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "POP",
      "path": "18"
    },
    "3062": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB85"
    },
    "3065": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3066": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12575
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3067": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11947,
        11951
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3075": {
      "op": "SHL"
    },
    "3076": {
      "op": "SUB"
    },
    "3077": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11967,
        11980
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3078": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11967,
        11980
      ],
      "op": "AND",
      "path": "11"
    },
    "3079": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "3080": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "16",
      "statement": 45
    },
    "3081": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11963,
        12569
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xCFC"
    },
    "3084": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11963,
        12569
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3085": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3087": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3088": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3093": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3095": {
      "op": "SHL"
    },
    "3096": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3097": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3104": {
      "op": "SHL"
    },
    "3105": {
      "op": "SUB"
    },
    "3106": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "DUP6",
      "path": "11"
    },
    "3107": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "AND",
      "path": "11"
    },
    "3108": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3109": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x150B7A02"
    },
    "3114": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3115": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC3E"
    },
    "3118": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3119": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "17"
    },
    "3120": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3121": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12053,
        12057
      ],
      "op": "DUP10",
      "path": "11"
    },
    "3122": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12053,
        12057
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3123": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12059,
        12066
      ],
      "op": "DUP9",
      "path": "11"
    },
    "3124": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12059,
        12066
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3125": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12068,
        12073
      ],
      "op": "DUP9",
      "path": "11"
    },
    "3126": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12068,
        12073
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3127": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3129": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ADD",
      "path": "11"
    },
    "3130": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF8C"
    },
    "3133": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3134": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3135": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3137": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3139": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3140": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3141": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3142": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SUB",
      "path": "11"
    },
    "3143": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3144": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3146": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP8",
      "path": "11"
    },
    "3147": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3148": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "3149": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3150": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3151": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3152": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC58"
    },
    "3155": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3156": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3158": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3159": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "REVERT",
      "path": "11"
    },
    "3160": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3161": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "POP",
      "path": "11"
    },
    "3162": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "GAS",
      "path": "11"
    },
    "3163": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "CALL",
      "path": "11"
    },
    "3164": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "3165": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "POP",
      "path": "11"
    },
    "3166": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "POP",
      "path": "11"
    },
    "3167": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "POP",
      "path": "11"
    },
    "3168": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3169": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3170": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC88"
    },
    "3173": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3174": {
      "op": "POP"
    },
    "3175": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3177": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3178": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3179": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "3181": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3182": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3183": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3184": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ADD",
      "path": "11"
    },
    "3185": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3187": {
      "op": "NOT"
    },
    "3188": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "AND",
      "path": "11"
    },
    "3189": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3190": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ADD",
      "path": "11"
    },
    "3191": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3192": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "3193": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3194": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC85"
    },
    "3197": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3198": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3199": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ADD",
      "path": "11"
    },
    "3200": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3201": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEFD"
    },
    "3204": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3205": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3206": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3208": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3209": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xCE2"
    },
    "3212": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3213": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3214": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3215": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3216": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3217": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xCB6"
    },
    "3220": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3221": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3223": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3224": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3225": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "POP",
      "path": "11"
    },
    "3226": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "3228": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "NOT",
      "path": "11"
    },
    "3229": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3F"
    },
    "3231": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3232": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "ADD",
      "path": "11"
    },
    "3233": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "AND",
      "path": "11"
    },
    "3234": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3235": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "ADD",
      "path": "11"
    },
    "3236": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3238": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3239": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3240": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3241": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3242": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3243": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3245": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3247": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3248": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "ADD",
      "path": "11"
    },
    "3249": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "3250": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xCBB"
    },
    "3253": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3254": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3255": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "3257": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3258": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "POP",
      "path": "11"
    },
    "3259": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3260": {
      "op": "POP"
    },
    "3261": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12241,
        12254
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3262": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12241,
        12254
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3263": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12237,
        12503
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xCDA"
    },
    "3266": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12237,
        12503
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3267": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12283,
        12343
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 46,
      "value": "0x40"
    },
    "3269": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12283,
        12343
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3270": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3276": {
      "op": "SHL"
    },
    "3277": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12283,
        12343
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3278": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12283,
        12343
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3279": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12283,
        12343
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3281": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12283,
        12343
      ],
      "op": "ADD",
      "path": "11"
    },
    "3282": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12283,
        12343
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32B"
    },
    "3285": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12283,
        12343
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3286": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12283,
        12343
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFDC"
    },
    "3289": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12283,
        12343
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3290": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12237,
        12503
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3291": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12455,
        12461
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3292": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12449,
        12462
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3293": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12440,
        12446
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3294": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12436,
        12438
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3296": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12432,
        12447
      ],
      "op": "ADD",
      "path": "11"
    },
    "3297": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12425,
        12463
      ],
      "op": "REVERT",
      "path": "11"
    },
    "3298": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12517
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3305": {
      "op": "SHL"
    },
    "3306": {
      "op": "SUB"
    },
    "3307": {
      "op": "NOT"
    },
    "3308": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12124,
        12175
      ],
      "op": "AND",
      "path": "11",
      "statement": 47
    },
    "3309": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3316": {
      "op": "SHL"
    },
    "3317": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12124,
        12175
      ],
      "op": "EQ",
      "path": "11"
    },
    "3318": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12124,
        12175
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3319": {
      "op": "POP"
    },
    "3320": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12117,
        12175
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x906"
    },
    "3323": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12117,
        12175
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3324": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11963,
        12569
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3325": {
      "op": "POP"
    },
    "3326": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12554,
        12558
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 48,
      "value": "0x1"
    },
    "3328": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12575
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "3329": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12575
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "3330": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12575
      ],
      "op": "POP",
      "path": "11"
    },
    "3331": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12575
      ],
      "op": "POP",
      "path": "11"
    },
    "3332": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12575
      ],
      "op": "POP",
      "path": "11"
    },
    "3333": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12575
      ],
      "op": "POP",
      "path": "11"
    },
    "3334": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        11797,
        12575
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3335": {
      "op": "JUMPDEST"
    },
    "3336": {
      "op": "DUP1"
    },
    "3337": {
      "op": "CALLDATALOAD"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3344": {
      "op": "SHL"
    },
    "3345": {
      "op": "SUB"
    },
    "3346": {
      "op": "DUP2"
    },
    "3347": {
      "op": "AND"
    },
    "3348": {
      "op": "DUP2"
    },
    "3349": {
      "op": "EQ"
    },
    "3350": {
      "op": "PUSH2",
      "value": "0xD1E"
    },
    "3353": {
      "op": "JUMPI"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3356": {
      "op": "DUP1"
    },
    "3357": {
      "op": "REVERT"
    },
    "3358": {
      "op": "JUMPDEST"
    },
    "3359": {
      "op": "SWAP2"
    },
    "3360": {
      "op": "SWAP1"
    },
    "3361": {
      "op": "POP"
    },
    "3362": {
      "jump": "o",
      "op": "JUMP"
    },
    "3363": {
      "op": "JUMPDEST"
    },
    "3364": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3368": {
      "op": "DUP3"
    },
    "3369": {
      "op": "DUP5"
    },
    "3370": {
      "op": "SUB"
    },
    "3371": {
      "op": "SLT"
    },
    "3372": {
      "op": "ISZERO"
    },
    "3373": {
      "op": "PUSH2",
      "value": "0xD34"
    },
    "3376": {
      "op": "JUMPI"
    },
    "3377": {
      "op": "DUP1"
    },
    "3378": {
      "op": "DUP2"
    },
    "3379": {
      "op": "REVERT"
    },
    "3380": {
      "op": "JUMPDEST"
    },
    "3381": {
      "op": "PUSH2",
      "value": "0x784"
    },
    "3384": {
      "op": "DUP3"
    },
    "3385": {
      "op": "PUSH2",
      "value": "0xD07"
    },
    "3388": {
      "jump": "i",
      "op": "JUMP"
    },
    "3389": {
      "op": "JUMPDEST"
    },
    "3390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3392": {
      "op": "DUP1"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3395": {
      "op": "DUP4"
    },
    "3396": {
      "op": "DUP6"
    },
    "3397": {
      "op": "SUB"
    },
    "3398": {
      "op": "SLT"
    },
    "3399": {
      "op": "ISZERO"
    },
    "3400": {
      "op": "PUSH2",
      "value": "0xD4F"
    },
    "3403": {
      "op": "JUMPI"
    },
    "3404": {
      "op": "DUP1"
    },
    "3405": {
      "op": "DUP2"
    },
    "3406": {
      "op": "REVERT"
    },
    "3407": {
      "op": "JUMPDEST"
    },
    "3408": {
      "op": "PUSH2",
      "value": "0xD58"
    },
    "3411": {
      "op": "DUP4"
    },
    "3412": {
      "op": "PUSH2",
      "value": "0xD07"
    },
    "3415": {
      "jump": "i",
      "op": "JUMP"
    },
    "3416": {
      "op": "JUMPDEST"
    },
    "3417": {
      "op": "SWAP2"
    },
    "3418": {
      "op": "POP"
    },
    "3419": {
      "op": "PUSH2",
      "value": "0xD66"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3424": {
      "op": "DUP5"
    },
    "3425": {
      "op": "ADD"
    },
    "3426": {
      "op": "PUSH2",
      "value": "0xD07"
    },
    "3429": {
      "jump": "i",
      "op": "JUMP"
    },
    "3430": {
      "op": "JUMPDEST"
    },
    "3431": {
      "op": "SWAP1"
    },
    "3432": {
      "op": "POP"
    },
    "3433": {
      "op": "SWAP3"
    },
    "3434": {
      "op": "POP"
    },
    "3435": {
      "op": "SWAP3"
    },
    "3436": {
      "op": "SWAP1"
    },
    "3437": {
      "op": "POP"
    },
    "3438": {
      "jump": "o",
      "op": "JUMP"
    },
    "3439": {
      "op": "JUMPDEST"
    },
    "3440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3442": {
      "op": "DUP1"
    },
    "3443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3447": {
      "op": "DUP5"
    },
    "3448": {
      "op": "DUP7"
    },
    "3449": {
      "op": "SUB"
    },
    "3450": {
      "op": "SLT"
    },
    "3451": {
      "op": "ISZERO"
    },
    "3452": {
      "op": "PUSH2",
      "value": "0xD83"
    },
    "3455": {
      "op": "JUMPI"
    },
    "3456": {
      "op": "DUP1"
    },
    "3457": {
      "op": "DUP2"
    },
    "3458": {
      "op": "REVERT"
    },
    "3459": {
      "op": "JUMPDEST"
    },
    "3460": {
      "op": "PUSH2",
      "value": "0xD8C"
    },
    "3463": {
      "op": "DUP5"
    },
    "3464": {
      "op": "PUSH2",
      "value": "0xD07"
    },
    "3467": {
      "jump": "i",
      "op": "JUMP"
    },
    "3468": {
      "op": "JUMPDEST"
    },
    "3469": {
      "op": "SWAP3"
    },
    "3470": {
      "op": "POP"
    },
    "3471": {
      "op": "PUSH2",
      "value": "0xD9A"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3476": {
      "op": "DUP6"
    },
    "3477": {
      "op": "ADD"
    },
    "3478": {
      "op": "PUSH2",
      "value": "0xD07"
    },
    "3481": {
      "jump": "i",
      "op": "JUMP"
    },
    "3482": {
      "op": "JUMPDEST"
    },
    "3483": {
      "op": "SWAP2"
    },
    "3484": {
      "op": "POP"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3487": {
      "op": "DUP5"
    },
    "3488": {
      "op": "ADD"
    },
    "3489": {
      "op": "CALLDATALOAD"
    },
    "3490": {
      "op": "SWAP1"
    },
    "3491": {
      "op": "POP"
    },
    "3492": {
      "op": "SWAP3"
    },
    "3493": {
      "op": "POP"
    },
    "3494": {
      "op": "SWAP3"
    },
    "3495": {
      "op": "POP"
    },
    "3496": {
      "op": "SWAP3"
    },
    "3497": {
      "jump": "o",
      "op": "JUMP"
    },
    "3498": {
      "op": "JUMPDEST"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3501": {
      "op": "DUP1"
    },
    "3502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3504": {
      "op": "DUP1"
    },
    "3505": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3507": {
      "op": "DUP6"
    },
    "3508": {
      "op": "DUP8"
    },
    "3509": {
      "op": "SUB"
    },
    "3510": {
      "op": "SLT"
    },
    "3511": {
      "op": "ISZERO"
    },
    "3512": {
      "op": "PUSH2",
      "value": "0xDBF"
    },
    "3515": {
      "op": "JUMPI"
    },
    "3516": {
      "op": "DUP1"
    },
    "3517": {
      "op": "DUP2"
    },
    "3518": {
      "op": "REVERT"
    },
    "3519": {
      "op": "JUMPDEST"
    },
    "3520": {
      "op": "PUSH2",
      "value": "0xDC8"
    },
    "3523": {
      "op": "DUP6"
    },
    "3524": {
      "op": "PUSH2",
      "value": "0xD07"
    },
    "3527": {
      "jump": "i",
      "op": "JUMP"
    },
    "3528": {
      "op": "JUMPDEST"
    },
    "3529": {
      "op": "SWAP4"
    },
    "3530": {
      "op": "POP"
    },
    "3531": {
      "op": "PUSH2",
      "value": "0xDD6"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3536": {
      "op": "DUP7"
    },
    "3537": {
      "op": "ADD"
    },
    "3538": {
      "op": "PUSH2",
      "value": "0xD07"
    },
    "3541": {
      "jump": "i",
      "op": "JUMP"
    },
    "3542": {
      "op": "JUMPDEST"
    },
    "3543": {
      "op": "SWAP3"
    },
    "3544": {
      "op": "POP"
    },
    "3545": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3547": {
      "op": "DUP6"
    },
    "3548": {
      "op": "ADD"
    },
    "3549": {
      "op": "CALLDATALOAD"
    },
    "3550": {
      "op": "SWAP2"
    },
    "3551": {
      "op": "POP"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3554": {
      "op": "DUP6"
    },
    "3555": {
      "op": "ADD"
    },
    "3556": {
      "op": "CALLDATALOAD"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3563": {
      "op": "SHL"
    },
    "3564": {
      "op": "SUB"
    },
    "3565": {
      "op": "DUP1"
    },
    "3566": {
      "op": "DUP3"
    },
    "3567": {
      "op": "GT"
    },
    "3568": {
      "op": "ISZERO"
    },
    "3569": {
      "op": "PUSH2",
      "value": "0xDF8"
    },
    "3572": {
      "op": "JUMPI"
    },
    "3573": {
      "op": "DUP3"
    },
    "3574": {
      "op": "DUP4"
    },
    "3575": {
      "op": "REVERT"
    },
    "3576": {
      "op": "JUMPDEST"
    },
    "3577": {
      "op": "DUP2"
    },
    "3578": {
      "op": "DUP8"
    },
    "3579": {
      "op": "ADD"
    },
    "3580": {
      "op": "SWAP2"
    },
    "3581": {
      "op": "POP"
    },
    "3582": {
      "op": "DUP8"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3585": {
      "op": "DUP4"
    },
    "3586": {
      "op": "ADD"
    },
    "3587": {
      "op": "SLT"
    },
    "3588": {
      "op": "PUSH2",
      "value": "0xE0B"
    },
    "3591": {
      "op": "JUMPI"
    },
    "3592": {
      "op": "DUP3"
    },
    "3593": {
      "op": "DUP4"
    },
    "3594": {
      "op": "REVERT"
    },
    "3595": {
      "op": "JUMPDEST"
    },
    "3596": {
      "op": "DUP2"
    },
    "3597": {
      "op": "CALLDATALOAD"
    },
    "3598": {
      "op": "DUP2"
    },
    "3599": {
      "op": "DUP2"
    },
    "3600": {
      "op": "GT"
    },
    "3601": {
      "op": "ISZERO"
    },
    "3602": {
      "op": "PUSH2",
      "value": "0xE1D"
    },
    "3605": {
      "op": "JUMPI"
    },
    "3606": {
      "op": "PUSH2",
      "value": "0xE1D"
    },
    "3609": {
      "op": "PUSH2",
      "value": "0x1184"
    },
    "3612": {
      "jump": "i",
      "op": "JUMP"
    },
    "3613": {
      "op": "JUMPDEST"
    },
    "3614": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3616": {
      "op": "MLOAD"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3619": {
      "op": "DUP3"
    },
    "3620": {
      "op": "ADD"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3623": {
      "op": "NOT"
    },
    "3624": {
      "op": "SWAP1"
    },
    "3625": {
      "op": "DUP2"
    },
    "3626": {
      "op": "AND"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3629": {
      "op": "ADD"
    },
    "3630": {
      "op": "AND"
    },
    "3631": {
      "op": "DUP2"
    },
    "3632": {
      "op": "ADD"
    },
    "3633": {
      "op": "SWAP1"
    },
    "3634": {
      "op": "DUP4"
    },
    "3635": {
      "op": "DUP3"
    },
    "3636": {
      "op": "GT"
    },
    "3637": {
      "op": "DUP2"
    },
    "3638": {
      "op": "DUP4"
    },
    "3639": {
      "op": "LT"
    },
    "3640": {
      "op": "OR"
    },
    "3641": {
      "op": "ISZERO"
    },
    "3642": {
      "op": "PUSH2",
      "value": "0xE45"
    },
    "3645": {
      "op": "JUMPI"
    },
    "3646": {
      "op": "PUSH2",
      "value": "0xE45"
    },
    "3649": {
      "op": "PUSH2",
      "value": "0x1184"
    },
    "3652": {
      "jump": "i",
      "op": "JUMP"
    },
    "3653": {
      "op": "JUMPDEST"
    },
    "3654": {
      "op": "DUP2"
    },
    "3655": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3657": {
      "op": "MSTORE"
    },
    "3658": {
      "op": "DUP3"
    },
    "3659": {
      "op": "DUP2"
    },
    "3660": {
      "op": "MSTORE"
    },
    "3661": {
      "op": "DUP11"
    },
    "3662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3664": {
      "op": "DUP5"
    },
    "3665": {
      "op": "DUP8"
    },
    "3666": {
      "op": "ADD"
    },
    "3667": {
      "op": "ADD"
    },
    "3668": {
      "op": "GT"
    },
    "3669": {
      "op": "ISZERO"
    },
    "3670": {
      "op": "PUSH2",
      "value": "0xE5D"
    },
    "3673": {
      "op": "JUMPI"
    },
    "3674": {
      "op": "DUP6"
    },
    "3675": {
      "op": "DUP7"
    },
    "3676": {
      "op": "REVERT"
    },
    "3677": {
      "op": "JUMPDEST"
    },
    "3678": {
      "op": "DUP3"
    },
    "3679": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3681": {
      "op": "DUP7"
    },
    "3682": {
      "op": "ADD"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3685": {
      "op": "DUP4"
    },
    "3686": {
      "op": "ADD"
    },
    "3687": {
      "op": "CALLDATACOPY"
    },
    "3688": {
      "op": "SWAP2"
    },
    "3689": {
      "op": "DUP3"
    },
    "3690": {
      "op": "ADD"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3693": {
      "op": "ADD"
    },
    "3694": {
      "op": "SWAP5"
    },
    "3695": {
      "op": "SWAP1"
    },
    "3696": {
      "op": "SWAP5"
    },
    "3697": {
      "op": "MSTORE"
    },
    "3698": {
      "op": "SWAP6"
    },
    "3699": {
      "op": "SWAP9"
    },
    "3700": {
      "op": "SWAP5"
    },
    "3701": {
      "op": "SWAP8"
    },
    "3702": {
      "op": "POP"
    },
    "3703": {
      "op": "SWAP3"
    },
    "3704": {
      "op": "SWAP6"
    },
    "3705": {
      "op": "POP"
    },
    "3706": {
      "op": "POP"
    },
    "3707": {
      "op": "POP"
    },
    "3708": {
      "op": "POP"
    },
    "3709": {
      "jump": "o",
      "op": "JUMP"
    },
    "3710": {
      "op": "JUMPDEST"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3713": {
      "op": "DUP1"
    },
    "3714": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3716": {
      "op": "DUP4"
    },
    "3717": {
      "op": "DUP6"
    },
    "3718": {
      "op": "SUB"
    },
    "3719": {
      "op": "SLT"
    },
    "3720": {
      "op": "ISZERO"
    },
    "3721": {
      "op": "PUSH2",
      "value": "0xE90"
    },
    "3724": {
      "op": "JUMPI"
    },
    "3725": {
      "op": "DUP2"
    },
    "3726": {
      "op": "DUP3"
    },
    "3727": {
      "op": "REVERT"
    },
    "3728": {
      "op": "JUMPDEST"
    },
    "3729": {
      "op": "PUSH2",
      "value": "0xE99"
    },
    "3732": {
      "op": "DUP4"
    },
    "3733": {
      "op": "PUSH2",
      "value": "0xD07"
    },
    "3736": {
      "jump": "i",
      "op": "JUMP"
    },
    "3737": {
      "op": "JUMPDEST"
    },
    "3738": {
      "op": "SWAP2"
    },
    "3739": {
      "op": "POP"
    },
    "3740": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3742": {
      "op": "DUP4"
    },
    "3743": {
      "op": "ADD"
    },
    "3744": {
      "op": "CALLDATALOAD"
    },
    "3745": {
      "op": "DUP1"
    },
    "3746": {
      "op": "ISZERO"
    },
    "3747": {
      "op": "ISZERO"
    },
    "3748": {
      "op": "DUP2"
    },
    "3749": {
      "op": "EQ"
    },
    "3750": {
      "op": "PUSH2",
      "value": "0xEAD"
    },
    "3753": {
      "op": "JUMPI"
    },
    "3754": {
      "op": "DUP2"
    },
    "3755": {
      "op": "DUP3"
    },
    "3756": {
      "op": "REVERT"
    },
    "3757": {
      "op": "JUMPDEST"
    },
    "3758": {
      "op": "DUP1"
    },
    "3759": {
      "op": "SWAP2"
    },
    "3760": {
      "op": "POP"
    },
    "3761": {
      "op": "POP"
    },
    "3762": {
      "op": "SWAP3"
    },
    "3763": {
      "op": "POP"
    },
    "3764": {
      "op": "SWAP3"
    },
    "3765": {
      "op": "SWAP1"
    },
    "3766": {
      "op": "POP"
    },
    "3767": {
      "jump": "o",
      "op": "JUMP"
    },
    "3768": {
      "op": "JUMPDEST"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3771": {
      "op": "DUP1"
    },
    "3772": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3774": {
      "op": "DUP4"
    },
    "3775": {
      "op": "DUP6"
    },
    "3776": {
      "op": "SUB"
    },
    "3777": {
      "op": "SLT"
    },
    "3778": {
      "op": "ISZERO"
    },
    "3779": {
      "op": "PUSH2",
      "value": "0xECA"
    },
    "3782": {
      "op": "JUMPI"
    },
    "3783": {
      "op": "DUP2"
    },
    "3784": {
      "op": "DUP3"
    },
    "3785": {
      "op": "REVERT"
    },
    "3786": {
      "op": "JUMPDEST"
    },
    "3787": {
      "op": "PUSH2",
      "value": "0xED3"
    },
    "3790": {
      "op": "DUP4"
    },
    "3791": {
      "op": "PUSH2",
      "value": "0xD07"
    },
    "3794": {
      "jump": "i",
      "op": "JUMP"
    },
    "3795": {
      "op": "JUMPDEST"
    },
    "3796": {
      "op": "SWAP5"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3799": {
      "op": "SWAP4"
    },
    "3800": {
      "op": "SWAP1"
    },
    "3801": {
      "op": "SWAP4"
    },
    "3802": {
      "op": "ADD"
    },
    "3803": {
      "op": "CALLDATALOAD"
    },
    "3804": {
      "op": "SWAP4"
    },
    "3805": {
      "op": "POP"
    },
    "3806": {
      "op": "POP"
    },
    "3807": {
      "op": "POP"
    },
    "3808": {
      "jump": "o",
      "op": "JUMP"
    },
    "3809": {
      "op": "JUMPDEST"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3814": {
      "op": "DUP3"
    },
    "3815": {
      "op": "DUP5"
    },
    "3816": {
      "op": "SUB"
    },
    "3817": {
      "op": "SLT"
    },
    "3818": {
      "op": "ISZERO"
    },
    "3819": {
      "op": "PUSH2",
      "value": "0xEF2"
    },
    "3822": {
      "op": "JUMPI"
    },
    "3823": {
      "op": "DUP1"
    },
    "3824": {
      "op": "DUP2"
    },
    "3825": {
      "op": "REVERT"
    },
    "3826": {
      "op": "JUMPDEST"
    },
    "3827": {
      "op": "DUP2"
    },
    "3828": {
      "op": "CALLDATALOAD"
    },
    "3829": {
      "op": "PUSH2",
      "value": "0x784"
    },
    "3832": {
      "op": "DUP2"
    },
    "3833": {
      "op": "PUSH2",
      "value": "0x119A"
    },
    "3836": {
      "jump": "i",
      "op": "JUMP"
    },
    "3837": {
      "op": "JUMPDEST"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3842": {
      "op": "DUP3"
    },
    "3843": {
      "op": "DUP5"
    },
    "3844": {
      "op": "SUB"
    },
    "3845": {
      "op": "SLT"
    },
    "3846": {
      "op": "ISZERO"
    },
    "3847": {
      "op": "PUSH2",
      "value": "0xF0E"
    },
    "3850": {
      "op": "JUMPI"
    },
    "3851": {
      "op": "DUP1"
    },
    "3852": {
      "op": "DUP2"
    },
    "3853": {
      "op": "REVERT"
    },
    "3854": {
      "op": "JUMPDEST"
    },
    "3855": {
      "op": "DUP2"
    },
    "3856": {
      "op": "MLOAD"
    },
    "3857": {
      "op": "PUSH2",
      "value": "0x784"
    },
    "3860": {
      "op": "DUP2"
    },
    "3861": {
      "op": "PUSH2",
      "value": "0x119A"
    },
    "3864": {
      "jump": "i",
      "op": "JUMP"
    },
    "3865": {
      "op": "JUMPDEST"
    },
    "3866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3868": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3870": {
      "op": "DUP3"
    },
    "3871": {
      "op": "DUP5"
    },
    "3872": {
      "op": "SUB"
    },
    "3873": {
      "op": "SLT"
    },
    "3874": {
      "op": "ISZERO"
    },
    "3875": {
      "op": "PUSH2",
      "value": "0xF2A"
    },
    "3878": {
      "op": "JUMPI"
    },
    "3879": {
      "op": "DUP1"
    },
    "3880": {
      "op": "DUP2"
    },
    "3881": {
      "op": "REVERT"
    },
    "3882": {
      "op": "JUMPDEST"
    },
    "3883": {
      "op": "POP"
    },
    "3884": {
      "op": "CALLDATALOAD"
    },
    "3885": {
      "op": "SWAP2"
    },
    "3886": {
      "op": "SWAP1"
    },
    "3887": {
      "op": "POP"
    },
    "3888": {
      "jump": "o",
      "op": "JUMP"
    },
    "3889": {
      "op": "JUMPDEST"
    },
    "3890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3892": {
      "op": "DUP2"
    },
    "3893": {
      "op": "MLOAD"
    },
    "3894": {
      "op": "DUP1"
    },
    "3895": {
      "op": "DUP5"
    },
    "3896": {
      "op": "MSTORE"
    },
    "3897": {
      "op": "PUSH2",
      "value": "0xF49"
    },
    "3900": {
      "op": "DUP2"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3903": {
      "op": "DUP7"
    },
    "3904": {
      "op": "ADD"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3907": {
      "op": "DUP7"
    },
    "3908": {
      "op": "ADD"
    },
    "3909": {
      "op": "PUSH2",
      "value": "0x10C2"
    },
    "3912": {
      "jump": "i",
      "op": "JUMP"
    },
    "3913": {
      "op": "JUMPDEST"
    },
    "3914": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3916": {
      "op": "ADD"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3919": {
      "op": "NOT"
    },
    "3920": {
      "op": "AND"
    },
    "3921": {
      "op": "SWAP3"
    },
    "3922": {
      "op": "SWAP1"
    },
    "3923": {
      "op": "SWAP3"
    },
    "3924": {
      "op": "ADD"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3927": {
      "op": "ADD"
    },
    "3928": {
      "op": "SWAP3"
    },
    "3929": {
      "op": "SWAP2"
    },
    "3930": {
      "op": "POP"
    },
    "3931": {
      "op": "POP"
    },
    "3932": {
      "jump": "o",
      "op": "JUMP"
    },
    "3933": {
      "op": "JUMPDEST"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3936": {
      "op": "DUP4"
    },
    "3937": {
      "op": "MLOAD"
    },
    "3938": {
      "op": "PUSH2",
      "value": "0xF6F"
    },
    "3941": {
      "op": "DUP2"
    },
    "3942": {
      "op": "DUP5"
    },
    "3943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3945": {
      "op": "DUP9"
    },
    "3946": {
      "op": "ADD"
    },
    "3947": {
      "op": "PUSH2",
      "value": "0x10C2"
    },
    "3950": {
      "jump": "i",
      "op": "JUMP"
    },
    "3951": {
      "op": "JUMPDEST"
    },
    "3952": {
      "op": "DUP4"
    },
    "3953": {
      "op": "MLOAD"
    },
    "3954": {
      "op": "SWAP1"
    },
    "3955": {
      "op": "DUP4"
    },
    "3956": {
      "op": "ADD"
    },
    "3957": {
      "op": "SWAP1"
    },
    "3958": {
      "op": "PUSH2",
      "value": "0xF83"
    },
    "3961": {
      "op": "DUP2"
    },
    "3962": {
      "op": "DUP4"
    },
    "3963": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3965": {
      "op": "DUP9"
    },
    "3966": {
      "op": "ADD"
    },
    "3967": {
      "op": "PUSH2",
      "value": "0x10C2"
    },
    "3970": {
      "jump": "i",
      "op": "JUMP"
    },
    "3971": {
      "op": "JUMPDEST"
    },
    "3972": {
      "op": "ADD"
    },
    "3973": {
      "op": "SWAP5"
    },
    "3974": {
      "op": "SWAP4"
    },
    "3975": {
      "op": "POP"
    },
    "3976": {
      "op": "POP"
    },
    "3977": {
      "op": "POP"
    },
    "3978": {
      "op": "POP"
    },
    "3979": {
      "jump": "o",
      "op": "JUMP"
    },
    "3980": {
      "op": "JUMPDEST"
    },
    "3981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3987": {
      "op": "SHL"
    },
    "3988": {
      "op": "SUB"
    },
    "3989": {
      "op": "DUP6"
    },
    "3990": {
      "op": "DUP2"
    },
    "3991": {
      "op": "AND"
    },
    "3992": {
      "op": "DUP3"
    },
    "3993": {
      "op": "MSTORE"
    },
    "3994": {
      "op": "DUP5"
    },
    "3995": {
      "op": "AND"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3998": {
      "op": "DUP3"
    },
    "3999": {
      "op": "ADD"
    },
    "4000": {
      "op": "MSTORE"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4003": {
      "op": "DUP2"
    },
    "4004": {
      "op": "ADD"
    },
    "4005": {
      "op": "DUP4"
    },
    "4006": {
      "op": "SWAP1"
    },
    "4007": {
      "op": "MSTORE"
    },
    "4008": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4010": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4012": {
      "op": "DUP3"
    },
    "4013": {
      "op": "ADD"
    },
    "4014": {
      "op": "DUP2"
    },
    "4015": {
      "op": "SWAP1"
    },
    "4016": {
      "op": "MSTORE"
    },
    "4017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4019": {
      "op": "SWAP1"
    },
    "4020": {
      "op": "PUSH2",
      "value": "0xFBF"
    },
    "4023": {
      "op": "SWAP1"
    },
    "4024": {
      "op": "DUP4"
    },
    "4025": {
      "op": "ADD"
    },
    "4026": {
      "op": "DUP5"
    },
    "4027": {
      "op": "PUSH2",
      "value": "0xF31"
    },
    "4030": {
      "jump": "i",
      "op": "JUMP"
    },
    "4031": {
      "op": "JUMPDEST"
    },
    "4032": {
      "op": "SWAP7"
    },
    "4033": {
      "op": "SWAP6"
    },
    "4034": {
      "op": "POP"
    },
    "4035": {
      "op": "POP"
    },
    "4036": {
      "op": "POP"
    },
    "4037": {
      "op": "POP"
    },
    "4038": {
      "op": "POP"
    },
    "4039": {
      "op": "POP"
    },
    "4040": {
      "jump": "o",
      "op": "JUMP"
    },
    "4041": {
      "op": "JUMPDEST"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4044": {
      "op": "DUP2"
    },
    "4045": {
      "op": "MSTORE"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4048": {
      "op": "PUSH2",
      "value": "0x784"
    },
    "4051": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4053": {
      "op": "DUP4"
    },
    "4054": {
      "op": "ADD"
    },
    "4055": {
      "op": "DUP5"
    },
    "4056": {
      "op": "PUSH2",
      "value": "0xF31"
    },
    "4059": {
      "jump": "i",
      "op": "JUMP"
    },
    "4060": {
      "op": "JUMPDEST"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4063": {
      "op": "DUP1"
    },
    "4064": {
      "op": "DUP3"
    },
    "4065": {
      "op": "MSTORE"
    },
    "4066": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4068": {
      "op": "SWAP1"
    },
    "4069": {
      "op": "DUP3"
    },
    "4070": {
      "op": "ADD"
    },
    "4071": {
      "op": "MSTORE"
    },
    "4072": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "4105": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4107": {
      "op": "DUP3"
    },
    "4108": {
      "op": "ADD"
    },
    "4109": {
      "op": "MSTORE"
    },
    "4110": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4131": {
      "op": "SHL"
    },
    "4132": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4134": {
      "op": "DUP3"
    },
    "4135": {
      "op": "ADD"
    },
    "4136": {
      "op": "MSTORE"
    },
    "4137": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4139": {
      "op": "ADD"
    },
    "4140": {
      "op": "SWAP1"
    },
    "4141": {
      "jump": "o",
      "op": "JUMP"
    },
    "4142": {
      "op": "JUMPDEST"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4145": {
      "op": "DUP1"
    },
    "4146": {
      "op": "DUP3"
    },
    "4147": {
      "op": "MSTORE"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "4150": {
      "op": "SWAP1"
    },
    "4151": {
      "op": "DUP3"
    },
    "4152": {
      "op": "ADD"
    },
    "4153": {
      "op": "MSTORE"
    },
    "4154": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "4187": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4189": {
      "op": "DUP3"
    },
    "4190": {
      "op": "ADD"
    },
    "4191": {
      "op": "MSTORE"
    },
    "4192": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "4210": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4212": {
      "op": "SHL"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4215": {
      "op": "DUP3"
    },
    "4216": {
      "op": "ADD"
    },
    "4217": {
      "op": "MSTORE"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4220": {
      "op": "ADD"
    },
    "4221": {
      "op": "SWAP1"
    },
    "4222": {
      "jump": "o",
      "op": "JUMP"
    },
    "4223": {
      "op": "JUMPDEST"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4226": {
      "op": "DUP3"
    },
    "4227": {
      "op": "NOT"
    },
    "4228": {
      "op": "DUP3"
    },
    "4229": {
      "op": "GT"
    },
    "4230": {
      "op": "ISZERO"
    },
    "4231": {
      "op": "PUSH2",
      "value": "0x1092"
    },
    "4234": {
      "op": "JUMPI"
    },
    "4235": {
      "op": "PUSH2",
      "value": "0x1092"
    },
    "4238": {
      "op": "PUSH2",
      "value": "0x1158"
    },
    "4241": {
      "jump": "i",
      "op": "JUMP"
    },
    "4242": {
      "op": "JUMPDEST"
    },
    "4243": {
      "op": "POP"
    },
    "4244": {
      "op": "ADD"
    },
    "4245": {
      "op": "SWAP1"
    },
    "4246": {
      "jump": "o",
      "op": "JUMP"
    },
    "4247": {
      "op": "JUMPDEST"
    },
    "4248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4250": {
      "op": "DUP3"
    },
    "4251": {
      "op": "PUSH2",
      "value": "0x10A6"
    },
    "4254": {
      "op": "JUMPI"
    },
    "4255": {
      "op": "PUSH2",
      "value": "0x10A6"
    },
    "4258": {
      "op": "PUSH2",
      "value": "0x116E"
    },
    "4261": {
      "jump": "i",
      "op": "JUMP"
    },
    "4262": {
      "op": "JUMPDEST"
    },
    "4263": {
      "op": "POP"
    },
    "4264": {
      "op": "DIV"
    },
    "4265": {
      "op": "SWAP1"
    },
    "4266": {
      "jump": "o",
      "op": "JUMP"
    },
    "4267": {
      "op": "JUMPDEST"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4270": {
      "op": "DUP3"
    },
    "4271": {
      "op": "DUP3"
    },
    "4272": {
      "op": "LT"
    },
    "4273": {
      "op": "ISZERO"
    },
    "4274": {
      "op": "PUSH2",
      "value": "0x10BD"
    },
    "4277": {
      "op": "JUMPI"
    },
    "4278": {
      "op": "PUSH2",
      "value": "0x10BD"
    },
    "4281": {
      "op": "PUSH2",
      "value": "0x1158"
    },
    "4284": {
      "jump": "i",
      "op": "JUMP"
    },
    "4285": {
      "op": "JUMPDEST"
    },
    "4286": {
      "op": "POP"
    },
    "4287": {
      "op": "SUB"
    },
    "4288": {
      "op": "SWAP1"
    },
    "4289": {
      "jump": "o",
      "op": "JUMP"
    },
    "4290": {
      "op": "JUMPDEST"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4293": {
      "op": "JUMPDEST"
    },
    "4294": {
      "op": "DUP4"
    },
    "4295": {
      "op": "DUP2"
    },
    "4296": {
      "op": "LT"
    },
    "4297": {
      "op": "ISZERO"
    },
    "4298": {
      "op": "PUSH2",
      "value": "0x10DD"
    },
    "4301": {
      "op": "JUMPI"
    },
    "4302": {
      "op": "DUP2"
    },
    "4303": {
      "op": "DUP2"
    },
    "4304": {
      "op": "ADD"
    },
    "4305": {
      "op": "MLOAD"
    },
    "4306": {
      "op": "DUP4"
    },
    "4307": {
      "op": "DUP3"
    },
    "4308": {
      "op": "ADD"
    },
    "4309": {
      "op": "MSTORE"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4312": {
      "op": "ADD"
    },
    "4313": {
      "op": "PUSH2",
      "value": "0x10C5"
    },
    "4316": {
      "op": "JUMP"
    },
    "4317": {
      "op": "JUMPDEST"
    },
    "4318": {
      "op": "DUP4"
    },
    "4319": {
      "op": "DUP2"
    },
    "4320": {
      "op": "GT"
    },
    "4321": {
      "op": "ISZERO"
    },
    "4322": {
      "op": "PUSH2",
      "value": "0x6AD"
    },
    "4325": {
      "op": "JUMPI"
    },
    "4326": {
      "op": "POP"
    },
    "4327": {
      "op": "POP"
    },
    "4328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4330": {
      "op": "SWAP2"
    },
    "4331": {
      "op": "ADD"
    },
    "4332": {
      "op": "MSTORE"
    },
    "4333": {
      "jump": "o",
      "op": "JUMP"
    },
    "4334": {
      "op": "JUMPDEST"
    },
    "4335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4337": {
      "op": "DUP2"
    },
    "4338": {
      "op": "DUP2"
    },
    "4339": {
      "op": "SHR"
    },
    "4340": {
      "op": "SWAP1"
    },
    "4341": {
      "op": "DUP3"
    },
    "4342": {
      "op": "AND"
    },
    "4343": {
      "op": "DUP1"
    },
    "4344": {
      "op": "PUSH2",
      "value": "0x1102"
    },
    "4347": {
      "op": "JUMPI"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4350": {
      "op": "DUP3"
    },
    "4351": {
      "op": "AND"
    },
    "4352": {
      "op": "SWAP2"
    },
    "4353": {
      "op": "POP"
    },
    "4354": {
      "op": "JUMPDEST"
    },
    "4355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4357": {
      "op": "DUP3"
    },
    "4358": {
      "op": "LT"
    },
    "4359": {
      "op": "DUP2"
    },
    "4360": {
      "op": "EQ"
    },
    "4361": {
      "op": "ISZERO"
    },
    "4362": {
      "op": "PUSH2",
      "value": "0x1123"
    },
    "4365": {
      "op": "JUMPI"
    },
    "4366": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4373": {
      "op": "SHL"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4376": {
      "op": "MSTORE"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4381": {
      "op": "MSTORE"
    },
    "4382": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4386": {
      "op": "REVERT"
    },
    "4387": {
      "op": "JUMPDEST"
    },
    "4388": {
      "op": "POP"
    },
    "4389": {
      "op": "SWAP2"
    },
    "4390": {
      "op": "SWAP1"
    },
    "4391": {
      "op": "POP"
    },
    "4392": {
      "jump": "o",
      "op": "JUMP"
    },
    "4393": {
      "op": "JUMPDEST"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4398": {
      "op": "NOT"
    },
    "4399": {
      "op": "DUP3"
    },
    "4400": {
      "op": "EQ"
    },
    "4401": {
      "op": "ISZERO"
    },
    "4402": {
      "op": "PUSH2",
      "value": "0x113D"
    },
    "4405": {
      "op": "JUMPI"
    },
    "4406": {
      "op": "PUSH2",
      "value": "0x113D"
    },
    "4409": {
      "op": "PUSH2",
      "value": "0x1158"
    },
    "4412": {
      "jump": "i",
      "op": "JUMP"
    },
    "4413": {
      "op": "JUMPDEST"
    },
    "4414": {
      "op": "POP"
    },
    "4415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4417": {
      "op": "ADD"
    },
    "4418": {
      "op": "SWAP1"
    },
    "4419": {
      "jump": "o",
      "op": "JUMP"
    },
    "4420": {
      "op": "JUMPDEST"
    },
    "4421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4423": {
      "op": "DUP3"
    },
    "4424": {
      "op": "PUSH2",
      "value": "0x1153"
    },
    "4427": {
      "op": "JUMPI"
    },
    "4428": {
      "op": "PUSH2",
      "value": "0x1153"
    },
    "4431": {
      "op": "PUSH2",
      "value": "0x116E"
    },
    "4434": {
      "jump": "i",
      "op": "JUMP"
    },
    "4435": {
      "op": "JUMPDEST"
    },
    "4436": {
      "op": "POP"
    },
    "4437": {
      "op": "MOD"
    },
    "4438": {
      "op": "SWAP1"
    },
    "4439": {
      "jump": "o",
      "op": "JUMP"
    },
    "4440": {
      "op": "JUMPDEST"
    },
    "4441": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4446": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4448": {
      "op": "SHL"
    },
    "4449": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4451": {
      "op": "MSTORE"
    },
    "4452": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4456": {
      "op": "MSTORE"
    },
    "4457": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4461": {
      "op": "REVERT"
    },
    "4462": {
      "op": "JUMPDEST"
    },
    "4463": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4468": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4470": {
      "op": "SHL"
    },
    "4471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4473": {
      "op": "MSTORE"
    },
    "4474": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4476": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4478": {
      "op": "MSTORE"
    },
    "4479": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4483": {
      "op": "REVERT"
    },
    "4484": {
      "op": "JUMPDEST"
    },
    "4485": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4490": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4492": {
      "op": "SHL"
    },
    "4493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4495": {
      "op": "MSTORE"
    },
    "4496": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4498": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4500": {
      "op": "MSTORE"
    },
    "4501": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4505": {
      "op": "REVERT"
    },
    "4506": {
      "op": "JUMPDEST"
    },
    "4507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4511": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4513": {
      "op": "SHL"
    },
    "4514": {
      "op": "SUB"
    },
    "4515": {
      "op": "NOT"
    },
    "4516": {
      "op": "DUP2"
    },
    "4517": {
      "op": "AND"
    },
    "4518": {
      "op": "DUP2"
    },
    "4519": {
      "op": "EQ"
    },
    "4520": {
      "op": "PUSH2",
      "value": "0x11B0"
    },
    "4523": {
      "op": "JUMPI"
    },
    "4524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4526": {
      "op": "DUP1"
    },
    "4527": {
      "op": "REVERT"
    },
    "4528": {
      "op": "JUMPDEST"
    },
    "4529": {
      "op": "POP"
    },
    "4530": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "2da1cf5c791d579ab2acb40762ef9fac5bb1f64b",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(operator != _msgSender(), \"ERC721: approve to caller\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n",
  "sourceMap": "554:12701:11:-:0;;;1316:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1382:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1405:17:11;;;;:7;;:17;;;;;:::i;:::-;;1316:113;;554:12701;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;554:12701:11;;;-1:-1:-1;554:12701:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:909:27;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;143:5;136;129:20;88:2;170:13;;-1:-1:-1;;;;;232:10:27;;;229:2;;;245:18;;:::i;:::-;320:2;314:9;288:2;374:13;;-1:-1:-1;;370:22:27;;;394:2;366:31;362:40;350:53;;;418:18;;;438:22;;;415:46;412:2;;;464:18;;:::i;:::-;504:10;500:2;493:22;539:2;531:6;524:18;561:4;551:14;;606:3;601:2;596;588:6;584:15;580:24;577:33;574:2;;;627:5;620;613:20;574:2;653:5;644:14;;667:133;681:2;678:1;675:9;667:133;;;769:14;;;765:23;;759:30;738:14;;;734:23;;727:63;692:10;;;;667:133;;;818:2;815:1;812:9;809:2;;;877:5;872:2;867;859:6;855:15;851:24;844:39;809:2;911:6;78:845;-1:-1:-1;;;;;;78:845:27:o;928:592::-;1027:6;1035;1088:2;1076:9;1067:7;1063:23;1059:32;1056:2;;;1109:6;1101;1094:22;1056:2;1141:16;;-1:-1:-1;;;;;1206:14:27;;;1203:2;;;1238:6;1230;1223:22;1203:2;1266:61;1319:7;1310:6;1299:9;1295:22;1266:61;:::i;:::-;1256:71;;1373:2;1362:9;1358:18;1352:25;1336:41;;1402:2;1392:8;1389:16;1386:2;;;1423:6;1415;1408:22;1386:2;;1451:63;1506:7;1495:8;1484:9;1480:24;1451:63;:::i;:::-;1441:73;;;1046:474;;;;;:::o;1525:380::-;1604:1;1600:12;;;;1647;;;1668:2;;1722:4;1714:6;1710:17;1700:27;;1668:2;1775;1767:6;1764:14;1744:18;1741:38;1738:2;;;1821:10;1816:3;1812:20;1809:1;1802:31;1856:4;1853:1;1846:15;1884:4;1881:1;1874:15;1738:2;;1580:325;;;:::o;1910:127::-;1971:10;1966:3;1962:20;1959:1;1952:31;2002:4;1999:1;1992:15;2026:4;2023:1;2016:15;1942:95;554:12701:11;;;;;;",
  "sourcePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/ERC721.sol",
  "type": "contract"
}